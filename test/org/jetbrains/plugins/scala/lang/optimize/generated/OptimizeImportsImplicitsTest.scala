package org.jetbrains.plugins.scala.lang.optimize
package generated

import org.jetbrains.plugins.scala.lang.formatting.settings.ScalaCodeStyleSettings

class OptimizeImportsImplicitsTest extends OptimizeImportsTestBase {
  //This class was generated by build script, please don't change this
  override def folderPath: String = super.folderPath + "implicits/"
  
  def testAssignment() = doTest()

  def testImplicitApply() = doTest()

  def testImplicitReference() = doTest()

  def testImplicitReference2() = doTest()

  def testImplicitReturnAndValVarAssignment() = doTest()

  def testImplicitlyConvertedAndProvidedArguments() = doTest()

  def testImplicitParamatersUsed() = doTest()

  def testImplicitParametersDeeperLevel() = doTest()

  def testImplicitsNewClass() = doTest()

  def testJConversions() = doTest()

  def testOverloadedImplicits() = doTest()

  def testSCL6003() = doTest()

  def testSCL6514() = doTest()

  def testSCL6650() = doTest()

  def testSCL6783() = doTest()

  def testSCL7158(): Unit = {
    val settings = ScalaCodeStyleSettings.getInstance(getProjectAdapter)
    val old = settings.REPLACE_CASE_ARROW_WITH_UNICODE_CHAR
    settings.REPLACE_CASE_ARROW_WITH_UNICODE_CHAR = true
    try {
      doTest()
    } finally {
      settings.REPLACE_CASE_ARROW_WITH_UNICODE_CHAR = old
    }
  }

  def testSCL7269(): Unit = doTest()
}