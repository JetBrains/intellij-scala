<!--
  ~ Copyright 2000-2012 JetBrains s.r.o.
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE idea-plugin PUBLIC "Plugin/DTD" "http://plugins.intellij.net/plugin.dtd">
<idea-plugin url="http://www.jetbrains.net/confluence/display/SCA/Scala+Plugin+for+IntelliJ+IDEA" version="2"
    xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>org.intellij.scala</id>
  <name>Scala</name>
  <description>Plugin for Scala language support</description>
  <version>VERSION</version>
  <vendor url="http://www.jetbrains.com">JetBrains Inc.</vendor> <!-- todo: logo="/org/jetbrains/plugins/scala/images/scala-small-logo.png" -->
  <idea-version since-build="117.37" until-build="117.9999"/>
  <depends optional="true" config-file="scala-maven-integration.xml">org.jetbrains.idea.maven</depends>
  <depends optional="true" config-file="intellilang-scala-support.xml">org.intellij.intelliLang</depends>
  <depends optional="true" config-file="copyright.xml">com.intellij.copyright</depends>
  <resource-bundle xmlns="">org.jetbrains.plugins.scala.ScalaBundle</resource-bundle>

  <!--<xi:include href="/META-INF/scala-plugin-common.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>-->

  <extensions xmlns="org.jetbrains.idea.maven">
   <importer implementation="org.jetbrains.plugins.scala.config.ScalaMavenImporter"/>
  </extensions>
  
  <extensionPoints>
    <extensionPoint name="scalaParserPatcher" interface="org.jetbrains.plugins.scala.lang.parser.util.ParserPatcher"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <statementUpDownMover implementation="org.jetbrains.plugins.scala.lang.refactoring.ScalaStatementMover"/>
    <debugger.codeFragmentFactory implementation="org.jetbrains.plugins.scala.debugger.evaluation.ScalaCodeFragmentFactory"/>
    <debugger.positionManagerFactory implementation="org.jetbrains.plugins.scala.debugger.ScalaPositionManagerFactory"/>
    <debuggerEditorTextProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.debugger.evaluation.ScalaEditorTextProvider"/>
    <generation.topLevelFactory language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.psi.impl.ScalaFactoryProvider"/>
    <treeCopyHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.util.ScalaChangeUtilSupport"/>
    <iconProvider implementation="org.jetbrains.plugins.scala.components.ScalaIconProvider"/>
    <colorSettingsPage implementation="org.jetbrains.plugins.scala.highlighter.ScalaColorsAndFontsPage"/>
    <codeFoldingOptionsProvider instance="org.jetbrains.plugins.scala.editor.codeFolding.ScalaCodeFoldingOptionsProvider"/>
    <langCodeStyleSettingsProvider implementation="org.jetbrains.plugins.scala.lang.formatting.settings.ScalaLanguageCodeStyleSettingsProvider"/>
    <projectConfigurable instance="org.jetbrains.plugins.scala.settings.ScalaProjectSettingsConfigurable"/>
    <applicationService serviceInterface="org.jetbrains.plugins.scala.settings.ScalaApplicationSettings"
        serviceImplementation="org.jetbrains.plugins.scala.settings.ScalaApplicationSettings"/>
    <applicationService serviceInterface="org.jetbrains.plugins.scala.settings.ScalaCodeFoldingSettings"
        serviceImplementation="org.jetbrains.plugins.scala.settings.ScalaCodeFoldingSettings"/>
    <projectService serviceInterface="org.jetbrains.plugins.scala.settings.ScalaProjectSettings"
                    serviceImplementation="org.jetbrains.plugins.scala.settings.ScalaProjectSettings"/>
    <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
    <autoImportOptionsProvider instance="org.jetbrains.plugins.scala.editor.autoimport.ScalaAutoImportOptionsProvider"/>
    <fileTypeFactory implementation="org.jetbrains.plugins.scala.ScalaFileTypeFactory"/>
    <syntaxHighlighter key="Scala" implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaSyntaxHighlighter"/>
    <lang.syntaxHighlighterFactory key="Scala" implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaSyntaxHighlighterFactory"/>
    <treeStructureProvider implementation="org.jetbrains.plugins.scala.components.ScalaDefsProjectViewProvider" order="last"/>
    <lang.braceMatcher language="Scala" implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaBraceMatcher"/>
    <lang.parserDefinition language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.parser.ScalaParserDefinition"/>
    <lang.commenter language="Scala" implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaCommenter"/>
    <lang.foldingBuilder language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.folding.ScalaFoldingBuilder"/>
    <lang.formatter language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.formatting.ScalaFormattingModelBuilder"/>
    <postFormatProcessor implementation="org.jetbrains.plugins.scala.lang.formatting.processors.ScalaBracePostFormatProcessor"/>
    <lang.refactoringSupport language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.refactoring.ScalaRefactoringSupportProvider"/>
    <lang.surroundDescriptor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.surroundWith.descriptors.ScalaExpressionSurroundDescriptor"/>
    <lang.surroundDescriptor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.surroundWith.descriptors.ScalaDocCommentDataSurroundDescriptor"/>
    <lang.surroundDescriptor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.surroundWith.descriptors.ScalaIgnoreErrorHighlightingSurroundDescriptor"/>
    <lang.psiStructureViewFactory language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.structureView.ScalaStructureViewFactory"/>
    <typedHandler implementation="org.jetbrains.plugins.scala.editor.typedHandler.ScalaTypedHandler" order="first"/>
    <backspaceHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.backspaceHandler.ScalaBackspaceHandler"/>
    <joinLinesHandler implementation="org.jetbrains.plugins.scala.editor.joinlines.PackageJoinLinesHandler"/>
    <lang.smartEnterProcessor language="Scala" implementationClass="org.jetbrains.plugins.scala.editor.smartEnter.PackageSplitLinesProcessor"/>
    <frameworkSupport implementation="org.jetbrains.plugins.scala.config.ScalaFacetSupportProvider"/>
    <facetType implementation="org.jetbrains.plugins.scala.config.ScalaFacetType"/>
    <completion.contributor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaKeywordCompletionContributor"/>
    <completion.contributor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaSmartCompletionContributor"/>
    <completion.contributor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaMemberNameCompletionContributor"/>
    <completion.contributor language="Scala" id="scaladocTagsCompletionContributor"
                            implementationClass="org.jetbrains.plugins.scala.lang.scaladoc.completion.ScalaDocCompletionContributor"/>
    <completion.contributor language="Scala" id="scalaCompletionContrubutor"
                            implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaCompletionContributor"/>
    <completion.contributor language="Scala" id="scalaClassNameCompletionContributor"
                            implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaClassNameCompletionContributor"
                            order="after scalaCompletionContrubutor"/> <!-- This is the last completion contributor! -->
    <completion.contributor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaGlobalMembersCompletionContributor"
                            order="before scalaClassNameCompletionContributor"/>
    <completion.confidence language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaCompletionConfidence"/>
    <lookup.actionProvider implementation="org.jetbrains.plugins.scala.lang.completion.ScalaImportStaticLookupActionProvider"/>
    <weigher key="completion" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaContainingClassWiegher"
             id="scalaContainingClassWeigher" order="before scalaParameterCompletionWeigher"/>
    <weigher key="completion" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaMethodCompletionWeigher"
             id="scalaMethodCompletionWeigher" order="after negativeStats, before stats"/>
    <weigher key="completion" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaParameterCompletionWeigher"
             id="scalaParameterCompletionWeigher" order="after scalaMethodCompletionWeigher, before stats"/>
    <weigher key="completion" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaClassesCompletionWeigher"
             id="scalaClassesCompletionWeigher" order="before proximity"/>
    <weigher key="proximity" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaClassObjectWeigher"
             id="scalaClassObjectWeigher" order="before samePsiMember"/>
    <weigher key="proximity" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaExplicitlyImportedWeigher"
             id="scalaExplicitlyImportedWeigher" order="before explicitlyImported"/>
    <psi.referenceContributor implementation="org.jetbrains.plugins.scala.lang.references.ScalaReferenceContributor"/>
    <codeInsight.overrideMethod language="Scala" implementationClass="org.jetbrains.plugins.scala.overrideImplement.ScalaOverrideMethodsHandler"/>
    <lookup.charFilter implementation="org.jetbrains.plugins.scala.lang.completion.ScalaCharFilter"/>
    <codeInsight.implementMethod language="Scala" implementationClass="org.jetbrains.plugins.scala.overrideImplement.ScalaImplementMethodsHandler"/>
    <lang.findUsagesProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.findUsages.ScalaFindUsagesProvider"/>
    <usageTypeProvider implementation="org.jetbrains.plugins.scala.lang.findUsages.ScalaUsageTypeProvider"/>
    <importFilteringRule implementation="org.jetbrains.plugins.scala.lang.findUsages.ScalaImportFilteringRule"/>
    <codeStyleSettingsProvider implementation="org.jetbrains.plugins.scala.lang.formatting.settings.ScalaCodeStyleSettingsProvider"/>
    <compilerSettingsFactory implementation="org.jetbrains.plugins.scala.compiler.ScalaCompilerSettingsFactory"/>
    <internalFileTemplate name="Scala Class"/>
    <internalFileTemplate name="Scala Trait"/>
    <internalFileTemplate name="Scala Object"/>
    <internalFileTemplate name="Scala Script"/>
    <indexPatternBuilder implementation="org.jetbrains.plugins.scala.editor.todo.ScalaIndexPatternBuilder"/>
    <readWriteAccessDetector implementation="org.jetbrains.plugins.scala.highlighter.readWriteAccess.ScalaReadWriteAccessDetector"/>
    <directClassInheritorsSearch implementation="org.jetbrains.plugins.scala.lang.psi.impl.search.ScalaDirectClassInheritorsSearcher"/>
    <codeInsight.lineMarkerProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.annotator.gutter.ScalaLineMarkerProvider"/>
    <codeInsight.gotoSuper language="Scala" implementationClass="org.jetbrains.plugins.scala.annotator.gutter.ScalaGoToSuperActionHandler"/>
    <gotoDeclarationHandler implementation="org.jetbrains.plugins.scala.annotator.gutter.ScalaGoToDeclarationHandler"/>
    <debuggerClassFilterProvider implementation="org.jetbrains.plugins.scala.debugger.filters.ScalaDebuggerClassFilterProvider"/>
    <xdebugger.settings implementation="org.jetbrains.plugins.scala.debugger.filters.ScalaDebuggerSettings"/>
    <debugger.jvmSmartStepIntoHandler implementation="org.jetbrains.plugins.scala.debugger.ScalaSmartStepIntoHandler"/>
    <lang.documentationProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.editor.documentationProvider.ScalaDocumentationProvider"/>
    <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaMethodProcessor" order="first"/>
    <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaValsProcessor" order="first"/>
    <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameLightProcessor" order="first"/>
    <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaClassProcessor" order="first"/>
    <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaSyntheticParamProcessor" order="first"/>
    <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaTypeAliasProcessor" order="first"/>
    <renameHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.XmlRenameHandler" />
    <nameSuggestionProvider implementation="org.jetbrains.plugins.scala.lang.refactoring.namesSuggester.ScalaNameSuggestionProvider"/>
    <definitionsSearch implementation="org.jetbrains.plugins.scala.lang.psi.impl.search.MethodImplementationsSearch"/>
    <antCustomCompiler implementation="org.jetbrains.plugins.scala.ant.ScalaAntCustomCompilerProvider"/>
    <refactoring.moveClassHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.move.MoveScalaClassHandler" order="first"/>
    <!--<moveFileHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.move.MoveScalaFileHandler" order="first"/>-->
    <refactoring.inlineHandler language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.refactoring.inline.ScalaInlineHandler"/>
    <refactoring.introduceParameterMethodUsagesProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.introduceParameter.ScalaIntroduceParameterMethodUsagesProcessor"/>
    <refactoring.safeDeleteProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.delete.ScalaSafeDeleteProcessorDelegate" order="first"/>
    <copyPastePreProcessor implementation="org.jetbrains.plugins.scala.conversion.copy.StringLiteralProcessor"/>
    <copyPastePostProcessor implementation="org.jetbrains.plugins.scala.conversion.copy.JavaCopyPastePostProcessor"/>
    <copyPastePostProcessor implementation="org.jetbrains.plugins.scala.conversion.copy.ScalaCopyPastePostProcessor"/>
    <copyPastePreProcessor implementation="org.jetbrains.plugins.scala.conversion.copy.MultiLineStringCopyPasteProcessor" order="first"/>
    <typeDeclarationProvider implementation="org.jetbrains.plugins.scala.annotator.gutter.ScalaGotoTypeDeclarationProvider"/>
    <highlightVisitor implementation="org.jetbrains.plugins.scala.annotator.ScalaAnnotatorHighlightVisitor"/>
    <commentCompleteHandler implementation="org.jetbrains.plugins.scala.lang.scaladoc.ScalaIsCommentComplete"/>
    <elementDescriptionProvider implementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.typedef.ScalaClassElementDescriptionProvider"/>

    <!--Enter Handler for ScalaDoc -->
    <enterHandlerDelegate implementation="org.jetbrains.plugins.scala.lang.completion.handlers.ScalaDocParamEnterHandlerDelegate"/>
    <!--/Handler-->

    <!--Enter Handler for inserting "+" in interpolated strings-->
    <enterHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.enterHandler.InterpolatedStringEnterHandler"
                          order="first"/>
    <!--/Handler-->

    <!--Enter Handler for multiline strings-->
    <enterHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.enterHandler.MultilineStringEnterHandler" order="first"/>
    <!--/Handler-->

    <javaMainMethodProvider implementation="org.jetbrains.plugins.scala.runner.ScalaMainMethodProvider"/>
    <annotatedElementsSearch implementation="org.jetbrains.plugins.scala.lang.psi.impl.search.ScalaAnnotatedMembersSearcher"/>
    <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.parameters.NamingParamsSearcher"/>
    <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.typeDef.ObjectTraitReferenceSearcher"/>
    <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.apply.ApplyMethodSearcher"/>
    <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.apply.UnapplyMethodSearcher"/>
    <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.vals.JavaValsUsagesSearcher"/>
    <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.function.JavaFunctionUsagesSearcher"/>
    <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.setter.SetterMethodSearcher"/>
    <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.ScalaAliasedImportedElementSearcher"/>
    <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.TypeAliasUsagesSearcher"/>
    <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.ScalaPackageUsagesSearcher"/>
    <methodReferencesSearch implementation="org.jetbrains.plugins.scala.findUsages.NonMemberMethodUsagesSearcher"/>
    <findUsagesHandlerFactory implementation="org.jetbrains.plugins.scala.findUsages.factory.ScalaFindUsagesHandlerFactory" order="first"/>
    <customUsageSearcher implementation="org.jetbrains.plugins.scala.findUsages.parameters.ConstructorParamsInConstructorPatternSearcher"/>
    <qualifiedNameProvider implementation="org.jetbrains.plugins.scala.actions.ScalaQualifiedNameProvider" order="first"/>

    <codeInsight.parameterInfo language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.parameterInfo.ScalaFunctionParameterInfoHandler"/>
    <codeInsight.parameterInfo language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.parameterInfo.ScalaPatternParameterInfoHandler"/>
    <codeInsight.parameterInfo language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.parameterInfo.ScalaTypeParameterInfoHandler"/>

    <defaultLiveTemplatesProvider implementation="org.jetbrains.plugins.scala.codeInsight.template.impl.ScalaDefaultLiveTemplatesProvider"/>
    <liveTemplateContext implementation="org.jetbrains.plugins.scala.codeInsight.template.impl.ScalaLiveTemplateContextType"/>
    <liveTemplateMacro implementation="org.jetbrains.plugins.scala.codeInsight.template.macros.ScalaVariableOfTypeMacro"/>
    <liveTemplateMacro implementation="org.jetbrains.plugins.scala.codeInsight.template.macros.SuggestScalaVariableNameMacro"/>

    <testSrcLocator implementation="org.jetbrains.plugins.scala.testingSupport.locationProvider.ScalaTestLocationProvider"/>
    <testCreator language="Scala" implementationClass="org.jetbrains.plugins.scala.testingSupport.ScalaTestCreator"/>
    <testGenerator language="Scala" implementationClass="org.jetbrains.plugins.scala.testingSupport.ScalaTestGenerator"/>

    <testFramework implementation="org.jetbrains.plugins.scala.testingSupport.test.specs2.Specs2TestFramework"/>
    <testFramework implementation="org.jetbrains.plugins.scala.testingSupport.test.scalatest.ScalaTestTestFramework"/>

    <java.elementFinder implementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.synthetic.SyntheticClasses"/>
    <java.elementFinder implementation="org.jetbrains.plugins.scala.finder.ScalaClassFinder" order="first"/>
    <java.elementFinder implementation="org.jetbrains.plugins.scala.finder.ScalaPackageFinder" order="first"/>
    <java.shortNamesCache implementation="org.jetbrains.plugins.scala.caches.ScalaShortNamesCache"/>
    <typeHierarchyProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.hierarchy.ScalaTypeHierarchyProvider"/>
    <methodHierarchyProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.hierarchy.ScalaMethodHierarchyProvider"/>
    <callHierarchyProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.hierarchy.ScalaCallHierarchyProvider"/>
    <highlightUsagesHandlerFactory implementation="org.jetbrains.plugins.scala.highlighter.usages.ScalaHighlightUsagesHandlerFactory"/>
    <constantExpressionEvaluator language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.psi.util.ScalaConstantExpressionEvaluator"/>
    <annotationSupport language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.psi.ScalaAnnotationSupport"/>
   <!--<classNameInsertHandler implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaClassNameInsertHandler" language="Scala"/>-->

    <gotoClassContributor implementation="org.jetbrains.plugins.scala.gotoclass.ScalaGoToClassContributor"/>
    <gotoSymbolContributor implementation="org.jetbrains.plugins.scala.gotoclass.ScalaGoToSymbolContributor"/>
    <lang.importOptimizer language="Scala" implementationClass="org.jetbrains.plugins.scala.editor.importOptimizer.ScalaImportOptimizer"/>
    <lang.namesValidator language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.refactoring.util.ScalaNamesValidator"/>
    <editorNotificationProvider implementation="org.jetbrains.plugins.scala.config.ScalaAttachSourcesNotificationProvider"/>
    <editorFileSwapper implementation="org.jetbrains.plugins.scala.config.ScalaEditorFileSwapper"/>
    <projectStructureDetector implementation="org.jetbrains.plugins.scala.config.ScalaSourceRootFinder"/>

    <configurationType implementation="org.jetbrains.plugins.scala.script.ScalaScriptConfigurationType"/>
    <configurationType implementation="org.jetbrains.plugins.scala.console.ScalaConsoleConfigurationType"/>

    <configurationType implementation="org.jetbrains.plugins.scala.testingSupport.test.specs2.Specs2ConfigurationType"/>
    <configurationType implementation="org.jetbrains.plugins.scala.testingSupport.test.scalatest.ScalaTestConfigurationType"/>

    <configurationProducer implementation="org.jetbrains.plugins.scala.testingSupport.test.specs2.Specs2ConfigurationProducer"/>
    <configurationProducer implementation="org.jetbrains.plugins.scala.testingSupport.test.scalatest.ScalaTestConfigurationProducer"/>

    <configurationProducer implementation="org.jetbrains.plugins.scala.runner.ScalaApplicationConfigurationProducer"/>

    <stubElementTypeHolder class="org.jetbrains.plugins.scala.lang.parser.ScalaElementTypes"/>
    <!--Stub indeces -->
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScAllClassNamesIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScShortClassNameIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScFullClassNameIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScClassNameInPackageIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScJavaClassNameInPackageIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScImplicitObjectKey"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScImplicitsKey"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScPackageObjectIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScFullPackagingNameIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScFunctionNameIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScFunctionNameToClassIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScValueNameIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScVariableNameIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScClassParameterNameIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScTypeAliasNameIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScDirectInheritorsIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScSelfTypeInheritorsIndex"/>
    <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScAnnotatedMemberIndex"/>

    <projectService serviceInterface="org.jetbrains.plugins.scala.annotator.importsTracker.ImportTracker"
                    serviceImplementation="org.jetbrains.plugins.scala.annotator.importsTracker.ImportTracker"/>

    <projectService serviceInterface="org.jetbrains.plugins.scala.compiler.ScalacSettings"
                    serviceImplementation="org.jetbrains.plugins.scala.compiler.ScalacSettings"/>

    <projectService serviceInterface="org.jetbrains.plugins.scala.lang.scaladoc.generate.ScaladocSettings"
            serviceImplementation="org.jetbrains.plugins.scala.lang.scaladoc.generate.ScaladocSettings"/>

    <quoteHandler fileType="Scala" className="org.jetbrains.plugins.scala.lang.editor.ScalaQuoteHandler"/>

    <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaWordSelectioner"/>
    <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaLiteralSelectioner"/>
    <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaSemicolonSelectioner"/>
    <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaStatementGroupSelectioner"/>
    <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaCodeBlockSelectioner"/>

    <!--Extensions for class-files treatment-->
    <clsStubBuilderFactory implementation="org.jetbrains.plugins.scala.decompiler.ScClsStubBuilderFactory"/>
    <contentBasedClassFileProcessor implementation="org.jetbrains.plugins.scala.decompiler.ScContentBasedClassFileProcessor"/>
    <lang.fileViewProviderFactory language="Scala" implementationClass="org.jetbrains.plugins.scala.decompiler.ScClassFileViewProviderFactory"/>

    <spellchecker.bundledDictionaryProvider implementation="org.jetbrains.plugins.scala.spellchecker.ScalaBundledDictionaryProvider"/>

   <intentionAction>
      <category>Scala/String</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.literal.InsertGapIntoStringIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/String</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.literal.AddStripMarginToMLStringIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/String</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.literal.AddReplaceSlashRToMLStringIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Type</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.types.ToggleTypeAnnotation</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Type</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.types.ConvertToInfixIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Type</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.types.ConvertFromInfixIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Recursion</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.recursion.AddTailRecursionAnnotationIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Pattern Matching</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.matcher.CreateCaseClausesIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Pattern Matching</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.matcher.ConvertToTypedPatternIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Pattern Matching</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.matcher.ExpandPatternIntention</className>
    </intentionAction>


    <intentionAction>
      <category>Scala/String</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.literal.StringToMultilineStringIntention</className>
    </intentionAction>-->

    <intentionAction>
      <category>Scala/Argument Conversion</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.argument.ArgumentToBlockExpressionIntention</className>
    </intentionAction>

    <intentionAction>
       <category>Scala/Argument Conversion</category>
       <className>org.jetbrains.plugins.scala.codeInsight.intention.argument.AddNameToArgumentIntention</className>
     </intentionAction>

    <intentionAction>
      <category>Scala/Argument Conversion</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.argument.BlockExpressionToArgumentIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Argument Conversion</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.argument.PermuteArgumentsIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.types.ConvertImplicitBoundsToImplicitParameter</className>
    </intentionAction>

    <intentionAction>
      <category>Scala</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.AddBracesIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.RemoveBracesIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/For Comprehension</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.comprehension.ConvertToCurlyBracesIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/For Comprehension</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.comprehension.ConvertToParenthesesIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/For Comprehension</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.comprehension.DesugarForIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Import</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.imports.ImportAdditionalIdentifiersIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Expressions</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.ConvertFromInfixExpressionIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Expressions</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.ConvertToInfixExpressionIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Expressions</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.RemoveApplyIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Expressions</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.IntroduceExplicitParameterIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Expressions</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.IntroduceImplicitParameterIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Boolean</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.booleans.FlipComparisonInInfixExprIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Boolean</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.booleans.FlipComparisonInMethodCallExprIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Boolean</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.booleans.ReplaceEqualsOrEqualityInInfixExprIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Boolean</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.booleans.ReplaceEqualsOrEqualityInMethodCallExprIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Boolean</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.booleans.DeMorganLawIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Boolean</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.booleans.NegateComparisonIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Control flow</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.controlflow.MergeIfToAndIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Control flow</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.controlflow.MergeElseIfIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Control flow</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.controlflow.SplitElseIfIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Control flow</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.controlflow.SplitIfIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Control flow</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.controlflow.InvertIfConditionIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Control flow</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.controlflow.RemoveRedundantElseIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Control flow</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.controlflow.MergeIfToOrIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Boolean</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.booleans.ExpandBooleanIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Expressions</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.InlineImplicitConversionIntention</className>
    </intentionAction>

    <intentionAction>
      <category>Scala/Format</category>
      <className>org.jetbrains.plugins.scala.codeInsight.intention.format.ConvertFormatCallToInterpolatedString</className>
    </intentionAction>


    <lang.elementManipulator forClass="org.jetbrains.plugins.scala.lang.psi.api.base.ScLiteral"
                             implementationClass="org.jetbrains.plugins.scala.injection.ScalaStringLiteralManipulator"/>

    <inspectionToolProvider implementation="org.jetbrains.plugins.scala.codeInspection.internal.ScalaInternalInspectionsProvider"/>

    <!-- inspections -->
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.infiniteCycle.LoopVariableNotUpdatedInspection"
                     displayName="Loop variable not updated inside loop" groupName="Scala: General" shortName="LoopVariableNotUpdated" id="LoopVariableNotUpdatedInspection" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.fileNameInspection.ScalaFileNameInspection"
                     displayName="File Name Inspection" groupName="Scala: General" shortName="ScalaFileName" id="ScalaFileName" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.packageNameInspection.ScalaPackageNameInspection"
                     displayName="Package Name Inspection" groupName="Scala: General" id="ScalaPackageName"
                     shortName="ScalaPackageName" level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.deprecation.ScalaDeprecationInspection"
                     displayName="Scala Deprecation" groupName="Scala: General" shortName="ScalaDeprecation"
                     id="ScalaDeprecation" level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.caseClassParamInspection.CaseClassParamInspection"
                     displayName="Case Class Parameter" groupName="Scala: General" shortName="CaseClassParam"
                     id="CaseClassParam" level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.inference.SuspiciousInferredTypeInspection"
                     displayName="Suspicious Inferred Type" groupName="Scala: General" shortName="SuspiciousInferredType"
                     id="SuspiciousInferredType" level="WARNING" enabledByDefault="false" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.varCouldBeValInspection.VarCouldBeValInspection"
                     displayName="'var' could be a 'val'" groupName="Scala: General" shortName="VarCouldBeVal"
                     level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.unusedInspections.ScalaUnusedSymbolInspection"
                     displayName="Unused Symbol" groupName="Scala: General" shortName="ScalaUnusedSymbol"
                     level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.sugar.FunctionTupleSyntacticSugarInspection"
                     displayName="Syntactic Sugar" groupName="Scala: General" shortName="FunctionTupleSyntacticSugar"
                     id="FunctionTupleSyntacticSugar" level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.defaultFileTemplateInspection.ScalaDefaultFileTemplateUsageInspection"
                     displayName="Default file template inspection" groupName="Scala: General" shortName="ScalaDefaultFileTemplateUsage"
                     id="ScalaDefaultFileTemplateUsage" level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.typeLambdaSimplify.AppliedTypeLambdaCanBeSimplifiedInspection"
                     displayName="Applied Type Lambda can be simplified" groupName="Scala: General"
                     shortName="AppliedTypeLambdaCanBeSimplified" id="AppliedTypeLambdaCanBeSimplified"
                     level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.AccessorLikeMethodIsEmptyParenInspection"
                     displayName="Method with accessor-like name is empty-paren" groupName="Scala: Method signature"
                     shortName="AccessorLikeMethodIsEmptyParen" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.AccessorLikeMethodIsUnitInspection"
                     displayName="Method with accessor-like name has Unit result type" groupName="Scala: Method signature"
                     shortName="AccessorLikeMethodIsUnit" id="AccessorLikeMethodIsUnit"
                     level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.EmptyParenMethodOverridenAsParameterlessInspection"
                     displayName="Empty-paren Scala method overriden as parameterless" groupName="Scala: Method signature"
                     shortName="EmptyParenMethodOverridenAsParameterless" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.JavaAccessorMethodOverridenAsEmptyParenInspection"
                     displayName="Java accessor method overriden as empty-paren" groupName="Scala: Method signature"
                     shortName="JavaAccessorMethodOverridenAsEmptyParen" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.JavaMutatorMethodOverridenAsParameterlessInspection"
                     displayName="Java mutator method overriden as parameterless" groupName="Scala: Method signature"
                     shortName="JavaMutatorMethodOverridenAsParameterless" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.MutatorLikeMethodIsParameterlessInspection"
                     displayName="Mutator like method is paramaterless" groupName="Scala: Method signature"
                     shortName="MutatorLikeMethodIsParameterless" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.ParameterlessMemberOverridenAsEmptyParenInspection"
                     displayName="Parameterless Scala member overriden as empty-paren" groupName="Scala: Method signature"
                     shortName="ParameterlessMemberOverridenAsEmptyParen" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.EmptyParenMethodAccessedAsParameterlessInspection"
                     displayName="Empty-paren method accessed as parameterless" groupName="Scala: Method signature"
                     shortName="EmptyParenMethodAccessedAsParameterless" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.UnitMethodDeclaredWithTypeAnnotationInspection"
                     displayName="Redundant Unit result type annotation" groupName="Scala: Method signature"
                     shortName="UnitMethodDeclaredWithTypeAnnotation" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.UnitMethodDefinedLikeFunctionInspection"
                     displayName="Method with Unit result type defined like function" groupName="Scala: Method signature"
                     shortName="UnitMethodDefinedLikeFunction" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.UnitMethodDefinedWithEqualsSignInspection"
                     displayName="Method with Unit result type defined with equals sign" groupName="Scala: Method signature"
                     shortName="UnitMethodDefinedWithEqualsSign" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.UnitMethodIsParameterlessInspection"
                     displayName="Method with Unit result type is parameterless" groupName="Scala: Method signature"
                     shortName="UnitMethodIsParameterless" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.JavaAccessorMethodCalledAsEmptyParenInspection"
                     displayName="Java accessor method called as empty-paren" groupName="Scala: Method signature"
                     shortName="JavaAccessorMethodCalledAsEmptyParen" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.JavaMutatorMethodAccessedAsParameterlessInspection"
                     displayName="Java mutator method accessed as parameterless" groupName="Scala: Method signature"
                     shortName="JavaMutatorMethodAccessedAsParameterless" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.ApparentRefinementOfResultTypeInspection"
                     displayName="Apparent refinement of result type; are you missing an '=' sign?" groupName="Scala: Method signature"
                     shortName="ApparentRefinementOfResultType" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.postfix.PostfixMethodCallInspection"
                     displayName="Use of postfix method call" groupName="Scala: General"
                     shortName="PostfixMethodCall" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.prefixMutableCollections.ReferenceMustBePrefixedInspection"
                     displayName="Reference must be prefixed" groupName="Scala: General"
                     shortName="ReferenceMustBePrefixed" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.literal.FloatLiteralEndingWithDecimalPointInspection"
                     displayName="Floating point literal ending with '.'" groupName="Scala: General"
                     shortName="FloatLiteralEndingWithDecimalPoint" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.packageNameInspection.ChainedPackageInspection"
                     displayName="Chained Package Clause Inspection" groupName="Scala: General"
                     shortName="ChainedPackage" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.redundantReturnInspection.RemoveRedundantReturnInspection"
                     displayName="Redundant Return" groupName="Scala: General"
                     shortName="RemoveRedundantReturn" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.shadow.VariablePatternShadowInspection"
                     displayName="Suspicious shadowing by a Variable Pattern" groupName="Scala: General"
                     shortName="VariablePatternShadow" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.shadow.TypeParameterShadowInspection"
                     displayName="Suspicious shadowing by a Type Parameter" groupName="Scala: General"
                     shortName="TypeParameterShadow" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.valInTraitInspection.AbstractValueInTraitInspection"
                     displayName="Abstract Value in Trait" groupName="Scala: General"
                     shortName="AbstractValueInTrait" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.sbt.SbtFileStructureInspection"
                     displayName="SBT Light Configuration File Structure" groupName="Scala: General"
                     shortName="SbtFileStructure" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.semicolon.ScalaUnnecessarySemicolonInspection"
                     displayName="Scala unnecessary semicolon inspection" groupName="Scala: General"
                     shortName="ScalaUnnecessarySemicolon" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.xml.XmlUnmatchedTagInspection"
                     displayName="Unmatched Tag" groupName="Scala: General" shortName="UnmatchedTag" level="ERROR"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.imports.SingleImportInspection"
                     displayName="Unnecessary braces in import inspection"
                     groupName="Scala: General" shortName="SingleImport"
                     level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.parameters.NameBooleanParametersInspection"
                     displayName="Name boolean parameters"
                     groupName="Scala: General" shortName="NameBooleanParameters"
                     level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.cast.RedundantCastInspection"
                     displayName="Redundant cast inspection" groupName="Scala: General"
                     shortName="RedundantCast" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.cast.RedundantConversionInspection"
                     displayName="Redundant conversion inspection" groupName="Scala: General"
                     shortName="RedundantConversion" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.recursion.NoTailRecursionAnnotationInspection"
                     displayName="No tail recursion annotation" groupName="Scala: General"
                     shortName="NoTailRecursionAnnotation" level="WARNING"
                     enabledByDefault="false" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.catchAll.DangerousCatchAllInspection"
                     displayName="Missing type annotation"
                     groupName="Scala: General" shortName="DangerousCatchAll"
                     level="WARNING" enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.format.MalformedFormatStringInspection"
                     displayName="Malformed format string" groupName="Scala: General"
                     shortName="MalformedFormatString" level="WARNING"
                     enabledByDefault="true" language="Scala"/>

    <!--<localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.allErrorsInspection.AnnotatorBasedErrorInspection"
                     displayName="All Errors Tool" groupName="Scala: General"
                     shortName="ScalaAllErrors" level="WARNING"
                     enabledByDefault="false" language="Scala"/>-->

    <!-- scaladoc inspections -->
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocUnclosedTagWithoutParserInspection"
                     displayName="Tag Unclosed" groupName="Scaladoc" shortName="ScalaDocUnclosedTagWithoutParser" level="WARNING"
                     enabledByDefault="true" language="Scala" />
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocInlinedTagInspection"
                     displayName="Inlined Tag" groupName="Scala: Scaladoc" shortName="ScalaDocInlinedTag" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocUnbalancedHeaderInspection"
                     displayName="Header tags unbalanced" groupName="Scala: Scaladoc" shortName="ScalaDocUnbalancedHeader" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocUnknownTagInspection"
                     displayName="Unknown tag" groupName="Scala: Scaladoc" shortName="ScalaDocUnknownTag" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocUnknownParameterInspection"
                     displayName="Unknown Parameter" groupName="Scala: Scaladoc" shortName="ScalaDocUnknownParameter" level="WARNING"
                     enabledByDefault="true" language="Scala"/>
    <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocMissingParameterDescriptionInspection"
                     displayName="Missing tag parameter description" groupName="Scaladoc" shortName="ScalaDocMissingParameterDescription"
                     level="WARNING" enabledByDefault="true" language="Scala" />
    <!-- end of scaladoc inspections -->
    <!-- end of inspections -->

  </extensions>


  <application-components>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.error.ErrorReportConfigurable</implementation-class>
      <interface-class>org.jetbrains.plugins.scala.error.ErrorReportConfigurable</interface-class>
    </component>
    <component>
      <interface-class>org.jetbrains.plugins.scala.util.ScalaToolsFactory</interface-class>
      <implementation-class>org.jetbrains.plugins.scala.util.ScalaToolsFactoryImpl</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.ScalaLoader</implementation-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.lang.psi.impl.toplevel.synthetic.SyntheticClasses</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.lang.psi.impl.ScalaPsiManager</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.codeInspection.unusedInspections.ScalaUnusedImportsPassFactory</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.codeInspection.unusedInspections.ScalaUnusedSymbolPassFactory</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.caches.ScalaShortNamesCacheManager</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.components.CompilerProjectComponent</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.components.HighlightingAdvisor</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.components.CompileServerLauncher</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.components.CompileServerManager</implementation-class>
    </component>
  </project-components>

  <actions>
    <action id="Scala.NewClass" class="org.jetbrains.plugins.scala.actions.NewScalaTypeDefinitionAction"
        text="Scala Class" description="Create new Scala class">
      <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewGroup1"/>
    </action>
    <action id="Scala.NewScript" class="org.jetbrains.plugins.scala.actions.NewScalaScriptAction">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
    </action>
    <action id="Scala.RunConsole" class="org.jetbrains.plugins.scala.console.RunConsoleAction"
            text="Run Scala Console" description="Run Scala console">
      <add-to-group group-id="RunContextPopupGroup" anchor="last"/>
      <keyboard-shortcut first-keystroke="control shift D" keymap="$default"/>
    </action>
    <action id="Scala.EnableErrors" class="org.jetbrains.plugins.scala.actions.ToggleTypeAwareHighlightingAction">
      <keyboard-shortcut first-keystroke="alt control shift E" keymap="$default"/>
    </action>
    <action id="Scala.GoToImplicit" class="org.jetbrains.plugins.scala.actions.GoToImplicitConversionAction"
            text="&amp;Implicit Conversion" description="Go To Implicit Conversion">
      <keyboard-shortcut keymap="$default" first-keystroke="control shift Q"/>
      <keyboard-shortcut keymap="Mac OS X" first-keystroke="ctrl Q"/>
      <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta shift Q" remove="true"/>
      <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="ctrl Q"/>
      <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta shift Q" remove="true"/>
      <add-to-group group-id="GoToCodeGroup" anchor="last"/>
    </action>
    <action id="Scala.MakeExplicit" class="org.jetbrains.plugins.scala.actions.MakeExplicitAction"
            text="&amp;Implicit Conversion" description="Make Explicit">
      <keyboard-shortcut keymap="$default" first-keystroke="alt ENTER"/>
      <add-to-group group-id="GoToCodeGroup" anchor="last"/>
    </action>
    <action id="Scala.RenameJavaToScala" class="org.jetbrains.plugins.scala.conversion.RenameJavaToScalaAction"
            text="Convert Java File To Scala" description="Rename Java File To Scala">
      <add-to-group group-id="RefactoringMenu" anchor="last"/>
      <add-to-group group-id="EditorTabPopupMenu" anchor="last"/>
      <keyboard-shortcut first-keystroke="control shift G" keymap="$default"/>
    </action>
    <action id="Scala.TypeInfo" class="org.jetbrains.plugins.scala.actions.ShowTypeInfoAction">
      <keyboard-shortcut first-keystroke="alt EQUALS" keymap="$default"/>
      <keyboard-shortcut first-keystroke="meta EQUALS" keymap="Mac OS X"/>
      <keyboard-shortcut first-keystroke="alt EQUALS" keymap="Mac OS X" remove="true"/>
      <keyboard-shortcut first-keystroke="meta EQUALS" keymap="Mac OS X 10.5+"/>
      <keyboard-shortcut first-keystroke="alt EQUALS" keymap="Mac OS X 10.5+" remove="true"/>
      <add-to-group group-id="CodeEditorViewGroup" anchor="last"/>
    </action>
    <action id="Scala.GenerateScaladoc" class="org.jetbrains.plugins.scala.lang.scaladoc.generate.ScaladocAction"
        text="Generate Scaladoc" description="Generate Scaladoc">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </action>
    <action id="Scala.ShowImplicitParameters" class="org.jetbrains.plugins.scala.actions.ShowImplicitParametersAction"
            text="Implicit &amp;Parameters" description="Show Implicit Parameters">
      <keyboard-shortcut first-keystroke="control shift P" keymap="$default"/>
      <add-to-group group-id="CodeEditorViewGroup" anchor="last"/>
    </action>
  </actions>

</idea-plugin>
