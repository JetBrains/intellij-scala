<?xml version="1.0" encoding="UTF-8"?>
<templateSet group="scala">
  <template name="main" value="def main(args: Array[String]){&#13;&#10;  $END$&#13;&#10;}" description="Template for main method"
            toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SCALA_CODE" value="true"/>
    </context>
  </template>
  <template name="opt" value="$OPTION$ match {&#13;&#10;  case Some($NAME$) => $END$&#13;&#10;  case None =>&#13;&#10;}"
      description="Template for matching Option type" toReformat="false" toShortenFQNames="true">
    <variable name="OPTION" expression="scalaVariableOfType(&quot;scala.Option&quot;)" defaultValue="option" alwaysStopAt="true"/>
    <variable name="NAME" expression="suggestScalaVariableName(&quot;option&quot;, OPTION)" defaultValue="x" alwaysStopAt="true"/>
    <context>
      <option name="SCALA_CODE" value="true"/>
    </context>
  </template>
  <template name="itr" value="for ($NAME$ &lt;- $FOR$ $GUARD$) {&#13;&#10;  $END$&#13;&#10;  }"
      description="Template for scala foreach" toReformat="true" toShortenFQNames="true">
    <variable name="FOR" expression="scalaVariableOfType(&quot;foreach&quot;)" defaultValue="option" alwaysStopAt="true"/>
    <variable name="NAME" expression="suggestScalaVariableName(&quot;foreach&quot;, FOR)" defaultValue="x" alwaysStopAt="true"/>
    <variable name="GUARD" expression="" defaultValue="" alwaysStopAt="true"/>
    <context>
      <option name="SCALA_CODE" value="true"/>
    </context>
  </template>
  <template name="itry" value="for ($NAME$ &lt;- $FOR$ $GUARD$) yield {&#13;&#10;  $END$&#13;&#10;  }"
      description="Template for scala foreach" toReformat="true" toShortenFQNames="true">
    <variable name="FOR" expression="scalaVariableOfType(&quot;foreach&quot;)" defaultValue="option" alwaysStopAt="true"/>
    <variable name="NAME" expression="suggestScalaVariableName(&quot;foreach&quot;, FOR)" defaultValue="x" alwaysStopAt="true"/>
    <variable name="GUARD" expression="" defaultValue="" alwaysStopAt="true"/>
    <context>
      <option name="SCALA_CODE" value="true"/>
    </context>
  </template>
  <template name="priv" value="println(&quot;$EXPR_COPY$ = &quot; + $EXPR$)" description="Template for expressions output"
            toReformat="true" toShortenFQNames="true">
    <variable alwaysStopAt="true" defaultValue="false" name="EXPR" expression="scalaVariableOfType(&quot;&quot;)"/>
    <variable alwaysStopAt="false" defaultValue="" name="EXPR_COPY" expression="EXPR"/>
    <context>
      <option name="SCALA_CODE" value="true"/>
    </context>
  </template>
  <template name="T" value="&lt;$TAG$&gt;$SELECTION$&lt;/$TAGNAME$&gt;&#13;&#10;"
            description="Surround with &lt;tag&gt;&lt;/tag&gt;"
            toReformat="true" toShortenFQNames="true" >
    <variable name="TAG" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SELECTION" expression="" defaultValue="" alwaysStopAt="false" />
    <variable name="TAGNAME" expression="firstWord(TAG)" defaultValue="&quot;&quot;" alwaysStopAt="false" />
    <context>
      <option name="SCALA_XML" value="true"/>
    </context>
  </template>
</templateSet>