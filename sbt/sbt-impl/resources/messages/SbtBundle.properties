### META-INF/sbt.xml
displayname.sbt=sbt
displayname.replace.project.with.project.in=Replace Project() with project.in()
group.sbt=sbt
packagesearch.dependency.version.inspection.description=Newer stable version for library dependency is available

### liveTemplates/sbt.xml
template.for.dependency=Template for dependency
template.for.dependency.built.with.sbt=Template for dependency built with sbt

### org/jetbrains/sbt/actions/SbtDirectoryCompletionContributor.scala
sbt.source.sets=SBT Source Sets

### org/jetbrains/sbt/annotator/SbtAnnotator.scala
sbt.annotation.blankLineRequired=Blank line is required to separate expressions in *.sbt files prior to version 0.13.7 (yours is {0})
sbt.annotation.sbtFileMustContainOnlyExpressions=sbt file must contain only expressions
sbt.annotation.expectedExpressionType=Expected expression type is Def.SettingsDefinition in sbt file
sbt.annotation.expectedExpressionTypeSbt0136=Expected expression type is DslEntry in sbt file
sbt.annotation.expressionMustConform=Expression type {0} must conform to Def.SettingsDefinition in sbt file
sbt.annotation.expressionMustConformSbt0136=Expression type {0} must conform to DslEntry in sbt file

### org/jetbrains/sbt/codeInspection/SbtDependencyVersionInspection.scala
packagesearch.update.dependency.to.newer.stable.version=Update dependency to newer stable version {0}

### org/jetbrains/sbt/codeInspection/SbtReplaceProjectWithProjectInInspection.scala
sbt.inspection.projectIn.name=Replace Project() with project.in()

### org/jetbrains/sbt/project/SbtExternalSystemManager.scala
sbt.import.noCustomJvmFound=Cannot determine Java VM executable in selected JDK
sbt.import.noProjectJvmFound=Cannot determine Java VM executable in current project's SDK

### org/jetbrains/sbt/project/SbtNotificationListener.scala
sbt.project.import=sbt project import

### org/jetbrains/sbt/project/SbtProcessJdkGuesser.scala
sbt.import.detecting.jdk=Detecting JDK for SBT

### org/jetbrains/sbt/project/SbtProjectResolver.scala
sbt.import.to.intellij.project.model=import to IntelliJ project model
sbt.unknown.cause=unknown cause
sbt.import.cancelled=sbt import cancelled: {0}
sbt.launcher.not.found=sbt launcher not found at {0}
sbt.sincesbtversion.required=sbt {0}+ required. Please update project build.properties.
sbt.import.extracting.structure.failed=extracting structure failed
sbt.import.message.build.status=Build status: {0}
sbt.import.message.structure.file.is.not.a.file=Structure file {0} is not a file
sbt.import.message.structure.file.is.empty=Structure file {0} is empty
sbt.local.cache=Local cache

### org/jetbrains/sbt/project/SbtViewContributor.scala
sbt.tasks.defined.in.this.project=sbt tasks defined in this project
sbt.tasks=sbt tasks
sbt.settings.defined.in.this.project=sbt settings defined in this project
sbt.settings=sbt settings
sbt.named.sbt.commands.defined.in.this.project=Named sbt commands defined in this project
sbt.commands=sbt commands

### org/jetbrains/sbt/project/modifier/BuildFileModifier.scala
sbt.build.file.modification=sbt build file modification

### org/jetbrains/sbt/project/modifier/ui/BuildFileModifiedStatus.java
sbt.build.modified.detected=Detected
sbt.build.modified.automatically=Modified automatically
sbt.build.modified.manually=Modified manually
sbt.build.modified.automatically.and.fixed.manually=Modified automatically and fixed manually

### org/jetbrains/sbt/project/modifier/ui/ChangesConfirmationDialog.scala
sbt.build.file.changes=sbt build file changes

### org/jetbrains/sbt/project/module/SbtModuleSettingsEditor.scala
sbt.settings.sbtModuleSettings=sbt
sbt.settings.sbtVersionNotDetected=Not detected
sbt.settings.resolvers.url=URL
sbt.settings.resolvers.name=Name

### org/jetbrains/sbt/project/module/SbtModuleSettingsForm.form
sbt.settings.sbtVersionInModule=sbt version
sbt.settings.implicitImports=Implicit imports
sbt.settings.resolvers=Resolvers

### org/jetbrains/sbt/project/module/SbtModuleSettingsForm.java
sbt.settings.noImplicitImportsFound=No implicit imports found

### org/jetbrains/sbt/project/settings/SbtExtraControls.scala
sbt.settings.scalaVersionPreference=Open cross-compiled Scala 3 / Scala 2 projects as Scala 2
sbt.settings.scalaVersionPreference.tooltip=Projects that are cross-compiled against both Scala 2 and Scala 3 don't actually use Scala 3 features and can be opened as Scala 2 (which is more reliable)
sbt.settings.useShell=use for:
sbt.settings.download=Download:
sbt.settings.shell.title=sbt shell
sbt.settings.useShellForImport=project reload
sbt.settings.useShellForBuild=builds
sbt.settings.remoteDebug=Enable debugging
sbt.settings.resolveClassifiers=Library sources
sbt.settings.resolveSbtClassifiers=sbt sources
sbt.settings.resolveClassifiers.tooltip=Download the sources of project library dependencies when reloading project from sbt
sbt.settings.resolveSbtClassifiers.tooltip=Download the sources of sbt and sbt plugins when reloading project from sbt
sbt.settings.useShellForImport.tooltip=Project is reloaded from the sbt shell instead of a new sbt process. This can reduce the reload time, but requires the sbt shell to remain in memory
sbt.settings.useShellForBuild.tooltip=Build the project in sbt shell. Recommended for sbt build configurations that cause compilation in IntelliJ IDEAs compiler to not work correctly
sbt.settings.remoteDebug.tooltip=Starts the sbt shell as debuggable process. Allows debugging sbt plugin code and tests running in sbt shell
insert.project.transitive.dependencies=Include all project transitive dependencies
insert.project.transitive.dependencies.tooltip=Include all project transitive dependencies when importing SBT project structure to IntelliJ project model
use.separate.compiler.output.paths=Use separate compiler output paths
use.separate.compiler.output.paths.tooltip=When enabled, IDEA will use a different class file output directory for compilation than the one used by sbt.<br><br>Requires a project reload.
use.separate.compiler.output.paths.warning=<html>The "Use separate compiler output paths" and "sbt shell use for builds" settings are incompatible. Having both enabled at the same time can lead to missing classes when running programs and tests. Please select only one.</html>

### org/jetbrains/sbt/project/settings/SbtProjectSettingsControl.scala
sbt.settings.project.jdk=Project JDK:

### org/jetbrains/sbt/project/sources/SharedSourcesModuleType.scala
sbt.shared.sources.module=Shared sources module
sbt.shared.source.module.description=During compilation, dependency to a shared sources module mixes in module sources rather than module output

### org/jetbrains/sbt/project/structure/SbtOpts.scala
sbt.unrecognized.opts=unrecognized sbt {0, choice, 1#option|2#options}: {1}
sbt.unrecognized.opt.with.suggestion=Unrecognized sbt option: {0}. Did you mean {1} ?
sbt.unrecognised.opt=Unrecognized sbt option: {0}.
sbt.available.opts=All available options: {0}

### org/jetbrains/sbt/project/structure/SbtStructureDump.scala
sbt.import.check.root.node.for.details=check the root node of the tree for more details
sbt.extracting.project.structure.from.sbt.shell=extracting project structure from sbt shell
sbt.project.structure.extracted=project structure extracted
sbt.import.errors.project.reload.aborted=import errors, project reload aborted
sbt.extracting.project.structure.from.sbt=extracting project structure from sbt
sbt.events=events
sbt.task.canceled=task canceled

### org/jetbrains/sbt/project/template/SbtModuleBuilder.scala
scala.version.requires.library.version=Scala {0} requires {1} {2}
wrong.library.version=Wrong {0} version

### org/jetbrains/sbt/project/template/SbtProjectTemplate.scala
sbt.based.scala.project.recommended=sbt-based Scala project (recommended)

### org/jetbrains/sbt/project/template/wizard/SbtModuleStepLike.scala
sbt.settings.sbt=&sbt:
sbt.settings.scala=S&cala:
sbt.download.scala.standard.library.sources=Download Scala standard library sources (useful for editing the source code)
sbt.download.sbt.sources=Download sbt sources (useful for editing the project definition)
sbt.module.step.download.sources=Download sources

### org/jetbrains/sbt/project/template/wizard/buildSystem/IntelliJScalaNewProjectWizardStep.scala
scala.sdk.must.be.set=Scala SDK must be set

### org/jetbrains/sbt/runner/SbtConfigurationType.scala
sbt.runner.displayName=sbt Task
sbt.runner.description=Run sbt task

### org/jetbrains/sbt/runner/SbtRunConfigurationForm.form
sbt.runner.form.tasks=Tasks:
sbt.runner.form.vmParameters=VM parameters:
sbt.runner.form.environmentVariables=Environment variables:
sbt.runner.form.tasksEditorTitle=Tasks
sbt.runner.form.vmParametersEditorTitle=VM parameters
sbt.runner.form.use.sbt.shell=Use sbt shell
sbt.runner.form.working.directory=Working directory:

### org/jetbrains/sbt/runner/SbtRunConfigurationForm.java
sbt.runner.choose.working.directory=Choose Working Directory

### org/jetbrains/sbt/settings/SbtSettingsPane.form
sbt.settings.maxHeapSize=&Maximum heap size, MB
sbt.settings.vmParams=&VM parameters
sbt.settings.sbtLauncher=&Launcher (sbt-launch.jar)
sbt.settings.sbtOptions=&Sbt options
sbt.settings.env.variables=&Environment variables

### org/jetbrains/sbt/settings/SbtSettingsPane.java
sbt.settings.sbtOptions.tooltip=If after mapping the sbt options to VM parameters, there will be a collision or duplication with already defined parameters, those derived from sbt options will take precedence
sbt.settings.sbt.launcher.custom=Specify Custom launcher

### org/jetbrains/sbt/shell/SbtProcessManager.scala
sbt.shell.configure.sbt.jvm=&Configure sbt JVM
sbt.shell.configure.project.jdk=&Configure project JDK
sbt.shell.no.jre.found.at.path=No JRE found at path {0}. Using project JDK instead.
sbt.shell.no.project.jdk.configured=No project JDK configured, but it is required to run sbt shell.
sbt.shell.stopping.process=Stopping sbt shell process

### org/jetbrains/sbt/shell/SbtProjectTaskRunnerImpl.scala
sbt.shell.refresh.sbt.project=Refresh sbt project
sbt.shell.sbt.build.failed=sbt build failed
sbt.shell.unable.to.build.sbt.project=Unable to build sbt project corresponding to IDEA module {0}.
sbt.shell.sbt.build=sbt build
sbt.shell.build.interrupted=build interrupted
sbt.shell.error.build.interrupted=ERROR: build interrupted
sbt.shell.errors.in.build=errors in build
sbt.shell.warnings.in.build=warnings in build

### org/jetbrains/sbt/shell/SbtShellRunner.scala
initializing.sbt.shell.message=Initializing sbt shell...
sbt.shell.status.initializing=initializing
sbt.shell.status.busy=busy

### org/jetbrains/sbt/shell/SbtShellToolWindowFactory.scala
sbt.shell.title=sbt shell

### org/jetbrains/sbt/shell/action/projectWindowActions.scala
sbt.shell.action.run.task=Run
sbt.shell.action.run.task.description=Run task in sbt shell
sbt.shell.action.show.task=Show Result
sbt.shell.action.show.task.description=Show task result in sbt shell
sbt.shell.action.inspect.task=Inspect
sbt.shell.action.inspect.task.description=Inspect task in sbt shell
sbt.shell.action.show.setting=Show Value
sbt.shell.action.show.setting.description=Show setting in sbt shell
sbt.shell.action.inspect.setting=Inspect
sbt.shell.action.inspect.setting.description=Inspect setting in sbt shell
sbt.shell.action.run.command=Run
sbt.shell.action.run.command.description=Run command in sbt shell
sbt.shell.action.help=Help
sbt.shell.action.help.description=Get help in sbt shell

### org/jetbrains/sbt/shell/action/shellWindowActions.scala
sbt.shell.start=Start sbt shell
sbt.shell.restart=Restart sbt shell
sbt.shell.stop=Stop sbt shell
sbt.shell.ctrl.d.eof=Ctrl+D EOF
sbt.shell.attach.debugger=Attach debugger to sbt shell
sbt.shell.enable.debugging.in.sbt.settings=Enable sbt shell debugging in sbt settings and restart shell to attach debugger
sbt.shell.debug=Debug sbt shell
