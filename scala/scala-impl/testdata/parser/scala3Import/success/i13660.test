type Const[A] = [_] =>> A
type FunctionK[A[_], B[_]] = [Z] => A[Z] => B[Z]

type #~>#:[T, R] = FunctionK[Const[T], Const[R]]

object FunctionK:
  def liftConst[A, B](f: A => B): /*FunctionK[Const[A], Const[B]]*/ A #~>#: B =
    [Z1] => (a: A) => f(a)

trait FoldableK[F[_[_], _]]:

  def foldMapK1[A[_], C, B](fa: F[A, C])(f: FunctionK[A, Const[B]]): B

  def toListK[A, C](fa: F[Const[A], C]): List[A] =
    foldMapK1(fa)(FunctionK.liftConst(List(_: A)))
-----
ScalaFile
  ScTypeAliasDefinition: Const
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Const')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    TypeLambda: [_] =>> A
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: _
          PsiElement(_)('_')
        PsiElement(])(']')
      PsiWhiteSpace(' ')
      PsiElement(=>>)('=>>')
      PsiWhiteSpace(' ')
      SimpleType: A
        CodeReferenceElement: A
          PsiElement(identifier)('A')
  PsiWhiteSpace('\n')
  ScTypeAliasDefinition: FunctionK
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('FunctionK')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    PolymorhicFunctionType: [Z] => A[Z] => B[Z]
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: Z
          PsiElement(identifier)('Z')
        PsiElement(])(']')
      PsiWhiteSpace(' ')
      PsiElement(=>)('=>')
      PsiWhiteSpace(' ')
      FunctionalType: A[Z] => B[Z]
        ParametrizedType: A[Z]
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Z
              CodeReferenceElement: Z
                PsiElement(identifier)('Z')
            PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(=>)('=>')
        PsiWhiteSpace(' ')
        ParametrizedType: B[Z]
          SimpleType: B
            CodeReferenceElement: B
              PsiElement(identifier)('B')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Z
              CodeReferenceElement: Z
                PsiElement(identifier)('Z')
            PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScTypeAliasDefinition: #~>#:
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('#~>#:')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: R
        PsiElement(identifier)('R')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ParametrizedType: FunctionK[Const[T], Const[R]]
      SimpleType: FunctionK
        CodeReferenceElement: FunctionK
          PsiElement(identifier)('FunctionK')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: Const[T]
          SimpleType: Const
            CodeReferenceElement: Const
              PsiElement(identifier)('Const')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
            PsiElement(])(']')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        ParametrizedType: Const[R]
          SimpleType: Const
            CodeReferenceElement: Const
              PsiElement(identifier)('Const')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: R
              CodeReferenceElement: R
                PsiElement(identifier)('R')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScObject: FunctionK
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('FunctionK')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: liftConst
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('liftConst')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: A => B
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          PsiComment(BlockComment)('/*FunctionK[Const[A], Const[B]]*/')
          PsiWhiteSpace(' ')
          InfixType: A #~>#: B
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
            PsiWhiteSpace(' ')
            CodeReferenceElement: #~>#:
              PsiElement(identifier)('#~>#:')
            PsiWhiteSpace(' ')
            SimpleType: B
              CodeReferenceElement: B
                PsiElement(identifier)('B')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          PolyFunctionExpression
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: Z1
                PsiElement(identifier)('Z1')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: a
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('a')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: f
                  PsiElement(identifier)('f')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: a
                    PsiElement(identifier)('a')
                  PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScTrait: FoldableK
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('FoldableK')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDeclaration: foldMapK1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foldMapK1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: C
              PsiElement(identifier)('C')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: fa
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('fa')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: F[A, C]
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      PsiElement(])(']')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: FunctionK[A, Const[B]]
                    SimpleType: FunctionK
                      CodeReferenceElement: FunctionK
                        PsiElement(identifier)('FunctionK')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Const[B]
                        SimpleType: Const
                          CodeReferenceElement: Const
                            PsiElement(identifier)('Const')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: B
            CodeReferenceElement: B
              PsiElement(identifier)('B')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: toListK
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('toListK')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: C
              PsiElement(identifier)('C')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: fa
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('fa')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: F[Const[A], C]
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Const[A]
                        SimpleType: Const
                          CodeReferenceElement: Const
                            PsiElement(identifier)('Const')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[A]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            MethodCall
              ReferenceExpression: foldMapK1
                PsiElement(identifier)('foldMapK1')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: fa
                  PsiElement(identifier)('fa')
                PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              MethodCall
                ReferenceExpression: FunctionK.liftConst
                  ReferenceExpression: FunctionK
                    PsiElement(identifier)('FunctionK')
                  PsiElement(.)('.')
                  PsiElement(identifier)('liftConst')
                ArgumentList
                  PsiElement(()('(')
                  MethodCall
                    ReferenceExpression: List
                      PsiElement(identifier)('List')
                    ArgumentList
                      PsiElement(()('(')
                      TypedExpression
                        UnderscoreSection
                          PsiElement(_)('_')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                      PsiElement())(')')
                  PsiElement())(')')
              PsiElement())(')')
