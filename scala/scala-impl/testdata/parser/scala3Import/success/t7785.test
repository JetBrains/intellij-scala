import scala.language.*

trait R[+Repr]

trait TraversableOps {
  implicit val R: R[Nothing] = ???

  // Removing the implicit parameter in both fixes the crash
  // removing it into one only gives a valid compiler error.
  trait OpsDup1[Repr] {
    def force(implicit bf: R[Repr]): Any
  }

  trait Ops[Repr] extends OpsDup1[Repr] {
    def force(implicit bf: R[Repr], dummy: DummyImplicit): Any
  }

  implicit def ct2ops[T, C[+X]](t: C[T]):
    Ops[C[T]]

  def force[T](t: Option[T]) =
    // ct2ops(t).force
    t.force //Fails compilation on 2.10.2.


  /* To get a closer look at the crash:
  :power
  val foo = typeOf[C].member(TermName("foo"))
  val pt = analyzer.HasMember(TermName("force"))
  val instantiated = foo.info.finalResultType.instantiateTypeParams(foo.typeParams, foo.typeParams.map(TypeVar(_)))
  instantiated <:< pt
  */
  def foo[T, C[+X]]: Ops[C[T]]
}
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.language
        CodeReferenceElement: scala
          PsiElement(identifier)('scala')
        PsiElement(.)('.')
        PsiElement(identifier)('language')
      PsiElement(.)('.')
      PsiElement(*)('*')
  PsiWhiteSpace('\n\n')
  ScTrait: R
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('R')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: Repr
        PsiElement(identifier)('+')
        PsiElement(identifier)('Repr')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScTrait: TraversableOps
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TraversableOps')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: R
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: R
              PsiElement(identifier)('R')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: R[Nothing]
            SimpleType: R
              CodeReferenceElement: R
                PsiElement(identifier)('R')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Nothing
                CodeReferenceElement: Nothing
                  PsiElement(identifier)('Nothing')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScTrait: OpsDup1
          PsiComment(comment)('// Removing the implicit parameter in both fixes the crash')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('// removing it into one only gives a valid compiler error.')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('OpsDup1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Repr
              PsiElement(identifier)('Repr')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: force
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('force')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: bf
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('bf')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: R[Repr]
                          SimpleType: R
                            CodeReferenceElement: R
                              PsiElement(identifier)('R')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: Repr
                              CodeReferenceElement: Repr
                                PsiElement(identifier)('Repr')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Any
                  CodeReferenceElement: Any
                    PsiElement(identifier)('Any')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Ops
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Ops')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Repr
              PsiElement(identifier)('Repr')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: OpsDup1[Repr]
                  SimpleType: OpsDup1
                    CodeReferenceElement: OpsDup1
                      PsiElement(identifier)('OpsDup1')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Repr
                      CodeReferenceElement: Repr
                        PsiElement(identifier)('Repr')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: force
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('force')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: bf
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('bf')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: R[Repr]
                          SimpleType: R
                            CodeReferenceElement: R
                              PsiElement(identifier)('R')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: Repr
                              CodeReferenceElement: Repr
                                PsiElement(identifier)('Repr')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: dummy
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('dummy')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: DummyImplicit
                          CodeReferenceElement: DummyImplicit
                            PsiElement(identifier)('DummyImplicit')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Any
                  CodeReferenceElement: Any
                    PsiElement(identifier)('Any')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDeclaration: ct2ops
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ct2ops')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: C
              PsiElement(identifier)('C')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: X
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('X')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: t
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('t')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: C[T]
                    SimpleType: C
                      CodeReferenceElement: C
                        PsiElement(identifier)('C')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace('\n    ')
          ParametrizedType: Ops[C[T]]
            SimpleType: Ops
              CodeReferenceElement: Ops
                PsiElement(identifier)('Ops')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: C[T]
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiElement(])(']')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: force
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('force')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: t
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('t')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Option[T]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          PsiComment(comment)('// ct2ops(t).force')
          PsiWhiteSpace('\n    ')
          ReferenceExpression: t.force
            ReferenceExpression: t
              PsiElement(identifier)('t')
            PsiElement(.)('.')
            PsiElement(identifier)('force')
        PsiWhiteSpace(' ')
        PsiComment(comment)('//Fails compilation on 2.10.2.')
        PsiWhiteSpace('\n\n\n  ')
        ScFunctionDeclaration: foo
          PsiComment(BlockComment)('/* To get a closer look at the crash:\n  :power\n  val foo = typeOf[C].member(TermName("foo"))\n  val pt = analyzer.HasMember(TermName("force"))\n  val instantiated = foo.info.finalResultType.instantiateTypeParams(foo.typeParams, foo.typeParams.map(TypeVar(_)))\n  instantiated <:< pt\n  */')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: C
              PsiElement(identifier)('C')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: X
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('X')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Ops[C[T]]
            SimpleType: Ops
              CodeReferenceElement: Ops
                PsiElement(identifier)('Ops')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: C[T]
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiElement(])(']')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
