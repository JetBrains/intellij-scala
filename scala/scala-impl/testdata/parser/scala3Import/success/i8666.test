class Foo[A, B]()

type FooSnd[X] = X match
  case Foo[_, b] => b

trait Bar[A]:
  def bar(h: FooSnd[A]): Int

val foo: Bar[Foo[String, Int]] = new Bar[Foo[String, Int]]:
  def bar(h: FooSnd[Foo[String, Int]]) = h
-----
ScalaFile
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScTypeAliasDefinition: FooSnd
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('FooSnd')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: X
        PsiElement(identifier)('X')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MatchType: X match
  case Foo[_, b] => b
      SimpleType: X
        CodeReferenceElement: X
          PsiElement(identifier)('X')
      PsiWhiteSpace(' ')
      PsiElement(match)('match')
      PsiWhiteSpace('\n  ')
      ScMatchTypeCasesImpl(match type cases)
        ScMatchTypeCaseImpl(match type case)
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ParametrizedType: Foo[_, b]
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            TypeArgumentsList
              PsiElement([)('[')
              TypeVariable: _
                PsiElement(_)('_')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypeVariable: b
                PsiElement(identifier)('b')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          SimpleType: b
            CodeReferenceElement: b
              PsiElement(identifier)('b')
  PsiWhiteSpace('\n\n')
  ScTrait: Bar
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bar')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: bar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('bar')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: h
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('h')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: FooSnd[A]
                    SimpleType: FooSnd
                      CodeReferenceElement: FooSnd
                        PsiElement(identifier)('FooSnd')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: foo
        PsiElement(identifier)('foo')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: Bar[Foo[String, Int]]
      SimpleType: Bar
        CodeReferenceElement: Bar
          PsiElement(identifier)('Bar')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: Foo[String, Int]
          SimpleType: Foo
            CodeReferenceElement: Foo
              PsiElement(identifier)('Foo')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiElement(])(']')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ScNewTemplateDefinition: <anonymous>
      PsiElement(new)('new')
      PsiWhiteSpace(' ')
      ExtendsBlock
        TemplateParents
          ConstructorInvocation
            ParametrizedType: Bar[Foo[String, Int]]
              SimpleType: Bar
                CodeReferenceElement: Bar
                  PsiElement(identifier)('Bar')
              TypeArgumentsList
                PsiElement([)('[')
                ParametrizedType: Foo[String, Int]
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
                PsiElement(])(']')
        ScTemplateBody
          PsiElement(:)(':')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: bar
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('bar')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: h
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('h')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: FooSnd[Foo[String, Int]]
                      SimpleType: FooSnd
                        CodeReferenceElement: FooSnd
                          PsiElement(identifier)('FooSnd')
                      TypeArgumentsList
                        PsiElement([)('[')
                        ParametrizedType: Foo[String, Int]
                          SimpleType: Foo
                            CodeReferenceElement: Foo
                              PsiElement(identifier)('Foo')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: String
                              CodeReferenceElement: String
                                PsiElement(identifier)('String')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                            PsiElement(])(']')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: h
              PsiElement(identifier)('h')
