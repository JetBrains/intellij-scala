class Foo {
  opaque type Num = Int

  val z = Test.id(this)(1)
}
object Test {
  def id(f: Foo)(x: f.Num): f.Num = x
}
-----
ScalaFile
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: Num
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(opaque)('opaque')
          PsiWhiteSpace(' ')
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Num')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: z
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: z
              PsiElement(identifier)('z')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            MethodCall
              ReferenceExpression: Test.id
                ReferenceExpression: Test
                  PsiElement(identifier)('Test')
                PsiElement(.)('.')
                PsiElement(identifier)('id')
              ArgumentList
                PsiElement(()('(')
                ThisReference
                  PsiElement(this)('this')
                PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: id
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('id')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: f.Num
                    CodeReferenceElement: f.Num
                      CodeReferenceElement: f
                        PsiElement(identifier)('f')
                      PsiElement(.)('.')
                      PsiElement(identifier)('Num')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: f.Num
            CodeReferenceElement: f.Num
              CodeReferenceElement: f
                PsiElement(identifier)('f')
              PsiElement(.)('.')
              PsiElement(identifier)('Num')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
