class Foo(p1: String, p2: String):
  def this(p1: String) = this(p1, "blah")

val x = { Foo("blah", "hah") }
val y = { Foo("blah") }
-----
ScalaFile
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: p1
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('p1')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: p2
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('p2')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
          PsiElement())(')')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: this
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(this)('this')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: p1
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('p1')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SelfInvocation
            PsiElement(this)('this')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: p1
                PsiElement(identifier)('p1')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              StringLiteral
                PsiElement(string content)('"blah"')
              PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: x
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: x
        PsiElement(identifier)('x')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace(' ')
      MethodCall
        ReferenceExpression: Foo
          PsiElement(identifier)('Foo')
        ArgumentList
          PsiElement(()('(')
          StringLiteral
            PsiElement(string content)('"blah"')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"hah"')
          PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScPatternDefinition: y
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: y
        PsiElement(identifier)('y')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace(' ')
      MethodCall
        ReferenceExpression: Foo
          PsiElement(identifier)('Foo')
        ArgumentList
          PsiElement(()('(')
          StringLiteral
            PsiElement(string content)('"blah"')
          PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement(})('}')
