// scalac: -Werror

// Like tests/pos/i15029.scala,
// but with a more complicated prefix
// and Schema[String]

sealed trait Schema[A]

sealed class Universe:
  sealed trait Instances[B]:
    case class Field() extends Schema[B]
    case object Thing extends Schema[B]

object Universe1 extends Universe
object Universe2 extends Universe

object Ints extends Universe1.Instances[Int]
object Strs extends Universe2.Instances[String]

// Match not exhaustive error! (with fatal warnings :P)
class Test:
  def handle(schema: Schema[String]) =
    schema match // was: match may not be exhaustive
      case Strs.Field() =>
      case Strs.Thing   =>
-----
ScalaFile
  PsiComment(comment)('// scalac: -Werror')
  PsiWhiteSpace('\n\n')
  PsiComment(comment)('// Like tests/pos/i15029.scala,')
  PsiWhiteSpace('\n')
  PsiComment(comment)('// but with a more complicated prefix')
  PsiWhiteSpace('\n')
  PsiComment(comment)('// and Schema[String]')
  PsiWhiteSpace('\n\n')
  ScTrait: Schema
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(sealed)('sealed')
    PsiWhiteSpace(' ')
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Schema')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScClass: Universe
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(sealed)('sealed')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Universe')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScTrait: Instances
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(sealed)('sealed')
          PsiWhiteSpace(' ')
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Instances')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScClass: Field
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(case)('case')
                PsiWhiteSpace(' ')
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Field')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement())(')')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Schema[B]
                        SimpleType: Schema
                          CodeReferenceElement: Schema
                            PsiElement(identifier)('Schema')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
              PsiWhiteSpace('\n    ')
              ScObject: Thing
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(case)('case')
                PsiWhiteSpace(' ')
                PsiElement(object)('object')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Thing')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Schema[B]
                        SimpleType: Schema
                          CodeReferenceElement: Schema
                            PsiElement(identifier)('Schema')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScObject: Universe1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Universe1')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Universe
            CodeReferenceElement: Universe
              PsiElement(identifier)('Universe')
  PsiWhiteSpace('\n')
  ScObject: Universe2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Universe2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Universe
            CodeReferenceElement: Universe
              PsiElement(identifier)('Universe')
  PsiWhiteSpace('\n\n')
  ScObject: Ints
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Ints')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Universe1.Instances[Int]
            SimpleType: Universe1.Instances
              CodeReferenceElement: Universe1.Instances
                CodeReferenceElement: Universe1
                  PsiElement(identifier)('Universe1')
                PsiElement(.)('.')
                PsiElement(identifier)('Instances')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScObject: Strs
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Strs')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Universe2.Instances[String]
            SimpleType: Universe2.Instances
              CodeReferenceElement: Universe2.Instances
                CodeReferenceElement: Universe2
                  PsiElement(identifier)('Universe2')
                PsiElement(.)('.')
                PsiElement(identifier)('Instances')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScClass: Test
    PsiComment(comment)('// Match not exhaustive error! (with fatal warnings :P)')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: handle
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('handle')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: schema
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('schema')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Schema[String]
                    SimpleType: Schema
                      CodeReferenceElement: Schema
                        PsiElement(identifier)('Schema')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            ReferenceExpression: schema
              PsiElement(identifier)('schema')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// was: match may not be exhaustive')
            PsiWhiteSpace('\n      ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Strs.Field
                    CodeReferenceElement: Strs
                      PsiElement(identifier)('Strs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Field')
                  Pattern Argument List
                    PsiElement(()('(')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                BlockOfExpressions
                  <empty list>
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: Strs.Thing
                    ReferenceExpression: Strs
                      PsiElement(identifier)('Strs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Thing')
                PsiWhiteSpace('   ')
                PsiElement(=>)('=>')
                BlockOfExpressions
                  <empty list>
