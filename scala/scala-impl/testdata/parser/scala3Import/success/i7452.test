trait Abstract[F[_], A] {
  type Out[G[_]]
}
object Abstract {
  type Aux[F[_], A, Out0[_[_]]] = Abstract[F, A] { type Out[G[_]] = Out0[G] }

  implicit def valueAbstract[F[_], A]: Aux[F, F[A], [G[_]] =>> G[A]] = new Abstract[F, F[A]] {
    type Out[G[_]] = G[A]
  }

  implicit def hkdAbstract[F[_], A[_[_]]]: Aux[F, A[F], [G[_]] =>> A[G]] = new Abstract[F, A[F]] {
    type Out[G[_]] = A[G]
  }
}

case class StringF[F[_]](s: F[String])

trait Q[M[_[_]]] {
  def map[A, M2[_[_]]](f: M[Option] => A)(implicit abs: Abstract.Aux[Option, A, M2]): Q[M2]
}

val q: Q[[F[_]] =>> F[String]] = ???
val q2 = q.map(s => s)   // was an error, now OK
val q3 = q.map(s => StringF(s))
-----
ScalaFile
  ScTrait: Abstract
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Abstract')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Out
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Out')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: G
              PsiElement(identifier)('G')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: Abstract
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Abstract')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: Aux
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Aux')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: Out0
              PsiElement(identifier)('Out0')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: _
                      PsiElement(_)('_')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          CompoundType: Abstract[F, A] { type Out[G[_]] = Out0[G] }
            ParametrizedType: Abstract[F, A]
              SimpleType: Abstract
                CodeReferenceElement: Abstract
                  PsiElement(identifier)('Abstract')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            Refinement
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScTypeAliasDefinition: Out
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Out')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: G
                    PsiElement(identifier)('G')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ParametrizedType: Out0[G]
                  SimpleType: Out0
                    CodeReferenceElement: Out0
                      PsiElement(identifier)('Out0')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: G
                      CodeReferenceElement: G
                        PsiElement(identifier)('G')
                    PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: valueAbstract
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('valueAbstract')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Aux[F, F[A], [G[_]] =>> G[A]]
            SimpleType: Aux
              CodeReferenceElement: Aux
                PsiElement(identifier)('Aux')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: F
                CodeReferenceElement: F
                  PsiElement(identifier)('F')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ParametrizedType: F[A]
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypeLambda: [G[_]] =>> G[A]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: G
                    PsiElement(identifier)('G')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: G[A]
                  SimpleType: G
                    CodeReferenceElement: G
                      PsiElement(identifier)('G')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Abstract[F, F[A]]
                    SimpleType: Abstract
                      CodeReferenceElement: Abstract
                        PsiElement(identifier)('Abstract')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: F[A]
                        SimpleType: F
                          CodeReferenceElement: F
                            PsiElement(identifier)('F')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScTypeAliasDefinition: Out
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(type)('type')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('Out')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: G
                      PsiElement(identifier)('G')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ParametrizedType: G[A]
                    SimpleType: G
                      CodeReferenceElement: G
                        PsiElement(identifier)('G')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: hkdAbstract
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('hkdAbstract')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: _
                      PsiElement(_)('_')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Aux[F, A[F], [G[_]] =>> A[G]]
            SimpleType: Aux
              CodeReferenceElement: Aux
                PsiElement(identifier)('Aux')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: F
                CodeReferenceElement: F
                  PsiElement(identifier)('F')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ParametrizedType: A[F]
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypeLambda: [G[_]] =>> A[G]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: G
                    PsiElement(identifier)('G')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: A[G]
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: G
                      CodeReferenceElement: G
                        PsiElement(identifier)('G')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Abstract[F, A[F]]
                    SimpleType: Abstract
                      CodeReferenceElement: Abstract
                        PsiElement(identifier)('Abstract')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: A[F]
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          PsiElement(])(']')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScTypeAliasDefinition: Out
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(type)('type')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('Out')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: G
                      PsiElement(identifier)('G')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ParametrizedType: A[G]
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: G
                        CodeReferenceElement: G
                          PsiElement(identifier)('G')
                      PsiElement(])(']')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: StringF
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('StringF')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: s
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('s')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: F[String]
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(])(']')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScTrait: Q
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Q')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: M
        PsiElement(identifier)('M')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiElement(])(']')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: map
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('map')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: M2
              PsiElement(identifier)('M2')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: _
                      PsiElement(_)('_')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: M[Option] => A
                    ParametrizedType: M[Option]
                      SimpleType: M
                        CodeReferenceElement: M
                          PsiElement(identifier)('M')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: Option
                          CodeReferenceElement: Option
                            PsiElement(identifier)('Option')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: abs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('abs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Abstract.Aux[Option, A, M2]
                    SimpleType: Abstract.Aux
                      CodeReferenceElement: Abstract.Aux
                        CodeReferenceElement: Abstract
                          PsiElement(identifier)('Abstract')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Aux')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Option
                        CodeReferenceElement: Option
                          PsiElement(identifier)('Option')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: M2
                        CodeReferenceElement: M2
                          PsiElement(identifier)('M2')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Q[M2]
            SimpleType: Q
              CodeReferenceElement: Q
                PsiElement(identifier)('Q')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: M2
                CodeReferenceElement: M2
                  PsiElement(identifier)('M2')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: q
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: q
        PsiElement(identifier)('q')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: Q[[F[_]] =>> F[String]]
      SimpleType: Q
        CodeReferenceElement: Q
          PsiElement(identifier)('Q')
      TypeArgumentsList
        PsiElement([)('[')
        TypeLambda: [F[_]] =>> F[String]
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=>>)('=>>')
          PsiWhiteSpace(' ')
          ParametrizedType: F[String]
            SimpleType: F
              CodeReferenceElement: F
                PsiElement(identifier)('F')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: ???
      PsiElement(identifier)('???')
  PsiWhiteSpace('\n')
  ScPatternDefinition: q2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: q2
        PsiElement(identifier)('q2')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: q.map
        ReferenceExpression: q
          PsiElement(identifier)('q')
        PsiElement(.)('.')
        PsiElement(identifier)('map')
      ArgumentList
        PsiElement(()('(')
        FunctionExpression
          Parameters
            ParametersClause
              Parameter: s
                PsiElement(identifier)('s')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          ReferenceExpression: s
            PsiElement(identifier)('s')
        PsiElement())(')')
  PsiWhiteSpace('   ')
  PsiComment(comment)('// was an error, now OK')
  PsiWhiteSpace('\n')
  ScPatternDefinition: q3
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: q3
        PsiElement(identifier)('q3')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: q.map
        ReferenceExpression: q
          PsiElement(identifier)('q')
        PsiElement(.)('.')
        PsiElement(identifier)('map')
      ArgumentList
        PsiElement(()('(')
        FunctionExpression
          Parameters
            ParametersClause
              Parameter: s
                PsiElement(identifier)('s')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: StringF
              PsiElement(identifier)('StringF')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: s
                PsiElement(identifier)('s')
              PsiElement())(')')
        PsiElement())(')')
