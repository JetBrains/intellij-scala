package hello

object world extends App {
  println("hello dotty!")
  /*/* one
  */
  two
  */
  println("foo")
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: hello
      PsiElement(identifier)('hello')
    PsiWhiteSpace('\n\n')
    ScObject: world
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('world')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: App
              CodeReferenceElement: App
                PsiElement(identifier)('App')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: println
              PsiElement(identifier)('println')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"hello dotty!"')
              PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiComment(BlockComment)('/*/* one\n  */\n  two\n  */')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: println
              PsiElement(identifier)('println')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"foo"')
              PsiElement())(')')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
