/*                     __                                               *\
**     ________ ___   / /  ___     Scala API                            **
**    / __/ __// _ | / /  / _ |    (c) 2005-2013, LAMP/EPFL             **
**  __\ \/ /__/ __ |/ /__/ __ |    http://scala-lang.org/               **
** /____/\___/_/ |_/____/_/ | |                                         **
**                          |/                                          **
\*                                                                      */



package scala
package collection
package immutable

import scala.annotation.tailrec
import scala.annotation.meta.getter

/** An object containing the RedBlack tree implementation used by for `TreeMaps` and `TreeSets`.
 *
 *  Implementation note: since efficiency is important for data structures this implementation
 *  uses `null` to represent empty trees. This also means pattern matching cannot
 *  easily be used. The API represented by the RedBlackTree object tries to hide these
 *  optimizations behind a reasonably clean API.
 *
 *  @since 2.10
 */
private[collection]
object RedBlackTree {

  def isEmpty(tree: Tree[_, _]): Boolean = tree eq null

  def contains[A: Ordering](tree: Tree[A, _], x: A): Boolean = lookup(tree, x) ne null
  def get[A: Ordering, B](tree: Tree[A, B], x: A): Option[B] = lookup(tree, x) match {
    case null => None
    case tree => Some(tree.value)
  }

  @tailrec
  def lookup[A, B](tree: Tree[A, B], x: A)(implicit ordering: Ordering[A]): Tree[A, B] = if (tree eq null) null else {
    val cmp = ordering.compare(x, tree.key)
    if (cmp < 0) lookup(tree.left, x)
    else if (cmp > 0) lookup(tree.right, x)
    else tree
  }

  def count(tree: Tree[_, _]) = if (tree eq null) 0 else tree.count
  /**
   * Count all the nodes with keys greater than or equal to the lower bound and less than the upper bound.
   * The two bounds are optional.
   */
  def countInRange[A](tree: Tree[A, _], from: Option[A], to:Option[A])(implicit ordering: Ordering[A]) : Int =
    if (tree eq null) 0 else
    (from, to) match {
      // with no bounds use this node's count
      case (None, None) => tree.count
      // if node is less than the lower bound, try the tree on the right, it might be in range
      case (Some(lb), _) if ordering.lt(tree.key, lb) => countInRange(tree.right, from, to)
      // if node is greater than or equal to the upper bound, try the tree on the left, it might be in range
      case (_, Some(ub)) if ordering.gteq(tree.key, ub) => countInRange(tree.left, from, to)
      // node is in range so the tree on the left will all be less than the upper bound and the tree on the
      // right will all be greater than or equal to the lower bound. So 1 for this node plus
      // count the subtrees by stripping off the bounds that we don't need any more
      case _ => 1 + countInRange(tree.left, from, None) + countInRange(tree.right, None, to)

    }
  def update[A: Ordering, B, B1 >: B](tree: Tree[A, B], k: A, v: B1, overwrite: Boolean): Tree[A, B1] = blacken(upd(tree, k, v, overwrite))
  def delete[A: Ordering, B](tree: Tree[A, B], k: A): Tree[A, B] = blacken(del(tree, k))
  def rangeImpl[A: Ordering, B](tree: Tree[A, B], from: Option[A], until: Option[A]): Tree[A, B] = (from, until) match {
    case (Some(from), Some(until)) => this.range(tree, from, until)
    case (Some(from), None)        => this.from(tree, from)
    case (None,       Some(until)) => this.until(tree, until)
    case (None,       None)        => tree
  }
  def range[A: Ordering, B](tree: Tree[A, B], from: A, until: A): Tree[A, B] = blacken(doRange(tree, from, until))
  def from[A: Ordering, B](tree: Tree[A, B], from: A): Tree[A, B] = blacken(doFrom(tree, from))
  def to[A: Ordering, B](tree: Tree[A, B], to: A): Tree[A, B] = blacken(doTo(tree, to))
  def until[A: Ordering, B](tree: Tree[A, B], key: A): Tree[A, B] = blacken(doUntil(tree, key))

  def drop[A: Ordering, B](tree: Tree[A, B], n: Int): Tree[A, B] = blacken(doDrop(tree, n))
  def take[A: Ordering, B](tree: Tree[A, B], n: Int): Tree[A, B] = blacken(doTake(tree, n))
  def slice[A: Ordering, B](tree: Tree[A, B], from: Int, until: Int): Tree[A, B] = blacken(doSlice(tree, from, until))

  def smallest[A, B](tree: Tree[A, B]): Tree[A, B] = {
    if (tree eq null) throw new NoSuchElementException("empty map")
    var result = tree
    while (result.left ne null) result = result.left
    result
  }
  def greatest[A, B](tree: Tree[A, B]): Tree[A, B] = {
    if (tree eq null) throw new NoSuchElementException("empty map")
    var result = tree
    while (result.right ne null) result = result.right
    result
  }


  def foreach[A,B,U](tree:Tree[A,B], f:((A,B)) => U):Unit = if (tree ne null) _foreach(tree,f)

  private[this] def _foreach[A, B, U](tree: Tree[A, B], f: ((A, B)) => U): Unit = {
    if (tree.left ne null) _foreach(tree.left, f)
    f((tree.key, tree.value))
    if (tree.right ne null) _foreach(tree.right, f)
  }

  def foreachKey[A, U](tree:Tree[A,_], f: A => U):Unit = if (tree ne null) _foreachKey(tree,f)

  private[this] def _foreachKey[A, U](tree: Tree[A, _], f: A => U): Unit = {
    if (tree.left ne null) _foreachKey(tree.left, f)
    f((tree.key))
    if (tree.right ne null) _foreachKey(tree.right, f)
  }

  def iterator[A: Ordering, B](tree: Tree[A, B], start: Option[A] = None): Iterator[(A, B)] = new EntriesIterator(tree, start)
  def keysIterator[A: Ordering](tree: Tree[A, _], start: Option[A] = None): Iterator[A] = new KeysIterator(tree, start)
  def valuesIterator[A: Ordering, B](tree: Tree[A, B], start: Option[A] = None): Iterator[B] = new ValuesIterator(tree, start)

  @tailrec
  def nth[A, B](tree: Tree[A, B], n: Int): Tree[A, B] = {
    val count = this.count(tree.left)
    if (n < count) nth(tree.left, n)
    else if (n > count) nth(tree.right, n - count - 1)
    else tree
  }

  def isBlack(tree: Tree[_, _]) = (tree eq null) || isBlackTree(tree)

  private[this] def isRedTree(tree: Tree[_, _]) = tree.isInstanceOf[RedTree[_, _]]
  private[this] def isBlackTree(tree: Tree[_, _]) = tree.isInstanceOf[BlackTree[_, _]]

  private[this] def blacken[A, B](t: Tree[A, B]): Tree[A, B] = if (t eq null) null else t.black

  private[this] def mkTree[A, B](isBlack: Boolean, k: A, v: B, l: Tree[A, B], r: Tree[A, B]) =
    if (isBlack) BlackTree(k, v, l, r) else RedTree(k, v, l, r)

  private[this] def balanceLeft[A, B, B1 >: B](isBlack: Boolean, z: A, zv: B, l: Tree[A, B1], d: Tree[A, B1]): Tree[A, B1] = {
    if (isRedTree(l) && isRedTree(l.left))
      RedTree(l.key, l.value, BlackTree(l.left.key, l.left.value, l.left.left, l.left.right), BlackTree(z, zv, l.right, d))
    else if (isRedTree(l) && isRedTree(l.right))
      RedTree(l.right.key, l.right.value, BlackTree(l.key, l.value, l.left, l.right.left), BlackTree(z, zv, l.right.right, d))
    else
      mkTree(isBlack, z, zv, l, d)
  }
  private[this] def balanceRight[A, B, B1 >: B](isBlack: Boolean, x: A, xv: B, a: Tree[A, B1], r: Tree[A, B1]): Tree[A, B1] = {
    if (isRedTree(r) && isRedTree(r.left))
      RedTree(r.left.key, r.left.value, BlackTree(x, xv, a, r.left.left), BlackTree(r.key, r.value, r.left.right, r.right))
    else if (isRedTree(r) && isRedTree(r.right))
      RedTree(r.key, r.value, BlackTree(x, xv, a, r.left), BlackTree(r.right.key, r.right.value, r.right.left, r.right.right))
    else
      mkTree(isBlack, x, xv, a, r)
  }
  private[this] def upd[A, B, B1 >: B](tree: Tree[A, B], k: A, v: B1, overwrite: Boolean)(implicit ordering: Ordering[A]): Tree[A, B1] = if (tree eq null) {
    RedTree(k, v, null, null)
  } else {
    val cmp = ordering.compare(k, tree.key)
    if (cmp < 0) balanceLeft(isBlackTree(tree), tree.key, tree.value, upd(tree.left, k, v, overwrite), tree.right)
    else if (cmp > 0) balanceRight(isBlackTree(tree), tree.key, tree.value, tree.left, upd(tree.right, k, v, overwrite))
    else if (overwrite || k != tree.key) mkTree(isBlackTree(tree), k, v, tree.left, tree.right)
    else tree
  }
  private[this] def updNth[A, B, B1 >: B](tree: Tree[A, B], idx: Int, k: A, v: B1, overwrite: Boolean): Tree[A, B1] = if (tree eq null) {
    RedTree(k, v, null, null)
  } else {
    val rank = count(tree.left) + 1
    if (idx < rank) balanceLeft(isBlackTree(tree), tree.key, tree.value, updNth(tree.left, idx, k, v, overwrite), tree.right)
    else if (idx > rank) balanceRight(isBlackTree(tree), tree.key, tree.value, tree.left, updNth(tree.right, idx - rank, k, v, overwrite))
    else if (overwrite) mkTree(isBlackTree(tree), k, v, tree.left, tree.right)
    else tree
  }

  /* Based on Stefan Kahrs' Haskell version of Okasaki's Red&Black Trees
   * http://www.cse.unsw.edu.au/~dons/data/RedBlackTree.html */
  private[this] def del[A, B](tree: Tree[A, B], k: A)(implicit ordering: Ordering[A]): Tree[A, B] = if (tree eq null) null else {
    def balance(x: A, xv: B, tl: Tree[A, B], tr: Tree[A, B]) = if (isRedTree(tl)) {
      if (isRedTree(tr)) {
        RedTree(x, xv, tl.black, tr.black)
      } else if (isRedTree(tl.left)) {
        RedTree(tl.key, tl.value, tl.left.black, BlackTree(x, xv, tl.right, tr))
      } else if (isRedTree(tl.right)) {
        RedTree(tl.right.key, tl.right.value, BlackTree(tl.key, tl.value, tl.left, tl.right.left), BlackTree(x, xv, tl.right.right, tr))
      } else {
        BlackTree(x, xv, tl, tr)
      }
    } else if (isRedTree(tr)) {
      if (isRedTree(tr.right)) {
        RedTree(tr.key, tr.value, BlackTree(x, xv, tl, tr.left), tr.right.black)
      } else if (isRedTree(tr.left)) {
        RedTree(tr.left.key, tr.left.value, BlackTree(x, xv, tl, tr.left.left), BlackTree(tr.key, tr.value, tr.left.right, tr.right))
      } else {
        BlackTree(x, xv, tl, tr)
      }
    } else {
      BlackTree(x, xv, tl, tr)
    }
    def subl(t: Tree[A, B]) =
      if (t.isInstanceOf[BlackTree[_, _]]) t.red
      else sys.error("Defect: invariance violation; expected black, got "+t)

    def balLeft(x: A, xv: B, tl: Tree[A, B], tr: Tree[A, B]) = if (isRedTree(tl)) {
      RedTree(x, xv, tl.black, tr)
    } else if (isBlackTree(tr)) {
      balance(x, xv, tl, tr.red)
    } else if (isRedTree(tr) && isBlackTree(tr.left)) {
      RedTree(tr.left.key, tr.left.value, BlackTree(x, xv, tl, tr.left.left), balance(tr.key, tr.value, tr.left.right, subl(tr.right)))
    } else {
      sys.error("Defect: invariance violation")
    }
    def balRight(x: A, xv: B, tl: Tree[A, B], tr: Tree[A, B]) = if (isRedTree(tr)) {
      RedTree(x, xv, tl, tr.black)
    } else if (isBlackTree(tl)) {
      balance(x, xv, tl.red, tr)
    } else if (isRedTree(tl) && isBlackTree(tl.right)) {
      RedTree(tl.right.key, tl.right.value, balance(tl.key, tl.value, subl(tl.left), tl.right.left), BlackTree(x, xv, tl.right.right, tr))
    } else {
      sys.error("Defect: invariance violation")
    }
    def delLeft = if (isBlackTree(tree.left)) balLeft(tree.key, tree.value, del(tree.left, k), tree.right) else RedTree(tree.key, tree.value, del(tree.left, k), tree.right)
    def delRight = if (isBlackTree(tree.right)) balRight(tree.key, tree.value, tree.left, del(tree.right, k)) else RedTree(tree.key, tree.value, tree.left, del(tree.right, k))
    def append(tl: Tree[A, B], tr: Tree[A, B]): Tree[A, B] = if (tl eq null) {
      tr
    } else if (tr eq null) {
      tl
    } else if (isRedTree(tl) && isRedTree(tr)) {
      val bc = append(tl.right, tr.left)
      if (isRedTree(bc)) {
        RedTree(bc.key, bc.value, RedTree(tl.key, tl.value, tl.left, bc.left), RedTree(tr.key, tr.value, bc.right, tr.right))
      } else {
        RedTree(tl.key, tl.value, tl.left, RedTree(tr.key, tr.value, bc, tr.right))
      }
    } else if (isBlackTree(tl) && isBlackTree(tr)) {
      val bc = append(tl.right, tr.left)
      if (isRedTree(bc)) {
        RedTree(bc.key, bc.value, BlackTree(tl.key, tl.value, tl.left, bc.left), BlackTree(tr.key, tr.value, bc.right, tr.right))
      } else {
        balLeft(tl.key, tl.value, tl.left, BlackTree(tr.key, tr.value, bc, tr.right))
      }
    } else if (isRedTree(tr)) {
      RedTree(tr.key, tr.value, append(tl, tr.left), tr.right)
    } else if (isRedTree(tl)) {
      RedTree(tl.key, tl.value, tl.left, append(tl.right, tr))
    } else {
      sys.error("unmatched tree on append: " + tl + ", " + tr)
    }

    val cmp = ordering.compare(k, tree.key)
    if (cmp < 0) delLeft
    else if (cmp > 0) delRight
    else append(tree.left, tree.right)
  }

  private[this] def doFrom[A, B](tree: Tree[A, B], from: A)(implicit ordering: Ordering[A]): Tree[A, B] = {
    if (tree eq null) return null
    if (ordering.lt(tree.key, from)) return doFrom(tree.right, from)
    val newLeft = doFrom(tree.left, from)
    if (newLeft eq tree.left) tree
    else if (newLeft eq null) upd(tree.right, tree.key, tree.value, overwrite = false)
    else rebalance(tree, newLeft, tree.right)
  }
  private[this] def doTo[A, B](tree: Tree[A, B], to: A)(implicit ordering: Ordering[A]): Tree[A, B] = {
    if (tree eq null) return null
    if (ordering.lt(to, tree.key)) return doTo(tree.left, to)
    val newRight = doTo(tree.right, to)
    if (newRight eq tree.right) tree
    else if (newRight eq null) upd(tree.left, tree.key, tree.value, overwrite = false)
    else rebalance(tree, tree.left, newRight)
  }
  private[this] def doUntil[A, B](tree: Tree[A, B], until: A)(implicit ordering: Ordering[A]): Tree[A, B] = {
    if (tree eq null) return null
    if (ordering.lteq(until, tree.key)) return doUntil(tree.left, until)
    val newRight = doUntil(tree.right, until)
    if (newRight eq tree.right) tree
    else if (newRight eq null) upd(tree.left, tree.key, tree.value, overwrite = false)
    else rebalance(tree, tree.left, newRight)
  }
  private[this] def doRange[A, B](tree: Tree[A, B], from: A, until: A)(implicit ordering: Ordering[A]): Tree[A, B] = {
    if (tree eq null) return null
    if (ordering.lt(tree.key, from)) return doRange(tree.right, from, until)
    if (ordering.lteq(until, tree.key)) return doRange(tree.left, from, until)
    val newLeft = doFrom(tree.left, from)
    val newRight = doUntil(tree.right, until)
    if ((newLeft eq tree.left) && (newRight eq tree.right)) tree
    else if (newLeft eq null) upd(newRight, tree.key, tree.value, overwrite = false)
    else if (newRight eq null) upd(newLeft, tree.key, tree.value, overwrite = false)
    else rebalance(tree, newLeft, newRight)
  }

  private[this] def doDrop[A, B](tree: Tree[A, B], n: Int): Tree[A, B] = {
    if (n <= 0) return tree
    if (n >= this.count(tree)) return null
    val count = this.count(tree.left)
    if (n > count) return doDrop(tree.right, n - count - 1)
    val newLeft = doDrop(tree.left, n)
    if (newLeft eq tree.left) tree
    else if (newLeft eq null) updNth(tree.right, n - count - 1, tree.key, tree.value, overwrite = false)
    else rebalance(tree, newLeft, tree.right)
  }
  private[this] def doTake[A, B](tree: Tree[A, B], n: Int): Tree[A, B] = {
    if (n <= 0) return null
    if (n >= this.count(tree)) return tree
    val count = this.count(tree.left)
    if (n <= count) return doTake(tree.left, n)
    val newRight = doTake(tree.right, n - count - 1)
    if (newRight eq tree.right) tree
    else if (newRight eq null) updNth(tree.left, n, tree.key, tree.value, overwrite = false)
    else rebalance(tree, tree.left, newRight)
  }
  private[this] def doSlice[A, B](tree: Tree[A, B], from: Int, until: Int): Tree[A, B] = {
    if (tree eq null) return null
    val count = this.count(tree.left)
    if (from > count) return doSlice(tree.right, from - count - 1, until - count - 1)
    if (until <= count) return doSlice(tree.left, from, until)
    val newLeft = doDrop(tree.left, from)
    val newRight = doTake(tree.right, until - count - 1)
    if ((newLeft eq tree.left) && (newRight eq tree.right)) tree
    else if (newLeft eq null) updNth(newRight, from - count - 1, tree.key, tree.value, overwrite = false)
    else if (newRight eq null) updNth(newLeft, until, tree.key, tree.value, overwrite = false)
    else rebalance(tree, newLeft, newRight)
  }

  // The zipper returned might have been traversed left-most (always the left child)
  // or right-most (always the right child). Left trees are traversed right-most,
  // and right trees are traversed leftmost.

  // Returns the zipper for the side with deepest black nodes depth, a flag
  // indicating whether the trees were unbalanced at all, and a flag indicating
  // whether the zipper was traversed left-most or right-most.

  // If the trees were balanced, returns an empty zipper
  private[this] def compareDepth[A, B](left: Tree[A, B], right: Tree[A, B]): (NList[Tree[A, B]], Boolean, Boolean, Int) = {
    import NList.cons
    // Once a side is found to be deeper, unzip it to the bottom
    def unzip(zipper: NList[Tree[A, B]], leftMost: Boolean): NList[Tree[A, B]] = {
      val next = if (leftMost) zipper.head.left else zipper.head.right
      if (next eq null) zipper
      else unzip(cons(next, zipper), leftMost)
    }

    // Unzip left tree on the rightmost side and right tree on the leftmost side until one is
    // found to be deeper, or the bottom is reached
    def unzipBoth(left: Tree[A, B],
                  right: Tree[A, B],
                  leftZipper: NList[Tree[A, B]],
                  rightZipper: NList[Tree[A, B]],
                  smallerDepth: Int): (NList[Tree[A, B]], Boolean, Boolean, Int) = {
      if (isBlackTree(left) && isBlackTree(right)) {
        unzipBoth(left.right, right.left, cons(left, leftZipper), cons(right, rightZipper), smallerDepth + 1)
      } else if (isRedTree(left) && isRedTree(right)) {
        unzipBoth(left.right, right.left, cons(left, leftZipper), cons(right, rightZipper), smallerDepth)
      } else if (isRedTree(right)) {
        unzipBoth(left, right.left, leftZipper, cons(right, rightZipper), smallerDepth)
      } else if (isRedTree(left)) {
        unzipBoth(left.right, right, cons(left, leftZipper), rightZipper, smallerDepth)
      } else if ((left eq null) && (right eq null)) {
        (null, true, false, smallerDepth)
      } else if ((left eq null) && isBlackTree(right)) {
        val leftMost = true
        (unzip(cons(right, rightZipper), leftMost), false, leftMost, smallerDepth)
      } else if (isBlackTree(left) && (right eq null)) {
        val leftMost = false
        (unzip(cons(left, leftZipper), leftMost), false, leftMost, smallerDepth)
      } else {
        sys.error("unmatched trees in unzip: " + left + ", " + right)
      }
    }
    unzipBoth(left, right, null, null, 0)
  }

  private[this] def rebalance[A, B](tree: Tree[A, B], newLeft: Tree[A, B], newRight: Tree[A, B]) = {
    // This is like drop(n-1), but only counting black nodes
    @tailrec
    def  findDepth(zipper: NList[Tree[A, B]], depth: Int): NList[Tree[A, B]] =
      if (zipper eq null) {
        sys.error("Defect: unexpected empty zipper while computing range")
      } else if (isBlackTree(zipper.head)) {
        if (depth == 1) zipper else findDepth(zipper.tail, depth - 1)
      } else {
        findDepth(zipper.tail, depth)
      }

    // Blackening the smaller tree avoids balancing problems on union;
    // this can't be done later, though, or it would change the result of compareDepth
    val blkNewLeft = blacken(newLeft)
    val blkNewRight = blacken(newRight)
    val (zipper, levelled, leftMost, smallerDepth) = compareDepth(blkNewLeft, blkNewRight)

    if (levelled) {
      BlackTree(tree.key, tree.value, blkNewLeft, blkNewRight)
    } else {
      val zipFrom = findDepth(zipper, smallerDepth)
      val union = if (leftMost) {
        RedTree(tree.key, tree.value, blkNewLeft, zipFrom.head)
      } else {
        RedTree(tree.key, tree.value, zipFrom.head, blkNewRight)
      }
      val zippedTree = NList.foldLeft(zipFrom.tail, union: Tree[A, B]) { (tree, node) =>
        if (leftMost)
          balanceLeft(isBlackTree(node), node.key, node.value, tree, node.right)
        else
          balanceRight(isBlackTree(node), node.key, node.value, node.left, tree)
      }
      zippedTree
    }
  }

  // Null optimized list implementation for tree rebalancing. null presents Nil.
  private[this] final class NList[A](val head: A, val tail: NList[A])

  private[this] final object NList {

    def cons[B](x: B, xs: NList[B]): NList[B] = new NList(x, xs)

    def foldLeft[A, B](xs: NList[A], z: B)(f: (B, A) => B): B = {
      var acc = z
      var these = xs
      while (these ne null) {
        acc = f(acc, these.head)
        these = these.tail
      }
      acc
    }

  }

  /*
   * Forcing direct fields access using the @inline annotation helps speed up
   * various operations (especially smallest/greatest and update/delete).
   *
   * Unfortunately the direct field access is not guaranteed to work (but
   * works on the current implementation of the Scala compiler).
   *
   * An alternative is to implement the these classes using plain old Java code...
   */
  sealed abstract class Tree[A, +B](
    @(`inline` @getter) final val key: A,
    @(`inline` @getter) final val value: B,
    @(`inline` @getter) final val left: Tree[A, B],
    @(`inline` @getter) final val right: Tree[A, B])
  extends Serializable {
    @(`inline` @getter) final val count: Int = 1 + RedBlackTree.count(left) + RedBlackTree.count(right)
    def black: Tree[A, B]
    def red: Tree[A, B]
  }
  final class RedTree[A, +B](key: A,
                             value: B,
                             left: Tree[A, B],
                             right: Tree[A, B]) extends Tree[A, B](key, value, left, right) {
    override def black: Tree[A, B] = BlackTree(key, value, left, right)
    override def red: Tree[A, B] = this
    override def toString: String = "RedTree(" + key + ", " + value + ", " + left + ", " + right + ")"
  }
  final class BlackTree[A, +B](key: A,
                               value: B,
                               left: Tree[A, B],
                               right: Tree[A, B]) extends Tree[A, B](key, value, left, right) {
    override def black: Tree[A, B] = this
    override def red: Tree[A, B] = RedTree(key, value, left, right)
    override def toString: String = "BlackTree(" + key + ", " + value + ", " + left + ", " + right + ")"
  }

  object RedTree {
    inline def apply[A, B](key: A, value: B, left: Tree[A, B], right: Tree[A, B]) = new RedTree(key, value, left, right)
    def unapply[A, B](t: RedTree[A, B]) = Some((t.key, t.value, t.left, t.right))
  }
  object BlackTree {
    inline def apply[A, B](key: A, value: B, left: Tree[A, B], right: Tree[A, B]) = new BlackTree(key, value, left, right)
    def unapply[A, B](t: BlackTree[A, B]) = Some((t.key, t.value, t.left, t.right))
  }

  private[this] abstract class TreeIterator[A, B, R](root: Tree[A, B], start: Option[A])(implicit ordering: Ordering[A]) extends Iterator[R] {
    protected[this] def nextResult(tree: Tree[A, B]): R

    override def hasNext: Boolean = lookahead ne null

    override def next(): R = lookahead match {
      case null =>
        throw new NoSuchElementException("next on empty iterator")
      case tree =>
        lookahead = findLeftMostOrPopOnEmpty(goRight(tree))
        nextResult(tree)
    }

//    @tailrec
    private[this] def findLeftMostOrPopOnEmpty(tree: Tree[A, B]): Tree[A, B] =
      if (tree eq null) popNext()
      else if (tree.left eq null) tree
      else findLeftMostOrPopOnEmpty(goLeft(tree))

    private[this] def pushNext(tree: Tree[A, B]): Unit = {
      try {
        stackOfNexts(index) = tree
        index += 1
      } catch {
        case _: ArrayIndexOutOfBoundsException =>
          /*
           * Either the tree became unbalanced or we calculated the maximum height incorrectly.
           * To avoid crashing the iterator we expand the path array. Obviously this should never
           * happen...
           *
           * An exception handler is used instead of an if-condition to optimize the normal path.
           * This makes a large difference in iteration speed!
           */
          assert(index >= stackOfNexts.length)
          stackOfNexts :+= null
          pushNext(tree)
      }
    }
    private[this] def popNext(): Tree[A, B] = if (index == 0) null else {
      index -= 1
      stackOfNexts(index)
    }

    private[this] var stackOfNexts = if (root eq null) null else {
      /*
       * According to "Ralf Hinze. Constructing red-black trees" [http://www.cs.ox.ac.uk/ralf.hinze/publications/#P5]
       * the maximum height of a red-black tree is 2*log_2(n + 2) - 2.
       *
       * According to {@see Integer#numberOfLeadingZeros} ceil(log_2(n)) = (32 - Integer.numberOfLeadingZeros(n - 1))
       *
       * We also don't store the deepest nodes in the path so the maximum path length is further reduced by one.
       */
      val maximumHeight = 2 * (32 - Integer.numberOfLeadingZeros(root.count + 2 - 1)) - 2 - 1
      new Array[Tree[A, B]](maximumHeight)
    }
    private[this] var index = 0
    private[this] var lookahead: Tree[A, B] = start map startFrom getOrElse findLeftMostOrPopOnEmpty(root)

    /**
     * Find the leftmost subtree whose key is equal to the given key, or if no such thing,
     * the leftmost subtree with the key that would be "next" after it according
     * to the ordering. Along the way build up the iterator's path stack so that "next"
     * functionality works.
     */
    private[this] def startFrom(key: A) : Tree[A,B] = if (root eq null) null else {
      @tailrec def find(tree: Tree[A, B]): Tree[A, B] =
        if (tree eq null) popNext()
        else find(
          if (ordering.lteq(key, tree.key)) goLeft(tree)
          else goRight(tree)
        )
      find(root)
    }

    private[this] def goLeft(tree: Tree[A, B]) = {
      pushNext(tree)
      tree.left
    }

    private[this] def goRight(tree: Tree[A, B]) = tree.right
  }

  private[this] class EntriesIterator[A: Ordering, B](tree: Tree[A, B], focus: Option[A]) extends TreeIterator[A, B, (A, B)](tree, focus) {
    override def nextResult(tree: Tree[A, B]) = (tree.key, tree.value)
  }

  private[this] class KeysIterator[A: Ordering, B](tree: Tree[A, B], focus: Option[A]) extends TreeIterator[A, B, A](tree, focus) {
    override def nextResult(tree: Tree[A, B]) = tree.key
  }

  private[this] class ValuesIterator[A: Ordering, B](tree: Tree[A, B], focus: Option[A]) extends TreeIterator[A, B, B](tree, focus) {
    override def nextResult(tree: Tree[A, B]) = tree.value
  }
}

object Test {
  def main(args: Array[String]) = {}
}
-----
ScalaFile
  PsiComment(BlockComment)('/*                     __                                               *\\n**     ________ ___   / /  ___     Scala API                            **\n**    / __/ __// _ | / /  / _ |    (c) 2005-2013, LAMP/EPFL             **\n**  __\ \/ /__/ __ |/ /__/ __ |    http://scala-lang.org/               **\n** /____/\___/_/ |_/____/_/ | |                                         **\n**                          |/                                          **\n\*                                                                      */')
  PsiWhiteSpace('\n\n\n\n')
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: scala
      PsiElement(identifier)('scala')
    PsiWhiteSpace('\n')
    ScPackaging
      PsiElement(package)('package')
      PsiWhiteSpace(' ')
      CodeReferenceElement: collection
        PsiElement(identifier)('collection')
      PsiWhiteSpace('\n')
      ScPackaging
        PsiElement(package)('package')
        PsiWhiteSpace(' ')
        CodeReferenceElement: immutable
          PsiElement(identifier)('immutable')
        PsiWhiteSpace('\n\n')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: scala.annotation.tailrec
              CodeReferenceElement: scala.annotation
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('annotation')
              PsiElement(.)('.')
              PsiElement(identifier)('tailrec')
        PsiWhiteSpace('\n')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: scala.annotation.meta.getter
              CodeReferenceElement: scala.annotation.meta
                CodeReferenceElement: scala.annotation
                  CodeReferenceElement: scala
                    PsiElement(identifier)('scala')
                  PsiElement(.)('.')
                  PsiElement(identifier)('annotation')
                PsiElement(.)('.')
                PsiElement(identifier)('meta')
              PsiElement(.)('.')
              PsiElement(identifier)('getter')
        PsiWhiteSpace('\n\n')
        ScObject: RedBlackTree
          DocComment
            ScPsiDocToken(DOC_COMMENT_START)('/**')
            ScDocParagraph
              ScPsiDocToken(DOC_WHITESPACE)(' ')
              ScPsiDocToken(DOC_COMMENT_DATA)('An object containing the RedBlack tree implementation used by for ')
              DocSyntaxElement 8
                ScPsiDocToken(DOC_MONOSPACE_TAG 8)('`')
                ScPsiDocToken(DOC_COMMENT_DATA)('TreeMaps')
                ScPsiDocToken(DOC_MONOSPACE_TAG 8)('`')
              ScPsiDocToken(DOC_COMMENT_DATA)(' and ')
              DocSyntaxElement 8
                ScPsiDocToken(DOC_MONOSPACE_TAG 8)('`')
                ScPsiDocToken(DOC_COMMENT_DATA)('TreeSets')
                ScPsiDocToken(DOC_MONOSPACE_TAG 8)('`')
              ScPsiDocToken(DOC_COMMENT_DATA)('.')
              ScPsiDocToken(DOC_WHITESPACE)('\n ')
              ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
              ScPsiDocToken(DOC_WHITESPACE)('\n ')
              ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
            ScDocParagraph
              ScPsiDocToken(DOC_WHITESPACE)('  ')
              ScPsiDocToken(DOC_COMMENT_DATA)('Implementation note: since efficiency is important for data structures this implementation')
              ScPsiDocToken(DOC_WHITESPACE)('\n ')
              ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
              ScPsiDocToken(DOC_WHITESPACE)('  ')
              ScPsiDocToken(DOC_COMMENT_DATA)('uses ')
              DocSyntaxElement 8
                ScPsiDocToken(DOC_MONOSPACE_TAG 8)('`')
                ScPsiDocToken(DOC_COMMENT_DATA)('null')
                ScPsiDocToken(DOC_MONOSPACE_TAG 8)('`')
              ScPsiDocToken(DOC_COMMENT_DATA)(' to represent empty trees. This also means pattern matching cannot')
              ScPsiDocToken(DOC_WHITESPACE)('\n ')
              ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
              ScPsiDocToken(DOC_WHITESPACE)('  ')
              ScPsiDocToken(DOC_COMMENT_DATA)('easily be used. The API represented by the RedBlackTree object tries to hide these')
              ScPsiDocToken(DOC_WHITESPACE)('\n ')
              ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
              ScPsiDocToken(DOC_WHITESPACE)('  ')
              ScPsiDocToken(DOC_COMMENT_DATA)('optimizations behind a reasonably clean API.')
              ScPsiDocToken(DOC_WHITESPACE)('\n ')
              ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
              ScPsiDocToken(DOC_WHITESPACE)('\n ')
              ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
            DocTag
              ScPsiDocToken(DOC_WHITESPACE)('  ')
              ScPsiDocToken(DOC_TAG_NAME)('@since')
              ScDocParagraph
                ScPsiDocToken(DOC_WHITESPACE)(' ')
                ScPsiDocToken(DOC_COMMENT_DATA)('2.10')
                ScPsiDocToken(DOC_WHITESPACE)('\n ')
            ScPsiDocToken(DOC_COMMENT_END)('*/')
          PsiWhiteSpace('\n')
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
              PsiElement([)('[')
              PsiElement(identifier)('collection')
              PsiElement(])(']')
          PsiWhiteSpace('\n')
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('RedBlackTree')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: isEmpty
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('isEmpty')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[_, _]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Boolean
                  CodeReferenceElement: Boolean
                    PsiElement(identifier)('Boolean')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                InfixExpression
                  ReferenceExpression: tree
                    PsiElement(identifier)('tree')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: eq
                    PsiElement(identifier)('eq')
                  PsiWhiteSpace(' ')
                  NullLiteral
                    PsiElement(null)('null')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: contains
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('contains')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, _]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Boolean
                  CodeReferenceElement: Boolean
                    PsiElement(identifier)('Boolean')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                InfixExpression
                  MethodCall
                    ReferenceExpression: lookup
                      PsiElement(identifier)('lookup')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: ne
                    PsiElement(identifier)('ne')
                  PsiWhiteSpace(' ')
                  NullLiteral
                    PsiElement(null)('null')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: get
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('get')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Option[B]
                  SimpleType: Option
                    CodeReferenceElement: Option
                      PsiElement(identifier)('Option')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MatchStatement
                  MethodCall
                    ReferenceExpression: lookup
                      PsiElement(identifier)('lookup')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      LiteralPattern
                        NullLiteral
                          PsiElement(null)('null')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ReferenceExpression: None
                          PsiElement(identifier)('None')
                    PsiWhiteSpace('\n    ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ReferencePattern: tree
                        PsiElement(identifier)('tree')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: Some
                            PsiElement(identifier)('Some')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree.value
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: lookup
                AnnotationsList
                  Annotation
                    PsiElement(@)('@')
                    AnnotationExpression
                      ConstructorInvocation
                        SimpleType: tailrec
                          CodeReferenceElement: tailrec
                            PsiElement(identifier)('tailrec')
                Modifiers
                  <empty list>
                PsiWhiteSpace('\n  ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('lookup')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: ordering
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ordering')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Ordering[A]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: eq
                      PsiElement(identifier)('eq')
                    PsiWhiteSpace(' ')
                    NullLiteral
                      PsiElement(null)('null')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  NullLiteral
                    PsiElement(null)('null')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScPatternDefinition: cmp
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: cmp
                          PsiElement(identifier)('cmp')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: ordering.compare
                          ReferenceExpression: ordering
                            PsiElement(identifier)('ordering')
                          PsiElement(.)('.')
                          PsiElement(identifier)('compare')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: cmp
                          PsiElement(identifier)('cmp')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: <
                          PsiElement(identifier)('<')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: lookup
                          PsiElement(identifier)('lookup')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: cmp
                            PsiElement(identifier)('cmp')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: >
                            PsiElement(identifier)('>')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('0')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: lookup
                            PsiElement(identifier)('lookup')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree.right
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: x
                              PsiElement(identifier)('x')
                            PsiElement())(')')
                        PsiWhiteSpace('\n    ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: count
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('count')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[_, _]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: eq
                      PsiElement(identifier)('eq')
                    PsiWhiteSpace(' ')
                    NullLiteral
                      PsiElement(null)('null')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('0')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: tree.count
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiElement(.)('.')
                    PsiElement(identifier)('count')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: countInRange
                DocComment
                  ScPsiDocToken(DOC_COMMENT_START)('/**')
                  ScPsiDocToken(DOC_WHITESPACE)('\n   ')
                  ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
                  ScDocParagraph
                    ScPsiDocToken(DOC_WHITESPACE)(' ')
                    ScPsiDocToken(DOC_COMMENT_DATA)('Count all the nodes with keys greater than or equal to the lower bound and less than the upper bound.')
                    ScPsiDocToken(DOC_WHITESPACE)('\n   ')
                    ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
                    ScPsiDocToken(DOC_WHITESPACE)(' ')
                    ScPsiDocToken(DOC_COMMENT_DATA)('The two bounds are optional.')
                    ScPsiDocToken(DOC_WHITESPACE)('\n   ')
                  ScPsiDocToken(DOC_COMMENT_END)('*/')
                PsiWhiteSpace('\n  ')
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('countInRange')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, _]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: from
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('from')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Option[A]
                          SimpleType: Option
                            CodeReferenceElement: Option
                              PsiElement(identifier)('Option')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: to
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('to')
                      PsiElement(:)(':')
                      ParameterType
                        ParametrizedType: Option[A]
                          SimpleType: Option
                            CodeReferenceElement: Option
                              PsiElement(identifier)('Option')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: ordering
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ordering')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Ordering[A]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n    ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: eq
                      PsiElement(identifier)('eq')
                    PsiWhiteSpace(' ')
                    NullLiteral
                      PsiElement(null)('null')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('0')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace('\n    ')
                  MatchStatement
                    Tuple
                      PsiElement(()('(')
                      ReferenceExpression: from
                        PsiElement(identifier)('from')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: to
                        PsiElement(identifier)('to')
                      PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(match)('match')
                    PsiWhiteSpace(' ')
                    PsiElement({)('{')
                    PsiWhiteSpace('\n      ')
                    PsiComment(comment)('// with no bounds use this node's count')
                    PsiWhiteSpace('\n      ')
                    CaseClauses
                      CaseClause
                        PsiElement(case)('case')
                        PsiWhiteSpace(' ')
                        TuplePattern
                          PsiElement(()('(')
                          ArgumentPatterns
                            StableElementPattern
                              ReferenceExpression: None
                                PsiElement(identifier)('None')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            StableElementPattern
                              ReferenceExpression: None
                                PsiElement(identifier)('None')
                          PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        BlockOfExpressions
                          ReferenceExpression: tree.count
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('count')
                      PsiWhiteSpace('\n      ')
                      PsiComment(comment)('// if node is less than the lower bound, try the tree on the right, it might be in range')
                      PsiWhiteSpace('\n      ')
                      CaseClause
                        PsiElement(case)('case')
                        PsiWhiteSpace(' ')
                        TuplePattern
                          PsiElement(()('(')
                          ArgumentPatterns
                            ConstructorPattern
                              CodeReferenceElement: Some
                                PsiElement(identifier)('Some')
                              Pattern Argument List
                                PsiElement(()('(')
                                ReferencePattern: lb
                                  PsiElement(identifier)('lb')
                                PsiElement())(')')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardPattern
                              PsiElement(_)('_')
                          PsiElement())(')')
                        PsiWhiteSpace(' ')
                        Guard
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: ordering.lt
                              ReferenceExpression: ordering
                                PsiElement(identifier)('ordering')
                              PsiElement(.)('.')
                              PsiElement(identifier)('lt')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tree.key
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('key')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: lb
                                PsiElement(identifier)('lb')
                              PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        BlockOfExpressions
                          MethodCall
                            ReferenceExpression: countInRange
                              PsiElement(identifier)('countInRange')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tree.right
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('right')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: from
                                PsiElement(identifier)('from')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: to
                                PsiElement(identifier)('to')
                              PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      PsiComment(comment)('// if node is greater than or equal to the upper bound, try the tree on the left, it might be in range')
                      PsiWhiteSpace('\n      ')
                      CaseClause
                        PsiElement(case)('case')
                        PsiWhiteSpace(' ')
                        TuplePattern
                          PsiElement(()('(')
                          ArgumentPatterns
                            WildcardPattern
                              PsiElement(_)('_')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ConstructorPattern
                              CodeReferenceElement: Some
                                PsiElement(identifier)('Some')
                              Pattern Argument List
                                PsiElement(()('(')
                                ReferencePattern: ub
                                  PsiElement(identifier)('ub')
                                PsiElement())(')')
                          PsiElement())(')')
                        PsiWhiteSpace(' ')
                        Guard
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: ordering.gteq
                              ReferenceExpression: ordering
                                PsiElement(identifier)('ordering')
                              PsiElement(.)('.')
                              PsiElement(identifier)('gteq')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tree.key
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('key')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: ub
                                PsiElement(identifier)('ub')
                              PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        BlockOfExpressions
                          MethodCall
                            ReferenceExpression: countInRange
                              PsiElement(identifier)('countInRange')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tree.left
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: from
                                PsiElement(identifier)('from')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: to
                                PsiElement(identifier)('to')
                              PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      PsiComment(comment)('// node is in range so the tree on the left will all be less than the upper bound and the tree on the')
                      PsiWhiteSpace('\n      ')
                      PsiComment(comment)('// right will all be greater than or equal to the lower bound. So 1 for this node plus')
                      PsiWhiteSpace('\n      ')
                      PsiComment(comment)('// count the subtrees by stripping off the bounds that we don't need any more')
                      PsiWhiteSpace('\n      ')
                      CaseClause
                        PsiElement(case)('case')
                        PsiWhiteSpace(' ')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        BlockOfExpressions
                          InfixExpression
                            InfixExpression
                              IntegerLiteral
                                PsiElement(integer)('1')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: +
                                PsiElement(identifier)('+')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: countInRange
                                  PsiElement(identifier)('countInRange')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tree.left
                                    ReferenceExpression: tree
                                      PsiElement(identifier)('tree')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('left')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: from
                                    PsiElement(identifier)('from')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: None
                                    PsiElement(identifier)('None')
                                  PsiElement())(')')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: +
                              PsiElement(identifier)('+')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: countInRange
                                PsiElement(identifier)('countInRange')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree.right
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: None
                                  PsiElement(identifier)('None')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: to
                                  PsiElement(identifier)('to')
                                PsiElement())(')')
                    PsiWhiteSpace('\n\n    ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: update
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('update')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B1
                    PsiElement(identifier)('B1')
                    PsiWhiteSpace(' ')
                    PsiElement(>:)('>:')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: k
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('k')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: v
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('v')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: B1
                          CodeReferenceElement: B1
                            PsiElement(identifier)('B1')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: overwrite
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('overwrite')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B1]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B1
                      CodeReferenceElement: B1
                        PsiElement(identifier)('B1')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: blacken
                    PsiElement(identifier)('blacken')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: upd
                        PsiElement(identifier)('upd')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: k
                          PsiElement(identifier)('k')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: v
                          PsiElement(identifier)('v')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: overwrite
                          PsiElement(identifier)('overwrite')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: delete
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('delete')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: k
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('k')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: blacken
                    PsiElement(identifier)('blacken')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: del
                        PsiElement(identifier)('del')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: k
                          PsiElement(identifier)('k')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: rangeImpl
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('rangeImpl')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: from
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('from')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Option[A]
                          SimpleType: Option
                            CodeReferenceElement: Option
                              PsiElement(identifier)('Option')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: until
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('until')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Option[A]
                          SimpleType: Option
                            CodeReferenceElement: Option
                              PsiElement(identifier)('Option')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MatchStatement
                  Tuple
                    PsiElement(()('(')
                    ReferenceExpression: from
                      PsiElement(identifier)('from')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: until
                      PsiElement(identifier)('until')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      TuplePattern
                        PsiElement(()('(')
                        ArgumentPatterns
                          ConstructorPattern
                            CodeReferenceElement: Some
                              PsiElement(identifier)('Some')
                            Pattern Argument List
                              PsiElement(()('(')
                              ReferencePattern: from
                                PsiElement(identifier)('from')
                              PsiElement())(')')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ConstructorPattern
                            CodeReferenceElement: Some
                              PsiElement(identifier)('Some')
                            Pattern Argument List
                              PsiElement(()('(')
                              ReferencePattern: until
                                PsiElement(identifier)('until')
                              PsiElement())(')')
                        PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: this.range
                            ThisReference
                              PsiElement(this)('this')
                            PsiElement(.)('.')
                            PsiElement(identifier)('range')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: from
                              PsiElement(identifier)('from')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: until
                              PsiElement(identifier)('until')
                            PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      TuplePattern
                        PsiElement(()('(')
                        ArgumentPatterns
                          ConstructorPattern
                            CodeReferenceElement: Some
                              PsiElement(identifier)('Some')
                            Pattern Argument List
                              PsiElement(()('(')
                              ReferencePattern: from
                                PsiElement(identifier)('from')
                              PsiElement())(')')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          StableElementPattern
                            ReferenceExpression: None
                              PsiElement(identifier)('None')
                        PsiElement())(')')
                      PsiWhiteSpace('        ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: this.from
                            ThisReference
                              PsiElement(this)('this')
                            PsiElement(.)('.')
                            PsiElement(identifier)('from')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: from
                              PsiElement(identifier)('from')
                            PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      TuplePattern
                        PsiElement(()('(')
                        ArgumentPatterns
                          StableElementPattern
                            ReferenceExpression: None
                              PsiElement(identifier)('None')
                          PsiElement(,)(',')
                          PsiWhiteSpace('       ')
                          ConstructorPattern
                            CodeReferenceElement: Some
                              PsiElement(identifier)('Some')
                            Pattern Argument List
                              PsiElement(()('(')
                              ReferencePattern: until
                                PsiElement(identifier)('until')
                              PsiElement())(')')
                        PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: this.until
                            ThisReference
                              PsiElement(this)('this')
                            PsiElement(.)('.')
                            PsiElement(identifier)('until')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: until
                              PsiElement(identifier)('until')
                            PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      TuplePattern
                        PsiElement(()('(')
                        ArgumentPatterns
                          StableElementPattern
                            ReferenceExpression: None
                              PsiElement(identifier)('None')
                          PsiElement(,)(',')
                          PsiWhiteSpace('       ')
                          StableElementPattern
                            ReferenceExpression: None
                              PsiElement(identifier)('None')
                        PsiElement())(')')
                      PsiWhiteSpace('        ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: range
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('range')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: from
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('from')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: until
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('until')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: blacken
                    PsiElement(identifier)('blacken')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: doRange
                        PsiElement(identifier)('doRange')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: from
                          PsiElement(identifier)('from')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: until
                          PsiElement(identifier)('until')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: from
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('from')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: from
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('from')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: blacken
                    PsiElement(identifier)('blacken')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: doFrom
                        PsiElement(identifier)('doFrom')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: from
                          PsiElement(identifier)('from')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: to
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('to')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: to
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('to')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: blacken
                    PsiElement(identifier)('blacken')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: doTo
                        PsiElement(identifier)('doTo')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: to
                          PsiElement(identifier)('to')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: until
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('until')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: key
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('key')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: blacken
                    PsiElement(identifier)('blacken')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: doUntil
                        PsiElement(identifier)('doUntil')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: key
                          PsiElement(identifier)('key')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: drop
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('drop')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: n
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('n')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: blacken
                    PsiElement(identifier)('blacken')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: doDrop
                        PsiElement(identifier)('doDrop')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: n
                          PsiElement(identifier)('n')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: take
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('take')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: n
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('n')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: blacken
                    PsiElement(identifier)('blacken')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: doTake
                        PsiElement(identifier)('doTake')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: n
                          PsiElement(identifier)('n')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: slice
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('slice')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: from
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('from')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: until
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('until')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: blacken
                    PsiElement(identifier)('blacken')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: doSlice
                        PsiElement(identifier)('doSlice')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: from
                          PsiElement(identifier)('from')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: until
                          PsiElement(identifier)('until')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: smallest
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('smallest')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ThrowStatement
                      PsiElement(throw)('throw')
                      PsiWhiteSpace(' ')
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              SimpleType: NoSuchElementException
                                CodeReferenceElement: NoSuchElementException
                                  PsiElement(identifier)('NoSuchElementException')
                              ArgumentList
                                PsiElement(()('(')
                                StringLiteral
                                  PsiElement(string content)('"empty map"')
                                PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScVariableDefinition: result
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(var)('var')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: result
                        PsiElement(identifier)('result')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                  PsiWhiteSpace('\n    ')
                  WhileStatement
                    PsiElement(while)('while')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: result.left
                        ReferenceExpression: result
                          PsiElement(identifier)('result')
                        PsiElement(.)('.')
                        PsiElement(identifier)('left')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: ne
                        PsiElement(identifier)('ne')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    AssignStatement
                      ReferenceExpression: result
                        PsiElement(identifier)('result')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: result.left
                        ReferenceExpression: result
                          PsiElement(identifier)('result')
                        PsiElement(.)('.')
                        PsiElement(identifier)('left')
                  PsiWhiteSpace('\n    ')
                  ReferenceExpression: result
                    PsiElement(identifier)('result')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: greatest
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('greatest')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ThrowStatement
                      PsiElement(throw)('throw')
                      PsiWhiteSpace(' ')
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              SimpleType: NoSuchElementException
                                CodeReferenceElement: NoSuchElementException
                                  PsiElement(identifier)('NoSuchElementException')
                              ArgumentList
                                PsiElement(()('(')
                                StringLiteral
                                  PsiElement(string content)('"empty map"')
                                PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScVariableDefinition: result
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(var)('var')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: result
                        PsiElement(identifier)('result')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                  PsiWhiteSpace('\n    ')
                  WhileStatement
                    PsiElement(while)('while')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: result.right
                        ReferenceExpression: result
                          PsiElement(identifier)('result')
                        PsiElement(.)('.')
                        PsiElement(identifier)('right')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: ne
                        PsiElement(identifier)('ne')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    AssignStatement
                      ReferenceExpression: result
                        PsiElement(identifier)('result')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: result.right
                        ReferenceExpression: result
                          PsiElement(identifier)('result')
                        PsiElement(.)('.')
                        PsiElement(identifier)('right')
                  PsiWhiteSpace('\n    ')
                  ReferenceExpression: result
                    PsiElement(identifier)('result')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n\n  ')
              ScFunctionDefinition: foreach
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foreach')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  TypeParameter: U
                    PsiElement(identifier)('U')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      ParameterType
                        ParametrizedType: Tree[A,B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      ParameterType
                        FunctionalType: ((A,B)) => U
                          TypeInParenthesis: ((A,B))
                            PsiElement(()('(')
                            TupleType: (A,B)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                              PsiElement())(')')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          SimpleType: U
                            CodeReferenceElement: U
                              PsiElement(identifier)('U')
                    PsiElement())(')')
                PsiElement(:)(':')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ne
                      PsiElement(identifier)('ne')
                    PsiWhiteSpace(' ')
                    NullLiteral
                      PsiElement(null)('null')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: _foreach
                      PsiElement(identifier)('_foreach')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiElement(,)(',')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: _foreach
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('_foreach')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: U
                    PsiElement(identifier)('U')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: ((A, B)) => U
                          TypeInParenthesis: ((A, B))
                            PsiElement(()('(')
                            TupleType: (A, B)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                              PsiElement())(')')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          SimpleType: U
                            CodeReferenceElement: U
                              PsiElement(identifier)('U')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree.left
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('left')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: ne
                        PsiElement(identifier)('ne')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: _foreach
                        PsiElement(identifier)('_foreach')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: f
                          PsiElement(identifier)('f')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  MethodCall
                    ReferenceExpression: f
                      PsiElement(identifier)('f')
                    ArgumentList
                      PsiElement(()('(')
                      Tuple
                        PsiElement(()('(')
                        ReferenceExpression: tree.key
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('key')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: tree.value
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('value')
                        PsiElement())(')')
                      PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree.right
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('right')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: ne
                        PsiElement(identifier)('ne')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: _foreach
                        PsiElement(identifier)('_foreach')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.right
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('right')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: f
                          PsiElement(identifier)('f')
                        PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: foreachKey
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foreachKey')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: U
                    PsiElement(identifier)('U')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      ParameterType
                        ParametrizedType: Tree[A,_]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: A => U
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          SimpleType: U
                            CodeReferenceElement: U
                              PsiElement(identifier)('U')
                    PsiElement())(')')
                PsiElement(:)(':')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ne
                      PsiElement(identifier)('ne')
                    PsiWhiteSpace(' ')
                    NullLiteral
                      PsiElement(null)('null')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: _foreachKey
                      PsiElement(identifier)('_foreachKey')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiElement(,)(',')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: _foreachKey
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('_foreachKey')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: U
                    PsiElement(identifier)('U')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, _]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: A => U
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          SimpleType: U
                            CodeReferenceElement: U
                              PsiElement(identifier)('U')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree.left
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('left')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: ne
                        PsiElement(identifier)('ne')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: _foreachKey
                        PsiElement(identifier)('_foreachKey')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: f
                          PsiElement(identifier)('f')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  MethodCall
                    ReferenceExpression: f
                      PsiElement(identifier)('f')
                    ArgumentList
                      PsiElement(()('(')
                      ExpressionInParenthesis
                        PsiElement(()('(')
                        ReferenceExpression: tree.key
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('key')
                        PsiElement())(')')
                      PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree.right
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('right')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: ne
                        PsiElement(identifier)('ne')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: _foreachKey
                        PsiElement(identifier)('_foreachKey')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.right
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('right')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: f
                          PsiElement(identifier)('f')
                        PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: iterator
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('iterator')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: start
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('start')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Option[A]
                          SimpleType: Option
                            CodeReferenceElement: Option
                              PsiElement(identifier)('Option')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: None
                        PsiElement(identifier)('None')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Iterator[(A, B)]
                  SimpleType: Iterator
                    CodeReferenceElement: Iterator
                      PsiElement(identifier)('Iterator')
                  TypeArgumentsList
                    PsiElement([)('[')
                    TupleType: (A, B)
                      PsiElement(()('(')
                      TypesList
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                      PsiElement())(')')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: EntriesIterator
                          CodeReferenceElement: EntriesIterator
                            PsiElement(identifier)('EntriesIterator')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: start
                            PsiElement(identifier)('start')
                          PsiElement())(')')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: keysIterator
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('keysIterator')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, _]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: start
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('start')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Option[A]
                          SimpleType: Option
                            CodeReferenceElement: Option
                              PsiElement(identifier)('Option')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: None
                        PsiElement(identifier)('None')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Iterator[A]
                  SimpleType: Iterator
                    CodeReferenceElement: Iterator
                      PsiElement(identifier)('Iterator')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: KeysIterator
                          CodeReferenceElement: KeysIterator
                            PsiElement(identifier)('KeysIterator')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: start
                            PsiElement(identifier)('start')
                          PsiElement())(')')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: valuesIterator
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('valuesIterator')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: start
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('start')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Option[A]
                          SimpleType: Option
                            CodeReferenceElement: Option
                              PsiElement(identifier)('Option')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: None
                        PsiElement(identifier)('None')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Iterator[B]
                  SimpleType: Iterator
                    CodeReferenceElement: Iterator
                      PsiElement(identifier)('Iterator')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: ValuesIterator
                          CodeReferenceElement: ValuesIterator
                            PsiElement(identifier)('ValuesIterator')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: start
                            PsiElement(identifier)('start')
                          PsiElement())(')')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: nth
                AnnotationsList
                  Annotation
                    PsiElement(@)('@')
                    AnnotationExpression
                      ConstructorInvocation
                        SimpleType: tailrec
                          CodeReferenceElement: tailrec
                            PsiElement(identifier)('tailrec')
                Modifiers
                  <empty list>
                PsiWhiteSpace('\n  ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('nth')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: n
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('n')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: count
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: count
                        PsiElement(identifier)('count')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: this.count
                        ThisReference
                          PsiElement(this)('this')
                        PsiElement(.)('.')
                        PsiElement(identifier)('count')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: <
                        PsiElement(identifier)('<')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: count
                        PsiElement(identifier)('count')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: nth
                        PsiElement(identifier)('nth')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: n
                          PsiElement(identifier)('n')
                        PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: n
                          PsiElement(identifier)('n')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: >
                          PsiElement(identifier)('>')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: count
                          PsiElement(identifier)('count')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: nth
                          PsiElement(identifier)('nth')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          InfixExpression
                            InfixExpression
                              ReferenceExpression: n
                                PsiElement(identifier)('n')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: count
                                PsiElement(identifier)('count')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -
                              PsiElement(identifier)('-')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('1')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: isBlack
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('isBlack')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[_, _]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                InfixExpression
                  ExpressionInParenthesis
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: ||
                    PsiElement(identifier)('||')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: isBlackTree
                      PsiElement(identifier)('isBlackTree')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiElement())(')')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: isRedTree
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('isRedTree')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[_, _]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                GenericCall
                  ReferenceExpression: tree.isInstanceOf
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiElement(.)('.')
                    PsiElement(identifier)('isInstanceOf')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: RedTree[_, _]
                      SimpleType: RedTree
                        CodeReferenceElement: RedTree
                          PsiElement(identifier)('RedTree')
                      TypeArgumentsList
                        PsiElement([)('[')
                        WildcardType: _
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        WildcardType: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(])(']')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: isBlackTree
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('isBlackTree')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[_, _]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                GenericCall
                  ReferenceExpression: tree.isInstanceOf
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiElement(.)('.')
                    PsiElement(identifier)('isInstanceOf')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: BlackTree[_, _]
                      SimpleType: BlackTree
                        CodeReferenceElement: BlackTree
                          PsiElement(identifier)('BlackTree')
                      TypeArgumentsList
                        PsiElement([)('[')
                        WildcardType: _
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        WildcardType: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(])(']')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: blacken
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('blacken')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: t
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('t')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: t
                      PsiElement(identifier)('t')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: eq
                      PsiElement(identifier)('eq')
                    PsiWhiteSpace(' ')
                    NullLiteral
                      PsiElement(null)('null')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  NullLiteral
                    PsiElement(null)('null')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: t.black
                    ReferenceExpression: t
                      PsiElement(identifier)('t')
                    PsiElement(.)('.')
                    PsiElement(identifier)('black')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: mkTree
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('mkTree')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: isBlack
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('isBlack')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: k
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('k')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: v
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('v')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: l
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('l')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: r
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('r')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n    ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  ReferenceExpression: isBlack
                    PsiElement(identifier)('isBlack')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: BlackTree
                      PsiElement(identifier)('BlackTree')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: k
                        PsiElement(identifier)('k')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: v
                        PsiElement(identifier)('v')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: l
                        PsiElement(identifier)('l')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: r
                        PsiElement(identifier)('r')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: RedTree
                      PsiElement(identifier)('RedTree')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: k
                        PsiElement(identifier)('k')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: v
                        PsiElement(identifier)('v')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: l
                        PsiElement(identifier)('l')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: r
                        PsiElement(identifier)('r')
                      PsiElement())(')')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: balanceLeft
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('balanceLeft')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B1
                    PsiElement(identifier)('B1')
                    PsiWhiteSpace(' ')
                    PsiElement(>:)('>:')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: isBlack
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('isBlack')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: z
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('z')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: zv
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('zv')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: l
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('l')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B1]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B1
                              CodeReferenceElement: B1
                                PsiElement(identifier)('B1')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: d
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('d')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B1]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B1
                              CodeReferenceElement: B1
                                PsiElement(identifier)('B1')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B1]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B1
                      CodeReferenceElement: B1
                        PsiElement(identifier)('B1')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      MethodCall
                        ReferenceExpression: isRedTree
                          PsiElement(identifier)('isRedTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: l
                            PsiElement(identifier)('l')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: &&
                        PsiElement(identifier)('&&')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: isRedTree
                          PsiElement(identifier)('isRedTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: l.left
                            ReferenceExpression: l
                              PsiElement(identifier)('l')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace('\n      ')
                    MethodCall
                      ReferenceExpression: RedTree
                        PsiElement(identifier)('RedTree')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: l.key
                          ReferenceExpression: l
                            PsiElement(identifier)('l')
                          PsiElement(.)('.')
                          PsiElement(identifier)('key')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: l.value
                          ReferenceExpression: l
                            PsiElement(identifier)('l')
                          PsiElement(.)('.')
                          PsiElement(identifier)('value')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: BlackTree
                            PsiElement(identifier)('BlackTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: l.left.key
                              ReferenceExpression: l.left
                                ReferenceExpression: l
                                  PsiElement(identifier)('l')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: l.left.value
                              ReferenceExpression: l.left
                                ReferenceExpression: l
                                  PsiElement(identifier)('l')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: l.left.left
                              ReferenceExpression: l.left
                                ReferenceExpression: l
                                  PsiElement(identifier)('l')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: l.left.right
                              ReferenceExpression: l.left
                                ReferenceExpression: l
                                  PsiElement(identifier)('l')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: BlackTree
                            PsiElement(identifier)('BlackTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: z
                              PsiElement(identifier)('z')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: zv
                              PsiElement(identifier)('zv')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: l.right
                              ReferenceExpression: l
                                PsiElement(identifier)('l')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: d
                              PsiElement(identifier)('d')
                            PsiElement())(')')
                        PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        MethodCall
                          ReferenceExpression: isRedTree
                            PsiElement(identifier)('isRedTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: l
                              PsiElement(identifier)('l')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: &&
                          PsiElement(identifier)('&&')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: isRedTree
                            PsiElement(identifier)('isRedTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: l.right
                              ReferenceExpression: l
                                PsiElement(identifier)('l')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                      PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      MethodCall
                        ReferenceExpression: RedTree
                          PsiElement(identifier)('RedTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: l.right.key
                            ReferenceExpression: l.right
                              ReferenceExpression: l
                                PsiElement(identifier)('l')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: l.right.value
                            ReferenceExpression: l.right
                              ReferenceExpression: l
                                PsiElement(identifier)('l')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: BlackTree
                              PsiElement(identifier)('BlackTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: l.key
                                ReferenceExpression: l
                                  PsiElement(identifier)('l')
                                PsiElement(.)('.')
                                PsiElement(identifier)('key')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: l.value
                                ReferenceExpression: l
                                  PsiElement(identifier)('l')
                                PsiElement(.)('.')
                                PsiElement(identifier)('value')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: l.left
                                ReferenceExpression: l
                                  PsiElement(identifier)('l')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: l.right.left
                                ReferenceExpression: l.right
                                  ReferenceExpression: l
                                    PsiElement(identifier)('l')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement())(')')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: BlackTree
                              PsiElement(identifier)('BlackTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: z
                                PsiElement(identifier)('z')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: zv
                                PsiElement(identifier)('zv')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: l.right.right
                                ReferenceExpression: l.right
                                  ReferenceExpression: l
                                    PsiElement(identifier)('l')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(.)('.')
                                PsiElement(identifier)('right')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: d
                                PsiElement(identifier)('d')
                              PsiElement())(')')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace('\n      ')
                      MethodCall
                        ReferenceExpression: mkTree
                          PsiElement(identifier)('mkTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: isBlack
                            PsiElement(identifier)('isBlack')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: z
                            PsiElement(identifier)('z')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: zv
                            PsiElement(identifier)('zv')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: l
                            PsiElement(identifier)('l')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: d
                            PsiElement(identifier)('d')
                          PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: balanceRight
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('balanceRight')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B1
                    PsiElement(identifier)('B1')
                    PsiWhiteSpace(' ')
                    PsiElement(>:)('>:')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: isBlack
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('isBlack')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: xv
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('xv')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: a
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('a')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B1]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B1
                              CodeReferenceElement: B1
                                PsiElement(identifier)('B1')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: r
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('r')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B1]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B1
                              CodeReferenceElement: B1
                                PsiElement(identifier)('B1')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B1]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B1
                      CodeReferenceElement: B1
                        PsiElement(identifier)('B1')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      MethodCall
                        ReferenceExpression: isRedTree
                          PsiElement(identifier)('isRedTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: r
                            PsiElement(identifier)('r')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: &&
                        PsiElement(identifier)('&&')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: isRedTree
                          PsiElement(identifier)('isRedTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: r.left
                            ReferenceExpression: r
                              PsiElement(identifier)('r')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace('\n      ')
                    MethodCall
                      ReferenceExpression: RedTree
                        PsiElement(identifier)('RedTree')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: r.left.key
                          ReferenceExpression: r.left
                            ReferenceExpression: r
                              PsiElement(identifier)('r')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(.)('.')
                          PsiElement(identifier)('key')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: r.left.value
                          ReferenceExpression: r.left
                            ReferenceExpression: r
                              PsiElement(identifier)('r')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(.)('.')
                          PsiElement(identifier)('value')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: BlackTree
                            PsiElement(identifier)('BlackTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: x
                              PsiElement(identifier)('x')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: xv
                              PsiElement(identifier)('xv')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: a
                              PsiElement(identifier)('a')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: r.left.left
                              ReferenceExpression: r.left
                                ReferenceExpression: r
                                  PsiElement(identifier)('r')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement())(')')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: BlackTree
                            PsiElement(identifier)('BlackTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: r.key
                              ReferenceExpression: r
                                PsiElement(identifier)('r')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: r.value
                              ReferenceExpression: r
                                PsiElement(identifier)('r')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: r.left.right
                              ReferenceExpression: r.left
                                ReferenceExpression: r
                                  PsiElement(identifier)('r')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: r.right
                              ReferenceExpression: r
                                PsiElement(identifier)('r')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                        PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        MethodCall
                          ReferenceExpression: isRedTree
                            PsiElement(identifier)('isRedTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: r
                              PsiElement(identifier)('r')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: &&
                          PsiElement(identifier)('&&')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: isRedTree
                            PsiElement(identifier)('isRedTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: r.right
                              ReferenceExpression: r
                                PsiElement(identifier)('r')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                      PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      MethodCall
                        ReferenceExpression: RedTree
                          PsiElement(identifier)('RedTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: r.key
                            ReferenceExpression: r
                              PsiElement(identifier)('r')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: r.value
                            ReferenceExpression: r
                              PsiElement(identifier)('r')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: BlackTree
                              PsiElement(identifier)('BlackTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: x
                                PsiElement(identifier)('x')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: xv
                                PsiElement(identifier)('xv')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: a
                                PsiElement(identifier)('a')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: r.left
                                ReferenceExpression: r
                                  PsiElement(identifier)('r')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement())(')')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: BlackTree
                              PsiElement(identifier)('BlackTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: r.right.key
                                ReferenceExpression: r.right
                                  ReferenceExpression: r
                                    PsiElement(identifier)('r')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(.)('.')
                                PsiElement(identifier)('key')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: r.right.value
                                ReferenceExpression: r.right
                                  ReferenceExpression: r
                                    PsiElement(identifier)('r')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(.)('.')
                                PsiElement(identifier)('value')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: r.right.left
                                ReferenceExpression: r.right
                                  ReferenceExpression: r
                                    PsiElement(identifier)('r')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: r.right.right
                                ReferenceExpression: r.right
                                  ReferenceExpression: r
                                    PsiElement(identifier)('r')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(.)('.')
                                PsiElement(identifier)('right')
                              PsiElement())(')')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace('\n      ')
                      MethodCall
                        ReferenceExpression: mkTree
                          PsiElement(identifier)('mkTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: isBlack
                            PsiElement(identifier)('isBlack')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: xv
                            PsiElement(identifier)('xv')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: a
                            PsiElement(identifier)('a')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: r
                            PsiElement(identifier)('r')
                          PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: upd
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('upd')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B1
                    PsiElement(identifier)('B1')
                    PsiWhiteSpace(' ')
                    PsiElement(>:)('>:')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: k
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('k')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: v
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('v')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: B1
                          CodeReferenceElement: B1
                            PsiElement(identifier)('B1')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: overwrite
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('overwrite')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: ordering
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ordering')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Ordering[A]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B1]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B1
                      CodeReferenceElement: B1
                        PsiElement(identifier)('B1')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: eq
                      PsiElement(identifier)('eq')
                    PsiWhiteSpace(' ')
                    NullLiteral
                      PsiElement(null)('null')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    MethodCall
                      ReferenceExpression: RedTree
                        PsiElement(identifier)('RedTree')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: k
                          PsiElement(identifier)('k')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: v
                          PsiElement(identifier)('v')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                        PsiElement())(')')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScPatternDefinition: cmp
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: cmp
                          PsiElement(identifier)('cmp')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: ordering.compare
                          ReferenceExpression: ordering
                            PsiElement(identifier)('ordering')
                          PsiElement(.)('.')
                          PsiElement(identifier)('compare')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: k
                            PsiElement(identifier)('k')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: cmp
                          PsiElement(identifier)('cmp')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: <
                          PsiElement(identifier)('<')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: balanceLeft
                          PsiElement(identifier)('balanceLeft')
                        ArgumentList
                          PsiElement(()('(')
                          MethodCall
                            ReferenceExpression: isBlackTree
                              PsiElement(identifier)('isBlackTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement())(')')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.value
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: upd
                              PsiElement(identifier)('upd')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tree.left
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: k
                                PsiElement(identifier)('k')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: v
                                PsiElement(identifier)('v')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: overwrite
                                PsiElement(identifier)('overwrite')
                              PsiElement())(')')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: cmp
                            PsiElement(identifier)('cmp')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: >
                            PsiElement(identifier)('>')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('0')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: balanceRight
                            PsiElement(identifier)('balanceRight')
                          ArgumentList
                            PsiElement(()('(')
                            MethodCall
                              ReferenceExpression: isBlackTree
                                PsiElement(identifier)('isBlackTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement())(')')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.key
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.value
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.left
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: upd
                                PsiElement(identifier)('upd')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree.right
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: k
                                  PsiElement(identifier)('k')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: v
                                  PsiElement(identifier)('v')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: overwrite
                                  PsiElement(identifier)('overwrite')
                                PsiElement())(')')
                            PsiElement())(')')
                        PsiWhiteSpace('\n    ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          InfixExpression
                            ReferenceExpression: overwrite
                              PsiElement(identifier)('overwrite')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: ||
                              PsiElement(identifier)('||')
                            PsiWhiteSpace(' ')
                            InfixExpression
                              ReferenceExpression: k
                                PsiElement(identifier)('k')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: !=
                                PsiElement(identifier)('!=')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: tree.key
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('key')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: mkTree
                              PsiElement(identifier)('mkTree')
                            ArgumentList
                              PsiElement(()('(')
                              MethodCall
                                ReferenceExpression: isBlackTree
                                  PsiElement(identifier)('isBlackTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement())(')')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: k
                                PsiElement(identifier)('k')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: v
                                PsiElement(identifier)('v')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: tree.left
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: tree.right
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('right')
                              PsiElement())(')')
                          PsiWhiteSpace('\n    ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: updNth
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('updNth')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B1
                    PsiElement(identifier)('B1')
                    PsiWhiteSpace(' ')
                    PsiElement(>:)('>:')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: idx
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('idx')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: k
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('k')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: v
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('v')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: B1
                          CodeReferenceElement: B1
                            PsiElement(identifier)('B1')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: overwrite
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('overwrite')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B1]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B1
                      CodeReferenceElement: B1
                        PsiElement(identifier)('B1')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: eq
                      PsiElement(identifier)('eq')
                    PsiWhiteSpace(' ')
                    NullLiteral
                      PsiElement(null)('null')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    MethodCall
                      ReferenceExpression: RedTree
                        PsiElement(identifier)('RedTree')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: k
                          PsiElement(identifier)('k')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: v
                          PsiElement(identifier)('v')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                        PsiElement())(')')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScPatternDefinition: rank
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: rank
                          PsiElement(identifier)('rank')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      InfixExpression
                        MethodCall
                          ReferenceExpression: count
                            PsiElement(identifier)('count')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree.left
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: +
                          PsiElement(identifier)('+')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('1')
                    PsiWhiteSpace('\n    ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: idx
                          PsiElement(identifier)('idx')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: <
                          PsiElement(identifier)('<')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: rank
                          PsiElement(identifier)('rank')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: balanceLeft
                          PsiElement(identifier)('balanceLeft')
                        ArgumentList
                          PsiElement(()('(')
                          MethodCall
                            ReferenceExpression: isBlackTree
                              PsiElement(identifier)('isBlackTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement())(')')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.value
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: updNth
                              PsiElement(identifier)('updNth')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tree.left
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: idx
                                PsiElement(identifier)('idx')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: k
                                PsiElement(identifier)('k')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: v
                                PsiElement(identifier)('v')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: overwrite
                                PsiElement(identifier)('overwrite')
                              PsiElement())(')')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: idx
                            PsiElement(identifier)('idx')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: >
                            PsiElement(identifier)('>')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: rank
                            PsiElement(identifier)('rank')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: balanceRight
                            PsiElement(identifier)('balanceRight')
                          ArgumentList
                            PsiElement(()('(')
                            MethodCall
                              ReferenceExpression: isBlackTree
                                PsiElement(identifier)('isBlackTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement())(')')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.key
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.value
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.left
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: updNth
                                PsiElement(identifier)('updNth')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree.right
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                InfixExpression
                                  ReferenceExpression: idx
                                    PsiElement(identifier)('idx')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: -
                                    PsiElement(identifier)('-')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: rank
                                    PsiElement(identifier)('rank')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: k
                                  PsiElement(identifier)('k')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: v
                                  PsiElement(identifier)('v')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: overwrite
                                  PsiElement(identifier)('overwrite')
                                PsiElement())(')')
                            PsiElement())(')')
                        PsiWhiteSpace('\n    ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          ReferenceExpression: overwrite
                            PsiElement(identifier)('overwrite')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: mkTree
                              PsiElement(identifier)('mkTree')
                            ArgumentList
                              PsiElement(()('(')
                              MethodCall
                                ReferenceExpression: isBlackTree
                                  PsiElement(identifier)('isBlackTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement())(')')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: k
                                PsiElement(identifier)('k')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: v
                                PsiElement(identifier)('v')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: tree.left
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: tree.right
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiElement(.)('.')
                                PsiElement(identifier)('right')
                              PsiElement())(')')
                          PsiWhiteSpace('\n    ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: del
                PsiComment(BlockComment)('/* Based on Stefan Kahrs' Haskell version of Okasaki's Red&Black Trees\n   * http://www.cse.unsw.edu.au/~dons/data/RedBlackTree.html */')
                PsiWhiteSpace('\n  ')
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('del')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: k
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('k')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: ordering
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ordering')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Ordering[A]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: eq
                      PsiElement(identifier)('eq')
                    PsiWhiteSpace(' ')
                    NullLiteral
                      PsiElement(null)('null')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  NullLiteral
                    PsiElement(null)('null')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: balance
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('balance')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: x
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('x')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: xv
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('xv')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: tl
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tl')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: tr
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tr')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: isRedTree
                            PsiElement(identifier)('isRedTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tl
                              PsiElement(identifier)('tl')
                            PsiElement())(')')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n      ')
                          IfStatement
                            PsiElement(if)('if')
                            PsiWhiteSpace(' ')
                            PsiElement(()('(')
                            MethodCall
                              ReferenceExpression: isRedTree
                                PsiElement(identifier)('isRedTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tr
                                  PsiElement(identifier)('tr')
                                PsiElement())(')')
                            PsiElement())(')')
                            PsiWhiteSpace(' ')
                            BlockExpression
                              PsiElement({)('{')
                              PsiWhiteSpace('\n        ')
                              MethodCall
                                ReferenceExpression: RedTree
                                  PsiElement(identifier)('RedTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: x
                                    PsiElement(identifier)('x')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: xv
                                    PsiElement(identifier)('xv')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: tl.black
                                    ReferenceExpression: tl
                                      PsiElement(identifier)('tl')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('black')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: tr.black
                                    ReferenceExpression: tr
                                      PsiElement(identifier)('tr')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('black')
                                  PsiElement())(')')
                              PsiWhiteSpace('\n      ')
                              PsiElement(})('}')
                            PsiWhiteSpace(' ')
                            PsiElement(else)('else')
                            PsiWhiteSpace(' ')
                            IfStatement
                              PsiElement(if)('if')
                              PsiWhiteSpace(' ')
                              PsiElement(()('(')
                              MethodCall
                                ReferenceExpression: isRedTree
                                  PsiElement(identifier)('isRedTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tl.left
                                    ReferenceExpression: tl
                                      PsiElement(identifier)('tl')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('left')
                                  PsiElement())(')')
                              PsiElement())(')')
                              PsiWhiteSpace(' ')
                              BlockExpression
                                PsiElement({)('{')
                                PsiWhiteSpace('\n        ')
                                MethodCall
                                  ReferenceExpression: RedTree
                                    PsiElement(identifier)('RedTree')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: tl.key
                                      ReferenceExpression: tl
                                        PsiElement(identifier)('tl')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('key')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: tl.value
                                      ReferenceExpression: tl
                                        PsiElement(identifier)('tl')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('value')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: tl.left.black
                                      ReferenceExpression: tl.left
                                        ReferenceExpression: tl
                                          PsiElement(identifier)('tl')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('left')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('black')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    MethodCall
                                      ReferenceExpression: BlackTree
                                        PsiElement(identifier)('BlackTree')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: x
                                          PsiElement(identifier)('x')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: xv
                                          PsiElement(identifier)('xv')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tl.right
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('right')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tr
                                          PsiElement(identifier)('tr')
                                        PsiElement())(')')
                                    PsiElement())(')')
                                PsiWhiteSpace('\n      ')
                                PsiElement(})('}')
                              PsiWhiteSpace(' ')
                              PsiElement(else)('else')
                              PsiWhiteSpace(' ')
                              IfStatement
                                PsiElement(if)('if')
                                PsiWhiteSpace(' ')
                                PsiElement(()('(')
                                MethodCall
                                  ReferenceExpression: isRedTree
                                    PsiElement(identifier)('isRedTree')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: tl.right
                                      ReferenceExpression: tl
                                        PsiElement(identifier)('tl')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('right')
                                    PsiElement())(')')
                                PsiElement())(')')
                                PsiWhiteSpace(' ')
                                BlockExpression
                                  PsiElement({)('{')
                                  PsiWhiteSpace('\n        ')
                                  MethodCall
                                    ReferenceExpression: RedTree
                                      PsiElement(identifier)('RedTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: tl.right.key
                                        ReferenceExpression: tl.right
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('right')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('key')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tl.right.value
                                        ReferenceExpression: tl.right
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('right')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('value')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: BlackTree
                                          PsiElement(identifier)('BlackTree')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: tl.key
                                            ReferenceExpression: tl
                                              PsiElement(identifier)('tl')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('key')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tl.value
                                            ReferenceExpression: tl
                                              PsiElement(identifier)('tl')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('value')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tl.left
                                            ReferenceExpression: tl
                                              PsiElement(identifier)('tl')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('left')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tl.right.left
                                            ReferenceExpression: tl.right
                                              ReferenceExpression: tl
                                                PsiElement(identifier)('tl')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('right')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('left')
                                          PsiElement())(')')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: BlackTree
                                          PsiElement(identifier)('BlackTree')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: x
                                            PsiElement(identifier)('x')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: xv
                                            PsiElement(identifier)('xv')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tl.right.right
                                            ReferenceExpression: tl.right
                                              ReferenceExpression: tl
                                                PsiElement(identifier)('tl')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('right')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('right')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr
                                            PsiElement(identifier)('tr')
                                          PsiElement())(')')
                                      PsiElement())(')')
                                  PsiWhiteSpace('\n      ')
                                  PsiElement(})('}')
                                PsiWhiteSpace(' ')
                                PsiElement(else)('else')
                                PsiWhiteSpace(' ')
                                BlockExpression
                                  PsiElement({)('{')
                                  PsiWhiteSpace('\n        ')
                                  MethodCall
                                    ReferenceExpression: BlackTree
                                      PsiElement(identifier)('BlackTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: x
                                        PsiElement(identifier)('x')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: xv
                                        PsiElement(identifier)('xv')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tl
                                        PsiElement(identifier)('tl')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tr
                                        PsiElement(identifier)('tr')
                                      PsiElement())(')')
                                  PsiWhiteSpace('\n      ')
                                  PsiElement(})('}')
                          PsiWhiteSpace('\n    ')
                          PsiElement(})('}')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          MethodCall
                            ReferenceExpression: isRedTree
                              PsiElement(identifier)('isRedTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tr
                                PsiElement(identifier)('tr')
                              PsiElement())(')')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n      ')
                            IfStatement
                              PsiElement(if)('if')
                              PsiWhiteSpace(' ')
                              PsiElement(()('(')
                              MethodCall
                                ReferenceExpression: isRedTree
                                  PsiElement(identifier)('isRedTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tr.right
                                    ReferenceExpression: tr
                                      PsiElement(identifier)('tr')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('right')
                                  PsiElement())(')')
                              PsiElement())(')')
                              PsiWhiteSpace(' ')
                              BlockExpression
                                PsiElement({)('{')
                                PsiWhiteSpace('\n        ')
                                MethodCall
                                  ReferenceExpression: RedTree
                                    PsiElement(identifier)('RedTree')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: tr.key
                                      ReferenceExpression: tr
                                        PsiElement(identifier)('tr')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('key')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: tr.value
                                      ReferenceExpression: tr
                                        PsiElement(identifier)('tr')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('value')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    MethodCall
                                      ReferenceExpression: BlackTree
                                        PsiElement(identifier)('BlackTree')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: x
                                          PsiElement(identifier)('x')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: xv
                                          PsiElement(identifier)('xv')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tl
                                          PsiElement(identifier)('tl')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tr.left
                                          ReferenceExpression: tr
                                            PsiElement(identifier)('tr')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('left')
                                        PsiElement())(')')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: tr.right.black
                                      ReferenceExpression: tr.right
                                        ReferenceExpression: tr
                                          PsiElement(identifier)('tr')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('right')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('black')
                                    PsiElement())(')')
                                PsiWhiteSpace('\n      ')
                                PsiElement(})('}')
                              PsiWhiteSpace(' ')
                              PsiElement(else)('else')
                              PsiWhiteSpace(' ')
                              IfStatement
                                PsiElement(if)('if')
                                PsiWhiteSpace(' ')
                                PsiElement(()('(')
                                MethodCall
                                  ReferenceExpression: isRedTree
                                    PsiElement(identifier)('isRedTree')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: tr.left
                                      ReferenceExpression: tr
                                        PsiElement(identifier)('tr')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('left')
                                    PsiElement())(')')
                                PsiElement())(')')
                                PsiWhiteSpace(' ')
                                BlockExpression
                                  PsiElement({)('{')
                                  PsiWhiteSpace('\n        ')
                                  MethodCall
                                    ReferenceExpression: RedTree
                                      PsiElement(identifier)('RedTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: tr.left.key
                                        ReferenceExpression: tr.left
                                          ReferenceExpression: tr
                                            PsiElement(identifier)('tr')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('left')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('key')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tr.left.value
                                        ReferenceExpression: tr.left
                                          ReferenceExpression: tr
                                            PsiElement(identifier)('tr')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('left')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('value')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: BlackTree
                                          PsiElement(identifier)('BlackTree')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: x
                                            PsiElement(identifier)('x')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: xv
                                            PsiElement(identifier)('xv')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr.left.left
                                            ReferenceExpression: tr.left
                                              ReferenceExpression: tr
                                                PsiElement(identifier)('tr')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('left')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('left')
                                          PsiElement())(')')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: BlackTree
                                          PsiElement(identifier)('BlackTree')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: tr.key
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('key')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr.value
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('value')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr.left.right
                                            ReferenceExpression: tr.left
                                              ReferenceExpression: tr
                                                PsiElement(identifier)('tr')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('left')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('right')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr.right
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('right')
                                          PsiElement())(')')
                                      PsiElement())(')')
                                  PsiWhiteSpace('\n      ')
                                  PsiElement(})('}')
                                PsiWhiteSpace(' ')
                                PsiElement(else)('else')
                                PsiWhiteSpace(' ')
                                BlockExpression
                                  PsiElement({)('{')
                                  PsiWhiteSpace('\n        ')
                                  MethodCall
                                    ReferenceExpression: BlackTree
                                      PsiElement(identifier)('BlackTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: x
                                        PsiElement(identifier)('x')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: xv
                                        PsiElement(identifier)('xv')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tl
                                        PsiElement(identifier)('tl')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tr
                                        PsiElement(identifier)('tr')
                                      PsiElement())(')')
                                  PsiWhiteSpace('\n      ')
                                  PsiElement(})('}')
                            PsiWhiteSpace('\n    ')
                            PsiElement(})('}')
                          PsiWhiteSpace(' ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n      ')
                            MethodCall
                              ReferenceExpression: BlackTree
                                PsiElement(identifier)('BlackTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: x
                                  PsiElement(identifier)('x')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: xv
                                  PsiElement(identifier)('xv')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: tl
                                  PsiElement(identifier)('tl')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: tr
                                  PsiElement(identifier)('tr')
                                PsiElement())(')')
                            PsiWhiteSpace('\n    ')
                            PsiElement(})('}')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: subl
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('subl')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: t
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('t')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace('\n      ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        GenericCall
                          ReferenceExpression: t.isInstanceOf
                            ReferenceExpression: t
                              PsiElement(identifier)('t')
                            PsiElement(.)('.')
                            PsiElement(identifier)('isInstanceOf')
                          TypeArgumentsList
                            PsiElement([)('[')
                            ParametrizedType: BlackTree[_, _]
                              SimpleType: BlackTree
                                CodeReferenceElement: BlackTree
                                  PsiElement(identifier)('BlackTree')
                              TypeArgumentsList
                                PsiElement([)('[')
                                WildcardType: _
                                  PsiElement(_)('_')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                WildcardType: _
                                  PsiElement(_)('_')
                                PsiElement(])(']')
                            PsiElement(])(']')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: t.red
                          ReferenceExpression: t
                            PsiElement(identifier)('t')
                          PsiElement(.)('.')
                          PsiElement(identifier)('red')
                        PsiWhiteSpace('\n      ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: sys.error
                            ReferenceExpression: sys
                              PsiElement(identifier)('sys')
                            PsiElement(.)('.')
                            PsiElement(identifier)('error')
                          ArgumentList
                            PsiElement(()('(')
                            InfixExpression
                              StringLiteral
                                PsiElement(string content)('"Defect: invariance violation; expected black, got "')
                              ReferenceExpression: +
                                PsiElement(identifier)('+')
                              ReferenceExpression: t
                                PsiElement(identifier)('t')
                            PsiElement())(')')
                    PsiWhiteSpace('\n\n    ')
                    ScFunctionDefinition: balLeft
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('balLeft')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: x
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('x')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: xv
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('xv')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: tl
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tl')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: tr
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tr')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: isRedTree
                            PsiElement(identifier)('isRedTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tl
                              PsiElement(identifier)('tl')
                            PsiElement())(')')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n      ')
                          MethodCall
                            ReferenceExpression: RedTree
                              PsiElement(identifier)('RedTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: x
                                PsiElement(identifier)('x')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: xv
                                PsiElement(identifier)('xv')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: tl.black
                                ReferenceExpression: tl
                                  PsiElement(identifier)('tl')
                                PsiElement(.)('.')
                                PsiElement(identifier)('black')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: tr
                                PsiElement(identifier)('tr')
                              PsiElement())(')')
                          PsiWhiteSpace('\n    ')
                          PsiElement(})('}')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          MethodCall
                            ReferenceExpression: isBlackTree
                              PsiElement(identifier)('isBlackTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tr
                                PsiElement(identifier)('tr')
                              PsiElement())(')')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n      ')
                            MethodCall
                              ReferenceExpression: balance
                                PsiElement(identifier)('balance')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: x
                                  PsiElement(identifier)('x')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: xv
                                  PsiElement(identifier)('xv')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: tl
                                  PsiElement(identifier)('tl')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: tr.red
                                  ReferenceExpression: tr
                                    PsiElement(identifier)('tr')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('red')
                                PsiElement())(')')
                            PsiWhiteSpace('\n    ')
                            PsiElement(})('}')
                          PsiWhiteSpace(' ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          IfStatement
                            PsiElement(if)('if')
                            PsiWhiteSpace(' ')
                            PsiElement(()('(')
                            InfixExpression
                              MethodCall
                                ReferenceExpression: isRedTree
                                  PsiElement(identifier)('isRedTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tr
                                    PsiElement(identifier)('tr')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: &&
                                PsiElement(identifier)('&&')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: isBlackTree
                                  PsiElement(identifier)('isBlackTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tr.left
                                    ReferenceExpression: tr
                                      PsiElement(identifier)('tr')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('left')
                                  PsiElement())(')')
                            PsiElement())(')')
                            PsiWhiteSpace(' ')
                            BlockExpression
                              PsiElement({)('{')
                              PsiWhiteSpace('\n      ')
                              MethodCall
                                ReferenceExpression: RedTree
                                  PsiElement(identifier)('RedTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tr.left.key
                                    ReferenceExpression: tr.left
                                      ReferenceExpression: tr
                                        PsiElement(identifier)('tr')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('left')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('key')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: tr.left.value
                                    ReferenceExpression: tr.left
                                      ReferenceExpression: tr
                                        PsiElement(identifier)('tr')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('left')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('value')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  MethodCall
                                    ReferenceExpression: BlackTree
                                      PsiElement(identifier)('BlackTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: x
                                        PsiElement(identifier)('x')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: xv
                                        PsiElement(identifier)('xv')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tl
                                        PsiElement(identifier)('tl')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tr.left.left
                                        ReferenceExpression: tr.left
                                          ReferenceExpression: tr
                                            PsiElement(identifier)('tr')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('left')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('left')
                                      PsiElement())(')')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  MethodCall
                                    ReferenceExpression: balance
                                      PsiElement(identifier)('balance')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: tr.key
                                        ReferenceExpression: tr
                                          PsiElement(identifier)('tr')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('key')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tr.value
                                        ReferenceExpression: tr
                                          PsiElement(identifier)('tr')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('value')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tr.left.right
                                        ReferenceExpression: tr.left
                                          ReferenceExpression: tr
                                            PsiElement(identifier)('tr')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('left')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('right')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: subl
                                          PsiElement(identifier)('subl')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: tr.right
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('right')
                                          PsiElement())(')')
                                      PsiElement())(')')
                                  PsiElement())(')')
                              PsiWhiteSpace('\n    ')
                              PsiElement(})('}')
                            PsiWhiteSpace(' ')
                            PsiElement(else)('else')
                            PsiWhiteSpace(' ')
                            BlockExpression
                              PsiElement({)('{')
                              PsiWhiteSpace('\n      ')
                              MethodCall
                                ReferenceExpression: sys.error
                                  ReferenceExpression: sys
                                    PsiElement(identifier)('sys')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('error')
                                ArgumentList
                                  PsiElement(()('(')
                                  StringLiteral
                                    PsiElement(string content)('"Defect: invariance violation"')
                                  PsiElement())(')')
                              PsiWhiteSpace('\n    ')
                              PsiElement(})('}')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: balRight
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('balRight')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: x
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('x')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: xv
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('xv')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: tl
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tl')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: tr
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tr')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: isRedTree
                            PsiElement(identifier)('isRedTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tr
                              PsiElement(identifier)('tr')
                            PsiElement())(')')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n      ')
                          MethodCall
                            ReferenceExpression: RedTree
                              PsiElement(identifier)('RedTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: x
                                PsiElement(identifier)('x')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: xv
                                PsiElement(identifier)('xv')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: tl
                                PsiElement(identifier)('tl')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: tr.black
                                ReferenceExpression: tr
                                  PsiElement(identifier)('tr')
                                PsiElement(.)('.')
                                PsiElement(identifier)('black')
                              PsiElement())(')')
                          PsiWhiteSpace('\n    ')
                          PsiElement(})('}')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          MethodCall
                            ReferenceExpression: isBlackTree
                              PsiElement(identifier)('isBlackTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: tl
                                PsiElement(identifier)('tl')
                              PsiElement())(')')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n      ')
                            MethodCall
                              ReferenceExpression: balance
                                PsiElement(identifier)('balance')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: x
                                  PsiElement(identifier)('x')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: xv
                                  PsiElement(identifier)('xv')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: tl.red
                                  ReferenceExpression: tl
                                    PsiElement(identifier)('tl')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('red')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: tr
                                  PsiElement(identifier)('tr')
                                PsiElement())(')')
                            PsiWhiteSpace('\n    ')
                            PsiElement(})('}')
                          PsiWhiteSpace(' ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          IfStatement
                            PsiElement(if)('if')
                            PsiWhiteSpace(' ')
                            PsiElement(()('(')
                            InfixExpression
                              MethodCall
                                ReferenceExpression: isRedTree
                                  PsiElement(identifier)('isRedTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tl
                                    PsiElement(identifier)('tl')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: &&
                                PsiElement(identifier)('&&')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: isBlackTree
                                  PsiElement(identifier)('isBlackTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tl.right
                                    ReferenceExpression: tl
                                      PsiElement(identifier)('tl')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('right')
                                  PsiElement())(')')
                            PsiElement())(')')
                            PsiWhiteSpace(' ')
                            BlockExpression
                              PsiElement({)('{')
                              PsiWhiteSpace('\n      ')
                              MethodCall
                                ReferenceExpression: RedTree
                                  PsiElement(identifier)('RedTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tl.right.key
                                    ReferenceExpression: tl.right
                                      ReferenceExpression: tl
                                        PsiElement(identifier)('tl')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('right')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('key')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: tl.right.value
                                    ReferenceExpression: tl.right
                                      ReferenceExpression: tl
                                        PsiElement(identifier)('tl')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('right')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('value')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  MethodCall
                                    ReferenceExpression: balance
                                      PsiElement(identifier)('balance')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: tl.key
                                        ReferenceExpression: tl
                                          PsiElement(identifier)('tl')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('key')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tl.value
                                        ReferenceExpression: tl
                                          PsiElement(identifier)('tl')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('value')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: subl
                                          PsiElement(identifier)('subl')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: tl.left
                                            ReferenceExpression: tl
                                              PsiElement(identifier)('tl')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('left')
                                          PsiElement())(')')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tl.right.left
                                        ReferenceExpression: tl.right
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('right')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('left')
                                      PsiElement())(')')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  MethodCall
                                    ReferenceExpression: BlackTree
                                      PsiElement(identifier)('BlackTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: x
                                        PsiElement(identifier)('x')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: xv
                                        PsiElement(identifier)('xv')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tl.right.right
                                        ReferenceExpression: tl.right
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('right')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('right')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tr
                                        PsiElement(identifier)('tr')
                                      PsiElement())(')')
                                  PsiElement())(')')
                              PsiWhiteSpace('\n    ')
                              PsiElement(})('}')
                            PsiWhiteSpace(' ')
                            PsiElement(else)('else')
                            PsiWhiteSpace(' ')
                            BlockExpression
                              PsiElement({)('{')
                              PsiWhiteSpace('\n      ')
                              MethodCall
                                ReferenceExpression: sys.error
                                  ReferenceExpression: sys
                                    PsiElement(identifier)('sys')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('error')
                                ArgumentList
                                  PsiElement(()('(')
                                  StringLiteral
                                    PsiElement(string content)('"Defect: invariance violation"')
                                  PsiElement())(')')
                              PsiWhiteSpace('\n    ')
                              PsiElement(})('}')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: delLeft
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('delLeft')
                      Parameters
                        <empty list>
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: isBlackTree
                            PsiElement(identifier)('isBlackTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree.left
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement())(')')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: balLeft
                            PsiElement(identifier)('balLeft')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree.key
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.value
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: del
                                PsiElement(identifier)('del')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree.left
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('left')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: k
                                  PsiElement(identifier)('k')
                                PsiElement())(')')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.right
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: RedTree
                            PsiElement(identifier)('RedTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree.key
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.value
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: del
                                PsiElement(identifier)('del')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree.left
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('left')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: k
                                  PsiElement(identifier)('k')
                                PsiElement())(')')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.right
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: delRight
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('delRight')
                      Parameters
                        <empty list>
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: isBlackTree
                            PsiElement(identifier)('isBlackTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree.right
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: balRight
                            PsiElement(identifier)('balRight')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree.key
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.value
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.left
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: del
                                PsiElement(identifier)('del')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree.right
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: k
                                  PsiElement(identifier)('k')
                                PsiElement())(')')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: RedTree
                            PsiElement(identifier)('RedTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree.key
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.value
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.left
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: del
                                PsiElement(identifier)('del')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree.right
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: k
                                  PsiElement(identifier)('k')
                                PsiElement())(')')
                            PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: append
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('append')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: tl
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tl')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: tr
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tr')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: tl
                            PsiElement(identifier)('tl')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          NullLiteral
                            PsiElement(null)('null')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n      ')
                          ReferenceExpression: tr
                            PsiElement(identifier)('tr')
                          PsiWhiteSpace('\n    ')
                          PsiElement(})('}')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          InfixExpression
                            ReferenceExpression: tr
                              PsiElement(identifier)('tr')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: eq
                              PsiElement(identifier)('eq')
                            PsiWhiteSpace(' ')
                            NullLiteral
                              PsiElement(null)('null')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n      ')
                            ReferenceExpression: tl
                              PsiElement(identifier)('tl')
                            PsiWhiteSpace('\n    ')
                            PsiElement(})('}')
                          PsiWhiteSpace(' ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          IfStatement
                            PsiElement(if)('if')
                            PsiWhiteSpace(' ')
                            PsiElement(()('(')
                            InfixExpression
                              MethodCall
                                ReferenceExpression: isRedTree
                                  PsiElement(identifier)('isRedTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tl
                                    PsiElement(identifier)('tl')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: &&
                                PsiElement(identifier)('&&')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: isRedTree
                                  PsiElement(identifier)('isRedTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tr
                                    PsiElement(identifier)('tr')
                                  PsiElement())(')')
                            PsiElement())(')')
                            PsiWhiteSpace(' ')
                            BlockExpression
                              PsiElement({)('{')
                              PsiWhiteSpace('\n      ')
                              ScPatternDefinition: bc
                                AnnotationsList
                                  <empty list>
                                Modifiers
                                  <empty list>
                                PsiElement(val)('val')
                                PsiWhiteSpace(' ')
                                ListOfPatterns
                                  ReferencePattern: bc
                                    PsiElement(identifier)('bc')
                                PsiWhiteSpace(' ')
                                PsiElement(=)('=')
                                PsiWhiteSpace(' ')
                                MethodCall
                                  ReferenceExpression: append
                                    PsiElement(identifier)('append')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: tl.right
                                      ReferenceExpression: tl
                                        PsiElement(identifier)('tl')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('right')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: tr.left
                                      ReferenceExpression: tr
                                        PsiElement(identifier)('tr')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('left')
                                    PsiElement())(')')
                              PsiWhiteSpace('\n      ')
                              IfStatement
                                PsiElement(if)('if')
                                PsiWhiteSpace(' ')
                                PsiElement(()('(')
                                MethodCall
                                  ReferenceExpression: isRedTree
                                    PsiElement(identifier)('isRedTree')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: bc
                                      PsiElement(identifier)('bc')
                                    PsiElement())(')')
                                PsiElement())(')')
                                PsiWhiteSpace(' ')
                                BlockExpression
                                  PsiElement({)('{')
                                  PsiWhiteSpace('\n        ')
                                  MethodCall
                                    ReferenceExpression: RedTree
                                      PsiElement(identifier)('RedTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: bc.key
                                        ReferenceExpression: bc
                                          PsiElement(identifier)('bc')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('key')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: bc.value
                                        ReferenceExpression: bc
                                          PsiElement(identifier)('bc')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('value')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: RedTree
                                          PsiElement(identifier)('RedTree')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: tl.key
                                            ReferenceExpression: tl
                                              PsiElement(identifier)('tl')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('key')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tl.value
                                            ReferenceExpression: tl
                                              PsiElement(identifier)('tl')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('value')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tl.left
                                            ReferenceExpression: tl
                                              PsiElement(identifier)('tl')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('left')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: bc.left
                                            ReferenceExpression: bc
                                              PsiElement(identifier)('bc')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('left')
                                          PsiElement())(')')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: RedTree
                                          PsiElement(identifier)('RedTree')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: tr.key
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('key')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr.value
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('value')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: bc.right
                                            ReferenceExpression: bc
                                              PsiElement(identifier)('bc')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('right')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr.right
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('right')
                                          PsiElement())(')')
                                      PsiElement())(')')
                                  PsiWhiteSpace('\n      ')
                                  PsiElement(})('}')
                                PsiWhiteSpace(' ')
                                PsiElement(else)('else')
                                PsiWhiteSpace(' ')
                                BlockExpression
                                  PsiElement({)('{')
                                  PsiWhiteSpace('\n        ')
                                  MethodCall
                                    ReferenceExpression: RedTree
                                      PsiElement(identifier)('RedTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: tl.key
                                        ReferenceExpression: tl
                                          PsiElement(identifier)('tl')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('key')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tl.value
                                        ReferenceExpression: tl
                                          PsiElement(identifier)('tl')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('value')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tl.left
                                        ReferenceExpression: tl
                                          PsiElement(identifier)('tl')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('left')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: RedTree
                                          PsiElement(identifier)('RedTree')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: tr.key
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('key')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr.value
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('value')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: bc
                                            PsiElement(identifier)('bc')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr.right
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('right')
                                          PsiElement())(')')
                                      PsiElement())(')')
                                  PsiWhiteSpace('\n      ')
                                  PsiElement(})('}')
                              PsiWhiteSpace('\n    ')
                              PsiElement(})('}')
                            PsiWhiteSpace(' ')
                            PsiElement(else)('else')
                            PsiWhiteSpace(' ')
                            IfStatement
                              PsiElement(if)('if')
                              PsiWhiteSpace(' ')
                              PsiElement(()('(')
                              InfixExpression
                                MethodCall
                                  ReferenceExpression: isBlackTree
                                    PsiElement(identifier)('isBlackTree')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: tl
                                      PsiElement(identifier)('tl')
                                    PsiElement())(')')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: &&
                                  PsiElement(identifier)('&&')
                                PsiWhiteSpace(' ')
                                MethodCall
                                  ReferenceExpression: isBlackTree
                                    PsiElement(identifier)('isBlackTree')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: tr
                                      PsiElement(identifier)('tr')
                                    PsiElement())(')')
                              PsiElement())(')')
                              PsiWhiteSpace(' ')
                              BlockExpression
                                PsiElement({)('{')
                                PsiWhiteSpace('\n      ')
                                ScPatternDefinition: bc
                                  AnnotationsList
                                    <empty list>
                                  Modifiers
                                    <empty list>
                                  PsiElement(val)('val')
                                  PsiWhiteSpace(' ')
                                  ListOfPatterns
                                    ReferencePattern: bc
                                      PsiElement(identifier)('bc')
                                  PsiWhiteSpace(' ')
                                  PsiElement(=)('=')
                                  PsiWhiteSpace(' ')
                                  MethodCall
                                    ReferenceExpression: append
                                      PsiElement(identifier)('append')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: tl.right
                                        ReferenceExpression: tl
                                          PsiElement(identifier)('tl')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('right')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tr.left
                                        ReferenceExpression: tr
                                          PsiElement(identifier)('tr')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('left')
                                      PsiElement())(')')
                                PsiWhiteSpace('\n      ')
                                IfStatement
                                  PsiElement(if)('if')
                                  PsiWhiteSpace(' ')
                                  PsiElement(()('(')
                                  MethodCall
                                    ReferenceExpression: isRedTree
                                      PsiElement(identifier)('isRedTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: bc
                                        PsiElement(identifier)('bc')
                                      PsiElement())(')')
                                  PsiElement())(')')
                                  PsiWhiteSpace(' ')
                                  BlockExpression
                                    PsiElement({)('{')
                                    PsiWhiteSpace('\n        ')
                                    MethodCall
                                      ReferenceExpression: RedTree
                                        PsiElement(identifier)('RedTree')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: bc.key
                                          ReferenceExpression: bc
                                            PsiElement(identifier)('bc')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('key')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: bc.value
                                          ReferenceExpression: bc
                                            PsiElement(identifier)('bc')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('value')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        MethodCall
                                          ReferenceExpression: BlackTree
                                            PsiElement(identifier)('BlackTree')
                                          ArgumentList
                                            PsiElement(()('(')
                                            ReferenceExpression: tl.key
                                              ReferenceExpression: tl
                                                PsiElement(identifier)('tl')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('key')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: tl.value
                                              ReferenceExpression: tl
                                                PsiElement(identifier)('tl')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('value')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: tl.left
                                              ReferenceExpression: tl
                                                PsiElement(identifier)('tl')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('left')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: bc.left
                                              ReferenceExpression: bc
                                                PsiElement(identifier)('bc')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('left')
                                            PsiElement())(')')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        MethodCall
                                          ReferenceExpression: BlackTree
                                            PsiElement(identifier)('BlackTree')
                                          ArgumentList
                                            PsiElement(()('(')
                                            ReferenceExpression: tr.key
                                              ReferenceExpression: tr
                                                PsiElement(identifier)('tr')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('key')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: tr.value
                                              ReferenceExpression: tr
                                                PsiElement(identifier)('tr')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('value')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: bc.right
                                              ReferenceExpression: bc
                                                PsiElement(identifier)('bc')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('right')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: tr.right
                                              ReferenceExpression: tr
                                                PsiElement(identifier)('tr')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('right')
                                            PsiElement())(')')
                                        PsiElement())(')')
                                    PsiWhiteSpace('\n      ')
                                    PsiElement(})('}')
                                  PsiWhiteSpace(' ')
                                  PsiElement(else)('else')
                                  PsiWhiteSpace(' ')
                                  BlockExpression
                                    PsiElement({)('{')
                                    PsiWhiteSpace('\n        ')
                                    MethodCall
                                      ReferenceExpression: balLeft
                                        PsiElement(identifier)('balLeft')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: tl.key
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('key')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tl.value
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('value')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tl.left
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('left')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        MethodCall
                                          ReferenceExpression: BlackTree
                                            PsiElement(identifier)('BlackTree')
                                          ArgumentList
                                            PsiElement(()('(')
                                            ReferenceExpression: tr.key
                                              ReferenceExpression: tr
                                                PsiElement(identifier)('tr')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('key')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: tr.value
                                              ReferenceExpression: tr
                                                PsiElement(identifier)('tr')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('value')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: bc
                                              PsiElement(identifier)('bc')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: tr.right
                                              ReferenceExpression: tr
                                                PsiElement(identifier)('tr')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('right')
                                            PsiElement())(')')
                                        PsiElement())(')')
                                    PsiWhiteSpace('\n      ')
                                    PsiElement(})('}')
                                PsiWhiteSpace('\n    ')
                                PsiElement(})('}')
                              PsiWhiteSpace(' ')
                              PsiElement(else)('else')
                              PsiWhiteSpace(' ')
                              IfStatement
                                PsiElement(if)('if')
                                PsiWhiteSpace(' ')
                                PsiElement(()('(')
                                MethodCall
                                  ReferenceExpression: isRedTree
                                    PsiElement(identifier)('isRedTree')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: tr
                                      PsiElement(identifier)('tr')
                                    PsiElement())(')')
                                PsiElement())(')')
                                PsiWhiteSpace(' ')
                                BlockExpression
                                  PsiElement({)('{')
                                  PsiWhiteSpace('\n      ')
                                  MethodCall
                                    ReferenceExpression: RedTree
                                      PsiElement(identifier)('RedTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: tr.key
                                        ReferenceExpression: tr
                                          PsiElement(identifier)('tr')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('key')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tr.value
                                        ReferenceExpression: tr
                                          PsiElement(identifier)('tr')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('value')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: append
                                          PsiElement(identifier)('append')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr.left
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('left')
                                          PsiElement())(')')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: tr.right
                                        ReferenceExpression: tr
                                          PsiElement(identifier)('tr')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('right')
                                      PsiElement())(')')
                                  PsiWhiteSpace('\n    ')
                                  PsiElement(})('}')
                                PsiWhiteSpace(' ')
                                PsiElement(else)('else')
                                PsiWhiteSpace(' ')
                                IfStatement
                                  PsiElement(if)('if')
                                  PsiWhiteSpace(' ')
                                  PsiElement(()('(')
                                  MethodCall
                                    ReferenceExpression: isRedTree
                                      PsiElement(identifier)('isRedTree')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: tl
                                        PsiElement(identifier)('tl')
                                      PsiElement())(')')
                                  PsiElement())(')')
                                  PsiWhiteSpace(' ')
                                  BlockExpression
                                    PsiElement({)('{')
                                    PsiWhiteSpace('\n      ')
                                    MethodCall
                                      ReferenceExpression: RedTree
                                        PsiElement(identifier)('RedTree')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: tl.key
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('key')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tl.value
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('value')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tl.left
                                          ReferenceExpression: tl
                                            PsiElement(identifier)('tl')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('left')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        MethodCall
                                          ReferenceExpression: append
                                            PsiElement(identifier)('append')
                                          ArgumentList
                                            PsiElement(()('(')
                                            ReferenceExpression: tl.right
                                              ReferenceExpression: tl
                                                PsiElement(identifier)('tl')
                                              PsiElement(.)('.')
                                              PsiElement(identifier)('right')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: tr
                                              PsiElement(identifier)('tr')
                                            PsiElement())(')')
                                        PsiElement())(')')
                                    PsiWhiteSpace('\n    ')
                                    PsiElement(})('}')
                                  PsiWhiteSpace(' ')
                                  PsiElement(else)('else')
                                  PsiWhiteSpace(' ')
                                  BlockExpression
                                    PsiElement({)('{')
                                    PsiWhiteSpace('\n      ')
                                    MethodCall
                                      ReferenceExpression: sys.error
                                        ReferenceExpression: sys
                                          PsiElement(identifier)('sys')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('error')
                                      ArgumentList
                                        PsiElement(()('(')
                                        InfixExpression
                                          InfixExpression
                                            InfixExpression
                                              StringLiteral
                                                PsiElement(string content)('"unmatched tree on append: "')
                                              PsiWhiteSpace(' ')
                                              ReferenceExpression: +
                                                PsiElement(identifier)('+')
                                              PsiWhiteSpace(' ')
                                              ReferenceExpression: tl
                                                PsiElement(identifier)('tl')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: +
                                              PsiElement(identifier)('+')
                                            PsiWhiteSpace(' ')
                                            StringLiteral
                                              PsiElement(string content)('", "')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: +
                                            PsiElement(identifier)('+')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: tr
                                            PsiElement(identifier)('tr')
                                        PsiElement())(')')
                                    PsiWhiteSpace('\n    ')
                                    PsiElement(})('}')
                    PsiWhiteSpace('\n\n    ')
                    ScPatternDefinition: cmp
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: cmp
                          PsiElement(identifier)('cmp')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: ordering.compare
                          ReferenceExpression: ordering
                            PsiElement(identifier)('ordering')
                          PsiElement(.)('.')
                          PsiElement(identifier)('compare')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: k
                            PsiElement(identifier)('k')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: cmp
                          PsiElement(identifier)('cmp')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: <
                          PsiElement(identifier)('<')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: delLeft
                        PsiElement(identifier)('delLeft')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: cmp
                            PsiElement(identifier)('cmp')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: >
                            PsiElement(identifier)('>')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('0')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: delRight
                          PsiElement(identifier)('delRight')
                        PsiWhiteSpace('\n    ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: append
                            PsiElement(identifier)('append')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree.left
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.right
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: doFrom
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('doFrom')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: from
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('from')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: ordering
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ordering')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Ordering[A]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: ordering.lt
                        ReferenceExpression: ordering
                          PsiElement(identifier)('ordering')
                        PsiElement(.)('.')
                        PsiElement(identifier)('lt')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.key
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('key')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: from
                          PsiElement(identifier)('from')
                        PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: doFrom
                          PsiElement(identifier)('doFrom')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: from
                            PsiElement(identifier)('from')
                          PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: newLeft
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: newLeft
                        PsiElement(identifier)('newLeft')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: doFrom
                        PsiElement(identifier)('doFrom')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: from
                          PsiElement(identifier)('from')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: newLeft
                        PsiElement(identifier)('newLeft')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree.left
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('left')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace('\n    ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: newLeft
                          PsiElement(identifier)('newLeft')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: eq
                          PsiElement(identifier)('eq')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: upd
                          PsiElement(identifier)('upd')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.value
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          AssignStatement
                            ReferenceExpression: overwrite
                              PsiElement(identifier)('overwrite')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            BooleanLiteral
                              PsiElement(false)('false')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: rebalance
                          PsiElement(identifier)('rebalance')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: newLeft
                            PsiElement(identifier)('newLeft')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: doTo
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('doTo')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: to
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('to')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: ordering
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ordering')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Ordering[A]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: ordering.lt
                        ReferenceExpression: ordering
                          PsiElement(identifier)('ordering')
                        PsiElement(.)('.')
                        PsiElement(identifier)('lt')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: to
                          PsiElement(identifier)('to')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: tree.key
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('key')
                        PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: doTo
                          PsiElement(identifier)('doTo')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: to
                            PsiElement(identifier)('to')
                          PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: newRight
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: newRight
                        PsiElement(identifier)('newRight')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: doTo
                        PsiElement(identifier)('doTo')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.right
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('right')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: to
                          PsiElement(identifier)('to')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: newRight
                        PsiElement(identifier)('newRight')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree.right
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('right')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace('\n    ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: newRight
                          PsiElement(identifier)('newRight')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: eq
                          PsiElement(identifier)('eq')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: upd
                          PsiElement(identifier)('upd')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.value
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          AssignStatement
                            ReferenceExpression: overwrite
                              PsiElement(identifier)('overwrite')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            BooleanLiteral
                              PsiElement(false)('false')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: rebalance
                          PsiElement(identifier)('rebalance')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: newRight
                            PsiElement(identifier)('newRight')
                          PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: doUntil
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('doUntil')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: until
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('until')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: ordering
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ordering')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Ordering[A]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: ordering.lteq
                        ReferenceExpression: ordering
                          PsiElement(identifier)('ordering')
                        PsiElement(.)('.')
                        PsiElement(identifier)('lteq')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: until
                          PsiElement(identifier)('until')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: tree.key
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('key')
                        PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: doUntil
                          PsiElement(identifier)('doUntil')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: until
                            PsiElement(identifier)('until')
                          PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: newRight
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: newRight
                        PsiElement(identifier)('newRight')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: doUntil
                        PsiElement(identifier)('doUntil')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.right
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('right')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: until
                          PsiElement(identifier)('until')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: newRight
                        PsiElement(identifier)('newRight')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree.right
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('right')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace('\n    ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: newRight
                          PsiElement(identifier)('newRight')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: eq
                          PsiElement(identifier)('eq')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: upd
                          PsiElement(identifier)('upd')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.value
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          AssignStatement
                            ReferenceExpression: overwrite
                              PsiElement(identifier)('overwrite')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            BooleanLiteral
                              PsiElement(false)('false')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: rebalance
                          PsiElement(identifier)('rebalance')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: newRight
                            PsiElement(identifier)('newRight')
                          PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: doRange
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('doRange')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: from
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('from')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: until
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('until')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: ordering
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ordering')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Ordering[A]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: ordering.lt
                        ReferenceExpression: ordering
                          PsiElement(identifier)('ordering')
                        PsiElement(.)('.')
                        PsiElement(identifier)('lt')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.key
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('key')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: from
                          PsiElement(identifier)('from')
                        PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: doRange
                          PsiElement(identifier)('doRange')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: from
                            PsiElement(identifier)('from')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: until
                            PsiElement(identifier)('until')
                          PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: ordering.lteq
                        ReferenceExpression: ordering
                          PsiElement(identifier)('ordering')
                        PsiElement(.)('.')
                        PsiElement(identifier)('lteq')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: until
                          PsiElement(identifier)('until')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: tree.key
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('key')
                        PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: doRange
                          PsiElement(identifier)('doRange')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: from
                            PsiElement(identifier)('from')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: until
                            PsiElement(identifier)('until')
                          PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: newLeft
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: newLeft
                        PsiElement(identifier)('newLeft')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: doFrom
                        PsiElement(identifier)('doFrom')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: from
                          PsiElement(identifier)('from')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: newRight
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: newRight
                        PsiElement(identifier)('newRight')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: doUntil
                        PsiElement(identifier)('doUntil')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.right
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('right')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: until
                          PsiElement(identifier)('until')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ExpressionInParenthesis
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: newLeft
                            PsiElement(identifier)('newLeft')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                        PsiElement())(')')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: &&
                        PsiElement(identifier)('&&')
                      PsiWhiteSpace(' ')
                      ExpressionInParenthesis
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: newRight
                            PsiElement(identifier)('newRight')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                        PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace('\n    ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: newLeft
                          PsiElement(identifier)('newLeft')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: eq
                          PsiElement(identifier)('eq')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: upd
                          PsiElement(identifier)('upd')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: newRight
                            PsiElement(identifier)('newRight')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.value
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          AssignStatement
                            ReferenceExpression: overwrite
                              PsiElement(identifier)('overwrite')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            BooleanLiteral
                              PsiElement(false)('false')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: newRight
                            PsiElement(identifier)('newRight')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          NullLiteral
                            PsiElement(null)('null')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: upd
                            PsiElement(identifier)('upd')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: newLeft
                              PsiElement(identifier)('newLeft')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.key
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.value
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            AssignStatement
                              ReferenceExpression: overwrite
                                PsiElement(identifier)('overwrite')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              BooleanLiteral
                                PsiElement(false)('false')
                            PsiElement())(')')
                        PsiWhiteSpace('\n    ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: rebalance
                            PsiElement(identifier)('rebalance')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: newLeft
                              PsiElement(identifier)('newLeft')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: newRight
                              PsiElement(identifier)('newRight')
                            PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: doDrop
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('doDrop')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: n
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('n')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: <=
                        PsiElement(identifier)('<=')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('0')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: >=
                        PsiElement(identifier)('>=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: this.count
                          ThisReference
                            PsiElement(this)('this')
                          PsiElement(.)('.')
                          PsiElement(identifier)('count')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: count
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: count
                        PsiElement(identifier)('count')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: this.count
                        ThisReference
                          PsiElement(this)('this')
                        PsiElement(.)('.')
                        PsiElement(identifier)('count')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: >
                        PsiElement(identifier)('>')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: count
                        PsiElement(identifier)('count')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: doDrop
                          PsiElement(identifier)('doDrop')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          InfixExpression
                            InfixExpression
                              ReferenceExpression: n
                                PsiElement(identifier)('n')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: count
                                PsiElement(identifier)('count')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -
                              PsiElement(identifier)('-')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('1')
                          PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: newLeft
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: newLeft
                        PsiElement(identifier)('newLeft')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: doDrop
                        PsiElement(identifier)('doDrop')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: n
                          PsiElement(identifier)('n')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: newLeft
                        PsiElement(identifier)('newLeft')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree.left
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('left')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace('\n    ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: newLeft
                          PsiElement(identifier)('newLeft')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: eq
                          PsiElement(identifier)('eq')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: updNth
                          PsiElement(identifier)('updNth')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          InfixExpression
                            InfixExpression
                              ReferenceExpression: n
                                PsiElement(identifier)('n')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: count
                                PsiElement(identifier)('count')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -
                              PsiElement(identifier)('-')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('1')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.value
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          AssignStatement
                            ReferenceExpression: overwrite
                              PsiElement(identifier)('overwrite')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            BooleanLiteral
                              PsiElement(false)('false')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: rebalance
                          PsiElement(identifier)('rebalance')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: newLeft
                            PsiElement(identifier)('newLeft')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: doTake
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('doTake')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: n
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('n')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: <=
                        PsiElement(identifier)('<=')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('0')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: >=
                        PsiElement(identifier)('>=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: this.count
                          ThisReference
                            PsiElement(this)('this')
                          PsiElement(.)('.')
                          PsiElement(identifier)('count')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: count
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: count
                        PsiElement(identifier)('count')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: this.count
                        ThisReference
                          PsiElement(this)('this')
                        PsiElement(.)('.')
                        PsiElement(identifier)('count')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: <=
                        PsiElement(identifier)('<=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: count
                        PsiElement(identifier)('count')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: doTake
                          PsiElement(identifier)('doTake')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: n
                            PsiElement(identifier)('n')
                          PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: newRight
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: newRight
                        PsiElement(identifier)('newRight')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: doTake
                        PsiElement(identifier)('doTake')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.right
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('right')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        InfixExpression
                          InfixExpression
                            ReferenceExpression: n
                              PsiElement(identifier)('n')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -
                              PsiElement(identifier)('-')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: count
                              PsiElement(identifier)('count')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: -
                            PsiElement(identifier)('-')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('1')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: newRight
                        PsiElement(identifier)('newRight')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree.right
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('right')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace('\n    ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: newRight
                          PsiElement(identifier)('newRight')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: eq
                          PsiElement(identifier)('eq')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: updNth
                          PsiElement(identifier)('updNth')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: n
                            PsiElement(identifier)('n')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.value
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          AssignStatement
                            ReferenceExpression: overwrite
                              PsiElement(identifier)('overwrite')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            BooleanLiteral
                              PsiElement(false)('false')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: rebalance
                          PsiElement(identifier)('rebalance')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: newRight
                            PsiElement(identifier)('newRight')
                          PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: doSlice
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('doSlice')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: from
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('from')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: until
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('until')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tree[A, B]
                  SimpleType: Tree
                    CodeReferenceElement: Tree
                      PsiElement(identifier)('Tree')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: tree
                        PsiElement(identifier)('tree')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: eq
                        PsiElement(identifier)('eq')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: count
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: count
                        PsiElement(identifier)('count')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: this.count
                        ThisReference
                          PsiElement(this)('this')
                        PsiElement(.)('.')
                        PsiElement(identifier)('count')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: from
                        PsiElement(identifier)('from')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: >
                        PsiElement(identifier)('>')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: count
                        PsiElement(identifier)('count')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: doSlice
                          PsiElement(identifier)('doSlice')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          InfixExpression
                            InfixExpression
                              ReferenceExpression: from
                                PsiElement(identifier)('from')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: count
                                PsiElement(identifier)('count')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -
                              PsiElement(identifier)('-')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('1')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          InfixExpression
                            InfixExpression
                              ReferenceExpression: until
                                PsiElement(identifier)('until')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: count
                                PsiElement(identifier)('count')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -
                              PsiElement(identifier)('-')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('1')
                          PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: until
                        PsiElement(identifier)('until')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: <=
                        PsiElement(identifier)('<=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: count
                        PsiElement(identifier)('count')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReturnStatement
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: doSlice
                          PsiElement(identifier)('doSlice')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: from
                            PsiElement(identifier)('from')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: until
                            PsiElement(identifier)('until')
                          PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: newLeft
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: newLeft
                        PsiElement(identifier)('newLeft')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: doDrop
                        PsiElement(identifier)('doDrop')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: from
                          PsiElement(identifier)('from')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: newRight
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: newRight
                        PsiElement(identifier)('newRight')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: doTake
                        PsiElement(identifier)('doTake')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree.right
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('right')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        InfixExpression
                          InfixExpression
                            ReferenceExpression: until
                              PsiElement(identifier)('until')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -
                              PsiElement(identifier)('-')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: count
                              PsiElement(identifier)('count')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: -
                            PsiElement(identifier)('-')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('1')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ExpressionInParenthesis
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: newLeft
                            PsiElement(identifier)('newLeft')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.left
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                        PsiElement())(')')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: &&
                        PsiElement(identifier)('&&')
                      PsiWhiteSpace(' ')
                      ExpressionInParenthesis
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: newRight
                            PsiElement(identifier)('newRight')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.right
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                        PsiElement())(')')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: tree
                      PsiElement(identifier)('tree')
                    PsiWhiteSpace('\n    ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: newLeft
                          PsiElement(identifier)('newLeft')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: eq
                          PsiElement(identifier)('eq')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: updNth
                          PsiElement(identifier)('updNth')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: newRight
                            PsiElement(identifier)('newRight')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          InfixExpression
                            InfixExpression
                              ReferenceExpression: from
                                PsiElement(identifier)('from')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: count
                                PsiElement(identifier)('count')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -
                              PsiElement(identifier)('-')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('1')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.value
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          AssignStatement
                            ReferenceExpression: overwrite
                              PsiElement(identifier)('overwrite')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            BooleanLiteral
                              PsiElement(false)('false')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: newRight
                            PsiElement(identifier)('newRight')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          NullLiteral
                            PsiElement(null)('null')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: updNth
                            PsiElement(identifier)('updNth')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: newLeft
                              PsiElement(identifier)('newLeft')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: until
                              PsiElement(identifier)('until')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.key
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: tree.value
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            AssignStatement
                              ReferenceExpression: overwrite
                                PsiElement(identifier)('overwrite')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              BooleanLiteral
                                PsiElement(false)('false')
                            PsiElement())(')')
                        PsiWhiteSpace('\n    ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: rebalance
                            PsiElement(identifier)('rebalance')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: newLeft
                              PsiElement(identifier)('newLeft')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: newRight
                              PsiElement(identifier)('newRight')
                            PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              PsiComment(comment)('// The zipper returned might have been traversed left-most (always the left child)')
              PsiWhiteSpace('\n  ')
              PsiComment(comment)('// or right-most (always the right child). Left trees are traversed right-most,')
              PsiWhiteSpace('\n  ')
              PsiComment(comment)('// and right trees are traversed leftmost.')
              PsiWhiteSpace('\n\n  ')
              PsiComment(comment)('// Returns the zipper for the side with deepest black nodes depth, a flag')
              PsiWhiteSpace('\n  ')
              PsiComment(comment)('// indicating whether the trees were unbalanced at all, and a flag indicating')
              PsiWhiteSpace('\n  ')
              PsiComment(comment)('// whether the zipper was traversed left-most or right-most.')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: compareDepth
                PsiComment(comment)('// If the trees were balanced, returns an empty zipper')
                PsiWhiteSpace('\n  ')
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('compareDepth')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: left
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('left')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: right
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('right')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                TupleType: (NList[Tree[A, B]], Boolean, Boolean, Int)
                  PsiElement(()('(')
                  TypesList
                    ParametrizedType: NList[Tree[A, B]]
                      SimpleType: NList
                        CodeReferenceElement: NList
                          PsiElement(identifier)('NList')
                      TypeArgumentsList
                        PsiElement([)('[')
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                        PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: Boolean
                      CodeReferenceElement: Boolean
                        PsiElement(identifier)('Boolean')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: Boolean
                      CodeReferenceElement: Boolean
                        PsiElement(identifier)('Boolean')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                  PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScImportStatement
                    PsiElement(import)('import')
                    PsiWhiteSpace(' ')
                    ImportExpression
                      CodeReferenceElement: NList.cons
                        CodeReferenceElement: NList
                          PsiElement(identifier)('NList')
                        PsiElement(.)('.')
                        PsiElement(identifier)('cons')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: unzip
                    PsiComment(comment)('// Once a side is found to be deeper, unzip it to the bottom')
                    PsiWhiteSpace('\n    ')
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('unzip')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: zipper
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('zipper')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: NList[Tree[A, B]]
                              SimpleType: NList
                                CodeReferenceElement: NList
                                  PsiElement(identifier)('NList')
                              TypeArgumentsList
                                PsiElement([)('[')
                                ParametrizedType: Tree[A, B]
                                  SimpleType: Tree
                                    CodeReferenceElement: Tree
                                      PsiElement(identifier)('Tree')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: A
                                      CodeReferenceElement: A
                                        PsiElement(identifier)('A')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    SimpleType: B
                                      CodeReferenceElement: B
                                        PsiElement(identifier)('B')
                                    PsiElement(])(']')
                                PsiElement(])(']')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        Parameter: leftMost
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('leftMost')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: NList[Tree[A, B]]
                      SimpleType: NList
                        CodeReferenceElement: NList
                          PsiElement(identifier)('NList')
                      TypeArgumentsList
                        PsiElement([)('[')
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScPatternDefinition: next
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: next
                            PsiElement(identifier)('next')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          ReferenceExpression: leftMost
                            PsiElement(identifier)('leftMost')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: zipper.head.left
                            ReferenceExpression: zipper.head
                              ReferenceExpression: zipper
                                PsiElement(identifier)('zipper')
                              PsiElement(.)('.')
                              PsiElement(identifier)('head')
                            PsiElement(.)('.')
                            PsiElement(identifier)('left')
                          PsiWhiteSpace(' ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: zipper.head.right
                            ReferenceExpression: zipper.head
                              ReferenceExpression: zipper
                                PsiElement(identifier)('zipper')
                              PsiElement(.)('.')
                              PsiElement(identifier)('head')
                            PsiElement(.)('.')
                            PsiElement(identifier)('right')
                      PsiWhiteSpace('\n      ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: next
                            PsiElement(identifier)('next')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          NullLiteral
                            PsiElement(null)('null')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: zipper
                          PsiElement(identifier)('zipper')
                        PsiWhiteSpace('\n      ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: unzip
                            PsiElement(identifier)('unzip')
                          ArgumentList
                            PsiElement(()('(')
                            MethodCall
                              ReferenceExpression: cons
                                PsiElement(identifier)('cons')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: next
                                  PsiElement(identifier)('next')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: zipper
                                  PsiElement(identifier)('zipper')
                                PsiElement())(')')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: leftMost
                              PsiElement(identifier)('leftMost')
                            PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n\n    ')
                  ScFunctionDefinition: unzipBoth
                    PsiComment(comment)('// Unzip left tree on the rightmost side and right tree on the leftmost side until one is')
                    PsiWhiteSpace('\n    ')
                    PsiComment(comment)('// found to be deeper, or the bottom is reached')
                    PsiWhiteSpace('\n    ')
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('unzipBoth')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: left
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('left')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Tree[A, B]
                              SimpleType: Tree
                                CodeReferenceElement: Tree
                                  PsiElement(identifier)('Tree')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement(,)(',')
                        PsiWhiteSpace('\n                  ')
                        Parameter: right
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('right')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Tree[A, B]
                              SimpleType: Tree
                                CodeReferenceElement: Tree
                                  PsiElement(identifier)('Tree')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement(,)(',')
                        PsiWhiteSpace('\n                  ')
                        Parameter: leftZipper
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('leftZipper')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: NList[Tree[A, B]]
                              SimpleType: NList
                                CodeReferenceElement: NList
                                  PsiElement(identifier)('NList')
                              TypeArgumentsList
                                PsiElement([)('[')
                                ParametrizedType: Tree[A, B]
                                  SimpleType: Tree
                                    CodeReferenceElement: Tree
                                      PsiElement(identifier)('Tree')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: A
                                      CodeReferenceElement: A
                                        PsiElement(identifier)('A')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    SimpleType: B
                                      CodeReferenceElement: B
                                        PsiElement(identifier)('B')
                                    PsiElement(])(']')
                                PsiElement(])(']')
                        PsiElement(,)(',')
                        PsiWhiteSpace('\n                  ')
                        Parameter: rightZipper
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('rightZipper')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: NList[Tree[A, B]]
                              SimpleType: NList
                                CodeReferenceElement: NList
                                  PsiElement(identifier)('NList')
                              TypeArgumentsList
                                PsiElement([)('[')
                                ParametrizedType: Tree[A, B]
                                  SimpleType: Tree
                                    CodeReferenceElement: Tree
                                      PsiElement(identifier)('Tree')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: A
                                      CodeReferenceElement: A
                                        PsiElement(identifier)('A')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    SimpleType: B
                                      CodeReferenceElement: B
                                        PsiElement(identifier)('B')
                                    PsiElement(])(']')
                                PsiElement(])(']')
                        PsiElement(,)(',')
                        PsiWhiteSpace('\n                  ')
                        Parameter: smallerDepth
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('smallerDepth')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TupleType: (NList[Tree[A, B]], Boolean, Boolean, Int)
                      PsiElement(()('(')
                      TypesList
                        ParametrizedType: NList[Tree[A, B]]
                          SimpleType: NList
                            CodeReferenceElement: NList
                              PsiElement(identifier)('NList')
                          TypeArgumentsList
                            PsiElement([)('[')
                            ParametrizedType: Tree[A, B]
                              SimpleType: Tree
                                CodeReferenceElement: Tree
                                  PsiElement(identifier)('Tree')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                            PsiElement(])(']')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                      PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          MethodCall
                            ReferenceExpression: isBlackTree
                              PsiElement(identifier)('isBlackTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: left
                                PsiElement(identifier)('left')
                              PsiElement())(')')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: &&
                            PsiElement(identifier)('&&')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: isBlackTree
                              PsiElement(identifier)('isBlackTree')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: right
                                PsiElement(identifier)('right')
                              PsiElement())(')')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n        ')
                          MethodCall
                            ReferenceExpression: unzipBoth
                              PsiElement(identifier)('unzipBoth')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: left.right
                                ReferenceExpression: left
                                  PsiElement(identifier)('left')
                                PsiElement(.)('.')
                                PsiElement(identifier)('right')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: right.left
                                ReferenceExpression: right
                                  PsiElement(identifier)('right')
                                PsiElement(.)('.')
                                PsiElement(identifier)('left')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: cons
                                  PsiElement(identifier)('cons')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: left
                                    PsiElement(identifier)('left')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: leftZipper
                                    PsiElement(identifier)('leftZipper')
                                  PsiElement())(')')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: cons
                                  PsiElement(identifier)('cons')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: right
                                    PsiElement(identifier)('right')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: rightZipper
                                    PsiElement(identifier)('rightZipper')
                                  PsiElement())(')')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              InfixExpression
                                ReferenceExpression: smallerDepth
                                  PsiElement(identifier)('smallerDepth')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: +
                                  PsiElement(identifier)('+')
                                PsiWhiteSpace(' ')
                                IntegerLiteral
                                  PsiElement(integer)('1')
                              PsiElement())(')')
                          PsiWhiteSpace('\n      ')
                          PsiElement(})('}')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          InfixExpression
                            MethodCall
                              ReferenceExpression: isRedTree
                                PsiElement(identifier)('isRedTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: left
                                  PsiElement(identifier)('left')
                                PsiElement())(')')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: &&
                              PsiElement(identifier)('&&')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: isRedTree
                                PsiElement(identifier)('isRedTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: right
                                  PsiElement(identifier)('right')
                                PsiElement())(')')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n        ')
                            MethodCall
                              ReferenceExpression: unzipBoth
                                PsiElement(identifier)('unzipBoth')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: left.right
                                  ReferenceExpression: left
                                    PsiElement(identifier)('left')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('right')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: right.left
                                  ReferenceExpression: right
                                    PsiElement(identifier)('right')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('left')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                MethodCall
                                  ReferenceExpression: cons
                                    PsiElement(identifier)('cons')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: left
                                      PsiElement(identifier)('left')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: leftZipper
                                      PsiElement(identifier)('leftZipper')
                                    PsiElement())(')')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                MethodCall
                                  ReferenceExpression: cons
                                    PsiElement(identifier)('cons')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: right
                                      PsiElement(identifier)('right')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: rightZipper
                                      PsiElement(identifier)('rightZipper')
                                    PsiElement())(')')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: smallerDepth
                                  PsiElement(identifier)('smallerDepth')
                                PsiElement())(')')
                            PsiWhiteSpace('\n      ')
                            PsiElement(})('}')
                          PsiWhiteSpace(' ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          IfStatement
                            PsiElement(if)('if')
                            PsiWhiteSpace(' ')
                            PsiElement(()('(')
                            MethodCall
                              ReferenceExpression: isRedTree
                                PsiElement(identifier)('isRedTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: right
                                  PsiElement(identifier)('right')
                                PsiElement())(')')
                            PsiElement())(')')
                            PsiWhiteSpace(' ')
                            BlockExpression
                              PsiElement({)('{')
                              PsiWhiteSpace('\n        ')
                              MethodCall
                                ReferenceExpression: unzipBoth
                                  PsiElement(identifier)('unzipBoth')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: left
                                    PsiElement(identifier)('left')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: right.left
                                    ReferenceExpression: right
                                      PsiElement(identifier)('right')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('left')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: leftZipper
                                    PsiElement(identifier)('leftZipper')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  MethodCall
                                    ReferenceExpression: cons
                                      PsiElement(identifier)('cons')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: right
                                        PsiElement(identifier)('right')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: rightZipper
                                        PsiElement(identifier)('rightZipper')
                                      PsiElement())(')')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: smallerDepth
                                    PsiElement(identifier)('smallerDepth')
                                  PsiElement())(')')
                              PsiWhiteSpace('\n      ')
                              PsiElement(})('}')
                            PsiWhiteSpace(' ')
                            PsiElement(else)('else')
                            PsiWhiteSpace(' ')
                            IfStatement
                              PsiElement(if)('if')
                              PsiWhiteSpace(' ')
                              PsiElement(()('(')
                              MethodCall
                                ReferenceExpression: isRedTree
                                  PsiElement(identifier)('isRedTree')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: left
                                    PsiElement(identifier)('left')
                                  PsiElement())(')')
                              PsiElement())(')')
                              PsiWhiteSpace(' ')
                              BlockExpression
                                PsiElement({)('{')
                                PsiWhiteSpace('\n        ')
                                MethodCall
                                  ReferenceExpression: unzipBoth
                                    PsiElement(identifier)('unzipBoth')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: left.right
                                      ReferenceExpression: left
                                        PsiElement(identifier)('left')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('right')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: right
                                      PsiElement(identifier)('right')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    MethodCall
                                      ReferenceExpression: cons
                                        PsiElement(identifier)('cons')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: left
                                          PsiElement(identifier)('left')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: leftZipper
                                          PsiElement(identifier)('leftZipper')
                                        PsiElement())(')')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: rightZipper
                                      PsiElement(identifier)('rightZipper')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: smallerDepth
                                      PsiElement(identifier)('smallerDepth')
                                    PsiElement())(')')
                                PsiWhiteSpace('\n      ')
                                PsiElement(})('}')
                              PsiWhiteSpace(' ')
                              PsiElement(else)('else')
                              PsiWhiteSpace(' ')
                              IfStatement
                                PsiElement(if)('if')
                                PsiWhiteSpace(' ')
                                PsiElement(()('(')
                                InfixExpression
                                  ExpressionInParenthesis
                                    PsiElement(()('(')
                                    InfixExpression
                                      ReferenceExpression: left
                                        PsiElement(identifier)('left')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: eq
                                        PsiElement(identifier)('eq')
                                      PsiWhiteSpace(' ')
                                      NullLiteral
                                        PsiElement(null)('null')
                                    PsiElement())(')')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: &&
                                    PsiElement(identifier)('&&')
                                  PsiWhiteSpace(' ')
                                  ExpressionInParenthesis
                                    PsiElement(()('(')
                                    InfixExpression
                                      ReferenceExpression: right
                                        PsiElement(identifier)('right')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: eq
                                        PsiElement(identifier)('eq')
                                      PsiWhiteSpace(' ')
                                      NullLiteral
                                        PsiElement(null)('null')
                                    PsiElement())(')')
                                PsiElement())(')')
                                PsiWhiteSpace(' ')
                                BlockExpression
                                  PsiElement({)('{')
                                  PsiWhiteSpace('\n        ')
                                  Tuple
                                    PsiElement(()('(')
                                    NullLiteral
                                      PsiElement(null)('null')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    BooleanLiteral
                                      PsiElement(true)('true')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    BooleanLiteral
                                      PsiElement(false)('false')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: smallerDepth
                                      PsiElement(identifier)('smallerDepth')
                                    PsiElement())(')')
                                  PsiWhiteSpace('\n      ')
                                  PsiElement(})('}')
                                PsiWhiteSpace(' ')
                                PsiElement(else)('else')
                                PsiWhiteSpace(' ')
                                IfStatement
                                  PsiElement(if)('if')
                                  PsiWhiteSpace(' ')
                                  PsiElement(()('(')
                                  InfixExpression
                                    ExpressionInParenthesis
                                      PsiElement(()('(')
                                      InfixExpression
                                        ReferenceExpression: left
                                          PsiElement(identifier)('left')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: eq
                                          PsiElement(identifier)('eq')
                                        PsiWhiteSpace(' ')
                                        NullLiteral
                                          PsiElement(null)('null')
                                      PsiElement())(')')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: &&
                                      PsiElement(identifier)('&&')
                                    PsiWhiteSpace(' ')
                                    MethodCall
                                      ReferenceExpression: isBlackTree
                                        PsiElement(identifier)('isBlackTree')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: right
                                          PsiElement(identifier)('right')
                                        PsiElement())(')')
                                  PsiElement())(')')
                                  PsiWhiteSpace(' ')
                                  BlockExpression
                                    PsiElement({)('{')
                                    PsiWhiteSpace('\n        ')
                                    ScPatternDefinition: leftMost
                                      AnnotationsList
                                        <empty list>
                                      Modifiers
                                        <empty list>
                                      PsiElement(val)('val')
                                      PsiWhiteSpace(' ')
                                      ListOfPatterns
                                        ReferencePattern: leftMost
                                          PsiElement(identifier)('leftMost')
                                      PsiWhiteSpace(' ')
                                      PsiElement(=)('=')
                                      PsiWhiteSpace(' ')
                                      BooleanLiteral
                                        PsiElement(true)('true')
                                    PsiWhiteSpace('\n        ')
                                    Tuple
                                      PsiElement(()('(')
                                      MethodCall
                                        ReferenceExpression: unzip
                                          PsiElement(identifier)('unzip')
                                        ArgumentList
                                          PsiElement(()('(')
                                          MethodCall
                                            ReferenceExpression: cons
                                              PsiElement(identifier)('cons')
                                            ArgumentList
                                              PsiElement(()('(')
                                              ReferenceExpression: right
                                                PsiElement(identifier)('right')
                                              PsiElement(,)(',')
                                              PsiWhiteSpace(' ')
                                              ReferenceExpression: rightZipper
                                                PsiElement(identifier)('rightZipper')
                                              PsiElement())(')')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: leftMost
                                            PsiElement(identifier)('leftMost')
                                          PsiElement())(')')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      BooleanLiteral
                                        PsiElement(false)('false')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: leftMost
                                        PsiElement(identifier)('leftMost')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: smallerDepth
                                        PsiElement(identifier)('smallerDepth')
                                      PsiElement())(')')
                                    PsiWhiteSpace('\n      ')
                                    PsiElement(})('}')
                                  PsiWhiteSpace(' ')
                                  PsiElement(else)('else')
                                  PsiWhiteSpace(' ')
                                  IfStatement
                                    PsiElement(if)('if')
                                    PsiWhiteSpace(' ')
                                    PsiElement(()('(')
                                    InfixExpression
                                      MethodCall
                                        ReferenceExpression: isBlackTree
                                          PsiElement(identifier)('isBlackTree')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: left
                                            PsiElement(identifier)('left')
                                          PsiElement())(')')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: &&
                                        PsiElement(identifier)('&&')
                                      PsiWhiteSpace(' ')
                                      ExpressionInParenthesis
                                        PsiElement(()('(')
                                        InfixExpression
                                          ReferenceExpression: right
                                            PsiElement(identifier)('right')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: eq
                                            PsiElement(identifier)('eq')
                                          PsiWhiteSpace(' ')
                                          NullLiteral
                                            PsiElement(null)('null')
                                        PsiElement())(')')
                                    PsiElement())(')')
                                    PsiWhiteSpace(' ')
                                    BlockExpression
                                      PsiElement({)('{')
                                      PsiWhiteSpace('\n        ')
                                      ScPatternDefinition: leftMost
                                        AnnotationsList
                                          <empty list>
                                        Modifiers
                                          <empty list>
                                        PsiElement(val)('val')
                                        PsiWhiteSpace(' ')
                                        ListOfPatterns
                                          ReferencePattern: leftMost
                                            PsiElement(identifier)('leftMost')
                                        PsiWhiteSpace(' ')
                                        PsiElement(=)('=')
                                        PsiWhiteSpace(' ')
                                        BooleanLiteral
                                          PsiElement(false)('false')
                                      PsiWhiteSpace('\n        ')
                                      Tuple
                                        PsiElement(()('(')
                                        MethodCall
                                          ReferenceExpression: unzip
                                            PsiElement(identifier)('unzip')
                                          ArgumentList
                                            PsiElement(()('(')
                                            MethodCall
                                              ReferenceExpression: cons
                                                PsiElement(identifier)('cons')
                                              ArgumentList
                                                PsiElement(()('(')
                                                ReferenceExpression: left
                                                  PsiElement(identifier)('left')
                                                PsiElement(,)(',')
                                                PsiWhiteSpace(' ')
                                                ReferenceExpression: leftZipper
                                                  PsiElement(identifier)('leftZipper')
                                                PsiElement())(')')
                                            PsiElement(,)(',')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: leftMost
                                              PsiElement(identifier)('leftMost')
                                            PsiElement())(')')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        BooleanLiteral
                                          PsiElement(false)('false')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: leftMost
                                          PsiElement(identifier)('leftMost')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: smallerDepth
                                          PsiElement(identifier)('smallerDepth')
                                        PsiElement())(')')
                                      PsiWhiteSpace('\n      ')
                                      PsiElement(})('}')
                                    PsiWhiteSpace(' ')
                                    PsiElement(else)('else')
                                    PsiWhiteSpace(' ')
                                    BlockExpression
                                      PsiElement({)('{')
                                      PsiWhiteSpace('\n        ')
                                      MethodCall
                                        ReferenceExpression: sys.error
                                          ReferenceExpression: sys
                                            PsiElement(identifier)('sys')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('error')
                                        ArgumentList
                                          PsiElement(()('(')
                                          InfixExpression
                                            InfixExpression
                                              InfixExpression
                                                StringLiteral
                                                  PsiElement(string content)('"unmatched trees in unzip: "')
                                                PsiWhiteSpace(' ')
                                                ReferenceExpression: +
                                                  PsiElement(identifier)('+')
                                                PsiWhiteSpace(' ')
                                                ReferenceExpression: left
                                                  PsiElement(identifier)('left')
                                              PsiWhiteSpace(' ')
                                              ReferenceExpression: +
                                                PsiElement(identifier)('+')
                                              PsiWhiteSpace(' ')
                                              StringLiteral
                                                PsiElement(string content)('", "')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: +
                                              PsiElement(identifier)('+')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: right
                                              PsiElement(identifier)('right')
                                          PsiElement())(')')
                                      PsiWhiteSpace('\n      ')
                                      PsiElement(})('}')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  MethodCall
                    ReferenceExpression: unzipBoth
                      PsiElement(identifier)('unzipBoth')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: left
                        PsiElement(identifier)('left')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: right
                        PsiElement(identifier)('right')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      NullLiteral
                        PsiElement(null)('null')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('0')
                      PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScFunctionDefinition: rebalance
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('rebalance')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: tree
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('tree')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: newLeft
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('newLeft')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: newRight
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('newRight')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: findDepth
                    PsiComment(comment)('// This is like drop(n-1), but only counting black nodes')
                    PsiWhiteSpace('\n    ')
                    AnnotationsList
                      Annotation
                        PsiElement(@)('@')
                        AnnotationExpression
                          ConstructorInvocation
                            SimpleType: tailrec
                              CodeReferenceElement: tailrec
                                PsiElement(identifier)('tailrec')
                    Modifiers
                      <empty list>
                    PsiWhiteSpace('\n    ')
                    PsiElement(def)('def')
                    PsiWhiteSpace('  ')
                    PsiElement(identifier)('findDepth')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: zipper
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('zipper')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: NList[Tree[A, B]]
                              SimpleType: NList
                                CodeReferenceElement: NList
                                  PsiElement(identifier)('NList')
                              TypeArgumentsList
                                PsiElement([)('[')
                                ParametrizedType: Tree[A, B]
                                  SimpleType: Tree
                                    CodeReferenceElement: Tree
                                      PsiElement(identifier)('Tree')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: A
                                      CodeReferenceElement: A
                                        PsiElement(identifier)('A')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    SimpleType: B
                                      CodeReferenceElement: B
                                        PsiElement(identifier)('B')
                                    PsiElement(])(']')
                                PsiElement(])(']')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        Parameter: depth
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('depth')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: NList[Tree[A, B]]
                      SimpleType: NList
                        CodeReferenceElement: NList
                          PsiElement(identifier)('NList')
                      TypeArgumentsList
                        PsiElement([)('[')
                        ParametrizedType: Tree[A, B]
                          SimpleType: Tree
                            CodeReferenceElement: Tree
                              PsiElement(identifier)('Tree')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: zipper
                          PsiElement(identifier)('zipper')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: eq
                          PsiElement(identifier)('eq')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      BlockExpression
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        MethodCall
                          ReferenceExpression: sys.error
                            ReferenceExpression: sys
                              PsiElement(identifier)('sys')
                            PsiElement(.)('.')
                            PsiElement(identifier)('error')
                          ArgumentList
                            PsiElement(()('(')
                            StringLiteral
                              PsiElement(string content)('"Defect: unexpected empty zipper while computing range"')
                            PsiElement())(')')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                      PsiWhiteSpace(' ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: isBlackTree
                            PsiElement(identifier)('isBlackTree')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: zipper.head
                              ReferenceExpression: zipper
                                PsiElement(identifier)('zipper')
                              PsiElement(.)('.')
                              PsiElement(identifier)('head')
                            PsiElement())(')')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n        ')
                          IfStatement
                            PsiElement(if)('if')
                            PsiWhiteSpace(' ')
                            PsiElement(()('(')
                            InfixExpression
                              ReferenceExpression: depth
                                PsiElement(identifier)('depth')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: ==
                                PsiElement(identifier)('==')
                              PsiWhiteSpace(' ')
                              IntegerLiteral
                                PsiElement(integer)('1')
                            PsiElement())(')')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: zipper
                              PsiElement(identifier)('zipper')
                            PsiWhiteSpace(' ')
                            PsiElement(else)('else')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: findDepth
                                PsiElement(identifier)('findDepth')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: zipper.tail
                                  ReferenceExpression: zipper
                                    PsiElement(identifier)('zipper')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('tail')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                InfixExpression
                                  ReferenceExpression: depth
                                    PsiElement(identifier)('depth')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: -
                                    PsiElement(identifier)('-')
                                  PsiWhiteSpace(' ')
                                  IntegerLiteral
                                    PsiElement(integer)('1')
                                PsiElement())(')')
                          PsiWhiteSpace('\n      ')
                          PsiElement(})('}')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n        ')
                          MethodCall
                            ReferenceExpression: findDepth
                              PsiElement(identifier)('findDepth')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: zipper.tail
                                ReferenceExpression: zipper
                                  PsiElement(identifier)('zipper')
                                PsiElement(.)('.')
                                PsiElement(identifier)('tail')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: depth
                                PsiElement(identifier)('depth')
                              PsiElement())(')')
                          PsiWhiteSpace('\n      ')
                          PsiElement(})('}')
                  PsiWhiteSpace('\n\n    ')
                  ScPatternDefinition: blkNewLeft
                    PsiComment(comment)('// Blackening the smaller tree avoids balancing problems on union;')
                    PsiWhiteSpace('\n    ')
                    PsiComment(comment)('// this can't be done later, though, or it would change the result of compareDepth')
                    PsiWhiteSpace('\n    ')
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: blkNewLeft
                        PsiElement(identifier)('blkNewLeft')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: blacken
                        PsiElement(identifier)('blacken')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: newLeft
                          PsiElement(identifier)('newLeft')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: blkNewRight
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: blkNewRight
                        PsiElement(identifier)('blkNewRight')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: blacken
                        PsiElement(identifier)('blacken')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: newRight
                          PsiElement(identifier)('newRight')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScPatternDefinition: zipper, levelled, leftMost, smallerDepth
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      TuplePattern
                        PsiElement(()('(')
                        ArgumentPatterns
                          ReferencePattern: zipper
                            PsiElement(identifier)('zipper')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferencePattern: levelled
                            PsiElement(identifier)('levelled')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferencePattern: leftMost
                            PsiElement(identifier)('leftMost')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferencePattern: smallerDepth
                            PsiElement(identifier)('smallerDepth')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: compareDepth
                        PsiElement(identifier)('compareDepth')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: blkNewLeft
                          PsiElement(identifier)('blkNewLeft')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: blkNewRight
                          PsiElement(identifier)('blkNewRight')
                        PsiElement())(')')
                  PsiWhiteSpace('\n\n    ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    ReferenceExpression: levelled
                      PsiElement(identifier)('levelled')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      MethodCall
                        ReferenceExpression: BlackTree
                          PsiElement(identifier)('BlackTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: tree.key
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree.value
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: blkNewLeft
                            PsiElement(identifier)('blkNewLeft')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: blkNewRight
                            PsiElement(identifier)('blkNewRight')
                          PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                    PsiWhiteSpace(' ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScPatternDefinition: zipFrom
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: zipFrom
                            PsiElement(identifier)('zipFrom')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: findDepth
                            PsiElement(identifier)('findDepth')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: zipper
                              PsiElement(identifier)('zipper')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: smallerDepth
                              PsiElement(identifier)('smallerDepth')
                            PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      ScPatternDefinition: union
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: union
                            PsiElement(identifier)('union')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          ReferenceExpression: leftMost
                            PsiElement(identifier)('leftMost')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n        ')
                            MethodCall
                              ReferenceExpression: RedTree
                                PsiElement(identifier)('RedTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree.key
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('key')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: tree.value
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('value')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: blkNewLeft
                                  PsiElement(identifier)('blkNewLeft')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: zipFrom.head
                                  ReferenceExpression: zipFrom
                                    PsiElement(identifier)('zipFrom')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('head')
                                PsiElement())(')')
                            PsiWhiteSpace('\n      ')
                            PsiElement(})('}')
                          PsiWhiteSpace(' ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n        ')
                            MethodCall
                              ReferenceExpression: RedTree
                                PsiElement(identifier)('RedTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: tree.key
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('key')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: tree.value
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('value')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: zipFrom.head
                                  ReferenceExpression: zipFrom
                                    PsiElement(identifier)('zipFrom')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('head')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: blkNewRight
                                  PsiElement(identifier)('blkNewRight')
                                PsiElement())(')')
                            PsiWhiteSpace('\n      ')
                            PsiElement(})('}')
                      PsiWhiteSpace('\n      ')
                      ScPatternDefinition: zippedTree
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: zippedTree
                            PsiElement(identifier)('zippedTree')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        MethodCall
                          MethodCall
                            ReferenceExpression: NList.foldLeft
                              ReferenceExpression: NList
                                PsiElement(identifier)('NList')
                              PsiElement(.)('.')
                              PsiElement(identifier)('foldLeft')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: zipFrom.tail
                                ReferenceExpression: zipFrom
                                  PsiElement(identifier)('zipFrom')
                                PsiElement(.)('.')
                                PsiElement(identifier)('tail')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              TypedExpression
                                ReferenceExpression: union
                                  PsiElement(identifier)('union')
                                PsiElement(:)(':')
                                PsiWhiteSpace(' ')
                                ParametrizedType: Tree[A, B]
                                  SimpleType: Tree
                                    CodeReferenceElement: Tree
                                      PsiElement(identifier)('Tree')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: A
                                      CodeReferenceElement: A
                                        PsiElement(identifier)('A')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    SimpleType: B
                                      CodeReferenceElement: B
                                        PsiElement(identifier)('B')
                                    PsiElement(])(']')
                              PsiElement())(')')
                          PsiWhiteSpace(' ')
                          ArgumentList
                            BlockExpression
                              PsiElement({)('{')
                              PsiWhiteSpace(' ')
                              FunctionExpression
                                Parameters
                                  ParametersClause
                                    PsiElement(()('(')
                                    Parameter: tree
                                      AnnotationsList
                                        <empty list>
                                      PsiElement(identifier)('tree')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    Parameter: node
                                      AnnotationsList
                                        <empty list>
                                      PsiElement(identifier)('node')
                                    PsiElement())(')')
                                PsiWhiteSpace(' ')
                                PsiElement(=>)('=>')
                                PsiWhiteSpace('\n        ')
                                BlockOfExpressions
                                  IfStatement
                                    PsiElement(if)('if')
                                    PsiWhiteSpace(' ')
                                    PsiElement(()('(')
                                    ReferenceExpression: leftMost
                                      PsiElement(identifier)('leftMost')
                                    PsiElement())(')')
                                    PsiWhiteSpace('\n          ')
                                    MethodCall
                                      ReferenceExpression: balanceLeft
                                        PsiElement(identifier)('balanceLeft')
                                      ArgumentList
                                        PsiElement(()('(')
                                        MethodCall
                                          ReferenceExpression: isBlackTree
                                            PsiElement(identifier)('isBlackTree')
                                          ArgumentList
                                            PsiElement(()('(')
                                            ReferenceExpression: node
                                              PsiElement(identifier)('node')
                                            PsiElement())(')')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: node.key
                                          ReferenceExpression: node
                                            PsiElement(identifier)('node')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('key')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: node.value
                                          ReferenceExpression: node
                                            PsiElement(identifier)('node')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('value')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tree
                                          PsiElement(identifier)('tree')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: node.right
                                          ReferenceExpression: node
                                            PsiElement(identifier)('node')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('right')
                                        PsiElement())(')')
                                    PsiWhiteSpace('\n        ')
                                    PsiElement(else)('else')
                                    PsiWhiteSpace('\n          ')
                                    MethodCall
                                      ReferenceExpression: balanceRight
                                        PsiElement(identifier)('balanceRight')
                                      ArgumentList
                                        PsiElement(()('(')
                                        MethodCall
                                          ReferenceExpression: isBlackTree
                                            PsiElement(identifier)('isBlackTree')
                                          ArgumentList
                                            PsiElement(()('(')
                                            ReferenceExpression: node
                                              PsiElement(identifier)('node')
                                            PsiElement())(')')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: node.key
                                          ReferenceExpression: node
                                            PsiElement(identifier)('node')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('key')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: node.value
                                          ReferenceExpression: node
                                            PsiElement(identifier)('node')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('value')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: node.left
                                          ReferenceExpression: node
                                            PsiElement(identifier)('node')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('left')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tree
                                          PsiElement(identifier)('tree')
                                        PsiElement())(')')
                              PsiWhiteSpace('\n      ')
                              PsiElement(})('}')
                      PsiWhiteSpace('\n      ')
                      ReferenceExpression: zippedTree
                        PsiElement(identifier)('zippedTree')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScClass: NList
                PsiComment(comment)('// Null optimized list implementation for tree rebalancing. null presents Nil.')
                PsiWhiteSpace('\n  ')
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('NList')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      ClassParameter: head
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('head')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ClassParameter: tail
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('tail')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: NList[A]
                            SimpleType: NList
                              CodeReferenceElement: NList
                                PsiElement(identifier)('NList')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                      PsiElement())(')')
                ExtendsBlock
                  <empty list>
              PsiWhiteSpace('\n\n  ')
              ScObject: NList
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(object)('object')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('NList')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n\n    ')
                    ScFunctionDefinition: cons
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('cons')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: B
                          PsiElement(identifier)('B')
                        PsiElement(])(']')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: x
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('x')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: xs
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('xs')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: NList[B]
                                SimpleType: NList
                                  CodeReferenceElement: NList
                                    PsiElement(identifier)('NList')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: NList[B]
                        SimpleType: NList
                          CodeReferenceElement: NList
                            PsiElement(identifier)('NList')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              SimpleType: NList
                                CodeReferenceElement: NList
                                  PsiElement(identifier)('NList')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: x
                                  PsiElement(identifier)('x')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: xs
                                  PsiElement(identifier)('xs')
                                PsiElement())(')')
                    PsiWhiteSpace('\n\n    ')
                    ScFunctionDefinition: foldLeft
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('foldLeft')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: A
                          PsiElement(identifier)('A')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeParameter: B
                          PsiElement(identifier)('B')
                        PsiElement(])(']')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: xs
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('xs')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: NList[A]
                                SimpleType: NList
                                  CodeReferenceElement: NList
                                    PsiElement(identifier)('NList')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(])(']')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: z
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('z')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                          PsiElement())(')')
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: f
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('f')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              FunctionalType: (B, A) => B
                                TupleType: (B, A)
                                  PsiElement(()('(')
                                  TypesList
                                    SimpleType: B
                                      CodeReferenceElement: B
                                        PsiElement(identifier)('B')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    SimpleType: A
                                      CodeReferenceElement: A
                                        PsiElement(identifier)('A')
                                  PsiElement())(')')
                                PsiWhiteSpace(' ')
                                PsiElement(=>)('=>')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                          PsiElement())(')')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      BlockExpression
                        PsiElement({)('{')
                        PsiWhiteSpace('\n      ')
                        ScVariableDefinition: acc
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(var)('var')
                          PsiWhiteSpace(' ')
                          ListOfPatterns
                            ReferencePattern: acc
                              PsiElement(identifier)('acc')
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: z
                            PsiElement(identifier)('z')
                        PsiWhiteSpace('\n      ')
                        ScVariableDefinition: these
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(var)('var')
                          PsiWhiteSpace(' ')
                          ListOfPatterns
                            ReferencePattern: these
                              PsiElement(identifier)('these')
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: xs
                            PsiElement(identifier)('xs')
                        PsiWhiteSpace('\n      ')
                        WhileStatement
                          PsiElement(while)('while')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          InfixExpression
                            ReferenceExpression: these
                              PsiElement(identifier)('these')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: ne
                              PsiElement(identifier)('ne')
                            PsiWhiteSpace(' ')
                            NullLiteral
                              PsiElement(null)('null')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n        ')
                            AssignStatement
                              ReferenceExpression: acc
                                PsiElement(identifier)('acc')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: f
                                  PsiElement(identifier)('f')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: acc
                                    PsiElement(identifier)('acc')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: these.head
                                    ReferenceExpression: these
                                      PsiElement(identifier)('these')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('head')
                                  PsiElement())(')')
                            PsiWhiteSpace('\n        ')
                            AssignStatement
                              ReferenceExpression: these
                                PsiElement(identifier)('these')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: these.tail
                                ReferenceExpression: these
                                  PsiElement(identifier)('these')
                                PsiElement(.)('.')
                                PsiElement(identifier)('tail')
                            PsiWhiteSpace('\n      ')
                            PsiElement(})('}')
                        PsiWhiteSpace('\n      ')
                        ReferenceExpression: acc
                          PsiElement(identifier)('acc')
                        PsiWhiteSpace('\n    ')
                        PsiElement(})('}')
                    PsiWhiteSpace('\n\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScClass: Tree
                PsiComment(BlockComment)('/*\n   * Forcing direct fields access using the @inline annotation helps speed up\n   * various operations (especially smallest/greatest and update/delete).\n   *\n   * Unfortunately the direct field access is not guaranteed to work (but\n   * works on the current implementation of the Scala compiler).\n   *\n   * An alternative is to implement the these classes using plain old Java code...\n   */')
                PsiWhiteSpace('\n  ')
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(sealed)('sealed')
                  PsiWhiteSpace(' ')
                  PsiElement(abstract)('abstract')
                PsiWhiteSpace(' ')
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Tree')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('+')
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      PsiWhiteSpace('\n    ')
                      ClassParameter: key
                        AnnotationsList
                          Annotation
                            PsiElement(@)('@')
                            AnnotationExpression
                              ConstructorInvocation
                                TypeInParenthesis: (`inline` @getter)
                                  PsiElement(()('(')
                                  TypeWithAnnotation: `inline` @getter
                                    SimpleType: `inline`
                                      CodeReferenceElement: `inline`
                                        PsiElement(identifier)('`inline`')
                                    PsiWhiteSpace(' ')
                                    AnnotationsList
                                      Annotation
                                        PsiElement(@)('@')
                                        AnnotationExpression
                                          ConstructorInvocation
                                            SimpleType: getter
                                              CodeReferenceElement: getter
                                                PsiElement(identifier)('getter')
                                  PsiElement())(')')
                        PsiWhiteSpace(' ')
                        Modifiers
                          PsiElement(final)('final')
                        PsiWhiteSpace(' ')
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('key')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace('\n    ')
                      ClassParameter: value
                        AnnotationsList
                          Annotation
                            PsiElement(@)('@')
                            AnnotationExpression
                              ConstructorInvocation
                                TypeInParenthesis: (`inline` @getter)
                                  PsiElement(()('(')
                                  TypeWithAnnotation: `inline` @getter
                                    SimpleType: `inline`
                                      CodeReferenceElement: `inline`
                                        PsiElement(identifier)('`inline`')
                                    PsiWhiteSpace(' ')
                                    AnnotationsList
                                      Annotation
                                        PsiElement(@)('@')
                                        AnnotationExpression
                                          ConstructorInvocation
                                            SimpleType: getter
                                              CodeReferenceElement: getter
                                                PsiElement(identifier)('getter')
                                  PsiElement())(')')
                        PsiWhiteSpace(' ')
                        Modifiers
                          PsiElement(final)('final')
                        PsiWhiteSpace(' ')
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('value')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement(,)(',')
                      PsiWhiteSpace('\n    ')
                      ClassParameter: left
                        AnnotationsList
                          Annotation
                            PsiElement(@)('@')
                            AnnotationExpression
                              ConstructorInvocation
                                TypeInParenthesis: (`inline` @getter)
                                  PsiElement(()('(')
                                  TypeWithAnnotation: `inline` @getter
                                    SimpleType: `inline`
                                      CodeReferenceElement: `inline`
                                        PsiElement(identifier)('`inline`')
                                    PsiWhiteSpace(' ')
                                    AnnotationsList
                                      Annotation
                                        PsiElement(@)('@')
                                        AnnotationExpression
                                          ConstructorInvocation
                                            SimpleType: getter
                                              CodeReferenceElement: getter
                                                PsiElement(identifier)('getter')
                                  PsiElement())(')')
                        PsiWhiteSpace(' ')
                        Modifiers
                          PsiElement(final)('final')
                        PsiWhiteSpace(' ')
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('left')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Tree[A, B]
                            SimpleType: Tree
                              CodeReferenceElement: Tree
                                PsiElement(identifier)('Tree')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace('\n    ')
                      ClassParameter: right
                        AnnotationsList
                          Annotation
                            PsiElement(@)('@')
                            AnnotationExpression
                              ConstructorInvocation
                                TypeInParenthesis: (`inline` @getter)
                                  PsiElement(()('(')
                                  TypeWithAnnotation: `inline` @getter
                                    SimpleType: `inline`
                                      CodeReferenceElement: `inline`
                                        PsiElement(identifier)('`inline`')
                                    PsiWhiteSpace(' ')
                                    AnnotationsList
                                      Annotation
                                        PsiElement(@)('@')
                                        AnnotationExpression
                                          ConstructorInvocation
                                            SimpleType: getter
                                              CodeReferenceElement: getter
                                                PsiElement(identifier)('getter')
                                  PsiElement())(')')
                        PsiWhiteSpace(' ')
                        Modifiers
                          PsiElement(final)('final')
                        PsiWhiteSpace(' ')
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('right')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Tree[A, B]
                            SimpleType: Tree
                              CodeReferenceElement: Tree
                                PsiElement(identifier)('Tree')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                PsiWhiteSpace('\n  ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      SimpleType: Serializable
                        CodeReferenceElement: Serializable
                          PsiElement(identifier)('Serializable')
                  PsiWhiteSpace(' ')
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScPatternDefinition: count
                      AnnotationsList
                        Annotation
                          PsiElement(@)('@')
                          AnnotationExpression
                            ConstructorInvocation
                              TypeInParenthesis: (`inline` @getter)
                                PsiElement(()('(')
                                TypeWithAnnotation: `inline` @getter
                                  SimpleType: `inline`
                                    CodeReferenceElement: `inline`
                                      PsiElement(identifier)('`inline`')
                                  PsiWhiteSpace(' ')
                                  AnnotationsList
                                    Annotation
                                      PsiElement(@)('@')
                                      AnnotationExpression
                                        ConstructorInvocation
                                          SimpleType: getter
                                            CodeReferenceElement: getter
                                              PsiElement(identifier)('getter')
                                PsiElement())(')')
                      PsiWhiteSpace(' ')
                      Modifiers
                        PsiElement(final)('final')
                      PsiWhiteSpace(' ')
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: count
                          PsiElement(identifier)('count')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      InfixExpression
                        InfixExpression
                          IntegerLiteral
                            PsiElement(integer)('1')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: +
                            PsiElement(identifier)('+')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: RedBlackTree.count
                              ReferenceExpression: RedBlackTree
                                PsiElement(identifier)('RedBlackTree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('count')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: left
                                PsiElement(identifier)('left')
                              PsiElement())(')')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: +
                          PsiElement(identifier)('+')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: RedBlackTree.count
                            ReferenceExpression: RedBlackTree
                              PsiElement(identifier)('RedBlackTree')
                            PsiElement(.)('.')
                            PsiElement(identifier)('count')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: right
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDeclaration: black
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('black')
                      Parameters
                        <empty list>
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDeclaration: red
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('red')
                      Parameters
                        <empty list>
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScClass: RedTree
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('RedTree')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('+')
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      ClassParameter: key
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('key')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace('\n                             ')
                      ClassParameter: value
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('value')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement(,)(',')
                      PsiWhiteSpace('\n                             ')
                      ClassParameter: left
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('left')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Tree[A, B]
                            SimpleType: Tree
                              CodeReferenceElement: Tree
                                PsiElement(identifier)('Tree')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace('\n                             ')
                      ClassParameter: right
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('right')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Tree[A, B]
                            SimpleType: Tree
                              CodeReferenceElement: Tree
                                PsiElement(identifier)('Tree')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: key
                          PsiElement(identifier)('key')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: value
                          PsiElement(identifier)('value')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: left
                          PsiElement(identifier)('left')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: right
                          PsiElement(identifier)('right')
                        PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: black
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('black')
                      Parameters
                        <empty list>
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: BlackTree
                          PsiElement(identifier)('BlackTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: key
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: value
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: left
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: right
                            PsiElement(identifier)('right')
                          PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: red
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('red')
                      Parameters
                        <empty list>
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ThisReference
                        PsiElement(this)('this')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: toString
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('toString')
                      Parameters
                        <empty list>
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      InfixExpression
                        InfixExpression
                          InfixExpression
                            InfixExpression
                              InfixExpression
                                InfixExpression
                                  InfixExpression
                                    InfixExpression
                                      StringLiteral
                                        PsiElement(string content)('"RedTree("')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: +
                                        PsiElement(identifier)('+')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: key
                                        PsiElement(identifier)('key')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: +
                                      PsiElement(identifier)('+')
                                    PsiWhiteSpace(' ')
                                    StringLiteral
                                      PsiElement(string content)('", "')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: +
                                    PsiElement(identifier)('+')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: value
                                    PsiElement(identifier)('value')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: +
                                  PsiElement(identifier)('+')
                                PsiWhiteSpace(' ')
                                StringLiteral
                                  PsiElement(string content)('", "')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: +
                                PsiElement(identifier)('+')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: left
                                PsiElement(identifier)('left')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: +
                              PsiElement(identifier)('+')
                            PsiWhiteSpace(' ')
                            StringLiteral
                              PsiElement(string content)('", "')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: +
                            PsiElement(identifier)('+')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: right
                            PsiElement(identifier)('right')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: +
                          PsiElement(identifier)('+')
                        PsiWhiteSpace(' ')
                        StringLiteral
                          PsiElement(string content)('")"')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScClass: BlackTree
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('BlackTree')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('+')
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      ClassParameter: key
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('key')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace('\n                               ')
                      ClassParameter: value
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('value')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement(,)(',')
                      PsiWhiteSpace('\n                               ')
                      ClassParameter: left
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('left')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Tree[A, B]
                            SimpleType: Tree
                              CodeReferenceElement: Tree
                                PsiElement(identifier)('Tree')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace('\n                               ')
                      ClassParameter: right
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('right')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Tree[A, B]
                            SimpleType: Tree
                              CodeReferenceElement: Tree
                                PsiElement(identifier)('Tree')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: key
                          PsiElement(identifier)('key')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: value
                          PsiElement(identifier)('value')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: left
                          PsiElement(identifier)('left')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: right
                          PsiElement(identifier)('right')
                        PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: black
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('black')
                      Parameters
                        <empty list>
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ThisReference
                        PsiElement(this)('this')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: red
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('red')
                      Parameters
                        <empty list>
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: RedTree
                          PsiElement(identifier)('RedTree')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: key
                            PsiElement(identifier)('key')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: value
                            PsiElement(identifier)('value')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: left
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: right
                            PsiElement(identifier)('right')
                          PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: toString
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('toString')
                      Parameters
                        <empty list>
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      InfixExpression
                        InfixExpression
                          InfixExpression
                            InfixExpression
                              InfixExpression
                                InfixExpression
                                  InfixExpression
                                    InfixExpression
                                      StringLiteral
                                        PsiElement(string content)('"BlackTree("')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: +
                                        PsiElement(identifier)('+')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: key
                                        PsiElement(identifier)('key')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: +
                                      PsiElement(identifier)('+')
                                    PsiWhiteSpace(' ')
                                    StringLiteral
                                      PsiElement(string content)('", "')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: +
                                    PsiElement(identifier)('+')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: value
                                    PsiElement(identifier)('value')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: +
                                  PsiElement(identifier)('+')
                                PsiWhiteSpace(' ')
                                StringLiteral
                                  PsiElement(string content)('", "')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: +
                                PsiElement(identifier)('+')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: left
                                PsiElement(identifier)('left')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: +
                              PsiElement(identifier)('+')
                            PsiWhiteSpace(' ')
                            StringLiteral
                              PsiElement(string content)('", "')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: +
                            PsiElement(identifier)('+')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: right
                            PsiElement(identifier)('right')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: +
                          PsiElement(identifier)('+')
                        PsiWhiteSpace(' ')
                        StringLiteral
                          PsiElement(string content)('")"')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScObject: RedTree
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(object)('object')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('RedTree')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: apply
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(inline)('inline')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('apply')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: A
                          PsiElement(identifier)('A')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeParameter: B
                          PsiElement(identifier)('B')
                        PsiElement(])(']')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: key
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('key')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: value
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('value')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: left
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('left')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: right
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('right')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              SimpleType: RedTree
                                CodeReferenceElement: RedTree
                                  PsiElement(identifier)('RedTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: key
                                  PsiElement(identifier)('key')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: value
                                  PsiElement(identifier)('value')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: left
                                  PsiElement(identifier)('left')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: right
                                  PsiElement(identifier)('right')
                                PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: unapply
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('unapply')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: A
                          PsiElement(identifier)('A')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeParameter: B
                          PsiElement(identifier)('B')
                        PsiElement(])(']')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: t
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('t')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: RedTree[A, B]
                                SimpleType: RedTree
                                  CodeReferenceElement: RedTree
                                    PsiElement(identifier)('RedTree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: Some
                          PsiElement(identifier)('Some')
                        ArgumentList
                          PsiElement(()('(')
                          Tuple
                            PsiElement(()('(')
                            ReferenceExpression: t.key
                              ReferenceExpression: t
                                PsiElement(identifier)('t')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: t.value
                              ReferenceExpression: t
                                PsiElement(identifier)('t')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: t.left
                              ReferenceExpression: t
                                PsiElement(identifier)('t')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: t.right
                              ReferenceExpression: t
                                PsiElement(identifier)('t')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                          PsiElement())(')')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              ScObject: BlackTree
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(object)('object')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('BlackTree')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: apply
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(inline)('inline')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('apply')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: A
                          PsiElement(identifier)('A')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeParameter: B
                          PsiElement(identifier)('B')
                        PsiElement(])(']')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: key
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('key')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: value
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('value')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: left
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('left')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          Parameter: right
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('right')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              SimpleType: BlackTree
                                CodeReferenceElement: BlackTree
                                  PsiElement(identifier)('BlackTree')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: key
                                  PsiElement(identifier)('key')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: value
                                  PsiElement(identifier)('value')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: left
                                  PsiElement(identifier)('left')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: right
                                  PsiElement(identifier)('right')
                                PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: unapply
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('unapply')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: A
                          PsiElement(identifier)('A')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeParameter: B
                          PsiElement(identifier)('B')
                        PsiElement(])(']')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: t
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('t')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: BlackTree[A, B]
                                SimpleType: BlackTree
                                  CodeReferenceElement: BlackTree
                                    PsiElement(identifier)('BlackTree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: Some
                          PsiElement(identifier)('Some')
                        ArgumentList
                          PsiElement(()('(')
                          Tuple
                            PsiElement(()('(')
                            ReferenceExpression: t.key
                              ReferenceExpression: t
                                PsiElement(identifier)('t')
                              PsiElement(.)('.')
                              PsiElement(identifier)('key')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: t.value
                              ReferenceExpression: t
                                PsiElement(identifier)('t')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: t.left
                              ReferenceExpression: t
                                PsiElement(identifier)('t')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: t.right
                              ReferenceExpression: t
                                PsiElement(identifier)('t')
                              PsiElement(.)('.')
                              PsiElement(identifier)('right')
                            PsiElement())(')')
                          PsiElement())(')')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScClass: TreeIterator
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(abstract)('abstract')
                PsiWhiteSpace(' ')
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('TreeIterator')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: R
                    PsiElement(identifier)('R')
                  PsiElement(])(']')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      ClassParameter: root
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('root')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Tree[A, B]
                            SimpleType: Tree
                              CodeReferenceElement: Tree
                                PsiElement(identifier)('Tree')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ClassParameter: start
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('start')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Option[A]
                            SimpleType: Option
                              CodeReferenceElement: Option
                                PsiElement(identifier)('Option')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(implicit)('implicit')
                      PsiWhiteSpace(' ')
                      ClassParameter: ordering
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('ordering')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Ordering[A]
                            SimpleType: Ordering
                              CodeReferenceElement: Ordering
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                      PsiElement())(')')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Iterator[R]
                        SimpleType: Iterator
                          CodeReferenceElement: Iterator
                            PsiElement(identifier)('Iterator')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: R
                            CodeReferenceElement: R
                              PsiElement(identifier)('R')
                          PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDeclaration: nextResult
                      AnnotationsList
                        <empty list>
                      Modifiers
                        AccessModifier
                          PsiElement(protected)('protected')
                          PsiElement([)('[')
                          PsiElement(this)('this')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('nextResult')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: tree
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tree')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: R
                        CodeReferenceElement: R
                          PsiElement(identifier)('R')
                    PsiWhiteSpace('\n\n    ')
                    ScFunctionDefinition: hasNext
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('hasNext')
                      Parameters
                        <empty list>
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: Boolean
                        CodeReferenceElement: Boolean
                          PsiElement(identifier)('Boolean')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      InfixExpression
                        ReferenceExpression: lookahead
                          PsiElement(identifier)('lookahead')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: ne
                          PsiElement(identifier)('ne')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                    PsiWhiteSpace('\n\n    ')
                    ScFunctionDefinition: next
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('next')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          PsiElement())(')')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: R
                        CodeReferenceElement: R
                          PsiElement(identifier)('R')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MatchStatement
                        ReferenceExpression: lookahead
                          PsiElement(identifier)('lookahead')
                        PsiWhiteSpace(' ')
                        PsiElement(match)('match')
                        PsiWhiteSpace(' ')
                        PsiElement({)('{')
                        PsiWhiteSpace('\n      ')
                        CaseClauses
                          CaseClause
                            PsiElement(case)('case')
                            PsiWhiteSpace(' ')
                            LiteralPattern
                              NullLiteral
                                PsiElement(null)('null')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace('\n        ')
                            BlockOfExpressions
                              ThrowStatement
                                PsiElement(throw)('throw')
                                PsiWhiteSpace(' ')
                                ScNewTemplateDefinition: <anonymous>
                                  PsiElement(new)('new')
                                  PsiWhiteSpace(' ')
                                  ExtendsBlock
                                    TemplateParents
                                      ConstructorInvocation
                                        SimpleType: NoSuchElementException
                                          CodeReferenceElement: NoSuchElementException
                                            PsiElement(identifier)('NoSuchElementException')
                                        ArgumentList
                                          PsiElement(()('(')
                                          StringLiteral
                                            PsiElement(string content)('"next on empty iterator"')
                                          PsiElement())(')')
                          PsiWhiteSpace('\n      ')
                          CaseClause
                            PsiElement(case)('case')
                            PsiWhiteSpace(' ')
                            ReferencePattern: tree
                              PsiElement(identifier)('tree')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace('\n        ')
                            BlockOfExpressions
                              AssignStatement
                                ReferenceExpression: lookahead
                                  PsiElement(identifier)('lookahead')
                                PsiWhiteSpace(' ')
                                PsiElement(=)('=')
                                PsiWhiteSpace(' ')
                                MethodCall
                                  ReferenceExpression: findLeftMostOrPopOnEmpty
                                    PsiElement(identifier)('findLeftMostOrPopOnEmpty')
                                  ArgumentList
                                    PsiElement(()('(')
                                    MethodCall
                                      ReferenceExpression: goRight
                                        PsiElement(identifier)('goRight')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: tree
                                          PsiElement(identifier)('tree')
                                        PsiElement())(')')
                                    PsiElement())(')')
                              PsiWhiteSpace('\n        ')
                              MethodCall
                                ReferenceExpression: nextResult
                                  PsiElement(identifier)('nextResult')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement())(')')
                        PsiWhiteSpace('\n    ')
                        PsiElement(})('}')
                    PsiWhiteSpace('\n\n')
                    ScFunctionDefinition: findLeftMostOrPopOnEmpty
                      PsiComment(comment)('//    @tailrec')
                      PsiWhiteSpace('\n    ')
                      AnnotationsList
                        <empty list>
                      Modifiers
                        AccessModifier
                          PsiElement(private)('private')
                          PsiElement([)('[')
                          PsiElement(this)('this')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('findLeftMostOrPopOnEmpty')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: tree
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tree')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace('\n      ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          NullLiteral
                            PsiElement(null)('null')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: popNext
                            PsiElement(identifier)('popNext')
                          ArgumentList
                            PsiElement(()('(')
                            PsiElement())(')')
                        PsiWhiteSpace('\n      ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          InfixExpression
                            ReferenceExpression: tree.left
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                              PsiElement(.)('.')
                              PsiElement(identifier)('left')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: eq
                              PsiElement(identifier)('eq')
                            PsiWhiteSpace(' ')
                            NullLiteral
                              PsiElement(null)('null')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiWhiteSpace('\n      ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: findLeftMostOrPopOnEmpty
                              PsiElement(identifier)('findLeftMostOrPopOnEmpty')
                            ArgumentList
                              PsiElement(()('(')
                              MethodCall
                                ReferenceExpression: goLeft
                                  PsiElement(identifier)('goLeft')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: tree
                                    PsiElement(identifier)('tree')
                                  PsiElement())(')')
                              PsiElement())(')')
                    PsiWhiteSpace('\n\n    ')
                    ScFunctionDefinition: pushNext
                      AnnotationsList
                        <empty list>
                      Modifiers
                        AccessModifier
                          PsiElement(private)('private')
                          PsiElement([)('[')
                          PsiElement(this)('this')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('pushNext')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: tree
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tree')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: Unit
                        CodeReferenceElement: Unit
                          PsiElement(identifier)('Unit')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      BlockExpression
                        PsiElement({)('{')
                        PsiWhiteSpace('\n      ')
                        TryStatement
                          PsiElement(try)('try')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n        ')
                            AssignStatement
                              MethodCall
                                ReferenceExpression: stackOfNexts
                                  PsiElement(identifier)('stackOfNexts')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: index
                                    PsiElement(identifier)('index')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: tree
                                PsiElement(identifier)('tree')
                            PsiWhiteSpace('\n        ')
                            InfixExpression
                              ReferenceExpression: index
                                PsiElement(identifier)('index')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: +=
                                PsiElement(identifier)('+=')
                              PsiWhiteSpace(' ')
                              IntegerLiteral
                                PsiElement(integer)('1')
                            PsiWhiteSpace('\n      ')
                            PsiElement(})('}')
                          PsiWhiteSpace(' ')
                          CatchBlock
                            PsiElement(catch)('catch')
                            PsiWhiteSpace(' ')
                            BlockExpression
                              PsiElement({)('{')
                              PsiWhiteSpace('\n        ')
                              CaseClauses
                                CaseClause
                                  PsiElement(case)('case')
                                  PsiWhiteSpace(' ')
                                  Scala3 TypedPattern
                                    WildcardPattern
                                      PsiElement(_)('_')
                                    PsiElement(:)(':')
                                    PsiWhiteSpace(' ')
                                    TypePattern
                                      SimpleType: ArrayIndexOutOfBoundsException
                                        CodeReferenceElement: ArrayIndexOutOfBoundsException
                                          PsiElement(identifier)('ArrayIndexOutOfBoundsException')
                                  PsiWhiteSpace(' ')
                                  PsiElement(=>)('=>')
                                  PsiWhiteSpace('\n          ')
                                  PsiComment(BlockComment)('/*\n           * Either the tree became unbalanced or we calculated the maximum height incorrectly.\n           * To avoid crashing the iterator we expand the path array. Obviously this should never\n           * happen...\n           *\n           * An exception handler is used instead of an if-condition to optimize the normal path.\n           * This makes a large difference in iteration speed!\n           */')
                                  PsiWhiteSpace('\n          ')
                                  BlockOfExpressions
                                    MethodCall
                                      ReferenceExpression: assert
                                        PsiElement(identifier)('assert')
                                      ArgumentList
                                        PsiElement(()('(')
                                        InfixExpression
                                          ReferenceExpression: index
                                            PsiElement(identifier)('index')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: >=
                                            PsiElement(identifier)('>=')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: stackOfNexts.length
                                            ReferenceExpression: stackOfNexts
                                              PsiElement(identifier)('stackOfNexts')
                                            PsiElement(.)('.')
                                            PsiElement(identifier)('length')
                                        PsiElement())(')')
                                    PsiWhiteSpace('\n          ')
                                    InfixExpression
                                      ReferenceExpression: stackOfNexts
                                        PsiElement(identifier)('stackOfNexts')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: :+=
                                        PsiElement(identifier)(':+=')
                                      PsiWhiteSpace(' ')
                                      NullLiteral
                                        PsiElement(null)('null')
                                    PsiWhiteSpace('\n          ')
                                    MethodCall
                                      ReferenceExpression: pushNext
                                        PsiElement(identifier)('pushNext')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: tree
                                          PsiElement(identifier)('tree')
                                        PsiElement())(')')
                              PsiWhiteSpace('\n      ')
                              PsiElement(})('}')
                        PsiWhiteSpace('\n    ')
                        PsiElement(})('}')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: popNext
                      AnnotationsList
                        <empty list>
                      Modifiers
                        AccessModifier
                          PsiElement(private)('private')
                          PsiElement([)('[')
                          PsiElement(this)('this')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('popNext')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          PsiElement())(')')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: index
                            PsiElement(identifier)('index')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: ==
                            PsiElement(identifier)('==')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('0')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n      ')
                          InfixExpression
                            ReferenceExpression: index
                              PsiElement(identifier)('index')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -=
                              PsiElement(identifier)('-=')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('1')
                          PsiWhiteSpace('\n      ')
                          MethodCall
                            ReferenceExpression: stackOfNexts
                              PsiElement(identifier)('stackOfNexts')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: index
                                PsiElement(identifier)('index')
                              PsiElement())(')')
                          PsiWhiteSpace('\n    ')
                          PsiElement(})('}')
                    PsiWhiteSpace('\n\n    ')
                    ScVariableDefinition: stackOfNexts
                      AnnotationsList
                        <empty list>
                      Modifiers
                        AccessModifier
                          PsiElement(private)('private')
                          PsiElement([)('[')
                          PsiElement(this)('this')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(var)('var')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: stackOfNexts
                          PsiElement(identifier)('stackOfNexts')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: root
                            PsiElement(identifier)('root')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          NullLiteral
                            PsiElement(null)('null')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n      ')
                          ScPatternDefinition: maximumHeight
                            PsiComment(BlockComment)('/*\n       * According to "Ralf Hinze. Constructing red-black trees" [http://www.cs.ox.ac.uk/ralf.hinze/publications/#P5]\n       * the maximum height of a red-black tree is 2*log_2(n + 2) - 2.\n       *\n       * According to {@see Integer#numberOfLeadingZeros} ceil(log_2(n)) = (32 - Integer.numberOfLeadingZeros(n - 1))\n       *\n       * We also don't store the deepest nodes in the path so the maximum path length is further reduced by one.\n       */')
                            PsiWhiteSpace('\n      ')
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(val)('val')
                            PsiWhiteSpace(' ')
                            ListOfPatterns
                              ReferencePattern: maximumHeight
                                PsiElement(identifier)('maximumHeight')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            InfixExpression
                              InfixExpression
                                InfixExpression
                                  IntegerLiteral
                                    PsiElement(integer)('2')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: *
                                    PsiElement(identifier)('*')
                                  PsiWhiteSpace(' ')
                                  ExpressionInParenthesis
                                    PsiElement(()('(')
                                    InfixExpression
                                      IntegerLiteral
                                        PsiElement(integer)('32')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: -
                                        PsiElement(identifier)('-')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: Integer.numberOfLeadingZeros
                                          ReferenceExpression: Integer
                                            PsiElement(identifier)('Integer')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('numberOfLeadingZeros')
                                        ArgumentList
                                          PsiElement(()('(')
                                          InfixExpression
                                            InfixExpression
                                              ReferenceExpression: root.count
                                                ReferenceExpression: root
                                                  PsiElement(identifier)('root')
                                                PsiElement(.)('.')
                                                PsiElement(identifier)('count')
                                              PsiWhiteSpace(' ')
                                              ReferenceExpression: +
                                                PsiElement(identifier)('+')
                                              PsiWhiteSpace(' ')
                                              IntegerLiteral
                                                PsiElement(integer)('2')
                                            PsiWhiteSpace(' ')
                                            ReferenceExpression: -
                                              PsiElement(identifier)('-')
                                            PsiWhiteSpace(' ')
                                            IntegerLiteral
                                              PsiElement(integer)('1')
                                          PsiElement())(')')
                                    PsiElement())(')')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: -
                                  PsiElement(identifier)('-')
                                PsiWhiteSpace(' ')
                                IntegerLiteral
                                  PsiElement(integer)('2')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              PsiWhiteSpace(' ')
                              IntegerLiteral
                                PsiElement(integer)('1')
                          PsiWhiteSpace('\n      ')
                          ScNewTemplateDefinition: <anonymous>
                            PsiElement(new)('new')
                            PsiWhiteSpace(' ')
                            ExtendsBlock
                              TemplateParents
                                ConstructorInvocation
                                  ParametrizedType: Array[Tree[A, B]]
                                    SimpleType: Array
                                      CodeReferenceElement: Array
                                        PsiElement(identifier)('Array')
                                    TypeArgumentsList
                                      PsiElement([)('[')
                                      ParametrizedType: Tree[A, B]
                                        SimpleType: Tree
                                          CodeReferenceElement: Tree
                                            PsiElement(identifier)('Tree')
                                        TypeArgumentsList
                                          PsiElement([)('[')
                                          SimpleType: A
                                            CodeReferenceElement: A
                                              PsiElement(identifier)('A')
                                          PsiElement(,)(',')
                                          PsiWhiteSpace(' ')
                                          SimpleType: B
                                            CodeReferenceElement: B
                                              PsiElement(identifier)('B')
                                          PsiElement(])(']')
                                      PsiElement(])(']')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: maximumHeight
                                      PsiElement(identifier)('maximumHeight')
                                    PsiElement())(')')
                          PsiWhiteSpace('\n    ')
                          PsiElement(})('}')
                    PsiWhiteSpace('\n    ')
                    ScVariableDefinition: index
                      AnnotationsList
                        <empty list>
                      Modifiers
                        AccessModifier
                          PsiElement(private)('private')
                          PsiElement([)('[')
                          PsiElement(this)('this')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(var)('var')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: index
                          PsiElement(identifier)('index')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('0')
                    PsiWhiteSpace('\n    ')
                    ScVariableDefinition: lookahead
                      AnnotationsList
                        <empty list>
                      Modifiers
                        AccessModifier
                          PsiElement(private)('private')
                          PsiElement([)('[')
                          PsiElement(this)('this')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(var)('var')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: lookahead
                          PsiElement(identifier)('lookahead')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A, B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      InfixExpression
                        InfixExpression
                          ReferenceExpression: start
                            PsiElement(identifier)('start')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: map
                            PsiElement(identifier)('map')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: startFrom
                            PsiElement(identifier)('startFrom')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: getOrElse
                          PsiElement(identifier)('getOrElse')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: findLeftMostOrPopOnEmpty
                            PsiElement(identifier)('findLeftMostOrPopOnEmpty')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: root
                              PsiElement(identifier)('root')
                            PsiElement())(')')
                    PsiWhiteSpace('\n\n    ')
                    ScFunctionDefinition: startFrom
                      DocComment
                        ScPsiDocToken(DOC_COMMENT_START)('/**')
                        ScPsiDocToken(DOC_WHITESPACE)('\n     ')
                        ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
                        ScDocParagraph
                          ScPsiDocToken(DOC_WHITESPACE)(' ')
                          ScPsiDocToken(DOC_COMMENT_DATA)('Find the leftmost subtree whose key is equal to the given key, or if no such thing,')
                          ScPsiDocToken(DOC_WHITESPACE)('\n     ')
                          ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
                          ScPsiDocToken(DOC_WHITESPACE)(' ')
                          ScPsiDocToken(DOC_COMMENT_DATA)('the leftmost subtree with the key that would be "next" after it according')
                          ScPsiDocToken(DOC_WHITESPACE)('\n     ')
                          ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
                          ScPsiDocToken(DOC_WHITESPACE)(' ')
                          ScPsiDocToken(DOC_COMMENT_DATA)('to the ordering. Along the way build up the iterator's path stack so that "next"')
                          ScPsiDocToken(DOC_WHITESPACE)('\n     ')
                          ScPsiDocToken(DOC_COMMENT_LEADING_ASTERISKS)('*')
                          ScPsiDocToken(DOC_WHITESPACE)(' ')
                          ScPsiDocToken(DOC_COMMENT_DATA)('functionality works.')
                          ScPsiDocToken(DOC_WHITESPACE)('\n     ')
                        ScPsiDocToken(DOC_COMMENT_END)('*/')
                      PsiWhiteSpace('\n    ')
                      AnnotationsList
                        <empty list>
                      Modifiers
                        AccessModifier
                          PsiElement(private)('private')
                          PsiElement([)('[')
                          PsiElement(this)('this')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('startFrom')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: key
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('key')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Tree[A,B]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: root
                            PsiElement(identifier)('root')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          NullLiteral
                            PsiElement(null)('null')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        NullLiteral
                          PsiElement(null)('null')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n      ')
                          ScFunctionDefinition: find
                            AnnotationsList
                              Annotation
                                PsiElement(@)('@')
                                AnnotationExpression
                                  ConstructorInvocation
                                    SimpleType: tailrec
                                      CodeReferenceElement: tailrec
                                        PsiElement(identifier)('tailrec')
                            Modifiers
                              <empty list>
                            PsiWhiteSpace(' ')
                            PsiElement(def)('def')
                            PsiWhiteSpace(' ')
                            PsiElement(identifier)('find')
                            Parameters
                              ParametersClause
                                PsiElement(()('(')
                                Parameter: tree
                                  AnnotationsList
                                    <empty list>
                                  Modifiers
                                    <empty list>
                                  PsiElement(identifier)('tree')
                                  PsiElement(:)(':')
                                  PsiWhiteSpace(' ')
                                  ParameterType
                                    ParametrizedType: Tree[A, B]
                                      SimpleType: Tree
                                        CodeReferenceElement: Tree
                                          PsiElement(identifier)('Tree')
                                      TypeArgumentsList
                                        PsiElement([)('[')
                                        SimpleType: A
                                          CodeReferenceElement: A
                                            PsiElement(identifier)('A')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        SimpleType: B
                                          CodeReferenceElement: B
                                            PsiElement(identifier)('B')
                                        PsiElement(])(']')
                                PsiElement())(')')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParametrizedType: Tree[A, B]
                              SimpleType: Tree
                                CodeReferenceElement: Tree
                                  PsiElement(identifier)('Tree')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace('\n        ')
                            IfStatement
                              PsiElement(if)('if')
                              PsiWhiteSpace(' ')
                              PsiElement(()('(')
                              InfixExpression
                                ReferenceExpression: tree
                                  PsiElement(identifier)('tree')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: eq
                                  PsiElement(identifier)('eq')
                                PsiWhiteSpace(' ')
                                NullLiteral
                                  PsiElement(null)('null')
                              PsiElement())(')')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: popNext
                                  PsiElement(identifier)('popNext')
                                ArgumentList
                                  PsiElement(()('(')
                                  PsiElement())(')')
                              PsiWhiteSpace('\n        ')
                              PsiElement(else)('else')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: find
                                  PsiElement(identifier)('find')
                                ArgumentList
                                  PsiElement(()('(')
                                  PsiWhiteSpace('\n          ')
                                  IfStatement
                                    PsiElement(if)('if')
                                    PsiWhiteSpace(' ')
                                    PsiElement(()('(')
                                    MethodCall
                                      ReferenceExpression: ordering.lteq
                                        ReferenceExpression: ordering
                                          PsiElement(identifier)('ordering')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('lteq')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: key
                                          PsiElement(identifier)('key')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: tree.key
                                          ReferenceExpression: tree
                                            PsiElement(identifier)('tree')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('key')
                                        PsiElement())(')')
                                    PsiElement())(')')
                                    PsiWhiteSpace(' ')
                                    MethodCall
                                      ReferenceExpression: goLeft
                                        PsiElement(identifier)('goLeft')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: tree
                                          PsiElement(identifier)('tree')
                                        PsiElement())(')')
                                    PsiWhiteSpace('\n          ')
                                    PsiElement(else)('else')
                                    PsiWhiteSpace(' ')
                                    MethodCall
                                      ReferenceExpression: goRight
                                        PsiElement(identifier)('goRight')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: tree
                                          PsiElement(identifier)('tree')
                                        PsiElement())(')')
                                  PsiWhiteSpace('\n        ')
                                  PsiElement())(')')
                          PsiWhiteSpace('\n      ')
                          MethodCall
                            ReferenceExpression: find
                              PsiElement(identifier)('find')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: root
                                PsiElement(identifier)('root')
                              PsiElement())(')')
                          PsiWhiteSpace('\n    ')
                          PsiElement(})('}')
                    PsiWhiteSpace('\n\n    ')
                    ScFunctionDefinition: goLeft
                      AnnotationsList
                        <empty list>
                      Modifiers
                        AccessModifier
                          PsiElement(private)('private')
                          PsiElement([)('[')
                          PsiElement(this)('this')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('goLeft')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: tree
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tree')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      BlockExpression
                        PsiElement({)('{')
                        PsiWhiteSpace('\n      ')
                        MethodCall
                          ReferenceExpression: pushNext
                            PsiElement(identifier)('pushNext')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tree
                              PsiElement(identifier)('tree')
                            PsiElement())(')')
                        PsiWhiteSpace('\n      ')
                        ReferenceExpression: tree.left
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('left')
                        PsiWhiteSpace('\n    ')
                        PsiElement(})('}')
                    PsiWhiteSpace('\n\n    ')
                    ScFunctionDefinition: goRight
                      AnnotationsList
                        <empty list>
                      Modifiers
                        AccessModifier
                          PsiElement(private)('private')
                          PsiElement([)('[')
                          PsiElement(this)('this')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('goRight')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: tree
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tree')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree.right
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('right')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScClass: EntriesIterator
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('EntriesIterator')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      ClassParameter: tree
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('tree')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Tree[A, B]
                            SimpleType: Tree
                              CodeReferenceElement: Tree
                                PsiElement(identifier)('Tree')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ClassParameter: focus
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('focus')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Option[A]
                            SimpleType: Option
                              CodeReferenceElement: Option
                                PsiElement(identifier)('Option')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                      PsiElement())(')')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: TreeIterator[A, B, (A, B)]
                        SimpleType: TreeIterator
                          CodeReferenceElement: TreeIterator
                            PsiElement(identifier)('TreeIterator')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          TupleType: (A, B)
                            PsiElement(()('(')
                            TypesList
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                            PsiElement())(')')
                          PsiElement(])(']')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: focus
                          PsiElement(identifier)('focus')
                        PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: nextResult
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('nextResult')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: tree
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tree')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      Tuple
                        PsiElement(()('(')
                        ReferenceExpression: tree.key
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('key')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: tree.value
                          ReferenceExpression: tree
                            PsiElement(identifier)('tree')
                          PsiElement(.)('.')
                          PsiElement(identifier)('value')
                        PsiElement())(')')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScClass: KeysIterator
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('KeysIterator')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      ClassParameter: tree
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('tree')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Tree[A, B]
                            SimpleType: Tree
                              CodeReferenceElement: Tree
                                PsiElement(identifier)('Tree')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ClassParameter: focus
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('focus')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Option[A]
                            SimpleType: Option
                              CodeReferenceElement: Option
                                PsiElement(identifier)('Option')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                      PsiElement())(')')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: TreeIterator[A, B, A]
                        SimpleType: TreeIterator
                          CodeReferenceElement: TreeIterator
                            PsiElement(identifier)('TreeIterator')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: focus
                          PsiElement(identifier)('focus')
                        PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: nextResult
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('nextResult')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: tree
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tree')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree.key
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('key')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n\n  ')
              ScClass: ValuesIterator
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                    PsiElement([)('[')
                    PsiElement(this)('this')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('ValuesIterator')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      ClassParameter: tree
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('tree')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Tree[A, B]
                            SimpleType: Tree
                              CodeReferenceElement: Tree
                                PsiElement(identifier)('Tree')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ClassParameter: focus
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('focus')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Option[A]
                            SimpleType: Option
                              CodeReferenceElement: Option
                                PsiElement(identifier)('Option')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                      PsiElement())(')')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: TreeIterator[A, B, B]
                        SimpleType: TreeIterator
                          CodeReferenceElement: TreeIterator
                            PsiElement(identifier)('TreeIterator')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: focus
                          PsiElement(identifier)('focus')
                        PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n    ')
                    ScFunctionDefinition: nextResult
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(override)('override')
                      PsiWhiteSpace(' ')
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('nextResult')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: tree
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('tree')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: Tree[A, B]
                                SimpleType: Tree
                                  CodeReferenceElement: Tree
                                    PsiElement(identifier)('Tree')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: tree.value
                        ReferenceExpression: tree
                          PsiElement(identifier)('tree')
                        PsiElement(.)('.')
                        PsiElement(identifier)('value')
                    PsiWhiteSpace('\n  ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n')
        ScObject: Test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Test')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: main
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('main')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: args
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('args')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Array[String]
                          SimpleType: Array
                            CodeReferenceElement: Array
                              PsiElement(identifier)('Array')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: String
                              CodeReferenceElement: String
                                PsiElement(identifier)('String')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiElement(})('}')
              PsiWhiteSpace('\n')
              PsiElement(})('}')
