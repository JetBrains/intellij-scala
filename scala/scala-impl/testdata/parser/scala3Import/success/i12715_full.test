package repro

import compiletime.{constValue, erasedValue}

sealed trait ValidateExprInt

class And[A <: ValidateExprInt, B <: ValidateExprInt] extends ValidateExprInt
class GreaterThan[T <: Int]                           extends ValidateExprInt

object Repro:
  inline def validate[E <: ValidateExprInt](v: Int): String =
    val failMsg = validateV[E](v)
    if failMsg == "neverPass" then "neverPass"
    else "something else"

  transparent inline def validateV[E <: ValidateExprInt](v: Int): String =
    inline erasedValue[E] match
      case _: GreaterThan[t] =>
        "GreaterThan"
      case _: And[a, b] =>
        inline validateV[a](v) match
          case "" =>
            validateV[b](v)
          case other =>
            other

  @main def test(): Unit =
    println(validate[And[GreaterThan[10], GreaterThan[12]]](5))
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: repro
      PsiElement(identifier)('repro')
    PsiWhiteSpace('\n\n')
    ScImportStatement
      PsiElement(import)('import')
      PsiWhiteSpace(' ')
      ImportExpression
        CodeReferenceElement: compiletime
          PsiElement(identifier)('compiletime')
        PsiElement(.)('.')
        ImportSelectors
          PsiElement({)('{')
          ImportSelector
            CodeReferenceElement: constValue
              PsiElement(identifier)('constValue')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ImportSelector
            CodeReferenceElement: erasedValue
              PsiElement(identifier)('erasedValue')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScTrait: ValidateExprInt
      AnnotationsList
        <empty list>
      Modifiers
        PsiElement(sealed)('sealed')
      PsiWhiteSpace(' ')
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('ValidateExprInt')
      ExtendsBlock
        <empty list>
    PsiWhiteSpace('\n\n')
    ScClass: And
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('And')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: A
          PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: ValidateExprInt
            CodeReferenceElement: ValidateExprInt
              PsiElement(identifier)('ValidateExprInt')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        TypeParameter: B
          PsiElement(identifier)('B')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: ValidateExprInt
            CodeReferenceElement: ValidateExprInt
              PsiElement(identifier)('ValidateExprInt')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: ValidateExprInt
              CodeReferenceElement: ValidateExprInt
                PsiElement(identifier)('ValidateExprInt')
    PsiWhiteSpace('\n')
    ScClass: GreaterThan
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('GreaterThan')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: T
          PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace('                           ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: ValidateExprInt
              CodeReferenceElement: ValidateExprInt
                PsiElement(identifier)('ValidateExprInt')
    PsiWhiteSpace('\n\n')
    ScObject: Repro
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Repro')
      ExtendsBlock
        ScTemplateBody
          PsiElement(:)(':')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: validate
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('validate')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: E
                PsiElement(identifier)('E')
                PsiWhiteSpace(' ')
                PsiElement(<:)('<:')
                PsiWhiteSpace(' ')
                SimpleType: ValidateExprInt
                  CodeReferenceElement: ValidateExprInt
                    PsiElement(identifier)('ValidateExprInt')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            BlockExpression
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: failMsg
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: failMsg
                    PsiElement(identifier)('failMsg')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  GenericCall
                    ReferenceExpression: validateV
                      PsiElement(identifier)('validateV')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: E
                        CodeReferenceElement: E
                          PsiElement(identifier)('E')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: v
                      PsiElement(identifier)('v')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              IfStatement
                PsiElement(if)('if')
                PsiWhiteSpace(' ')
                InfixExpression
                  ReferenceExpression: failMsg
                    PsiElement(identifier)('failMsg')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: ==
                    PsiElement(identifier)('==')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('"neverPass"')
                PsiWhiteSpace(' ')
                PsiElement(then)('then')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('"neverPass"')
                PsiWhiteSpace('\n    ')
                PsiElement(else)('else')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('"something else"')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: validateV
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(transparent)('transparent')
              PsiWhiteSpace(' ')
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('validateV')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: E
                PsiElement(identifier)('E')
                PsiWhiteSpace(' ')
                PsiElement(<:)('<:')
                PsiWhiteSpace(' ')
                SimpleType: ValidateExprInt
                  CodeReferenceElement: ValidateExprInt
                    PsiElement(identifier)('ValidateExprInt')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace('\n    ')
            MatchStatement
              PsiElement(inline)('inline')
              PsiWhiteSpace(' ')
              GenericCall
                ReferenceExpression: erasedValue
                  PsiElement(identifier)('erasedValue')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: E
                    CodeReferenceElement: E
                      PsiElement(identifier)('E')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(match)('match')
              PsiWhiteSpace('\n      ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      ParametrizedType: GreaterThan[t]
                        SimpleType: GreaterThan
                          CodeReferenceElement: GreaterThan
                            PsiElement(identifier)('GreaterThan')
                        TypeArgumentsList
                          PsiElement([)('[')
                          TypeVariable: t
                            PsiElement(identifier)('t')
                          PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace('\n        ')
                  BlockOfExpressions
                    StringLiteral
                      PsiElement(string content)('"GreaterThan"')
                PsiWhiteSpace('\n      ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      ParametrizedType: And[a, b]
                        SimpleType: And
                          CodeReferenceElement: And
                            PsiElement(identifier)('And')
                        TypeArgumentsList
                          PsiElement([)('[')
                          TypeVariable: a
                            PsiElement(identifier)('a')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          TypeVariable: b
                            PsiElement(identifier)('b')
                          PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace('\n        ')
                  BlockOfExpressions
                    MatchStatement
                      PsiElement(inline)('inline')
                      PsiWhiteSpace(' ')
                      MethodCall
                        GenericCall
                          ReferenceExpression: validateV
                            PsiElement(identifier)('validateV')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: a
                              CodeReferenceElement: a
                                PsiElement(identifier)('a')
                            PsiElement(])(']')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: v
                            PsiElement(identifier)('v')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(match)('match')
                      PsiWhiteSpace('\n          ')
                      CaseClauses
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          LiteralPattern
                            StringLiteral
                              PsiElement(string content)('""')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace('\n            ')
                          BlockOfExpressions
                            MethodCall
                              GenericCall
                                ReferenceExpression: validateV
                                  PsiElement(identifier)('validateV')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: b
                                    CodeReferenceElement: b
                                      PsiElement(identifier)('b')
                                  PsiElement(])(']')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: v
                                  PsiElement(identifier)('v')
                                PsiElement())(')')
                        PsiWhiteSpace('\n          ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          ReferencePattern: other
                            PsiElement(identifier)('other')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace('\n            ')
                          BlockOfExpressions
                            ReferenceExpression: other
                              PsiElement(identifier)('other')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: test
            AnnotationsList
              Annotation
                PsiElement(@)('@')
                AnnotationExpression
                  ConstructorInvocation
                    SimpleType: main
                      CodeReferenceElement: main
                        PsiElement(identifier)('main')
            Modifiers
              <empty list>
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('test')
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  GenericCall
                    ReferenceExpression: validate
                      PsiElement(identifier)('validate')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: And[GreaterThan[10], GreaterThan[12]]
                        SimpleType: And
                          CodeReferenceElement: And
                            PsiElement(identifier)('And')
                        TypeArgumentsList
                          PsiElement([)('[')
                          ParametrizedType: GreaterThan[10]
                            SimpleType: GreaterThan
                              CodeReferenceElement: GreaterThan
                                PsiElement(identifier)('GreaterThan')
                            TypeArgumentsList
                              PsiElement([)('[')
                              LiteralType: 10
                                IntegerLiteral
                                  PsiElement(integer)('10')
                              PsiElement(])(']')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ParametrizedType: GreaterThan[12]
                            SimpleType: GreaterThan
                              CodeReferenceElement: GreaterThan
                                PsiElement(identifier)('GreaterThan')
                            TypeArgumentsList
                              PsiElement([)('[')
                              LiteralType: 12
                                IntegerLiteral
                                  PsiElement(integer)('12')
                              PsiElement(])(']')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    IntegerLiteral
                      PsiElement(integer)('5')
                    PsiElement())(')')
                PsiElement())(')')
