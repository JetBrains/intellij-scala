import scala.collection.*

object Test {
  def collect[A, Res](r: Iterable[A])(implicit bf: Factory[A, Res]) = {
    val b: collection.mutable.Builder[A, Res] = bf.newBuilder
    r foreach ((a: A) => b += a)
    b.result
  }

  collect[Int, Vector[Int]](List(1,2,3,4))
  collect[Char, String](List('1','2','3','4'))
  collect[Char, Array[Char]](List('1','2','3','4'))
}
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.collection
        CodeReferenceElement: scala
          PsiElement(identifier)('scala')
        PsiElement(.)('.')
        PsiElement(identifier)('collection')
      PsiElement(.)('.')
      PsiElement(*)('*')
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: collect
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('collect')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: Res
              PsiElement(identifier)('Res')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: r
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('r')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Iterable[A]
                    SimpleType: Iterable
                      CodeReferenceElement: Iterable
                        PsiElement(identifier)('Iterable')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: bf
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('bf')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Factory[A, Res]
                    SimpleType: Factory
                      CodeReferenceElement: Factory
                        PsiElement(identifier)('Factory')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Res
                        CodeReferenceElement: Res
                          PsiElement(identifier)('Res')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: b
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: b
                  PsiElement(identifier)('b')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: collection.mutable.Builder[A, Res]
                SimpleType: collection.mutable.Builder
                  CodeReferenceElement: collection.mutable.Builder
                    CodeReferenceElement: collection.mutable
                      CodeReferenceElement: collection
                        PsiElement(identifier)('collection')
                      PsiElement(.)('.')
                      PsiElement(identifier)('mutable')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Builder')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Res
                    CodeReferenceElement: Res
                      PsiElement(identifier)('Res')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: bf.newBuilder
                ReferenceExpression: bf
                  PsiElement(identifier)('bf')
                PsiElement(.)('.')
                PsiElement(identifier)('newBuilder')
            PsiWhiteSpace('\n    ')
            InfixExpression
              ReferenceExpression: r
                PsiElement(identifier)('r')
              PsiWhiteSpace(' ')
              ReferenceExpression: foreach
                PsiElement(identifier)('foreach')
              PsiWhiteSpace(' ')
              ExpressionInParenthesis
                PsiElement(()('(')
                FunctionExpression
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: a
                        AnnotationsList
                          <empty list>
                        PsiElement(identifier)('a')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    ReferenceExpression: b
                      PsiElement(identifier)('b')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: +=
                      PsiElement(identifier)('+=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: a
                      PsiElement(identifier)('a')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ReferenceExpression: b.result
              ReferenceExpression: b
                PsiElement(identifier)('b')
              PsiElement(.)('.')
              PsiElement(identifier)('result')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          GenericCall
            ReferenceExpression: collect
              PsiElement(identifier)('collect')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ParametrizedType: Vector[Int]
                SimpleType: Vector
                  CodeReferenceElement: Vector
                    PsiElement(identifier)('Vector')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiElement(])(']')
          ArgumentList
            PsiElement(()('(')
            MethodCall
              ReferenceExpression: List
                PsiElement(identifier)('List')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('1')
                PsiElement(,)(',')
                IntegerLiteral
                  PsiElement(integer)('2')
                PsiElement(,)(',')
                IntegerLiteral
                  PsiElement(integer)('3')
                PsiElement(,)(',')
                IntegerLiteral
                  PsiElement(integer)('4')
                PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          GenericCall
            ReferenceExpression: collect
              PsiElement(identifier)('collect')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Char
                CodeReferenceElement: Char
                  PsiElement(identifier)('Char')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          ArgumentList
            PsiElement(()('(')
            MethodCall
              ReferenceExpression: List
                PsiElement(identifier)('List')
              ArgumentList
                PsiElement(()('(')
                CharLiteral
                  PsiElement(Character)(''1'')
                PsiElement(,)(',')
                CharLiteral
                  PsiElement(Character)(''2'')
                PsiElement(,)(',')
                CharLiteral
                  PsiElement(Character)(''3'')
                PsiElement(,)(',')
                CharLiteral
                  PsiElement(Character)(''4'')
                PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          GenericCall
            ReferenceExpression: collect
              PsiElement(identifier)('collect')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Char
                CodeReferenceElement: Char
                  PsiElement(identifier)('Char')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ParametrizedType: Array[Char]
                SimpleType: Array
                  CodeReferenceElement: Array
                    PsiElement(identifier)('Array')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Char
                    CodeReferenceElement: Char
                      PsiElement(identifier)('Char')
                  PsiElement(])(']')
              PsiElement(])(']')
          ArgumentList
            PsiElement(()('(')
            MethodCall
              ReferenceExpression: List
                PsiElement(identifier)('List')
              ArgumentList
                PsiElement(()('(')
                CharLiteral
                  PsiElement(Character)(''1'')
                PsiElement(,)(',')
                CharLiteral
                  PsiElement(Character)(''2'')
                PsiElement(,)(',')
                CharLiteral
                  PsiElement(Character)(''3'')
                PsiElement(,)(',')
                CharLiteral
                  PsiElement(Character)(''4'')
                PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
