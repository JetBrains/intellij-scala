enum Format[A]:
  case Str[Next](next: Format[Next]) extends Format[(String, Next)]

def printf[A](format: Format[A], params: A): Unit = (format, params) match
  case (Format.Str(next), (str, rest)) =>
    val s: String = str
-----
ScalaFile
  ScEnum: Format
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Format')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Str
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Str
            PsiElement(identifier)('Str')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: Next
                PsiElement(identifier)('Next')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: next
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('next')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Format[Next]
                        SimpleType: Format
                          CodeReferenceElement: Format
                            PsiElement(identifier)('Format')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: Next
                            CodeReferenceElement: Next
                              PsiElement(identifier)('Next')
                          PsiElement(])(']')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Format[(String, Next)]
                    SimpleType: Format
                      CodeReferenceElement: Format
                        PsiElement(identifier)('Format')
                    TypeArgumentsList
                      PsiElement([)('[')
                      TupleType: (String, Next)
                        PsiElement(()('(')
                        TypesList
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: Next
                            CodeReferenceElement: Next
                              PsiElement(identifier)('Next')
                        PsiElement())(')')
                      PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: printf
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('printf')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: format
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('format')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: Format[A]
              SimpleType: Format
                CodeReferenceElement: Format
                  PsiElement(identifier)('Format')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiElement(])(']')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        Parameter: params
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('params')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MatchStatement
      Tuple
        PsiElement(()('(')
        ReferenceExpression: format
          PsiElement(identifier)('format')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        ReferenceExpression: params
          PsiElement(identifier)('params')
        PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement(match)('match')
      PsiWhiteSpace('\n  ')
      CaseClauses
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          TuplePattern
            PsiElement(()('(')
            ArgumentPatterns
              ConstructorPattern
                CodeReferenceElement: Format.Str
                  CodeReferenceElement: Format
                    PsiElement(identifier)('Format')
                  PsiElement(.)('.')
                  PsiElement(identifier)('Str')
                Pattern Argument List
                  PsiElement(()('(')
                  ReferencePattern: next
                    PsiElement(identifier)('next')
                  PsiElement())(')')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TuplePattern
                PsiElement(()('(')
                ArgumentPatterns
                  ReferencePattern: str
                    PsiElement(identifier)('str')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferencePattern: rest
                    PsiElement(identifier)('rest')
                PsiElement())(')')
            PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace('\n    ')
          BlockOfExpressions
            ScPatternDefinition: s
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: s
                  PsiElement(identifier)('s')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: str
                PsiElement(identifier)('str')
