object Test {
  class Test  {
    class Context(val t: Boolean)

    type Contextual[T] = Context ?=> T

    inline def f(): Contextual[Boolean] = summon[Context].t

    given ctx: Context = new Context(true)

    f()
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: Test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Test')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace('  ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScClass: Context
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Context')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      ClassParameter: t
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('t')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Boolean
                            CodeReferenceElement: Boolean
                              PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                ExtendsBlock
                  <empty list>
              PsiWhiteSpace('\n\n    ')
              ScTypeAliasDefinition: Contextual
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Contextual')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                FunctionalType: Context ?=> T
                  SimpleType: Context
                    CodeReferenceElement: Context
                      PsiElement(identifier)('Context')
                  PsiWhiteSpace(' ')
                  PsiElement(?=>)('?=>')
                  PsiWhiteSpace(' ')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: f
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('f')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Contextual[Boolean]
                  SimpleType: Contextual
                    CodeReferenceElement: Contextual
                      PsiElement(identifier)('Contextual')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Boolean
                      CodeReferenceElement: Boolean
                        PsiElement(identifier)('Boolean')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: summon[Context].t
                  GenericCall
                    ReferenceExpression: summon
                      PsiElement(identifier)('summon')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Context
                        CodeReferenceElement: Context
                          PsiElement(identifier)('Context')
                      PsiElement(])(']')
                  PsiElement(.)('.')
                  PsiElement(identifier)('t')
              PsiWhiteSpace('\n\n    ')
              ScGivenAliasDefinition: ctx
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(given)('given')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('ctx')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Context
                  CodeReferenceElement: Context
                    PsiElement(identifier)('Context')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: Context
                          CodeReferenceElement: Context
                            PsiElement(identifier)('Context')
                        ArgumentList
                          PsiElement(()('(')
                          BooleanLiteral
                            PsiElement(true)('true')
                          PsiElement())(')')
              PsiWhiteSpace('\n\n    ')
              MethodCall
                ReferenceExpression: f
                  PsiElement(identifier)('f')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
