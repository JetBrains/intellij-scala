package t1049

abstract class Test {
  type T <: A
  class A { self: T => }
  class B extends A { self: T => }
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: t1049
      PsiElement(identifier)('t1049')
    PsiWhiteSpace('\n\n')
    ScClass: Test
      AnnotationsList
        <empty list>
      Modifiers
        PsiElement(abstract)('abstract')
      PsiWhiteSpace(' ')
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScTypeAliasDeclaration: T
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(type)('type')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('T')
            PsiWhiteSpace(' ')
            PsiElement(<:)('<:')
            PsiWhiteSpace(' ')
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
          PsiWhiteSpace('\n  ')
          ScClass: A
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('A')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                <empty list>
            PsiWhiteSpace(' ')
            ExtendsBlock
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace(' ')
                SelfType: self
                  PsiElement(identifier)('self')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          ScClass: B
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('B')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                <empty list>
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace(' ')
                SelfType: self
                  PsiElement(identifier)('self')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                PsiElement(})('}')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
