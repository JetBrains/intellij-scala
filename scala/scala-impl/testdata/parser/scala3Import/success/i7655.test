object bug2 {
  val id: [U] => U => U = [U] => (none: U) => none
  val id1: [U] => U => U = { [U] => (none: U) => none }
  val id2: [U] => U => U =
    [U] => (none: U) => none
}
-----
ScalaFile
  ScObject: bug2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('bug2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: id
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: id
              PsiElement(identifier)('id')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          PolymorhicFunctionType: [U] => U => U
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: U
                PsiElement(identifier)('U')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            FunctionalType: U => U
              SimpleType: U
                CodeReferenceElement: U
                  PsiElement(identifier)('U')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              SimpleType: U
                CodeReferenceElement: U
                  PsiElement(identifier)('U')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          PolyFunctionExpression
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: U
                PsiElement(identifier)('U')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: none
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('none')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: U
                        CodeReferenceElement: U
                          PsiElement(identifier)('U')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              ReferenceExpression: none
                PsiElement(identifier)('none')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: id1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: id1
              PsiElement(identifier)('id1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          PolymorhicFunctionType: [U] => U => U
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: U
                PsiElement(identifier)('U')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            FunctionalType: U => U
              SimpleType: U
                CodeReferenceElement: U
                  PsiElement(identifier)('U')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              SimpleType: U
                CodeReferenceElement: U
                  PsiElement(identifier)('U')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            PolyFunctionExpression
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: U
                  PsiElement(identifier)('U')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              FunctionExpression
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: none
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('none')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: U
                          CodeReferenceElement: U
                            PsiElement(identifier)('U')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                ReferenceExpression: none
                  PsiElement(identifier)('none')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: id2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: id2
              PsiElement(identifier)('id2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          PolymorhicFunctionType: [U] => U => U
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: U
                PsiElement(identifier)('U')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            FunctionalType: U => U
              SimpleType: U
                CodeReferenceElement: U
                  PsiElement(identifier)('U')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              SimpleType: U
                CodeReferenceElement: U
                  PsiElement(identifier)('U')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          PolyFunctionExpression
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: U
                PsiElement(identifier)('U')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: none
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('none')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: U
                        CodeReferenceElement: U
                          PsiElement(identifier)('U')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              ReferenceExpression: none
                PsiElement(identifier)('none')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
