trait Logger {
  inline def debug: debug = valueOf[debug]
  final type debug = false

  // fails
  inline final def log(inline s: String): Unit =
    inline if (debug) println(s)
}

trait BaseLogger extends Logger {
  // fails
  def bar() = log("case1")
}

object Logger {
  inline def log(s: String): Unit =
    inline if (valueOf[Logger#debug]) println(s)
}

class Test:
  def fails(x: BaseLogger) =
    x.log("case2")

  def works =
    Logger.log("case3")
-----
ScalaFile
  ScTrait: Logger
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Logger')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: debug
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('debug')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: debug
            CodeReferenceElement: debug
              PsiElement(identifier)('debug')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: valueOf
              PsiElement(identifier)('valueOf')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: debug
                CodeReferenceElement: debug
                  PsiElement(identifier)('debug')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: debug
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(final)('final')
          PsiWhiteSpace(' ')
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('debug')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          LiteralType: false
            BooleanLiteral
              PsiElement(false)('false')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: log
          PsiComment(comment)('// fails')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(final)('final')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('log')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          IfStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            PsiElement(()('(')
            ReferenceExpression: debug
              PsiElement(identifier)('debug')
            PsiElement())(')')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: s
                  PsiElement(identifier)('s')
                PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: BaseLogger
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('BaseLogger')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Logger
            CodeReferenceElement: Logger
              PsiElement(identifier)('Logger')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: bar
          PsiComment(comment)('// fails')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('bar')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: log
              PsiElement(identifier)('log')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"case1"')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Logger
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Logger')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: log
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('log')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: s
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('s')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          IfStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            PsiElement(()('(')
            GenericCall
              ReferenceExpression: valueOf
                PsiElement(identifier)('valueOf')
              TypeArgumentsList
                PsiElement([)('[')
                TypeProjection: Logger#debug
                  SimpleType: Logger
                    CodeReferenceElement: Logger
                      PsiElement(identifier)('Logger')
                  PsiElement(#)('#')
                  PsiElement(identifier)('debug')
                PsiElement(])(']')
            PsiElement())(')')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: s
                  PsiElement(identifier)('s')
                PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: fails
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('fails')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: BaseLogger
                    CodeReferenceElement: BaseLogger
                      PsiElement(identifier)('BaseLogger')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            ReferenceExpression: x.log
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiElement(.)('.')
              PsiElement(identifier)('log')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"case2"')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: works
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('works')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            ReferenceExpression: Logger.log
              ReferenceExpression: Logger
                PsiElement(identifier)('Logger')
              PsiElement(.)('.')
              PsiElement(identifier)('log')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"case3"')
              PsiElement())(')')
