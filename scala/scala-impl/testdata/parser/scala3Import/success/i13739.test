import scala.language.strictEquality

class Foo(i: Int) extends AnyVal

val _ = summon[CanEqual[Nothing, Nothing]]

val _ = summon[CanEqual[Int, Nothing]]
val _ = summon[CanEqual[Nothing, Int]]
val _ = summon[CanEqual[3, Nothing]]
val _ = summon[CanEqual[Nothing, 3]]

val _ = summon[CanEqual[Byte, Nothing]]
val _ = summon[CanEqual[Nothing, Byte]]
val _ = summon[CanEqual[Short, Nothing]]
val _ = summon[CanEqual[Nothing, Short]]
val _ = summon[CanEqual[Float, Nothing]]
val _ = summon[CanEqual[Nothing, Float]]

val _ = summon[CanEqual[Double, Nothing]]
val _ = summon[CanEqual[Nothing, Double]]
val _ = summon[CanEqual[3.0, Nothing]]
val _ = summon[CanEqual[Nothing, 3.0]]

val _ = summon[CanEqual[String, Nothing]]
val _ = summon[CanEqual[Nothing, String]]
val _ = summon[CanEqual["foo", Nothing]]
val _ = summon[CanEqual[Nothing, "foo"]]

val _ = summon[CanEqual[Char, Nothing]]
val _ = summon[CanEqual[Nothing, Char]]
val _ = summon[CanEqual['f', Nothing]]
val _ = summon[CanEqual[Nothing, 'f']]

val _ = summon[CanEqual[Boolean, Nothing]]
val _ = summon[CanEqual[Nothing, Boolean]]
val _ = summon[CanEqual[true, Nothing]]
val _ = summon[CanEqual[Nothing, true]]

val _ = summon[CanEqual[Foo, Nothing]]
val _ = summon[CanEqual[Nothing, Foo]]

val _ = summon[CanEqual[Option[Int], None.type]]
val _ = summon[CanEqual[Option[Int], Option[Nothing]]]

val _ = summon[CanEqual[Any & Nothing, Foo]]
val _ = summon[CanEqual[Nothing & Any, Foo]]
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.language.strictEquality
        CodeReferenceElement: scala.language
          CodeReferenceElement: scala
            PsiElement(identifier)('scala')
          PsiElement(.)('.')
          PsiElement(identifier)('language')
        PsiElement(.)('.')
        PsiElement(identifier)('strictEquality')
  PsiWhiteSpace('\n\n')
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: i
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('i')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: AnyVal
            CodeReferenceElement: AnyVal
              PsiElement(identifier)('AnyVal')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Int, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, Int]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[3, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            LiteralType: 3
              IntegerLiteral
                PsiElement(integer)('3')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, 3]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            LiteralType: 3
              IntegerLiteral
                PsiElement(integer)('3')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Byte, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Byte
              CodeReferenceElement: Byte
                PsiElement(identifier)('Byte')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, Byte]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Byte
              CodeReferenceElement: Byte
                PsiElement(identifier)('Byte')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Short, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Short
              CodeReferenceElement: Short
                PsiElement(identifier)('Short')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, Short]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Short
              CodeReferenceElement: Short
                PsiElement(identifier)('Short')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Float, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Float
              CodeReferenceElement: Float
                PsiElement(identifier)('Float')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, Float]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Float
              CodeReferenceElement: Float
                PsiElement(identifier)('Float')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Double, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Double
              CodeReferenceElement: Double
                PsiElement(identifier)('Double')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, Double]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Double
              CodeReferenceElement: Double
                PsiElement(identifier)('Double')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[3.0, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            LiteralType: 3.0
              DoubleLiteral
                PsiElement(double)('3.0')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, 3.0]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            LiteralType: 3.0
              DoubleLiteral
                PsiElement(double)('3.0')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[String, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, String]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual["foo", Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            LiteralType: "foo"
              StringLiteral
                PsiElement(string content)('"foo"')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, "foo"]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            LiteralType: "foo"
              StringLiteral
                PsiElement(string content)('"foo"')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Char, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Char
              CodeReferenceElement: Char
                PsiElement(identifier)('Char')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, Char]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Char
              CodeReferenceElement: Char
                PsiElement(identifier)('Char')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual['f', Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            LiteralType: 'f'
              CharLiteral
                PsiElement(Character)(''f'')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, 'f']
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            LiteralType: 'f'
              CharLiteral
                PsiElement(Character)(''f'')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Boolean, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Boolean
              CodeReferenceElement: Boolean
                PsiElement(identifier)('Boolean')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, Boolean]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Boolean
              CodeReferenceElement: Boolean
                PsiElement(identifier)('Boolean')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[true, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            LiteralType: true
              BooleanLiteral
                PsiElement(true)('true')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, true]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            LiteralType: true
              BooleanLiteral
                PsiElement(true)('true')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Foo, Nothing]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing, Foo]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Nothing
              CodeReferenceElement: Nothing
                PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Option[Int], None.type]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            ParametrizedType: Option[Int]
              SimpleType: Option
                CodeReferenceElement: Option
                  PsiElement(identifier)('Option')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: None.type
              CodeReferenceElement: None
                PsiElement(identifier)('None')
              PsiElement(.)('.')
              PsiElement(type)('type')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Option[Int], Option[Nothing]]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            ParametrizedType: Option[Int]
              SimpleType: Option
                CodeReferenceElement: Option
                  PsiElement(identifier)('Option')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            ParametrizedType: Option[Nothing]
              SimpleType: Option
                CodeReferenceElement: Option
                  PsiElement(identifier)('Option')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Nothing
                  CodeReferenceElement: Nothing
                    PsiElement(identifier)('Nothing')
                PsiElement(])(']')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Any & Nothing, Foo]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            InfixType: Any & Nothing
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
              PsiWhiteSpace(' ')
              CodeReferenceElement: &
                PsiElement(identifier)('&')
              PsiWhiteSpace(' ')
              SimpleType: Nothing
                CodeReferenceElement: Nothing
                  PsiElement(identifier)('Nothing')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            PsiElement(])(']')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: CanEqual[Nothing & Any, Foo]
          SimpleType: CanEqual
            CodeReferenceElement: CanEqual
              PsiElement(identifier)('CanEqual')
          TypeArgumentsList
            PsiElement([)('[')
            InfixType: Nothing & Any
              SimpleType: Nothing
                CodeReferenceElement: Nothing
                  PsiElement(identifier)('Nothing')
              PsiWhiteSpace(' ')
              CodeReferenceElement: &
                PsiElement(identifier)('&')
              PsiWhiteSpace(' ')
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            PsiElement(])(']')
        PsiElement(])(']')
