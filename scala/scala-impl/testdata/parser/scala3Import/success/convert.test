import java.util.Date

given Conversion[String, Int] = _.length
given Conversion[Int, String] = _.toString
given Conversion[Int, Date] = new Date(_)

def f(x: String): Int = x.convert
def g(x: Int): String = x.convert
def h(x: Int): Date = x.convert
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: java.util.Date
        CodeReferenceElement: java.util
          CodeReferenceElement: java
            PsiElement(identifier)('java')
          PsiElement(.)('.')
          PsiElement(identifier)('util')
        PsiElement(.)('.')
        PsiElement(identifier)('Date')
  PsiWhiteSpace('\n\n')
  ScGivenAliasDefinition: given_Conversion_String_Int
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    ParametrizedType: Conversion[String, Int]
      SimpleType: Conversion
        CodeReferenceElement: Conversion
          PsiElement(identifier)('Conversion')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: String
          CodeReferenceElement: String
            PsiElement(identifier)('String')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        SimpleType: Int
          CodeReferenceElement: Int
            PsiElement(identifier)('Int')
        PsiElement(])(']')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: _.length
      UnderscoreSection
        PsiElement(_)('_')
      PsiElement(.)('.')
      PsiElement(identifier)('length')
  PsiWhiteSpace('\n')
  ScGivenAliasDefinition: given_Conversion_Int_String
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    ParametrizedType: Conversion[Int, String]
      SimpleType: Conversion
        CodeReferenceElement: Conversion
          PsiElement(identifier)('Conversion')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Int
          CodeReferenceElement: Int
            PsiElement(identifier)('Int')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        SimpleType: String
          CodeReferenceElement: String
            PsiElement(identifier)('String')
        PsiElement(])(']')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: _.toString
      UnderscoreSection
        PsiElement(_)('_')
      PsiElement(.)('.')
      PsiElement(identifier)('toString')
  PsiWhiteSpace('\n')
  ScGivenAliasDefinition: given_Conversion_Int_Date
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    ParametrizedType: Conversion[Int, Date]
      SimpleType: Conversion
        CodeReferenceElement: Conversion
          PsiElement(identifier)('Conversion')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Int
          CodeReferenceElement: Int
            PsiElement(identifier)('Int')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        SimpleType: Date
          CodeReferenceElement: Date
            PsiElement(identifier)('Date')
        PsiElement(])(']')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ScNewTemplateDefinition: <anonymous>
      PsiElement(new)('new')
      PsiWhiteSpace(' ')
      ExtendsBlock
        TemplateParents
          ConstructorInvocation
            SimpleType: Date
              CodeReferenceElement: Date
                PsiElement(identifier)('Date')
            ArgumentList
              PsiElement(()('(')
              UnderscoreSection
                PsiElement(_)('_')
              PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: f
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('f')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Int
      CodeReferenceElement: Int
        PsiElement(identifier)('Int')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: x.convert
      ReferenceExpression: x
        PsiElement(identifier)('x')
      PsiElement(.)('.')
      PsiElement(identifier)('convert')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: g
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('g')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: String
      CodeReferenceElement: String
        PsiElement(identifier)('String')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: x.convert
      ReferenceExpression: x
        PsiElement(identifier)('x')
      PsiElement(.)('.')
      PsiElement(identifier)('convert')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: h
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('h')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Date
      CodeReferenceElement: Date
        PsiElement(identifier)('Date')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: x.convert
      ReferenceExpression: x
        PsiElement(identifier)('x')
      PsiElement(.)('.')
      PsiElement(identifier)('convert')
