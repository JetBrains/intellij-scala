// that compiles
class Test(myValue:String) { println(myValue) }

// that compiles too
trait Other { val otherValue = "" }
class Test2(myValue:String) { self:Other => println(otherValue) }

// that does not compile saying that myValue is not found
class Test3(myValue:String) { self:Other => println(myValue) }
-----
ScalaFile
  ScClass: Test
    PsiComment(comment)('// that compiles')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: myValue
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('myValue')
            PsiElement(:)(':')
            ParameterType
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: println
            PsiElement(identifier)('println')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: myValue
              PsiElement(identifier)('myValue')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: Other
    PsiComment(comment)('// that compiles too')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Other')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ScPatternDefinition: otherValue
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: otherValue
              PsiElement(identifier)('otherValue')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('""')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: Test2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test2')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: myValue
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('myValue')
            PsiElement(:)(':')
            ParameterType
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        SelfType: self
          PsiElement(identifier)('self')
          PsiElement(:)(':')
          SimpleType: Other
            CodeReferenceElement: Other
              PsiElement(identifier)('Other')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: println
            PsiElement(identifier)('println')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: otherValue
              PsiElement(identifier)('otherValue')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Test3
    PsiComment(comment)('// that does not compile saying that myValue is not found')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test3')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: myValue
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('myValue')
            PsiElement(:)(':')
            ParameterType
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        SelfType: self
          PsiElement(identifier)('self')
          PsiElement(:)(':')
          SimpleType: Other
            CodeReferenceElement: Other
              PsiElement(identifier)('Other')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: println
            PsiElement(identifier)('println')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: myValue
              PsiElement(identifier)('myValue')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
