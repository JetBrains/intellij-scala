object pkg {

  import Character.{isAlphabetic, isDigit}

  class Alphabetic private[pkg] (val value: String) extends AnyVal

  object Alphabetic {
    def fromString(s: String): Option[Alphabetic] =
      if (s.forall(isAlphabetic(_))) Some(new Alphabetic(s))
      else None
  }

  opaque type Digits = String

  object Digits {
    def fromString(s: String): Option[Digits] =
      if (s.forall(isDigit(_))) Some(s)
      else None

    def asString(d: Digits): String = d
  }
}
-----
ScalaFile
  ScObject: pkg
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('pkg')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: Character
              PsiElement(identifier)('Character')
            PsiElement(.)('.')
            ImportSelectors
              PsiElement({)('{')
              ImportSelector
                CodeReferenceElement: isAlphabetic
                  PsiElement(identifier)('isAlphabetic')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ImportSelector
                CodeReferenceElement: isDigit
                  PsiElement(identifier)('isDigit')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: Alphabetic
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Alphabetic')
          PsiWhiteSpace(' ')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              AccessModifier
                PsiElement(private)('private')
                PsiElement([)('[')
                PsiElement(identifier)('pkg')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: value
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('value')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: AnyVal
                  CodeReferenceElement: AnyVal
                    PsiElement(identifier)('AnyVal')
        PsiWhiteSpace('\n\n  ')
        ScObject: Alphabetic
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Alphabetic')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: fromString
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('fromString')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: s
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('s')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: String
                          CodeReferenceElement: String
                            PsiElement(identifier)('String')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Option[Alphabetic]
                  SimpleType: Option
                    CodeReferenceElement: Option
                      PsiElement(identifier)('Option')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Alphabetic
                      CodeReferenceElement: Alphabetic
                        PsiElement(identifier)('Alphabetic')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  MethodCall
                    ReferenceExpression: s.forall
                      ReferenceExpression: s
                        PsiElement(identifier)('s')
                      PsiElement(.)('.')
                      PsiElement(identifier)('forall')
                    ArgumentList
                      PsiElement(()('(')
                      MethodCall
                        ReferenceExpression: isAlphabetic
                          PsiElement(identifier)('isAlphabetic')
                        ArgumentList
                          PsiElement(()('(')
                          UnderscoreSection
                            PsiElement(_)('_')
                          PsiElement())(')')
                      PsiElement())(')')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: Some
                      PsiElement(identifier)('Some')
                    ArgumentList
                      PsiElement(()('(')
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              SimpleType: Alphabetic
                                CodeReferenceElement: Alphabetic
                                  PsiElement(identifier)('Alphabetic')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: s
                                  PsiElement(identifier)('s')
                                PsiElement())(')')
                      PsiElement())(')')
                  PsiWhiteSpace('\n      ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: None
                    PsiElement(identifier)('None')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: Digits
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(opaque)('opaque')
          PsiWhiteSpace(' ')
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Digits')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
        PsiWhiteSpace('\n\n  ')
        ScObject: Digits
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Digits')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: fromString
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('fromString')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: s
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('s')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: String
                          CodeReferenceElement: String
                            PsiElement(identifier)('String')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Option[Digits]
                  SimpleType: Option
                    CodeReferenceElement: Option
                      PsiElement(identifier)('Option')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Digits
                      CodeReferenceElement: Digits
                        PsiElement(identifier)('Digits')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  MethodCall
                    ReferenceExpression: s.forall
                      ReferenceExpression: s
                        PsiElement(identifier)('s')
                      PsiElement(.)('.')
                      PsiElement(identifier)('forall')
                    ArgumentList
                      PsiElement(()('(')
                      MethodCall
                        ReferenceExpression: isDigit
                          PsiElement(identifier)('isDigit')
                        ArgumentList
                          PsiElement(()('(')
                          UnderscoreSection
                            PsiElement(_)('_')
                          PsiElement())(')')
                      PsiElement())(')')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: Some
                      PsiElement(identifier)('Some')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: s
                        PsiElement(identifier)('s')
                      PsiElement())(')')
                  PsiWhiteSpace('\n      ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: None
                    PsiElement(identifier)('None')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: asString
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('asString')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: d
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('d')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Digits
                          CodeReferenceElement: Digits
                            PsiElement(identifier)('Digits')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: d
                  PsiElement(identifier)('d')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
