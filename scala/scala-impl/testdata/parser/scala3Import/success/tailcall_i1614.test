object Foobar {
  def apply(): Option[String] = { 
    def foobar[A](f: (String, String) => A): List[A] = List[String]() match { 
      case _ :: ls => foobar(f) 
    } 
    foobar((a1, a2) => (a1 + a2)).headOption 
  } 
}

-----
ScalaFile
  ScObject: Foobar
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foobar')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: apply
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('apply')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Option[String]
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace(' \n    ')
            ScFunctionDefinition: foobar
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('foobar')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: f
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('f')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      FunctionalType: (String, String) => A
                        TupleType: (String, String)
                          PsiElement(()('(')
                          TypesList
                            SimpleType: String
                              CodeReferenceElement: String
                                PsiElement(identifier)('String')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: String
                              CodeReferenceElement: String
                                PsiElement(identifier)('String')
                          PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: List[A]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MatchStatement
                MethodCall
                  GenericCall
                    ReferenceExpression: List
                      PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(match)('match')
                PsiWhiteSpace(' ')
                PsiElement({)('{')
                PsiWhiteSpace(' \n      ')
                CaseClauses
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    InfixPattern
                      WildcardPattern
                        PsiElement(_)('_')
                      PsiWhiteSpace(' ')
                      CodeReferenceElement: ::
                        PsiElement(identifier)('::')
                      PsiWhiteSpace(' ')
                      ReferencePattern: ls
                        PsiElement(identifier)('ls')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      MethodCall
                        ReferenceExpression: foobar
                          PsiElement(identifier)('foobar')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: f
                            PsiElement(identifier)('f')
                          PsiElement())(')')
                PsiWhiteSpace(' \n    ')
                PsiElement(})('}')
            PsiWhiteSpace(' \n    ')
            ReferenceExpression: foobar((a1, a2) => (a1 + a2)).headOption
              MethodCall
                ReferenceExpression: foobar
                  PsiElement(identifier)('foobar')
                ArgumentList
                  PsiElement(()('(')
                  FunctionExpression
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: a1
                          AnnotationsList
                            <empty list>
                          PsiElement(identifier)('a1')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        Parameter: a2
                          AnnotationsList
                            <empty list>
                          PsiElement(identifier)('a2')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    ExpressionInParenthesis
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: a1
                          PsiElement(identifier)('a1')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: +
                          PsiElement(identifier)('+')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: a2
                          PsiElement(identifier)('a2')
                      PsiElement())(')')
                  PsiElement())(')')
              PsiElement(.)('.')
              PsiElement(identifier)('headOption')
            PsiWhiteSpace(' \n  ')
            PsiElement(})('}')
        PsiWhiteSpace(' \n')
        PsiElement(})('}')
