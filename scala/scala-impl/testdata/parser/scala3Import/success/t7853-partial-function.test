object Test  {

  def testCons: Unit = {
    def x[A](a: PartialFunction[Any, A]): A = a(0)
    val eval0 = x { case list: List[Int @unchecked] => list }
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace('  ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: testCons
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('testCons')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: x
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('x')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: a
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('a')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: PartialFunction[Any, A]
                        SimpleType: PartialFunction
                          CodeReferenceElement: PartialFunction
                            PsiElement(identifier)('PartialFunction')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: Any
                            CodeReferenceElement: Any
                              PsiElement(identifier)('Any')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: a
                  PsiElement(identifier)('a')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('0')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: eval0
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: eval0
                  PsiElement(identifier)('eval0')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: x
                  PsiElement(identifier)('x')
                PsiWhiteSpace(' ')
                ArgumentList
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace(' ')
                    CaseClauses
                      CaseClause
                        PsiElement(case)('case')
                        PsiWhiteSpace(' ')
                        Scala3 TypedPattern
                          ReferencePattern: list
                            PsiElement(identifier)('list')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          TypePattern
                            ParametrizedType: List[Int @unchecked]
                              SimpleType: List
                                CodeReferenceElement: List
                                  PsiElement(identifier)('List')
                              TypeArgumentsList
                                PsiElement([)('[')
                                TypeWithAnnotation: Int @unchecked
                                  SimpleType: Int
                                    CodeReferenceElement: Int
                                      PsiElement(identifier)('Int')
                                  PsiWhiteSpace(' ')
                                  AnnotationsList
                                    Annotation
                                      PsiElement(@)('@')
                                      AnnotationExpression
                                        ConstructorInvocation
                                          SimpleType: unchecked
                                            CodeReferenceElement: unchecked
                                              PsiElement(identifier)('unchecked')
                                PsiElement(])(']')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        BlockOfExpressions
                          ReferenceExpression: list
                            PsiElement(identifier)('list')
                    PsiWhiteSpace(' ')
                    PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
