object Test {
  abstract class ExprBase { s =>
    type A
  }

  abstract class Lit extends ExprBase { s =>
    type A = Int
    val n: A
  }

  // Fails recheck since the result type e2.A is converted to Int to avoid
  // a false dependency on e2.
  def castTestFail2a(e1: ExprBase)(e2: Lit with e1.type)(x: e1.A): e2.A = x
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: ExprBase
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(abstract)('abstract')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ExprBase')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              SelfType: s
                PsiElement(identifier)('s')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDeclaration: A
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('A')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: Lit
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(abstract)('abstract')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Lit')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: ExprBase
                  CodeReferenceElement: ExprBase
                    PsiElement(identifier)('ExprBase')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              SelfType: s
                PsiElement(identifier)('s')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: A
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('A')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
              PsiWhiteSpace('\n    ')
              ScValueDeclaration: n
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfIdentifiers
                  Field identifier: n
                    PsiElement(identifier)('n')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: castTestFail2a
          PsiComment(comment)('// Fails recheck since the result type e2.A is converted to Int to avoid')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('// a false dependency on e2.')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('castTestFail2a')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: e1
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('e1')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: ExprBase
                    CodeReferenceElement: ExprBase
                      PsiElement(identifier)('ExprBase')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              Parameter: e2
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('e2')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  CompoundType: Lit with e1.type
                    SimpleType: Lit
                      CodeReferenceElement: Lit
                        PsiElement(identifier)('Lit')
                    PsiWhiteSpace(' ')
                    PsiElement(with)('with')
                    PsiWhiteSpace(' ')
                    SimpleType: e1.type
                      CodeReferenceElement: e1
                        PsiElement(identifier)('e1')
                      PsiElement(.)('.')
                      PsiElement(type)('type')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: e1.A
                    CodeReferenceElement: e1.A
                      CodeReferenceElement: e1
                        PsiElement(identifier)('e1')
                      PsiElement(.)('.')
                      PsiElement(identifier)('A')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: e2.A
            CodeReferenceElement: e2.A
              CodeReferenceElement: e2
                PsiElement(identifier)('e2')
              PsiElement(.)('.')
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
