sealed trait T1 {type M1}

case object o1 extends T1

sealed trait T2 {type M2}

case object o2 extends T2

class TestX {
  type TestT1 <: T1 {type M1 = TestT2}
  type TestT2 <: T2 {type M2 = TestT1}
  //val x: TestT1 = o1
}
-----
ScalaFile
  ScTrait: T1
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(sealed)('sealed')
    PsiWhiteSpace(' ')
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('T1')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        ScTypeAliasDeclaration: M1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('M1')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: o1
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('o1')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: T1
            CodeReferenceElement: T1
              PsiElement(identifier)('T1')
  PsiWhiteSpace('\n\n')
  ScTrait: T2
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(sealed)('sealed')
    PsiWhiteSpace(' ')
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('T2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        ScTypeAliasDeclaration: M2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('M2')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: o2
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('o2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: T2
            CodeReferenceElement: T2
              PsiElement(identifier)('T2')
  PsiWhiteSpace('\n\n')
  ScClass: TestX
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TestX')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: TestT1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TestT1')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          CompoundType: T1 {type M1 = TestT2}
            SimpleType: T1
              CodeReferenceElement: T1
                PsiElement(identifier)('T1')
            PsiWhiteSpace(' ')
            Refinement
              PsiElement({)('{')
              ScTypeAliasDefinition: M1
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('M1')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: TestT2
                  CodeReferenceElement: TestT2
                    PsiElement(identifier)('TestT2')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: TestT2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TestT2')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          CompoundType: T2 {type M2 = TestT1}
            SimpleType: T2
              CodeReferenceElement: T2
                PsiElement(identifier)('T2')
            PsiWhiteSpace(' ')
            Refinement
              PsiElement({)('{')
              ScTypeAliasDefinition: M2
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('M2')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: TestT1
                  CodeReferenceElement: TestT1
                    PsiElement(identifier)('TestT1')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('//val x: TestT1 = o1')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
