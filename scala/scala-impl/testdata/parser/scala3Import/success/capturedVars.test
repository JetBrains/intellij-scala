class Test {

  var field: Int = compiletime.uninitialized

  def foo() = {

    var x: Int = 1
    var y: String = "abc"
    @volatile var vx: Double = 2
    @volatile var vo: Exception = null
    var xs: Array[Int] = Array(1, 2, 3)
    val xs1: Object = xs

    def inner() = {
      field = x
      x = x + 1 + field
      y += "d"
      vx = x * 2
      vo = vo
      xs(0) = xs(1)
      xs = xs.clone
    }
  }
}

-----
ScalaFile
  ScClass: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScVariableDefinition: field
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(var)('var')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: field
              PsiElement(identifier)('field')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: compiletime.uninitialized
            ReferenceExpression: compiletime
              PsiElement(identifier)('compiletime')
            PsiElement(.)('.')
            PsiElement(identifier)('uninitialized')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n\n    ')
            ScVariableDefinition: x
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(var)('var')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: x
                  PsiElement(identifier)('x')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('1')
            PsiWhiteSpace('\n    ')
            ScVariableDefinition: y
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(var)('var')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: y
                  PsiElement(identifier)('y')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              StringLiteral
                PsiElement(string content)('"abc"')
            PsiWhiteSpace('\n    ')
            ScVariableDefinition: vx
              AnnotationsList
                Annotation
                  PsiElement(@)('@')
                  AnnotationExpression
                    ConstructorInvocation
                      SimpleType: volatile
                        CodeReferenceElement: volatile
                          PsiElement(identifier)('volatile')
              Modifiers
                <empty list>
              PsiWhiteSpace(' ')
              PsiElement(var)('var')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: vx
                  PsiElement(identifier)('vx')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Double
                CodeReferenceElement: Double
                  PsiElement(identifier)('Double')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('2')
            PsiWhiteSpace('\n    ')
            ScVariableDefinition: vo
              AnnotationsList
                Annotation
                  PsiElement(@)('@')
                  AnnotationExpression
                    ConstructorInvocation
                      SimpleType: volatile
                        CodeReferenceElement: volatile
                          PsiElement(identifier)('volatile')
              Modifiers
                <empty list>
              PsiWhiteSpace(' ')
              PsiElement(var)('var')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: vo
                  PsiElement(identifier)('vo')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Exception
                CodeReferenceElement: Exception
                  PsiElement(identifier)('Exception')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              NullLiteral
                PsiElement(null)('null')
            PsiWhiteSpace('\n    ')
            ScVariableDefinition: xs
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(var)('var')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: xs
                  PsiElement(identifier)('xs')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: Array[Int]
                SimpleType: Array
                  CodeReferenceElement: Array
                    PsiElement(identifier)('Array')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: Array
                  PsiElement(identifier)('Array')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: xs1
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: xs1
                  PsiElement(identifier)('xs1')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Object
                CodeReferenceElement: Object
                  PsiElement(identifier)('Object')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: xs
                PsiElement(identifier)('xs')
            PsiWhiteSpace('\n\n    ')
            ScFunctionDefinition: inner
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('inner')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                AssignStatement
                  ReferenceExpression: field
                    PsiElement(identifier)('field')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                PsiWhiteSpace('\n      ')
                AssignStatement
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    InfixExpression
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: +
                        PsiElement(identifier)('+')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('1')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: +
                      PsiElement(identifier)('+')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: field
                      PsiElement(identifier)('field')
                PsiWhiteSpace('\n      ')
                InfixExpression
                  ReferenceExpression: y
                    PsiElement(identifier)('y')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: +=
                    PsiElement(identifier)('+=')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('"d"')
                PsiWhiteSpace('\n      ')
                AssignStatement
                  ReferenceExpression: vx
                    PsiElement(identifier)('vx')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: *
                      PsiElement(identifier)('*')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('2')
                PsiWhiteSpace('\n      ')
                AssignStatement
                  ReferenceExpression: vo
                    PsiElement(identifier)('vo')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: vo
                    PsiElement(identifier)('vo')
                PsiWhiteSpace('\n      ')
                AssignStatement
                  MethodCall
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    ArgumentList
                      PsiElement(()('(')
                      IntegerLiteral
                        PsiElement(integer)('0')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    ArgumentList
                      PsiElement(()('(')
                      IntegerLiteral
                        PsiElement(integer)('1')
                      PsiElement())(')')
                PsiWhiteSpace('\n      ')
                AssignStatement
                  ReferenceExpression: xs
                    PsiElement(identifier)('xs')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.clone
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('clone')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
