type Numeric = Double | Int

sealed trait VarValues[T, C <: VarValues[T,C]] {
  this: C =>
  val arr: Array[T]
}
final case class VarDoubles(arr: Array[Double]) extends VarValues[Double, VarDoubles]
final case class VarInts(arr: Array[Int]) extends VarValues[Int, VarInts]
final case class VarStrs(arr: Array[String]) extends VarValues[String, VarStrs]

def check7(a: VarValues[_,_], b: VarValues[_,_]): Unit = {
  (a,b) match {
    case (x:(VarDoubles|VarInts), y:(VarDoubles|VarInts)) =>
      val x0: Iterator[Numeric] = x.arr.iterator
      val y0: Iterator[Numeric] = y.arr.iterator
      val l0: Iterator[(Numeric, Numeric)] = x0.zip(y0)
      val ll0: Iterator[(Numeric, Numeric)]#GroupedIterator[(Numeric, Numeric)] = x0.zip(y0).sliding(2,1)
      ???
    case _ => ???
  }
}
-----
ScalaFile
  ScTypeAliasDefinition: Numeric
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Numeric')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    InfixType: Double | Int
      SimpleType: Double
        CodeReferenceElement: Double
          PsiElement(identifier)('Double')
      PsiWhiteSpace(' ')
      CodeReferenceElement: |
        PsiElement(identifier)('|')
      PsiWhiteSpace(' ')
      SimpleType: Int
        CodeReferenceElement: Int
          PsiElement(identifier)('Int')
  PsiWhiteSpace('\n\n')
  ScTrait: VarValues
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(sealed)('sealed')
    PsiWhiteSpace(' ')
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('VarValues')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: C
        PsiElement(identifier)('C')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        ParametrizedType: VarValues[T,C]
          SimpleType: VarValues
            CodeReferenceElement: VarValues
              PsiElement(identifier)('VarValues')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
            PsiElement(,)(',')
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
            PsiElement(])(']')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        SelfType: this
          PsiElement(this)('this')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: C
            CodeReferenceElement: C
              PsiElement(identifier)('C')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: arr
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: arr
              PsiElement(identifier)('arr')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Array[T]
            SimpleType: Array
              CodeReferenceElement: Array
                PsiElement(identifier)('Array')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: VarDoubles
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
      PsiWhiteSpace(' ')
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('VarDoubles')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: arr
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('arr')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: Array[Double]
                SimpleType: Array
                  CodeReferenceElement: Array
                    PsiElement(identifier)('Array')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Double
                    CodeReferenceElement: Double
                      PsiElement(identifier)('Double')
                  PsiElement(])(']')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: VarValues[Double, VarDoubles]
            SimpleType: VarValues
              CodeReferenceElement: VarValues
                PsiElement(identifier)('VarValues')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Double
                CodeReferenceElement: Double
                  PsiElement(identifier)('Double')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: VarDoubles
                CodeReferenceElement: VarDoubles
                  PsiElement(identifier)('VarDoubles')
              PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScClass: VarInts
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
      PsiWhiteSpace(' ')
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('VarInts')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: arr
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('arr')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: Array[Int]
                SimpleType: Array
                  CodeReferenceElement: Array
                    PsiElement(identifier)('Array')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: VarValues[Int, VarInts]
            SimpleType: VarValues
              CodeReferenceElement: VarValues
                PsiElement(identifier)('VarValues')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: VarInts
                CodeReferenceElement: VarInts
                  PsiElement(identifier)('VarInts')
              PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScClass: VarStrs
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
      PsiWhiteSpace(' ')
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('VarStrs')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: arr
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('arr')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: Array[String]
                SimpleType: Array
                  CodeReferenceElement: Array
                    PsiElement(identifier)('Array')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(])(']')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: VarValues[String, VarStrs]
            SimpleType: VarValues
              CodeReferenceElement: VarValues
                PsiElement(identifier)('VarValues')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: VarStrs
                CodeReferenceElement: VarStrs
                  PsiElement(identifier)('VarStrs')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: check7
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('check7')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('a')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: VarValues[_,_]
              SimpleType: VarValues
                CodeReferenceElement: VarValues
                  PsiElement(identifier)('VarValues')
              TypeArgumentsList
                PsiElement([)('[')
                WildcardType: _
                  PsiElement(_)('_')
                PsiElement(,)(',')
                WildcardType: _
                  PsiElement(_)('_')
                PsiElement(])(']')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        Parameter: b
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('b')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: VarValues[_,_]
              SimpleType: VarValues
                CodeReferenceElement: VarValues
                  PsiElement(identifier)('VarValues')
              TypeArgumentsList
                PsiElement([)('[')
                WildcardType: _
                  PsiElement(_)('_')
                PsiElement(,)(',')
                WildcardType: _
                  PsiElement(_)('_')
                PsiElement(])(']')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      MatchStatement
        Tuple
          PsiElement(()('(')
          ReferenceExpression: a
            PsiElement(identifier)('a')
          PsiElement(,)(',')
          ReferenceExpression: b
            PsiElement(identifier)('b')
          PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement(match)('match')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        PsiWhiteSpace('\n    ')
        CaseClauses
          CaseClause
            PsiElement(case)('case')
            PsiWhiteSpace(' ')
            TuplePattern
              PsiElement(()('(')
              ArgumentPatterns
                Scala3 TypedPattern
                  ReferencePattern: x
                    PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  TypePattern
                    TypeInParenthesis: (VarDoubles|VarInts)
                      PsiElement(()('(')
                      InfixType: VarDoubles|VarInts
                        SimpleType: VarDoubles
                          CodeReferenceElement: VarDoubles
                            PsiElement(identifier)('VarDoubles')
                        CodeReferenceElement: |
                          PsiElement(identifier)('|')
                        SimpleType: VarInts
                          CodeReferenceElement: VarInts
                            PsiElement(identifier)('VarInts')
                      PsiElement())(')')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                Scala3 TypedPattern
                  ReferencePattern: y
                    PsiElement(identifier)('y')
                  PsiElement(:)(':')
                  TypePattern
                    TypeInParenthesis: (VarDoubles|VarInts)
                      PsiElement(()('(')
                      InfixType: VarDoubles|VarInts
                        SimpleType: VarDoubles
                          CodeReferenceElement: VarDoubles
                            PsiElement(identifier)('VarDoubles')
                        CodeReferenceElement: |
                          PsiElement(identifier)('|')
                        SimpleType: VarInts
                          CodeReferenceElement: VarInts
                            PsiElement(identifier)('VarInts')
                      PsiElement())(')')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace('\n      ')
            BlockOfExpressions
              ScPatternDefinition: x0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: x0
                    PsiElement(identifier)('x0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Iterator[Numeric]
                  SimpleType: Iterator
                    CodeReferenceElement: Iterator
                      PsiElement(identifier)('Iterator')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Numeric
                      CodeReferenceElement: Numeric
                        PsiElement(identifier)('Numeric')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: x.arr.iterator
                  ReferenceExpression: x.arr
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement(.)('.')
                    PsiElement(identifier)('arr')
                  PsiElement(.)('.')
                  PsiElement(identifier)('iterator')
              PsiWhiteSpace('\n      ')
              ScPatternDefinition: y0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: y0
                    PsiElement(identifier)('y0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Iterator[Numeric]
                  SimpleType: Iterator
                    CodeReferenceElement: Iterator
                      PsiElement(identifier)('Iterator')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Numeric
                      CodeReferenceElement: Numeric
                        PsiElement(identifier)('Numeric')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: y.arr.iterator
                  ReferenceExpression: y.arr
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement(.)('.')
                    PsiElement(identifier)('arr')
                  PsiElement(.)('.')
                  PsiElement(identifier)('iterator')
              PsiWhiteSpace('\n      ')
              ScPatternDefinition: l0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: l0
                    PsiElement(identifier)('l0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Iterator[(Numeric, Numeric)]
                  SimpleType: Iterator
                    CodeReferenceElement: Iterator
                      PsiElement(identifier)('Iterator')
                  TypeArgumentsList
                    PsiElement([)('[')
                    TupleType: (Numeric, Numeric)
                      PsiElement(()('(')
                      TypesList
                        SimpleType: Numeric
                          CodeReferenceElement: Numeric
                            PsiElement(identifier)('Numeric')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: Numeric
                          CodeReferenceElement: Numeric
                            PsiElement(identifier)('Numeric')
                      PsiElement())(')')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: x0.zip
                    ReferenceExpression: x0
                      PsiElement(identifier)('x0')
                    PsiElement(.)('.')
                    PsiElement(identifier)('zip')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: y0
                      PsiElement(identifier)('y0')
                    PsiElement())(')')
              PsiWhiteSpace('\n      ')
              ScPatternDefinition: ll0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: ll0
                    PsiElement(identifier)('ll0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Iterator[(Numeric, Numeric)]#GroupedIterator[(Numeric, Numeric)]
                  TypeProjection: Iterator[(Numeric, Numeric)]#GroupedIterator
                    ParametrizedType: Iterator[(Numeric, Numeric)]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        TupleType: (Numeric, Numeric)
                          PsiElement(()('(')
                          TypesList
                            SimpleType: Numeric
                              CodeReferenceElement: Numeric
                                PsiElement(identifier)('Numeric')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: Numeric
                              CodeReferenceElement: Numeric
                                PsiElement(identifier)('Numeric')
                          PsiElement())(')')
                        PsiElement(])(']')
                    PsiElement(#)('#')
                    PsiElement(identifier)('GroupedIterator')
                  TypeArgumentsList
                    PsiElement([)('[')
                    TupleType: (Numeric, Numeric)
                      PsiElement(()('(')
                      TypesList
                        SimpleType: Numeric
                          CodeReferenceElement: Numeric
                            PsiElement(identifier)('Numeric')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: Numeric
                          CodeReferenceElement: Numeric
                            PsiElement(identifier)('Numeric')
                      PsiElement())(')')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: x0.zip(y0).sliding
                    MethodCall
                      ReferenceExpression: x0.zip
                        ReferenceExpression: x0
                          PsiElement(identifier)('x0')
                        PsiElement(.)('.')
                        PsiElement(identifier)('zip')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: y0
                          PsiElement(identifier)('y0')
                        PsiElement())(')')
                    PsiElement(.)('.')
                    PsiElement(identifier)('sliding')
                  ArgumentList
                    PsiElement(()('(')
                    IntegerLiteral
                      PsiElement(integer)('2')
                    PsiElement(,)(',')
                    IntegerLiteral
                      PsiElement(integer)('1')
                    PsiElement())(')')
              PsiWhiteSpace('\n      ')
              ReferenceExpression: ???
                PsiElement(identifier)('???')
          PsiWhiteSpace('\n    ')
          CaseClause
            PsiElement(case)('case')
            PsiWhiteSpace(' ')
            WildcardPattern
              PsiElement(_)('_')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            BlockOfExpressions
              ReferenceExpression: ???
                PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
