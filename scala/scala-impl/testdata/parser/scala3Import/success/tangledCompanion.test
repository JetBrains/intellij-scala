object Test {

  import Coll.*
  import LazyList.#::

  val xs = LazyList.Empty

}

object Coll {

  trait IterableFactory[+C[X]]

  class LazyList[+A](expr: => LazyList.Evaluated[A])

  object LazyList extends IterableFactory[LazyList] {

    type Evaluated[+A] = Option[(A, LazyList[A])]

    object Empty extends LazyList[Nothing](None)

    object #:: {
      def unapply[A](s: LazyList[A]): Evaluated[A] = ???
    }
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: Coll
              PsiElement(identifier)('Coll')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: LazyList.#::
              CodeReferenceElement: LazyList
                PsiElement(identifier)('LazyList')
              PsiElement(.)('.')
              PsiElement(identifier)('#::')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: xs
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xs
              PsiElement(identifier)('xs')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: LazyList.Empty
            ReferenceExpression: LazyList
              PsiElement(identifier)('LazyList')
            PsiElement(.)('.')
            PsiElement(identifier)('Empty')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Coll
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Coll')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTrait: IterableFactory
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('IterableFactory')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: C
              PsiElement(identifier)('+')
              PsiElement(identifier)('C')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: X
                  PsiElement(identifier)('X')
                PsiElement(])(']')
            PsiElement(])(']')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScClass: LazyList
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('LazyList')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('+')
              PsiElement(identifier)('A')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: expr
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('expr')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    ParametrizedType: LazyList.Evaluated[A]
                      SimpleType: LazyList.Evaluated
                        CodeReferenceElement: LazyList.Evaluated
                          CodeReferenceElement: LazyList
                            PsiElement(identifier)('LazyList')
                          PsiElement(.)('.')
                          PsiElement(identifier)('Evaluated')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                PsiElement())(')')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScObject: LazyList
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('LazyList')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: IterableFactory[LazyList]
                  SimpleType: IterableFactory
                    CodeReferenceElement: IterableFactory
                      PsiElement(identifier)('IterableFactory')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: LazyList
                      CodeReferenceElement: LazyList
                        PsiElement(identifier)('LazyList')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\n    ')
              ScTypeAliasDefinition: Evaluated
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Evaluated')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('+')
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ParametrizedType: Option[(A, LazyList[A])]
                  SimpleType: Option
                    CodeReferenceElement: Option
                      PsiElement(identifier)('Option')
                  TypeArgumentsList
                    PsiElement([)('[')
                    TupleType: (A, LazyList[A])
                      PsiElement(()('(')
                      TypesList
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ParametrizedType: LazyList[A]
                          SimpleType: LazyList
                            CodeReferenceElement: LazyList
                              PsiElement(identifier)('LazyList')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                      PsiElement())(')')
                    PsiElement(])(']')
              PsiWhiteSpace('\n\n    ')
              ScObject: Empty
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(object)('object')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Empty')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: LazyList[Nothing]
                        SimpleType: LazyList
                          CodeReferenceElement: LazyList
                            PsiElement(identifier)('LazyList')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: Nothing
                            CodeReferenceElement: Nothing
                              PsiElement(identifier)('Nothing')
                          PsiElement(])(']')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: None
                          PsiElement(identifier)('None')
                        PsiElement())(')')
              PsiWhiteSpace('\n\n    ')
              ScObject: #::
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(object)('object')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('#::')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n      ')
                    ScFunctionDefinition: unapply
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('unapply')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: A
                          PsiElement(identifier)('A')
                        PsiElement(])(']')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: s
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('s')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              ParametrizedType: LazyList[A]
                                SimpleType: LazyList
                                  CodeReferenceElement: LazyList
                                    PsiElement(identifier)('LazyList')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(])(']')
                          PsiElement())(')')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Evaluated[A]
                        SimpleType: Evaluated
                          CodeReferenceElement: Evaluated
                            PsiElement(identifier)('Evaluated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: ???
                        PsiElement(identifier)('???')
                    PsiWhiteSpace('\n    ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
