object CompilerCrash {
  def main(args: Array[String]): Unit = {
    args match {
      case Array("a", a *) => { } // The code compiles fine if this line is commented out or "@ _*" is deleted or this line is swapped for the next line
      case Array("b") => { } // The code compiles fine if this line is commented out
      case Array("c", c) => {
        0 // The code compiles fine if this line is commented out
      }
    }
  }
}
-----
ScalaFile
  ScObject: CompilerCrash
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('CompilerCrash')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[String]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            MatchStatement
              ReferenceExpression: args
                PsiElement(identifier)('args')
              PsiWhiteSpace(' ')
              PsiElement(match)('match')
              PsiWhiteSpace(' ')
              PsiElement({)('{')
              PsiWhiteSpace('\n      ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  ConstructorPattern
                    CodeReferenceElement: Array
                      PsiElement(identifier)('Array')
                    Pattern Argument List
                      PsiElement(()('(')
                      LiteralPattern
                        StringLiteral
                          PsiElement(string content)('"a"')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SequenceWildcardPattern: a
                        PsiElement(identifier)('a')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('*')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace(' ')
                      PsiElement(})('}')
                PsiWhiteSpace(' ')
                PsiComment(comment)('// The code compiles fine if this line is commented out or "@ _*" is deleted or this line is swapped for the next line')
                PsiWhiteSpace('\n      ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  ConstructorPattern
                    CodeReferenceElement: Array
                      PsiElement(identifier)('Array')
                    Pattern Argument List
                      PsiElement(()('(')
                      LiteralPattern
                        StringLiteral
                          PsiElement(string content)('"b"')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace(' ')
                      PsiElement(})('}')
                PsiWhiteSpace(' ')
                PsiComment(comment)('// The code compiles fine if this line is commented out')
                PsiWhiteSpace('\n      ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  ConstructorPattern
                    CodeReferenceElement: Array
                      PsiElement(identifier)('Array')
                    Pattern Argument List
                      PsiElement(()('(')
                      LiteralPattern
                        StringLiteral
                          PsiElement(string content)('"c"')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferencePattern: c
                        PsiElement(identifier)('c')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n        ')
                      IntegerLiteral
                        PsiElement(integer)('0')
                      PsiWhiteSpace(' ')
                      PsiComment(comment)('// The code compiles fine if this line is commented out')
                      PsiWhiteSpace('\n      ')
                      PsiElement(})('}')
              PsiWhiteSpace('\n    ')
              PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
