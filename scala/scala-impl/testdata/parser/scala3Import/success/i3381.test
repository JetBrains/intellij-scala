case class Tuple2K[X, A[_], B[_]](a: A[X], b: B[X])

object Test {
  def f[X](x: Tuple2K[X, Option, [Y] =>> Tuple2K[Y, Option, Option]]): Any =
    x match {
      case Tuple2K(_, Tuple2K(_, _)) => ???
    }
}
-----
ScalaFile
  ScClass: Tuple2K
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Tuple2K')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: X
        PsiElement(identifier)('X')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: A
        PsiElement(identifier)('A')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: a
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('a')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: A[X]
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: X
                    CodeReferenceElement: X
                      PsiElement(identifier)('X')
                  PsiElement(])(']')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: b
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('b')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: B[X]
                SimpleType: B
                  CodeReferenceElement: B
                    PsiElement(identifier)('B')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: X
                    CodeReferenceElement: X
                      PsiElement(identifier)('X')
                  PsiElement(])(']')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Tuple2K[X, Option, [Y] =>> Tuple2K[Y, Option, Option]]
                    SimpleType: Tuple2K
                      CodeReferenceElement: Tuple2K
                        PsiElement(identifier)('Tuple2K')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: X
                        CodeReferenceElement: X
                          PsiElement(identifier)('X')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Option
                        CodeReferenceElement: Option
                          PsiElement(identifier)('Option')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      TypeLambda: [Y] =>> Tuple2K[Y, Option, Option]
                        TypeParameterClause
                          PsiElement([)('[')
                          TypeParameter: Y
                            PsiElement(identifier)('Y')
                          PsiElement(])(']')
                        PsiWhiteSpace(' ')
                        PsiElement(=>>)('=>>')
                        PsiWhiteSpace(' ')
                        ParametrizedType: Tuple2K[Y, Option, Option]
                          SimpleType: Tuple2K
                            CodeReferenceElement: Tuple2K
                              PsiElement(identifier)('Tuple2K')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: Y
                              CodeReferenceElement: Y
                                PsiElement(identifier)('Y')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: Option
                              CodeReferenceElement: Option
                                PsiElement(identifier)('Option')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: Option
                              CodeReferenceElement: Option
                                PsiElement(identifier)('Option')
                            PsiElement(])(']')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Any
            CodeReferenceElement: Any
              PsiElement(identifier)('Any')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n      ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Tuple2K
                    PsiElement(identifier)('Tuple2K')
                  Pattern Argument List
                    PsiElement(()('(')
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ConstructorPattern
                      CodeReferenceElement: Tuple2K
                        PsiElement(identifier)('Tuple2K')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: ???
                    PsiElement(identifier)('???')
            PsiWhiteSpace('\n    ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
