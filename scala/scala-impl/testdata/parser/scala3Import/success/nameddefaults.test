object nameddefaults {

  def foo(first: Int, second: Int = 2, third: Int = 3) = first + second

  var x = 1
  var y = 2

  foo(1, 2, 3)

  foo(1, 2)

  foo(1)

  // named and missing arguments

  foo(first = 1, second = 3)

  foo(second = 3, first = 1)

  foo(first = 2, third = 3)

  foo(2, third = 3)

  // same but with non-idempotent expressions

  foo(first = x, second = y)

  foo(second = x, first = y)

  foo(first = x, third = y)

  foo(x, third = y)

// The same thing, but for classes

  class C(first: Int, second: Int = 2, third: Int = 3) {}

  new C(1, 2, 3)

  new C(1, 2)

  new C(1)

  // named and missing arguments

  new C(first = 1, second = 3)

  new C(second = 3, first = 1)

  new C(first = 2, third = 3)

  new C(2, third = 3)

  // same but with non-idempotent expressions

  new C(first = x, second = y)

  new C(second = x, first = y)

  new C(first = x, third = y)


}
-----
ScalaFile
  ScObject: nameddefaults
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('nameddefaults')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: first
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('first')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: second
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('second')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IntegerLiteral
                  PsiElement(integer)('2')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: third
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('third')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IntegerLiteral
                  PsiElement(integer)('3')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            ReferenceExpression: first
              PsiElement(identifier)('first')
            PsiWhiteSpace(' ')
            ReferenceExpression: +
              PsiElement(identifier)('+')
            PsiWhiteSpace(' ')
            ReferenceExpression: second
              PsiElement(identifier)('second')
        PsiWhiteSpace('\n\n  ')
        ScVariableDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(var)('var')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('1')
        PsiWhiteSpace('\n  ')
        ScVariableDefinition: y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(var)('var')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y
              PsiElement(identifier)('y')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('2')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('2')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('3')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('2')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// named and missing arguments')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            AssignStatement
              ReferenceExpression: first
                PsiElement(identifier)('first')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('1')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            AssignStatement
              ReferenceExpression: second
                PsiElement(identifier)('second')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('3')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            AssignStatement
              ReferenceExpression: second
                PsiElement(identifier)('second')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('3')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            AssignStatement
              ReferenceExpression: first
                PsiElement(identifier)('first')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('1')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            AssignStatement
              ReferenceExpression: first
                PsiElement(identifier)('first')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('2')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            AssignStatement
              ReferenceExpression: third
                PsiElement(identifier)('third')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('3')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            IntegerLiteral
              PsiElement(integer)('2')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            AssignStatement
              ReferenceExpression: third
                PsiElement(identifier)('third')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('3')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// same but with non-idempotent expressions')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            AssignStatement
              ReferenceExpression: first
                PsiElement(identifier)('first')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            AssignStatement
              ReferenceExpression: second
                PsiElement(identifier)('second')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: y
                PsiElement(identifier)('y')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            AssignStatement
              ReferenceExpression: second
                PsiElement(identifier)('second')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            AssignStatement
              ReferenceExpression: first
                PsiElement(identifier)('first')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: y
                PsiElement(identifier)('y')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            AssignStatement
              ReferenceExpression: first
                PsiElement(identifier)('first')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            AssignStatement
              ReferenceExpression: third
                PsiElement(identifier)('third')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: y
                PsiElement(identifier)('y')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            AssignStatement
              ReferenceExpression: third
                PsiElement(identifier)('third')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: y
                PsiElement(identifier)('y')
            PsiElement())(')')
        PsiWhiteSpace('\n\n')
        PsiComment(comment)('// The same thing, but for classes')
        PsiWhiteSpace('\n\n  ')
        ScClass: C
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: first
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('first')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ClassParameter: second
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('second')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ClassParameter: third
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('third')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// named and missing arguments')
        PsiWhiteSpace('\n\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  AssignStatement
                    ReferenceExpression: first
                      PsiElement(identifier)('first')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  AssignStatement
                    ReferenceExpression: second
                      PsiElement(identifier)('second')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('3')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  AssignStatement
                    ReferenceExpression: second
                      PsiElement(identifier)('second')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('3')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  AssignStatement
                    ReferenceExpression: first
                      PsiElement(identifier)('first')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('1')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  AssignStatement
                    ReferenceExpression: first
                      PsiElement(identifier)('first')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  AssignStatement
                    ReferenceExpression: third
                      PsiElement(identifier)('third')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('3')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  AssignStatement
                    ReferenceExpression: third
                      PsiElement(identifier)('third')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('3')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// same but with non-idempotent expressions')
        PsiWhiteSpace('\n\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  AssignStatement
                    ReferenceExpression: first
                      PsiElement(identifier)('first')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  AssignStatement
                    ReferenceExpression: second
                      PsiElement(identifier)('second')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  AssignStatement
                    ReferenceExpression: second
                      PsiElement(identifier)('second')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  AssignStatement
                    ReferenceExpression: first
                      PsiElement(identifier)('first')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  AssignStatement
                    ReferenceExpression: first
                      PsiElement(identifier)('first')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  AssignStatement
                    ReferenceExpression: third
                      PsiElement(identifier)('third')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n\n')
        PsiElement(})('}')
