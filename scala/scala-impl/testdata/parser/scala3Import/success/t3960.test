class A {
  class C[x]
  val cs = new scala.collection.mutable.HashMap[C[_], Int]
  def c: C[_] = sys.error("")
  val eval: C[_] = c
  cs(c) += 1
}
-----
ScalaFile
  ScClass: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: C
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: x
              PsiElement(identifier)('x')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: cs
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: cs
              PsiElement(identifier)('cs')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: scala.collection.mutable.HashMap[C[_], Int]
                    SimpleType: scala.collection.mutable.HashMap
                      CodeReferenceElement: scala.collection.mutable.HashMap
                        CodeReferenceElement: scala.collection.mutable
                          CodeReferenceElement: scala.collection
                            CodeReferenceElement: scala
                              PsiElement(identifier)('scala')
                            PsiElement(.)('.')
                            PsiElement(identifier)('collection')
                          PsiElement(.)('.')
                          PsiElement(identifier)('mutable')
                        PsiElement(.)('.')
                        PsiElement(identifier)('HashMap')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: C[_]
                        SimpleType: C
                          CodeReferenceElement: C
                            PsiElement(identifier)('C')
                        TypeArgumentsList
                          PsiElement([)('[')
                          WildcardType: _
                            PsiElement(_)('_')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: c
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('c')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: C[_]
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
            TypeArgumentsList
              PsiElement([)('[')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: sys.error
              ReferenceExpression: sys
                PsiElement(identifier)('sys')
              PsiElement(.)('.')
              PsiElement(identifier)('error')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('""')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: eval
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: eval
              PsiElement(identifier)('eval')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: C[_]
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
            TypeArgumentsList
              PsiElement([)('[')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: c
            PsiElement(identifier)('c')
        PsiWhiteSpace('\n  ')
        InfixExpression
          MethodCall
            ReferenceExpression: cs
              PsiElement(identifier)('cs')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: c
                PsiElement(identifier)('c')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          ReferenceExpression: +=
            PsiElement(identifier)('+=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('1')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
