type LeafElem[X] = X match
   case String => Char
   case Array[t] => LeafElem[t]
   case Iterable[t] => LeafElem[t]
   case AnyVal => X

def leafElem[X](x: X): LeafElem[X] = x match
   case x: String      => x.charAt(0)
   case x: Array[t]    => leafElem(x(9))
   case x: Iterable[t] => leafElem(x.head)
   case x: AnyVal      => x
-----
ScalaFile
  ScTypeAliasDefinition: LeafElem
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('LeafElem')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: X
        PsiElement(identifier)('X')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MatchType: X match
   case String => Char
   case Array[t] => LeafElem[t]
   case Iterable[t] => LeafElem[t]
   case AnyVal => X
      SimpleType: X
        CodeReferenceElement: X
          PsiElement(identifier)('X')
      PsiWhiteSpace(' ')
      PsiElement(match)('match')
      PsiWhiteSpace('\n   ')
      ScMatchTypeCasesImpl(match type cases)
        ScMatchTypeCaseImpl(match type case)
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          SimpleType: Char
            CodeReferenceElement: Char
              PsiElement(identifier)('Char')
        PsiWhiteSpace('\n   ')
        ScMatchTypeCaseImpl(match type case)
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ParametrizedType: Array[t]
            SimpleType: Array
              CodeReferenceElement: Array
                PsiElement(identifier)('Array')
            TypeArgumentsList
              PsiElement([)('[')
              TypeVariable: t
                PsiElement(identifier)('t')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          ParametrizedType: LeafElem[t]
            SimpleType: LeafElem
              CodeReferenceElement: LeafElem
                PsiElement(identifier)('LeafElem')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: t
                CodeReferenceElement: t
                  PsiElement(identifier)('t')
              PsiElement(])(']')
        PsiWhiteSpace('\n   ')
        ScMatchTypeCaseImpl(match type case)
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ParametrizedType: Iterable[t]
            SimpleType: Iterable
              CodeReferenceElement: Iterable
                PsiElement(identifier)('Iterable')
            TypeArgumentsList
              PsiElement([)('[')
              TypeVariable: t
                PsiElement(identifier)('t')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          ParametrizedType: LeafElem[t]
            SimpleType: LeafElem
              CodeReferenceElement: LeafElem
                PsiElement(identifier)('LeafElem')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: t
                CodeReferenceElement: t
                  PsiElement(identifier)('t')
              PsiElement(])(']')
        PsiWhiteSpace('\n   ')
        ScMatchTypeCaseImpl(match type case)
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          SimpleType: AnyVal
            CodeReferenceElement: AnyVal
              PsiElement(identifier)('AnyVal')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          SimpleType: X
            CodeReferenceElement: X
              PsiElement(identifier)('X')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: leafElem
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('leafElem')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: X
        PsiElement(identifier)('X')
      PsiElement(])(']')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: X
              CodeReferenceElement: X
                PsiElement(identifier)('X')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: LeafElem[X]
      SimpleType: LeafElem
        CodeReferenceElement: LeafElem
          PsiElement(identifier)('LeafElem')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: X
          CodeReferenceElement: X
            PsiElement(identifier)('X')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MatchStatement
      ReferenceExpression: x
        PsiElement(identifier)('x')
      PsiWhiteSpace(' ')
      PsiElement(match)('match')
      PsiWhiteSpace('\n   ')
      CaseClauses
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Scala3 TypedPattern
            ReferencePattern: x
              PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            TypePattern
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
          PsiWhiteSpace('      ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            MethodCall
              ReferenceExpression: x.charAt
                ReferenceExpression: x
                  PsiElement(identifier)('x')
                PsiElement(.)('.')
                PsiElement(identifier)('charAt')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('0')
                PsiElement())(')')
        PsiWhiteSpace('\n   ')
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Scala3 TypedPattern
            ReferencePattern: x
              PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            TypePattern
              ParametrizedType: Array[t]
                SimpleType: Array
                  CodeReferenceElement: Array
                    PsiElement(identifier)('Array')
                TypeArgumentsList
                  PsiElement([)('[')
                  TypeVariable: t
                    PsiElement(identifier)('t')
                  PsiElement(])(']')
          PsiWhiteSpace('    ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            MethodCall
              ReferenceExpression: leafElem
                PsiElement(identifier)('leafElem')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  ArgumentList
                    PsiElement(()('(')
                    IntegerLiteral
                      PsiElement(integer)('9')
                    PsiElement())(')')
                PsiElement())(')')
        PsiWhiteSpace('\n   ')
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Scala3 TypedPattern
            ReferencePattern: x
              PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            TypePattern
              ParametrizedType: Iterable[t]
                SimpleType: Iterable
                  CodeReferenceElement: Iterable
                    PsiElement(identifier)('Iterable')
                TypeArgumentsList
                  PsiElement([)('[')
                  TypeVariable: t
                    PsiElement(identifier)('t')
                  PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            MethodCall
              ReferenceExpression: leafElem
                PsiElement(identifier)('leafElem')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: x.head
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  PsiElement(.)('.')
                  PsiElement(identifier)('head')
                PsiElement())(')')
        PsiWhiteSpace('\n   ')
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Scala3 TypedPattern
            ReferencePattern: x
              PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            TypePattern
              SimpleType: AnyVal
                CodeReferenceElement: AnyVal
                  PsiElement(identifier)('AnyVal')
          PsiWhiteSpace('      ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            ReferenceExpression: x
              PsiElement(identifier)('x')
