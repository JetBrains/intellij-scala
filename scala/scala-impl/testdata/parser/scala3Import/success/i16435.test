// scalac: -Werror
trait Base:
  type Value
  inline def oov: Option[Option[Value]] = None
  def get: Option[Value]

trait X extends Base:
  override def get: Option[Value] =
    oov match // was: match may not be exhaustive
      case Some(ov) => ov
      case None => None
-----
ScalaFile
  ScTrait: Base
    PsiComment(comment)('// scalac: -Werror')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Base')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Value
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Value')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: oov
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('oov')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Option[Option[Value]]
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Option[Value]
                SimpleType: Option
                  CodeReferenceElement: Option
                    PsiElement(identifier)('Option')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Value
                    CodeReferenceElement: Value
                      PsiElement(identifier)('Value')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: None
            PsiElement(identifier)('None')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: get
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('get')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Option[Value]
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Value
                CodeReferenceElement: Value
                  PsiElement(identifier)('Value')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScTrait: X
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('X')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Base
            CodeReferenceElement: Base
              PsiElement(identifier)('Base')
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: get
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(override)('override')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('get')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Option[Value]
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Value
                CodeReferenceElement: Value
                  PsiElement(identifier)('Value')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            ReferenceExpression: oov
              PsiElement(identifier)('oov')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// was: match may not be exhaustive')
            PsiWhiteSpace('\n      ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Some
                    PsiElement(identifier)('Some')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: ov
                      PsiElement(identifier)('ov')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: ov
                    PsiElement(identifier)('ov')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: None
                    PsiElement(identifier)('None')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: None
                    PsiElement(identifier)('None')
