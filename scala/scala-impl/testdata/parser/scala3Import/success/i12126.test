object Structures:

  trait Functor[F[_]]:
    extension [A](fa: F[A])
      def map[B](f: A => B): F[B]
      def as[B](b: B): F[B] = map(_ => b)
      def void: F[Unit] = as(())

  trait Applicative[F[_]] extends Functor[F]:
    def pure[A](a: A): F[A]
    def unit: F[Unit] = pure(())
    extension[A](fa: F[A])
      def map2[B, C](fb: F[B], f: (A, B) => C): F[C]
      def map[B](f: A => B): F[B] =
        fa.map2(unit, (a, _) => f(a))

  trait Monad[F[_]] extends Applicative[F]:
    extension[A](fa: F[A])
      def flatMap[B](f: A => F[B]): F[B]
      override def map[B](f: A => B): F[B] =
        flatMap(a => pure(f(a)))
      def map2[B, C](fb: F[B], f: (A, B) => C): F[C] =
        flatMap(a => fb.map(b => f(a, b)))

  given Monad[List] with
    def pure[A](a: A) = List(a)
    extension[A](fa: List[A])
      def flatMap[B](f: A => List[B]) = fa.flatMap(f)

  given Monad[Option] with
    def pure[A](a: A) = Some(a)
    extension[A](fa: Option[A])
      def flatMap[B](f: A => Option[B]) = fa.flatMap(f)


  opaque type Kleisli[F[_], A, B] = A => F[B]

  extension [F[_], A, B](k: Kleisli[F, A, B])
    def apply(a: A): F[B] = k(a)

  object Kleisli:
    def apply[F[_], A, B](f: A => F[B]): Kleisli[F, A, B] = f

  given [F[_], A](using F: Monad[F]): Monad[[B] =>> Kleisli[F, A, B]] with
    def pure[B](b: B) = Kleisli(_ => F.pure(b))
    extension[B](k: Kleisli[F, A, B])
      def flatMap[C](f: B => Kleisli[F, A, C]) =
        a => k(a).flatMap(b => f(b)(a))

end Structures

@main def run =
  import Structures.{*, given}
  println(List(1, 2, 3).map2(List(4, 5, 6), (_, _)))

  val p: Kleisli[Option, Int, Int] = Kleisli((x: Int) => if x % 2 == 0 then Some(x) else None)
  val q: Kleisli[Option, Int, Int] = summon[Applicative[[B] =>> Kleisli[Option, Int, B]]].pure(20)
  println(p.map2(q, _ + _)(42))

-----
ScalaFile
  ScObject: Structures
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Structures')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Functor
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Functor')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              Extension on F[A]
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: fa
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('fa')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: F[A]
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace('\n      ')
                ScExtensionBody
                  ScFunctionDeclaration: map
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('map')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => B
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[B]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n      ')
                  ScFunctionDefinition: as
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('as')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: b
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('b')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[B]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: map
                        PsiElement(identifier)('map')
                      ArgumentList
                        PsiElement(()('(')
                        FunctionExpression
                          Parameters
                            ParametersClause
                              Parameter: _
                                PsiElement(_)('_')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: b
                            PsiElement(identifier)('b')
                        PsiElement())(')')
                  PsiWhiteSpace('\n      ')
                  ScFunctionDefinition: void
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('void')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[Unit]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: Unit
                          CodeReferenceElement: Unit
                            PsiElement(identifier)('Unit')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: as
                        PsiElement(identifier)('as')
                      ArgumentList
                        PsiElement(()('(')
                        UnitExpression
                          PsiElement(()('(')
                          PsiElement())(')')
                        PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Applicative
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Applicative')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Functor[F]
                  SimpleType: Functor
                    CodeReferenceElement: Functor
                      PsiElement(identifier)('Functor')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(])(']')
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: pure
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('pure')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: a
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('a')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: F[A]
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: unit
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('unit')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: F[Unit]
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Unit
                      CodeReferenceElement: Unit
                        PsiElement(identifier)('Unit')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: pure
                    PsiElement(identifier)('pure')
                  ArgumentList
                    PsiElement(()('(')
                    UnitExpression
                      PsiElement(()('(')
                      PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              Extension on F[A]
                PsiElement(extension)('extension')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: fa
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('fa')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: F[A]
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace('\n      ')
                ScExtensionBody
                  ScFunctionDeclaration: map2
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('map2')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      TypeParameter: C
                        PsiElement(identifier)('C')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: fb
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('fb')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: F[B]
                              SimpleType: F
                                CodeReferenceElement: F
                                  PsiElement(identifier)('F')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: (A, B) => C
                              TupleType: (A, B)
                                PsiElement(()('(')
                                TypesList
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: C
                                CodeReferenceElement: C
                                  PsiElement(identifier)('C')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[C]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: C
                          CodeReferenceElement: C
                            PsiElement(identifier)('C')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n      ')
                  ScFunctionDefinition: map
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('map')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => B
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[B]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n        ')
                    MethodCall
                      ReferenceExpression: fa.map2
                        ReferenceExpression: fa
                          PsiElement(identifier)('fa')
                        PsiElement(.)('.')
                        PsiElement(identifier)('map2')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: unit
                          PsiElement(identifier)('unit')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        FunctionExpression
                          Parameters
                            ParametersClause
                              PsiElement(()('(')
                              Parameter: a
                                AnnotationsList
                                  <empty list>
                                PsiElement(identifier)('a')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              Parameter: _
                                AnnotationsList
                                  <empty list>
                                PsiElement(_)('_')
                              PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: f
                              PsiElement(identifier)('f')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: a
                                PsiElement(identifier)('a')
                              PsiElement())(')')
                        PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Monad
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Monad')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Applicative[F]
                  SimpleType: Applicative
                    CodeReferenceElement: Applicative
                      PsiElement(identifier)('Applicative')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(])(']')
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              Extension on F[A]
                PsiElement(extension)('extension')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: fa
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('fa')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: F[A]
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace('\n      ')
                ScExtensionBody
                  ScFunctionDeclaration: flatMap
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatMap')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => F[B]
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              ParametrizedType: F[B]
                                SimpleType: F
                                  CodeReferenceElement: F
                                    PsiElement(identifier)('F')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[B]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n      ')
                  ScFunctionDefinition: map
                    AnnotationsList
                      <empty list>
                    Modifiers
                      PsiElement(override)('override')
                    PsiWhiteSpace(' ')
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('map')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => B
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[B]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n        ')
                    MethodCall
                      ReferenceExpression: flatMap
                        PsiElement(identifier)('flatMap')
                      ArgumentList
                        PsiElement(()('(')
                        FunctionExpression
                          Parameters
                            ParametersClause
                              Parameter: a
                                PsiElement(identifier)('a')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: pure
                              PsiElement(identifier)('pure')
                            ArgumentList
                              PsiElement(()('(')
                              MethodCall
                                ReferenceExpression: f
                                  PsiElement(identifier)('f')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: a
                                    PsiElement(identifier)('a')
                                  PsiElement())(')')
                              PsiElement())(')')
                        PsiElement())(')')
                  PsiWhiteSpace('\n      ')
                  ScFunctionDefinition: map2
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('map2')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      TypeParameter: C
                        PsiElement(identifier)('C')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: fb
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('fb')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: F[B]
                              SimpleType: F
                                CodeReferenceElement: F
                                  PsiElement(identifier)('F')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: (A, B) => C
                              TupleType: (A, B)
                                PsiElement(()('(')
                                TypesList
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: C
                                CodeReferenceElement: C
                                  PsiElement(identifier)('C')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[C]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: C
                          CodeReferenceElement: C
                            PsiElement(identifier)('C')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n        ')
                    MethodCall
                      ReferenceExpression: flatMap
                        PsiElement(identifier)('flatMap')
                      ArgumentList
                        PsiElement(()('(')
                        FunctionExpression
                          Parameters
                            ParametersClause
                              Parameter: a
                                PsiElement(identifier)('a')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: fb.map
                              ReferenceExpression: fb
                                PsiElement(identifier)('fb')
                              PsiElement(.)('.')
                              PsiElement(identifier)('map')
                            ArgumentList
                              PsiElement(()('(')
                              FunctionExpression
                                Parameters
                                  ParametersClause
                                    Parameter: b
                                      PsiElement(identifier)('b')
                                PsiWhiteSpace(' ')
                                PsiElement(=>)('=>')
                                PsiWhiteSpace(' ')
                                MethodCall
                                  ReferenceExpression: f
                                    PsiElement(identifier)('f')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: a
                                      PsiElement(identifier)('a')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: b
                                      PsiElement(identifier)('b')
                                    PsiElement())(')')
                              PsiElement())(')')
                        PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: given_Monad_List
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Monad[List]
                  SimpleType: Monad
                    CodeReferenceElement: Monad
                      PsiElement(identifier)('Monad')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              ScFunctionDefinition: pure
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('pure')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: a
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('a')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: List
                    PsiElement(identifier)('List')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: a
                      PsiElement(identifier)('a')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              Extension on List[A]
                PsiElement(extension)('extension')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: fa
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('fa')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: List[A]
                          SimpleType: List
                            CodeReferenceElement: List
                              PsiElement(identifier)('List')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace('\n      ')
                ScExtensionBody
                  ScFunctionDefinition: flatMap
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatMap')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => List[B]
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              ParametrizedType: List[B]
                                SimpleType: List
                                  CodeReferenceElement: List
                                    PsiElement(identifier)('List')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: fa.flatMap
                        ReferenceExpression: fa
                          PsiElement(identifier)('fa')
                        PsiElement(.)('.')
                        PsiElement(identifier)('flatMap')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: f
                          PsiElement(identifier)('f')
                        PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: given_Monad_Option
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Monad[Option]
                  SimpleType: Monad
                    CodeReferenceElement: Monad
                      PsiElement(identifier)('Monad')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              ScFunctionDefinition: pure
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('pure')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: a
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('a')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Some
                    PsiElement(identifier)('Some')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: a
                      PsiElement(identifier)('a')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              Extension on Option[A]
                PsiElement(extension)('extension')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: fa
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('fa')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Option[A]
                          SimpleType: Option
                            CodeReferenceElement: Option
                              PsiElement(identifier)('Option')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace('\n      ')
                ScExtensionBody
                  ScFunctionDefinition: flatMap
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatMap')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => Option[B]
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              ParametrizedType: Option[B]
                                SimpleType: Option
                                  CodeReferenceElement: Option
                                    PsiElement(identifier)('Option')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: fa.flatMap
                        ReferenceExpression: fa
                          PsiElement(identifier)('fa')
                        PsiElement(.)('.')
                        PsiElement(identifier)('flatMap')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: f
                          PsiElement(identifier)('f')
                        PsiElement())(')')
        PsiWhiteSpace('\n\n\n  ')
        ScTypeAliasDefinition: Kleisli
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(opaque)('opaque')
          PsiWhiteSpace(' ')
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Kleisli')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          FunctionalType: A => F[B]
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            ParametrizedType: F[B]
              SimpleType: F
                CodeReferenceElement: F
                  PsiElement(identifier)('F')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: B
                  CodeReferenceElement: B
                    PsiElement(identifier)('B')
                PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        Extension on Kleisli[F, A, B]
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: k
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('k')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Kleisli[F, A, B]
                    SimpleType: Kleisli
                      CodeReferenceElement: Kleisli
                        PsiElement(identifier)('Kleisli')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDefinition: apply
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('apply')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: a
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('a')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: F[B]
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: k
                  PsiElement(identifier)('k')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: a
                    PsiElement(identifier)('a')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScObject: Kleisli
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Kleisli')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: apply
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('apply')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: F
                    PsiElement(identifier)('F')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: A => F[B]
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          ParametrizedType: F[B]
                            SimpleType: F
                              CodeReferenceElement: F
                                PsiElement(identifier)('F')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Kleisli[F, A, B]
                  SimpleType: Kleisli
                    CodeReferenceElement: Kleisli
                      PsiElement(identifier)('Kleisli')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: f
                  PsiElement(identifier)('f')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: given_Monad_Kleisli
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: F
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Monad[F]
                    SimpleType: Monad
                      CodeReferenceElement: Monad
                        PsiElement(identifier)('Monad')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Monad[[B] =>> Kleisli[F, A, B]]
                  SimpleType: Monad
                    CodeReferenceElement: Monad
                      PsiElement(identifier)('Monad')
                  TypeArgumentsList
                    PsiElement([)('[')
                    TypeLambda: [B] =>> Kleisli[F, A, B]
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: B
                          PsiElement(identifier)('B')
                        PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=>>)('=>>')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Kleisli[F, A, B]
                        SimpleType: Kleisli
                          CodeReferenceElement: Kleisli
                            PsiElement(identifier)('Kleisli')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              ScFunctionDefinition: pure
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('pure')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: b
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('b')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Kleisli
                    PsiElement(identifier)('Kleisli')
                  ArgumentList
                    PsiElement(()('(')
                    FunctionExpression
                      Parameters
                        ParametersClause
                          Parameter: _
                            PsiElement(_)('_')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: F.pure
                          ReferenceExpression: F
                            PsiElement(identifier)('F')
                          PsiElement(.)('.')
                          PsiElement(identifier)('pure')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: b
                            PsiElement(identifier)('b')
                          PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              Extension on Kleisli[F, A, B]
                PsiElement(extension)('extension')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: k
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('k')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Kleisli[F, A, B]
                          SimpleType: Kleisli
                            CodeReferenceElement: Kleisli
                              PsiElement(identifier)('Kleisli')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: F
                              CodeReferenceElement: F
                                PsiElement(identifier)('F')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace('\n      ')
                ScExtensionBody
                  ScFunctionDefinition: flatMap
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatMap')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: C
                        PsiElement(identifier)('C')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: B => Kleisli[F, A, C]
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              ParametrizedType: Kleisli[F, A, C]
                                SimpleType: Kleisli
                                  CodeReferenceElement: Kleisli
                                    PsiElement(identifier)('Kleisli')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: F
                                    CodeReferenceElement: F
                                      PsiElement(identifier)('F')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  SimpleType: C
                                    CodeReferenceElement: C
                                      PsiElement(identifier)('C')
                                  PsiElement(])(']')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n        ')
                    FunctionExpression
                      Parameters
                        ParametersClause
                          Parameter: a
                            PsiElement(identifier)('a')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: k(a).flatMap
                          MethodCall
                            ReferenceExpression: k
                              PsiElement(identifier)('k')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: a
                                PsiElement(identifier)('a')
                              PsiElement())(')')
                          PsiElement(.)('.')
                          PsiElement(identifier)('flatMap')
                        ArgumentList
                          PsiElement(()('(')
                          FunctionExpression
                            Parameters
                              ParametersClause
                                Parameter: b
                                  PsiElement(identifier)('b')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            MethodCall
                              MethodCall
                                ReferenceExpression: f
                                  PsiElement(identifier)('f')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: b
                                    PsiElement(identifier)('b')
                                  PsiElement())(')')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: a
                                  PsiElement(identifier)('a')
                                PsiElement())(')')
                          PsiElement())(')')
        PsiWhiteSpace('\n\n')
        End: Structures
          PsiElement(end)('end')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Structures')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: run
    AnnotationsList
      Annotation
        PsiElement(@)('@')
        AnnotationExpression
          ConstructorInvocation
            SimpleType: main
              CodeReferenceElement: main
                PsiElement(identifier)('main')
    Modifiers
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('run')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    BlockExpression
      PsiWhiteSpace('\n  ')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: Structures
            PsiElement(identifier)('Structures')
          PsiElement(.)('.')
          ImportSelectors
            PsiElement({)('{')
            ImportSelector
              PsiElement(*)('*')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            ImportSelector
              PsiElement(given)('given')
            PsiElement(})('}')
      PsiWhiteSpace('\n  ')
      MethodCall
        ReferenceExpression: println
          PsiElement(identifier)('println')
        ArgumentList
          PsiElement(()('(')
          MethodCall
            ReferenceExpression: List(1, 2, 3).map2
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
              PsiElement(.)('.')
              PsiElement(identifier)('map2')
            ArgumentList
              PsiElement(()('(')
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('4')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('5')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('6')
                  PsiElement())(')')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Tuple
                PsiElement(()('(')
                UnderscoreSection
                  PsiElement(_)('_')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                UnderscoreSection
                  PsiElement(_)('_')
                PsiElement())(')')
              PsiElement())(')')
          PsiElement())(')')
      PsiWhiteSpace('\n\n  ')
      ScPatternDefinition: p
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: p
            PsiElement(identifier)('p')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        ParametrizedType: Kleisli[Option, Int, Int]
          SimpleType: Kleisli
            CodeReferenceElement: Kleisli
              PsiElement(identifier)('Kleisli')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: Kleisli
            PsiElement(identifier)('Kleisli')
          ArgumentList
            PsiElement(()('(')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: x
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('x')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              IfStatement
                PsiElement(if)('if')
                PsiWhiteSpace(' ')
                InfixExpression
                  InfixExpression
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: %
                      PsiElement(identifier)('%')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('2')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: ==
                    PsiElement(identifier)('==')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('0')
                PsiWhiteSpace(' ')
                PsiElement(then)('then')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Some
                    PsiElement(identifier)('Some')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(else)('else')
                PsiWhiteSpace(' ')
                ReferenceExpression: None
                  PsiElement(identifier)('None')
            PsiElement())(')')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: q
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: q
            PsiElement(identifier)('q')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        ParametrizedType: Kleisli[Option, Int, Int]
          SimpleType: Kleisli
            CodeReferenceElement: Kleisli
              PsiElement(identifier)('Kleisli')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: summon[Applicative[[B] =>> Kleisli[Option, Int, B]]].pure
            GenericCall
              ReferenceExpression: summon
                PsiElement(identifier)('summon')
              TypeArgumentsList
                PsiElement([)('[')
                ParametrizedType: Applicative[[B] =>> Kleisli[Option, Int, B]]
                  SimpleType: Applicative
                    CodeReferenceElement: Applicative
                      PsiElement(identifier)('Applicative')
                  TypeArgumentsList
                    PsiElement([)('[')
                    TypeLambda: [B] =>> Kleisli[Option, Int, B]
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: B
                          PsiElement(identifier)('B')
                        PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=>>)('=>>')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Kleisli[Option, Int, B]
                        SimpleType: Kleisli
                          CodeReferenceElement: Kleisli
                            PsiElement(identifier)('Kleisli')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: Option
                            CodeReferenceElement: Option
                              PsiElement(identifier)('Option')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(.)('.')
            PsiElement(identifier)('pure')
          ArgumentList
            PsiElement(()('(')
            IntegerLiteral
              PsiElement(integer)('20')
            PsiElement())(')')
      PsiWhiteSpace('\n  ')
      MethodCall
        ReferenceExpression: println
          PsiElement(identifier)('println')
        ArgumentList
          PsiElement(()('(')
          MethodCall
            MethodCall
              ReferenceExpression: p.map2
                ReferenceExpression: p
                  PsiElement(identifier)('p')
                PsiElement(.)('.')
                PsiElement(identifier)('map2')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: q
                  PsiElement(identifier)('q')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                InfixExpression
                  UnderscoreSection
                    PsiElement(_)('_')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: +
                    PsiElement(identifier)('+')
                  PsiWhiteSpace(' ')
                  UnderscoreSection
                    PsiElement(_)('_')
                PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('42')
              PsiElement())(')')
          PsiElement())(')')
