object Test {
  type Obj
  type Forall[F[_]] = (x: Obj) => F[x.type]

  trait EQ[A, B] {
    def sub[F[_]]: F[A] => F[B];
    def commute: EQ[B, A] = this.sub[[b] =>> EQ[b, A]](implicitly[EQ[A, A]])
  }
  implicit def typeEq[A]: EQ[A, A] = new EQ[A, A] {
    def sub[F[_]]: F[A] => F[A] = identity
  }

  // these are both fine
  val eqReflexive1: (x: Obj) => (EQ[x.type, x.type]) = { (x: Obj) => implicitly }
  val eqReflexive2: Forall[[x] =>> EQ[x, x]] = { (x: Obj) => implicitly }

  // this compiles
  val eqSymmetric1: (x: Obj) => (y: Obj) => EQ[x.type, y.type] => EQ[y.type, x.type] = {
    { (x: Obj) => { (y: Obj) => { (xEqy: EQ[x.type, y.type]) => xEqy.commute } } }
  }

  val eqSymmetric2: Forall[[x] =>> (y: Obj) => (EQ[x, y.type]) => (EQ[y.type, x])] = {
    { (x: Obj) => { (y: Obj) => { (xEqy: EQ[x.type, y.type]) => xEqy.commute } } } // was error
  }

  val eqSymmetric3: Forall[[x] =>> Forall[[y] =>> EQ[x, y] => EQ[y, x]]] = {
    { (x: Obj) => { (y: Obj) => { (xEqy: EQ[x.type, y.type]) => xEqy.commute } } } // was error
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Obj
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Obj')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: Forall
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Forall')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          DependentFunctionType: (x: Obj) => F[x.type]
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Obj
                  CodeReferenceElement: Obj
                    PsiElement(identifier)('Obj')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            ParametrizedType: F[x.type]
              SimpleType: F
                CodeReferenceElement: F
                  PsiElement(identifier)('F')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: x.type
                  CodeReferenceElement: x
                    PsiElement(identifier)('x')
                  PsiElement(.)('.')
                  PsiElement(type)('type')
                PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScTrait: EQ
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('EQ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: sub
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('sub')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: F
                    PsiElement(identifier)('F')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                FunctionalType: F[A] => F[B]
                  ParametrizedType: F[A]
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  ParametrizedType: F[B]
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
              PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: commute
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('commute')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: EQ[B, A]
                  SimpleType: EQ
                    CodeReferenceElement: EQ
                      PsiElement(identifier)('EQ')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  GenericCall
                    ReferenceExpression: this.sub
                      ThisReference
                        PsiElement(this)('this')
                      PsiElement(.)('.')
                      PsiElement(identifier)('sub')
                    TypeArgumentsList
                      PsiElement([)('[')
                      TypeLambda: [b] =>> EQ[b, A]
                        TypeParameterClause
                          PsiElement([)('[')
                          TypeParameter: b
                            PsiElement(identifier)('b')
                          PsiElement(])(']')
                        PsiWhiteSpace(' ')
                        PsiElement(=>>)('=>>')
                        PsiWhiteSpace(' ')
                        ParametrizedType: EQ[b, A]
                          SimpleType: EQ
                            CodeReferenceElement: EQ
                              PsiElement(identifier)('EQ')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: b
                              CodeReferenceElement: b
                                PsiElement(identifier)('b')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    GenericCall
                      ReferenceExpression: implicitly
                        PsiElement(identifier)('implicitly')
                      TypeArgumentsList
                        PsiElement([)('[')
                        ParametrizedType: EQ[A, A]
                          SimpleType: EQ
                            CodeReferenceElement: EQ
                              PsiElement(identifier)('EQ')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                        PsiElement(])(']')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: typeEq
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('typeEq')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: EQ[A, A]
            SimpleType: EQ
              CodeReferenceElement: EQ
                PsiElement(identifier)('EQ')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: EQ[A, A]
                    SimpleType: EQ
                      CodeReferenceElement: EQ
                        PsiElement(identifier)('EQ')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: sub
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('sub')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: F
                      PsiElement(identifier)('F')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(])(']')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  FunctionalType: F[A] => F[A]
                    ParametrizedType: F[A]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[A]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: identity
                    PsiElement(identifier)('identity')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: eqReflexive1
          PsiComment(comment)('// these are both fine')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: eqReflexive1
              PsiElement(identifier)('eqReflexive1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          DependentFunctionType: (x: Obj) => (EQ[x.type, x.type])
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Obj
                  CodeReferenceElement: Obj
                    PsiElement(identifier)('Obj')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            TypeInParenthesis: (EQ[x.type, x.type])
              PsiElement(()('(')
              ParametrizedType: EQ[x.type, x.type]
                SimpleType: EQ
                  CodeReferenceElement: EQ
                    PsiElement(identifier)('EQ')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: x.type
                    CodeReferenceElement: x
                      PsiElement(identifier)('x')
                    PsiElement(.)('.')
                    PsiElement(type)('type')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: x.type
                    CodeReferenceElement: x
                      PsiElement(identifier)('x')
                    PsiElement(.)('.')
                    PsiElement(type)('type')
                  PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: x
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('x')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: Obj
                        CodeReferenceElement: Obj
                          PsiElement(identifier)('Obj')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                ReferenceExpression: implicitly
                  PsiElement(identifier)('implicitly')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: eqReflexive2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: eqReflexive2
              PsiElement(identifier)('eqReflexive2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Forall[[x] =>> EQ[x, x]]
            SimpleType: Forall
              CodeReferenceElement: Forall
                PsiElement(identifier)('Forall')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [x] =>> EQ[x, x]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: x
                    PsiElement(identifier)('x')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: EQ[x, x]
                  SimpleType: EQ
                    CodeReferenceElement: EQ
                      PsiElement(identifier)('EQ')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: x
                      CodeReferenceElement: x
                        PsiElement(identifier)('x')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: x
                      CodeReferenceElement: x
                        PsiElement(identifier)('x')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: x
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('x')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: Obj
                        CodeReferenceElement: Obj
                          PsiElement(identifier)('Obj')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                ReferenceExpression: implicitly
                  PsiElement(identifier)('implicitly')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: eqSymmetric1
          PsiComment(comment)('// this compiles')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: eqSymmetric1
              PsiElement(identifier)('eqSymmetric1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          DependentFunctionType: (x: Obj) => (y: Obj) => EQ[x.type, y.type] => EQ[y.type, x.type]
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Obj
                  CodeReferenceElement: Obj
                    PsiElement(identifier)('Obj')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            DependentFunctionType: (y: Obj) => EQ[x.type, y.type] => EQ[y.type, x.type]
              ParametersClause
                PsiElement(()('(')
                Parameter: y
                  PsiElement(identifier)('y')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Obj
                    CodeReferenceElement: Obj
                      PsiElement(identifier)('Obj')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              FunctionalType: EQ[x.type, y.type] => EQ[y.type, x.type]
                ParametrizedType: EQ[x.type, y.type]
                  SimpleType: EQ
                    CodeReferenceElement: EQ
                      PsiElement(identifier)('EQ')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: x.type
                      CodeReferenceElement: x
                        PsiElement(identifier)('x')
                      PsiElement(.)('.')
                      PsiElement(type)('type')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: y.type
                      CodeReferenceElement: y
                        PsiElement(identifier)('y')
                      PsiElement(.)('.')
                      PsiElement(type)('type')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                ParametrizedType: EQ[y.type, x.type]
                  SimpleType: EQ
                    CodeReferenceElement: EQ
                      PsiElement(identifier)('EQ')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: y.type
                      CodeReferenceElement: y
                        PsiElement(identifier)('y')
                      PsiElement(.)('.')
                      PsiElement(type)('type')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: x.type
                      CodeReferenceElement: x
                        PsiElement(identifier)('x')
                      PsiElement(.)('.')
                      PsiElement(type)('type')
                    PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              FunctionExpression
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Obj
                          CodeReferenceElement: Obj
                            PsiElement(identifier)('Obj')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace(' ')
                    FunctionExpression
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: y
                            AnnotationsList
                              <empty list>
                            PsiElement(identifier)('y')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: Obj
                                CodeReferenceElement: Obj
                                  PsiElement(identifier)('Obj')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace(' ')
                          FunctionExpression
                            Parameters
                              ParametersClause
                                PsiElement(()('(')
                                Parameter: xEqy
                                  AnnotationsList
                                    <empty list>
                                  PsiElement(identifier)('xEqy')
                                  PsiElement(:)(':')
                                  PsiWhiteSpace(' ')
                                  ParameterType
                                    ParametrizedType: EQ[x.type, y.type]
                                      SimpleType: EQ
                                        CodeReferenceElement: EQ
                                          PsiElement(identifier)('EQ')
                                      TypeArgumentsList
                                        PsiElement([)('[')
                                        SimpleType: x.type
                                          CodeReferenceElement: x
                                            PsiElement(identifier)('x')
                                          PsiElement(.)('.')
                                          PsiElement(type)('type')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        SimpleType: y.type
                                          CodeReferenceElement: y
                                            PsiElement(identifier)('y')
                                          PsiElement(.)('.')
                                          PsiElement(type)('type')
                                        PsiElement(])(']')
                                PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            BlockOfExpressions
                              ReferenceExpression: xEqy.commute
                                ReferenceExpression: xEqy
                                  PsiElement(identifier)('xEqy')
                                PsiElement(.)('.')
                                PsiElement(identifier)('commute')
                          PsiWhiteSpace(' ')
                          PsiElement(})('}')
                    PsiWhiteSpace(' ')
                    PsiElement(})('}')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: eqSymmetric2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: eqSymmetric2
              PsiElement(identifier)('eqSymmetric2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Forall[[x] =>> (y: Obj) => (EQ[x, y.type]) => (EQ[y.type, x])]
            SimpleType: Forall
              CodeReferenceElement: Forall
                PsiElement(identifier)('Forall')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [x] =>> (y: Obj) => (EQ[x, y.type]) => (EQ[y.type, x])
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: x
                    PsiElement(identifier)('x')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                DependentFunctionType: (y: Obj) => (EQ[x, y.type]) => (EQ[y.type, x])
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: y
                      PsiElement(identifier)('y')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: Obj
                        CodeReferenceElement: Obj
                          PsiElement(identifier)('Obj')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  FunctionalType: (EQ[x, y.type]) => (EQ[y.type, x])
                    TypeInParenthesis: (EQ[x, y.type])
                      PsiElement(()('(')
                      ParametrizedType: EQ[x, y.type]
                        SimpleType: EQ
                          CodeReferenceElement: EQ
                            PsiElement(identifier)('EQ')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: x
                            CodeReferenceElement: x
                              PsiElement(identifier)('x')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: y.type
                            CodeReferenceElement: y
                              PsiElement(identifier)('y')
                            PsiElement(.)('.')
                            PsiElement(type)('type')
                          PsiElement(])(']')
                      PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    TypeInParenthesis: (EQ[y.type, x])
                      PsiElement(()('(')
                      ParametrizedType: EQ[y.type, x]
                        SimpleType: EQ
                          CodeReferenceElement: EQ
                            PsiElement(identifier)('EQ')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: y.type
                            CodeReferenceElement: y
                              PsiElement(identifier)('y')
                            PsiElement(.)('.')
                            PsiElement(type)('type')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: x
                            CodeReferenceElement: x
                              PsiElement(identifier)('x')
                          PsiElement(])(']')
                      PsiElement())(')')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              FunctionExpression
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Obj
                          CodeReferenceElement: Obj
                            PsiElement(identifier)('Obj')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace(' ')
                    FunctionExpression
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: y
                            AnnotationsList
                              <empty list>
                            PsiElement(identifier)('y')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: Obj
                                CodeReferenceElement: Obj
                                  PsiElement(identifier)('Obj')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace(' ')
                          FunctionExpression
                            Parameters
                              ParametersClause
                                PsiElement(()('(')
                                Parameter: xEqy
                                  AnnotationsList
                                    <empty list>
                                  PsiElement(identifier)('xEqy')
                                  PsiElement(:)(':')
                                  PsiWhiteSpace(' ')
                                  ParameterType
                                    ParametrizedType: EQ[x.type, y.type]
                                      SimpleType: EQ
                                        CodeReferenceElement: EQ
                                          PsiElement(identifier)('EQ')
                                      TypeArgumentsList
                                        PsiElement([)('[')
                                        SimpleType: x.type
                                          CodeReferenceElement: x
                                            PsiElement(identifier)('x')
                                          PsiElement(.)('.')
                                          PsiElement(type)('type')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        SimpleType: y.type
                                          CodeReferenceElement: y
                                            PsiElement(identifier)('y')
                                          PsiElement(.)('.')
                                          PsiElement(type)('type')
                                        PsiElement(])(']')
                                PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            BlockOfExpressions
                              ReferenceExpression: xEqy.commute
                                ReferenceExpression: xEqy
                                  PsiElement(identifier)('xEqy')
                                PsiElement(.)('.')
                                PsiElement(identifier)('commute')
                          PsiWhiteSpace(' ')
                          PsiElement(})('}')
                    PsiWhiteSpace(' ')
                    PsiElement(})('}')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// was error')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: eqSymmetric3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: eqSymmetric3
              PsiElement(identifier)('eqSymmetric3')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Forall[[x] =>> Forall[[y] =>> EQ[x, y] => EQ[y, x]]]
            SimpleType: Forall
              CodeReferenceElement: Forall
                PsiElement(identifier)('Forall')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [x] =>> Forall[[y] =>> EQ[x, y] => EQ[y, x]]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: x
                    PsiElement(identifier)('x')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: Forall[[y] =>> EQ[x, y] => EQ[y, x]]
                  SimpleType: Forall
                    CodeReferenceElement: Forall
                      PsiElement(identifier)('Forall')
                  TypeArgumentsList
                    PsiElement([)('[')
                    TypeLambda: [y] =>> EQ[x, y] => EQ[y, x]
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: y
                          PsiElement(identifier)('y')
                        PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=>>)('=>>')
                      PsiWhiteSpace(' ')
                      FunctionalType: EQ[x, y] => EQ[y, x]
                        ParametrizedType: EQ[x, y]
                          SimpleType: EQ
                            CodeReferenceElement: EQ
                              PsiElement(identifier)('EQ')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: x
                              CodeReferenceElement: x
                                PsiElement(identifier)('x')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: y
                              CodeReferenceElement: y
                                PsiElement(identifier)('y')
                            PsiElement(])(']')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        ParametrizedType: EQ[y, x]
                          SimpleType: EQ
                            CodeReferenceElement: EQ
                              PsiElement(identifier)('EQ')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: y
                              CodeReferenceElement: y
                                PsiElement(identifier)('y')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: x
                              CodeReferenceElement: x
                                PsiElement(identifier)('x')
                            PsiElement(])(']')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              FunctionExpression
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Obj
                          CodeReferenceElement: Obj
                            PsiElement(identifier)('Obj')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace(' ')
                    FunctionExpression
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: y
                            AnnotationsList
                              <empty list>
                            PsiElement(identifier)('y')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: Obj
                                CodeReferenceElement: Obj
                                  PsiElement(identifier)('Obj')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace(' ')
                          FunctionExpression
                            Parameters
                              ParametersClause
                                PsiElement(()('(')
                                Parameter: xEqy
                                  AnnotationsList
                                    <empty list>
                                  PsiElement(identifier)('xEqy')
                                  PsiElement(:)(':')
                                  PsiWhiteSpace(' ')
                                  ParameterType
                                    ParametrizedType: EQ[x.type, y.type]
                                      SimpleType: EQ
                                        CodeReferenceElement: EQ
                                          PsiElement(identifier)('EQ')
                                      TypeArgumentsList
                                        PsiElement([)('[')
                                        SimpleType: x.type
                                          CodeReferenceElement: x
                                            PsiElement(identifier)('x')
                                          PsiElement(.)('.')
                                          PsiElement(type)('type')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        SimpleType: y.type
                                          CodeReferenceElement: y
                                            PsiElement(identifier)('y')
                                          PsiElement(.)('.')
                                          PsiElement(type)('type')
                                        PsiElement(])(']')
                                PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            BlockOfExpressions
                              ReferenceExpression: xEqy.commute
                                ReferenceExpression: xEqy
                                  PsiElement(identifier)('xEqy')
                                PsiElement(.)('.')
                                PsiElement(identifier)('commute')
                          PsiWhiteSpace(' ')
                          PsiElement(})('}')
                    PsiWhiteSpace(' ')
                    PsiElement(})('}')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// was error')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
