object Test {
  def foo: Unit = {
    def a = () => ""
    bar({???; a}.apply())
  }
  def bar(a: => Any): Unit = {
    baz(a)
  }
  def baz(a: => Any): Unit = ()
  def main(args: Array[String]): Unit = {
    foo
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: a
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('a')
              Parameters
                <empty list>
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              FunctionExpression
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('""')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: bar
                PsiElement(identifier)('bar')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: {???; a}.apply
                    BlockExpression
                      PsiElement({)('{')
                      ReferenceExpression: ???
                        PsiElement(identifier)('???')
                      PsiElement(;)(';')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: a
                        PsiElement(identifier)('a')
                      PsiElement(})('}')
                    PsiElement(.)('.')
                    PsiElement(identifier)('apply')
                  ArgumentList
                    PsiElement(()('(')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: bar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('bar')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  SimpleType: Any
                    CodeReferenceElement: Any
                      PsiElement(identifier)('Any')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: baz
                PsiElement(identifier)('baz')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: a
                  PsiElement(identifier)('a')
                PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: baz
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('baz')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  SimpleType: Any
                    CodeReferenceElement: Any
                      PsiElement(identifier)('Any')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[String]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ReferenceExpression: foo
              PsiElement(identifier)('foo')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
