object ForSetExample {

  import scala.collection.immutable.*
  import scala.compiletime.summonFrom

  inline def setFor[T]: Set[T] =
    summonFrom {
      case ord: Ordering[T] => new TreeSet[T]
      case _                => new HashSet[T]
    }

  setFor[String] // new TreeSet(scala.math.Ordering.String)
  setFor[Object] // new HashSet

}
-----
ScalaFile
  ScObject: ForSetExample
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ForSetExample')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: scala.collection.immutable
              CodeReferenceElement: scala.collection
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('collection')
              PsiElement(.)('.')
              PsiElement(identifier)('immutable')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: scala.compiletime.summonFrom
              CodeReferenceElement: scala.compiletime
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('compiletime')
              PsiElement(.)('.')
              PsiElement(identifier)('summonFrom')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: setFor
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('setFor')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Set[T]
            SimpleType: Set
              CodeReferenceElement: Set
                PsiElement(identifier)('Set')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            ReferenceExpression: summonFrom
              PsiElement(identifier)('summonFrom')
            PsiWhiteSpace(' ')
            ArgumentList
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                CaseClauses
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    Scala3 TypedPattern
                      ReferencePattern: ord
                        PsiElement(identifier)('ord')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      TypePattern
                        ParametrizedType: Ordering[T]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              ParametrizedType: TreeSet[T]
                                SimpleType: TreeSet
                                  CodeReferenceElement: TreeSet
                                    PsiElement(identifier)('TreeSet')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: T
                                    CodeReferenceElement: T
                                      PsiElement(identifier)('T')
                                  PsiElement(])(']')
                  PsiWhiteSpace('\n      ')
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiWhiteSpace('                ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              ParametrizedType: HashSet[T]
                                SimpleType: HashSet
                                  CodeReferenceElement: HashSet
                                    PsiElement(identifier)('HashSet')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: T
                                    CodeReferenceElement: T
                                      PsiElement(identifier)('T')
                                  PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        GenericCall
          ReferenceExpression: setFor
            PsiElement(identifier)('setFor')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
            PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// new TreeSet(scala.math.Ordering.String)')
        PsiWhiteSpace('\n  ')
        GenericCall
          ReferenceExpression: setFor
            PsiElement(identifier)('setFor')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: Object
              CodeReferenceElement: Object
                PsiElement(identifier)('Object')
            PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// new HashSet')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
