import java as j
import collection as c

val x: j.io.IOException = ???

import c.mutable as mut
import mut.ArrayBuffer as Buf

val y = Buf(1, 2, 3)

object O:
  type OString = String
  def foo22(x: Int) = x

class C:
  import O.*
  import foo22 as foo
  import OString as OS
  import scala.collection.Iterable
  println(foo(22))
  val s: OS = ""

def test =
  import C as CC
  println(C().s)


-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      ImportSelectors
        ImportSelector
          CodeReferenceElement: java
            PsiElement(identifier)('java')
          PsiWhiteSpace(' ')
          PsiElement(as)('as')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('j')
  PsiWhiteSpace('\n')
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      ImportSelectors
        ImportSelector
          CodeReferenceElement: collection
            PsiElement(identifier)('collection')
          PsiWhiteSpace(' ')
          PsiElement(as)('as')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('c')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: x
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: x
        PsiElement(identifier)('x')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: j.io.IOException
      CodeReferenceElement: j.io.IOException
        CodeReferenceElement: j.io
          CodeReferenceElement: j
            PsiElement(identifier)('j')
          PsiElement(.)('.')
          PsiElement(identifier)('io')
        PsiElement(.)('.')
        PsiElement(identifier)('IOException')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: ???
      PsiElement(identifier)('???')
  PsiWhiteSpace('\n\n')
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: c
        PsiElement(identifier)('c')
      PsiElement(.)('.')
      ImportSelectors
        ImportSelector
          CodeReferenceElement: mutable
            PsiElement(identifier)('mutable')
          PsiWhiteSpace(' ')
          PsiElement(as)('as')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('mut')
  PsiWhiteSpace('\n')
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: mut
        PsiElement(identifier)('mut')
      PsiElement(.)('.')
      ImportSelectors
        ImportSelector
          CodeReferenceElement: ArrayBuffer
            PsiElement(identifier)('ArrayBuffer')
          PsiWhiteSpace(' ')
          PsiElement(as)('as')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Buf')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: y
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: y
        PsiElement(identifier)('y')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: Buf
        PsiElement(identifier)('Buf')
      ArgumentList
        PsiElement(()('(')
        IntegerLiteral
          PsiElement(integer)('1')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('2')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('3')
        PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScObject: O
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('O')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: OString
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('OString')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo22
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo22')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
  PsiWhiteSpace('\n\n')
  ScClass: C
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('C')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: O
              PsiElement(identifier)('O')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            ImportSelectors
              ImportSelector
                CodeReferenceElement: foo22
                  PsiElement(identifier)('foo22')
                PsiWhiteSpace(' ')
                PsiElement(as)('as')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            ImportSelectors
              ImportSelector
                CodeReferenceElement: OString
                  PsiElement(identifier)('OString')
                PsiWhiteSpace(' ')
                PsiElement(as)('as')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('OS')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: scala.collection.Iterable
              CodeReferenceElement: scala.collection
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('collection')
              PsiElement(.)('.')
              PsiElement(identifier)('Iterable')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: println
            PsiElement(identifier)('println')
          ArgumentList
            PsiElement(()('(')
            MethodCall
              ReferenceExpression: foo
                PsiElement(identifier)('foo')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('22')
                PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s
              PsiElement(identifier)('s')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: OS
            CodeReferenceElement: OS
              PsiElement(identifier)('OS')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('""')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    BlockExpression
      PsiWhiteSpace('\n  ')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          ImportSelectors
            ImportSelector
              CodeReferenceElement: C
                PsiElement(identifier)('C')
              PsiWhiteSpace(' ')
              PsiElement(as)('as')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('CC')
      PsiWhiteSpace('\n  ')
      MethodCall
        ReferenceExpression: println
          PsiElement(identifier)('println')
        ArgumentList
          PsiElement(()('(')
          ReferenceExpression: C().s
            MethodCall
              ReferenceExpression: C
                PsiElement(identifier)('C')
              ArgumentList
                PsiElement(()('(')
                PsiElement())(')')
            PsiElement(.)('.')
            PsiElement(identifier)('s')
          PsiElement())(')')
