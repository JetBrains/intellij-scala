class WordExp {
  abstract class Label
  type _labelT <: Label
}

import scala.collection.*

abstract class S2 {
  val lang: WordExp
  type __labelT = lang._labelT

  var deltaq: Array[__labelT] = compiletime.uninitialized
  def delta1  = immutable.Map(deltaq.zipWithIndex*)
}
-----
ScalaFile
  ScClass: WordExp
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('WordExp')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: Label
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(abstract)('abstract')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Label')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: _labelT
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('_labelT')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: Label
            CodeReferenceElement: Label
              PsiElement(identifier)('Label')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.collection
        CodeReferenceElement: scala
          PsiElement(identifier)('scala')
        PsiElement(.)('.')
        PsiElement(identifier)('collection')
      PsiElement(.)('.')
      PsiElement(*)('*')
  PsiWhiteSpace('\n\n')
  ScClass: S2
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(abstract)('abstract')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('S2')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: lang
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: lang
              PsiElement(identifier)('lang')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: WordExp
            CodeReferenceElement: WordExp
              PsiElement(identifier)('WordExp')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: __labelT
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('__labelT')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: lang._labelT
            CodeReferenceElement: lang._labelT
              CodeReferenceElement: lang
                PsiElement(identifier)('lang')
              PsiElement(.)('.')
              PsiElement(identifier)('_labelT')
        PsiWhiteSpace('\n\n  ')
        ScVariableDefinition: deltaq
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(var)('var')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: deltaq
              PsiElement(identifier)('deltaq')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Array[__labelT]
            SimpleType: Array
              CodeReferenceElement: Array
                PsiElement(identifier)('Array')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: __labelT
                CodeReferenceElement: __labelT
                  PsiElement(identifier)('__labelT')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: compiletime.uninitialized
            ReferenceExpression: compiletime
              PsiElement(identifier)('compiletime')
            PsiElement(.)('.')
            PsiElement(identifier)('uninitialized')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: delta1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('delta1')
          Parameters
            <empty list>
          PsiWhiteSpace('  ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: immutable.Map
              ReferenceExpression: immutable
                PsiElement(identifier)('immutable')
              PsiElement(.)('.')
              PsiElement(identifier)('Map')
            ArgumentList
              PsiElement(()('(')
              TypedExpression
                ReferenceExpression: deltaq.zipWithIndex
                  ReferenceExpression: deltaq
                    PsiElement(identifier)('deltaq')
                  PsiElement(.)('.')
                  PsiElement(identifier)('zipWithIndex')
                SequenceArgumentType
                  PsiElement(identifier)('*')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
