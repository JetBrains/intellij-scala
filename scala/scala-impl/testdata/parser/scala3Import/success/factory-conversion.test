import scala.annotation.unchecked.uncheckedVariance

object Test {
  def to[Col[_]](factory: collection.Factory[Int, Col[Int @uncheckedVariance]]) = ???

  val test = to(List)
}
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.annotation.unchecked.uncheckedVariance
        CodeReferenceElement: scala.annotation.unchecked
          CodeReferenceElement: scala.annotation
            CodeReferenceElement: scala
              PsiElement(identifier)('scala')
            PsiElement(.)('.')
            PsiElement(identifier)('annotation')
          PsiElement(.)('.')
          PsiElement(identifier)('unchecked')
        PsiElement(.)('.')
        PsiElement(identifier)('uncheckedVariance')
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: to
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('to')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Col
              PsiElement(identifier)('Col')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: factory
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('factory')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: collection.Factory[Int, Col[Int @uncheckedVariance]]
                    SimpleType: collection.Factory
                      CodeReferenceElement: collection.Factory
                        CodeReferenceElement: collection
                          PsiElement(identifier)('collection')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Factory')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Col[Int @uncheckedVariance]
                        SimpleType: Col
                          CodeReferenceElement: Col
                            PsiElement(identifier)('Col')
                        TypeArgumentsList
                          PsiElement([)('[')
                          TypeWithAnnotation: Int @uncheckedVariance
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                            PsiWhiteSpace(' ')
                            AnnotationsList
                              Annotation
                                PsiElement(@)('@')
                                AnnotationExpression
                                  ConstructorInvocation
                                    SimpleType: uncheckedVariance
                                      CodeReferenceElement: uncheckedVariance
                                        PsiElement(identifier)('uncheckedVariance')
                          PsiElement(])(']')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: test
              PsiElement(identifier)('test')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: to
              PsiElement(identifier)('to')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: List
                PsiElement(identifier)('List')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
