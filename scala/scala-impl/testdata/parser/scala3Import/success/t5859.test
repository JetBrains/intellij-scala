
class A {
  def f(xs: List[Int], ys: AnyRef*) = ()
  def f(xs: AnyRef*) = ()

  f()
  f(List[AnyRef]()*)
  f(List()*)
  f(Nil*)
  // f(Array()*)  // undetermined ClassTag
  f(Array[AnyRef]()*)
  f(List(1))
  f(List(1), Nil*)
  // f(List(1), Array()*)  // undetermined ClassTag
}
-----
ScalaFile
  ScClass: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[Int]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: ys
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('ys')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: AnyRef
                    CodeReferenceElement: AnyRef
                      PsiElement(identifier)('AnyRef')
                  PsiElement(identifier)('*')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: AnyRef
                    CodeReferenceElement: AnyRef
                      PsiElement(identifier)('AnyRef')
                  PsiElement(identifier)('*')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: f
            PsiElement(identifier)('f')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: f
            PsiElement(identifier)('f')
          ArgumentList
            PsiElement(()('(')
            TypedExpression
              MethodCall
                GenericCall
                  ReferenceExpression: List
                    PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: AnyRef
                      CodeReferenceElement: AnyRef
                        PsiElement(identifier)('AnyRef')
                    PsiElement(])(']')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
              SequenceArgumentType
                PsiElement(identifier)('*')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: f
            PsiElement(identifier)('f')
          ArgumentList
            PsiElement(()('(')
            TypedExpression
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
              SequenceArgumentType
                PsiElement(identifier)('*')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: f
            PsiElement(identifier)('f')
          ArgumentList
            PsiElement(()('(')
            TypedExpression
              ReferenceExpression: Nil
                PsiElement(identifier)('Nil')
              SequenceArgumentType
                PsiElement(identifier)('*')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// f(Array()*)  // undetermined ClassTag')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: f
            PsiElement(identifier)('f')
          ArgumentList
            PsiElement(()('(')
            TypedExpression
              MethodCall
                GenericCall
                  ReferenceExpression: Array
                    PsiElement(identifier)('Array')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: AnyRef
                      CodeReferenceElement: AnyRef
                        PsiElement(identifier)('AnyRef')
                    PsiElement(])(']')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
              SequenceArgumentType
                PsiElement(identifier)('*')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: f
            PsiElement(identifier)('f')
          ArgumentList
            PsiElement(()('(')
            MethodCall
              ReferenceExpression: List
                PsiElement(identifier)('List')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('1')
                PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: f
            PsiElement(identifier)('f')
          ArgumentList
            PsiElement(()('(')
            MethodCall
              ReferenceExpression: List
                PsiElement(identifier)('List')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('1')
                PsiElement())(')')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypedExpression
              ReferenceExpression: Nil
                PsiElement(identifier)('Nil')
              SequenceArgumentType
                PsiElement(identifier)('*')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// f(List(1), Array()*)  // undetermined ClassTag')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
