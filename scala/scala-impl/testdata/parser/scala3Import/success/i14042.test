trait T {
  inline def foo(handler: Int): Unit =
    bar(handler)

  private inline def bar(handler: Int): Unit = ()
}

def test = new T {
  foo(42)
  this.foo(42)
  def test = this.foo(42)
}

def test2(t: T) =
  t.foo(42)
-----
ScalaFile
  ScTrait: T
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('T')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: handler
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('handler')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            ReferenceExpression: bar
              PsiElement(identifier)('bar')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: handler
                PsiElement(identifier)('handler')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: bar
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('bar')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: handler
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('handler')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ScNewTemplateDefinition: <anonymous>
      PsiElement(new)('new')
      PsiWhiteSpace(' ')
      ExtendsBlock
        TemplateParents
          ConstructorInvocation
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: foo
              PsiElement(identifier)('foo')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('42')
              PsiElement())(')')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: this.foo
              ThisReference
                PsiElement(this)('this')
              PsiElement(.)('.')
              PsiElement(identifier)('foo')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('42')
              PsiElement())(')')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: test
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('test')
            Parameters
              <empty list>
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: this.foo
                ThisReference
                  PsiElement(this)('this')
                PsiElement(.)('.')
                PsiElement(identifier)('foo')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('42')
                PsiElement())(')')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test2')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: t
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('t')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
        PsiElement())(')')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace('\n  ')
    MethodCall
      ReferenceExpression: t.foo
        ReferenceExpression: t
          PsiElement(identifier)('t')
        PsiElement(.)('.')
        PsiElement(identifier)('foo')
      ArgumentList
        PsiElement(()('(')
        IntegerLiteral
          PsiElement(integer)('42')
        PsiElement())(')')
