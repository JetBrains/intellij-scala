// scalac: -Werror
enum Foo:
  case One(value: String)
  case Two(value: Long, month: java.time.Month)

object Issue:
  def doSomething(foo: Foo): String = foo match
    case Foo.One(x)    => s"1 $x"
    case Foo.Two(x, y) => s"2 $x $y"
-----
ScalaFile
  ScEnum: Foo
    PsiComment(comment)('// scalac: -Werror')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScEnumCases: One
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: One
            PsiElement(identifier)('One')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: value
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('value')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                  PsiElement())(')')
            ExtendsBlock
              <empty list>
        PsiWhiteSpace('\n  ')
        ScEnumCases: Two
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Two
            PsiElement(identifier)('Two')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: value
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('value')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: Long
                        CodeReferenceElement: Long
                          PsiElement(identifier)('Long')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ClassParameter: month
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('month')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: java.time.Month
                        CodeReferenceElement: java.time.Month
                          CodeReferenceElement: java.time
                            CodeReferenceElement: java
                              PsiElement(identifier)('java')
                            PsiElement(.)('.')
                            PsiElement(identifier)('time')
                          PsiElement(.)('.')
                          PsiElement(identifier)('Month')
                  PsiElement())(')')
            ExtendsBlock
              <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: Issue
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Issue')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: doSomething
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('doSomething')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('foo')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: foo
              PsiElement(identifier)('foo')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Foo.One
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                    PsiElement(.)('.')
                    PsiElement(identifier)('One')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: x
                      PsiElement(identifier)('x')
                    PsiElement())(')')
                PsiWhiteSpace('    ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  InterpolatedStringLiteral
                    InterpolatedExpressionPrefix: s
                      PsiElement(interpolated string id)('s')
                    PsiElement(interpolated string)('"1 ')
                    PsiElement(interpolated string injection)('$')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement(interpolated string end)('"')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Foo.Two
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Two')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: x
                      PsiElement(identifier)('x')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferencePattern: y
                      PsiElement(identifier)('y')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  InterpolatedStringLiteral
                    InterpolatedExpressionPrefix: s
                      PsiElement(interpolated string id)('s')
                    PsiElement(interpolated string)('"2 ')
                    PsiElement(interpolated string injection)('$')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement(interpolated string)(' ')
                    PsiElement(interpolated string injection)('$')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement(interpolated string end)('"')
