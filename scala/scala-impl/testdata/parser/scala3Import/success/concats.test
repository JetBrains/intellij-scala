object Test {
  type Name = String
  val CommonOpNames: Set[Name]   = Set("OR", "XOR")
  val ConversionNames: Set[Name] = Set("toByte")
  val BooleanOpNames: Set[Name]  = Set("ZOR") ++ CommonOpNames
  val NumberOpNames: Set[Name]   = (
       Set("ADD")
    ++ Set("UNARY_+", "UNARY_-")
    ++ CommonOpNames
  )
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: Name
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Name')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: CommonOpNames
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: CommonOpNames
              PsiElement(identifier)('CommonOpNames')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Set[Name]
            SimpleType: Set
              CodeReferenceElement: Set
                PsiElement(identifier)('Set')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Name
                CodeReferenceElement: Name
                  PsiElement(identifier)('Name')
              PsiElement(])(']')
          PsiWhiteSpace('   ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Set
              PsiElement(identifier)('Set')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"OR"')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              StringLiteral
                PsiElement(string content)('"XOR"')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: ConversionNames
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: ConversionNames
              PsiElement(identifier)('ConversionNames')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Set[Name]
            SimpleType: Set
              CodeReferenceElement: Set
                PsiElement(identifier)('Set')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Name
                CodeReferenceElement: Name
                  PsiElement(identifier)('Name')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Set
              PsiElement(identifier)('Set')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"toByte"')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: BooleanOpNames
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: BooleanOpNames
              PsiElement(identifier)('BooleanOpNames')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Set[Name]
            SimpleType: Set
              CodeReferenceElement: Set
                PsiElement(identifier)('Set')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Name
                CodeReferenceElement: Name
                  PsiElement(identifier)('Name')
              PsiElement(])(']')
          PsiWhiteSpace('  ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            MethodCall
              ReferenceExpression: Set
                PsiElement(identifier)('Set')
              ArgumentList
                PsiElement(()('(')
                StringLiteral
                  PsiElement(string content)('"ZOR"')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            ReferenceExpression: ++
              PsiElement(identifier)('++')
            PsiWhiteSpace(' ')
            ReferenceExpression: CommonOpNames
              PsiElement(identifier)('CommonOpNames')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: NumberOpNames
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: NumberOpNames
              PsiElement(identifier)('NumberOpNames')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Set[Name]
            SimpleType: Set
              CodeReferenceElement: Set
                PsiElement(identifier)('Set')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Name
                CodeReferenceElement: Name
                  PsiElement(identifier)('Name')
              PsiElement(])(']')
          PsiWhiteSpace('   ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ExpressionInParenthesis
            PsiElement(()('(')
            PsiWhiteSpace('\n       ')
            InfixExpression
              InfixExpression
                MethodCall
                  ReferenceExpression: Set
                    PsiElement(identifier)('Set')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"ADD"')
                    PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ReferenceExpression: ++
                  PsiElement(identifier)('++')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Set
                    PsiElement(identifier)('Set')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"UNARY_+"')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    StringLiteral
                      PsiElement(string content)('"UNARY_-"')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ReferenceExpression: ++
                PsiElement(identifier)('++')
              PsiWhiteSpace(' ')
              ReferenceExpression: CommonOpNames
                PsiElement(identifier)('CommonOpNames')
            PsiWhiteSpace('\n  ')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
