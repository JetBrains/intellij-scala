
trait T {
  def i: Int = 1_024
  def j: Long = 1_024L * 1_024
  //def k = 1'024

  def f = 3_14e-2f
  def d = 3_14E-2_1

  def z = 0


  // Examples from
  // https://docs.oracle.com/javase/8/docs/technotes/guides/language/underscores-literals.html
  val x2 = 5_2;              // OK (decimal literal)
  val x4 = 5_______2;        // OK (decimal literal)
  val x7 = 0x5_2;            // OK (hexadecimal literal)
}
-----
ScalaFile
  ScTrait: T
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('T')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: i
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('i')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('1_024')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: j
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('j')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Long
            CodeReferenceElement: Long
              PsiElement(identifier)('Long')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            LongLiteral
              PsiElement(long)('1_024L')
            PsiWhiteSpace(' ')
            ReferenceExpression: *
              PsiElement(identifier)('*')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('1_024')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('//def k = 1'024')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          FloatLiteral
            PsiElement(float)('3_14e-2f')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: d
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('d')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          DoubleLiteral
            PsiElement(double)('3_14E-2_1')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: z
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('z')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('0')
        PsiWhiteSpace('\n\n\n  ')
        ScPatternDefinition: x2
          PsiComment(comment)('// Examples from')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('// https://docs.oracle.com/javase/8/docs/technotes/guides/language/underscores-literals.html')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x2
              PsiElement(identifier)('x2')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('5_2')
        PsiElement(;)(';')
        PsiWhiteSpace('              ')
        PsiComment(comment)('// OK (decimal literal)')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x4
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x4
              PsiElement(identifier)('x4')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('5_______2')
        PsiElement(;)(';')
        PsiWhiteSpace('        ')
        PsiComment(comment)('// OK (decimal literal)')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x7
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x7
              PsiElement(identifier)('x7')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('0x5_2')
        PsiElement(;)(';')
        PsiWhiteSpace('            ')
        PsiComment(comment)('// OK (hexadecimal literal)')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
