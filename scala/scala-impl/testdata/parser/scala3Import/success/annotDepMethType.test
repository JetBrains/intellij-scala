case class pc(calls: Any*) extends annotation.TypeConstraint

object Main {
  class C0 { def baz: String = "" }
  class C1 { def bar(c0: C0): String @pc(c0.baz) = c0.baz }
  def trans(c1: C1): String @pc(c1.bar(throw new Error())) = c1.bar(new C0)
}
-----
ScalaFile
  ScClass: pc
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('pc')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: calls
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('calls')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
              PsiElement(identifier)('*')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: annotation.TypeConstraint
            CodeReferenceElement: annotation.TypeConstraint
              CodeReferenceElement: annotation
                PsiElement(identifier)('annotation')
              PsiElement(.)('.')
              PsiElement(identifier)('TypeConstraint')
  PsiWhiteSpace('\n\n')
  ScObject: Main
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Main')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: C0
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C0')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScFunctionDefinition: baz
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('baz')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('""')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScClass: C1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C1')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScFunctionDefinition: bar
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('bar')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: c0
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('c0')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: C0
                          CodeReferenceElement: C0
                            PsiElement(identifier)('C0')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                TypeWithAnnotation: String @pc(c0.baz)
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiWhiteSpace(' ')
                  AnnotationsList
                    Annotation
                      PsiElement(@)('@')
                      AnnotationExpression
                        ConstructorInvocation
                          SimpleType: pc
                            CodeReferenceElement: pc
                              PsiElement(identifier)('pc')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: c0.baz
                              ReferenceExpression: c0
                                PsiElement(identifier)('c0')
                              PsiElement(.)('.')
                              PsiElement(identifier)('baz')
                            PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: c0.baz
                  ReferenceExpression: c0
                    PsiElement(identifier)('c0')
                  PsiElement(.)('.')
                  PsiElement(identifier)('baz')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: trans
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('trans')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: c1
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('c1')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: C1
                    CodeReferenceElement: C1
                      PsiElement(identifier)('C1')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          TypeWithAnnotation: String @pc(c1.bar(throw new Error()))
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
            PsiWhiteSpace(' ')
            AnnotationsList
              Annotation
                PsiElement(@)('@')
                AnnotationExpression
                  ConstructorInvocation
                    SimpleType: pc
                      CodeReferenceElement: pc
                        PsiElement(identifier)('pc')
                    ArgumentList
                      PsiElement(()('(')
                      MethodCall
                        ReferenceExpression: c1.bar
                          ReferenceExpression: c1
                            PsiElement(identifier)('c1')
                          PsiElement(.)('.')
                          PsiElement(identifier)('bar')
                        ArgumentList
                          PsiElement(()('(')
                          ThrowStatement
                            PsiElement(throw)('throw')
                            PsiWhiteSpace(' ')
                            ScNewTemplateDefinition: <anonymous>
                              PsiElement(new)('new')
                              PsiWhiteSpace(' ')
                              ExtendsBlock
                                TemplateParents
                                  ConstructorInvocation
                                    SimpleType: Error
                                      CodeReferenceElement: Error
                                        PsiElement(identifier)('Error')
                                    ArgumentList
                                      PsiElement(()('(')
                                      PsiElement())(')')
                          PsiElement())(')')
                      PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: c1.bar
              ReferenceExpression: c1
                PsiElement(identifier)('c1')
              PsiElement(.)('.')
              PsiElement(identifier)('bar')
            ArgumentList
              PsiElement(()('(')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      SimpleType: C0
                        CodeReferenceElement: C0
                          PsiElement(identifier)('C0')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
