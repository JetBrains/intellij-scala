object Test {

  class C

  def outer(implicit c: C) = {

    def f(c: C) = implicitly[C]   // now ok: shadowing no longer tested
    def g(c: Int) = implicitly[C] // now ok: shadowing no longer tested

    f(new C)
  }

  class C1[X]
  class C2[X]

  def f[T: C1] = {
    def g[U: C2] = {
      implicitly[C1[T]]    // OK: no shadowing for evidence parameters
      implicitly[C2[U]]
    }
  }

  def h[T]: C1[T] ?=> Unit = {
    def g[U]: C2[U] ?=> Unit = {
      implicitly[C1[T]]    // OK: no shadowing for evidence parameters
      implicitly[C2[U]]
    }
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScClass: C
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: outer
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('outer')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: c
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('c')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: C
                    CodeReferenceElement: C
                      PsiElement(identifier)('C')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n\n    ')
            ScFunctionDefinition: f
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('f')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: c
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('c')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              GenericCall
                ReferenceExpression: implicitly
                  PsiElement(identifier)('implicitly')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: C
                    CodeReferenceElement: C
                      PsiElement(identifier)('C')
                  PsiElement(])(']')
            PsiWhiteSpace('   ')
            PsiComment(comment)('// now ok: shadowing no longer tested')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: g
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('g')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: c
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('c')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              GenericCall
                ReferenceExpression: implicitly
                  PsiElement(identifier)('implicitly')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: C
                    CodeReferenceElement: C
                      PsiElement(identifier)('C')
                  PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// now ok: shadowing no longer tested')
            PsiWhiteSpace('\n\n    ')
            MethodCall
              ReferenceExpression: f
                PsiElement(identifier)('f')
              ArgumentList
                PsiElement(()('(')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: C
                          CodeReferenceElement: C
                            PsiElement(identifier)('C')
                PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: C1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScClass: C2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: C1
                CodeReferenceElement: C1
                  PsiElement(identifier)('C1')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: g
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('g')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: U
                  PsiElement(identifier)('U')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: C2
                    CodeReferenceElement: C2
                      PsiElement(identifier)('C2')
                PsiElement(])(']')
              Parameters
                <empty list>
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                GenericCall
                  ReferenceExpression: implicitly
                    PsiElement(identifier)('implicitly')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: C1[T]
                      SimpleType: C1
                        CodeReferenceElement: C1
                          PsiElement(identifier)('C1')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiWhiteSpace('    ')
                PsiComment(comment)('// OK: no shadowing for evidence parameters')
                PsiWhiteSpace('\n      ')
                GenericCall
                  ReferenceExpression: implicitly
                    PsiElement(identifier)('implicitly')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: C2[U]
                      SimpleType: C2
                        CodeReferenceElement: C2
                          PsiElement(identifier)('C2')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: U
                          CodeReferenceElement: U
                            PsiElement(identifier)('U')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: h
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('h')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          FunctionalType: C1[T] ?=> Unit
            ParametrizedType: C1[T]
              SimpleType: C1
                CodeReferenceElement: C1
                  PsiElement(identifier)('C1')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(?=>)('?=>')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: g
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('g')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: U
                  PsiElement(identifier)('U')
                PsiElement(])(']')
              Parameters
                <empty list>
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              FunctionalType: C2[U] ?=> Unit
                ParametrizedType: C2[U]
                  SimpleType: C2
                    CodeReferenceElement: C2
                      PsiElement(identifier)('C2')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: U
                      CodeReferenceElement: U
                        PsiElement(identifier)('U')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(?=>)('?=>')
                PsiWhiteSpace(' ')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                GenericCall
                  ReferenceExpression: implicitly
                    PsiElement(identifier)('implicitly')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: C1[T]
                      SimpleType: C1
                        CodeReferenceElement: C1
                          PsiElement(identifier)('C1')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiWhiteSpace('    ')
                PsiComment(comment)('// OK: no shadowing for evidence parameters')
                PsiWhiteSpace('\n      ')
                GenericCall
                  ReferenceExpression: implicitly
                    PsiElement(identifier)('implicitly')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: C2[U]
                      SimpleType: C2
                        CodeReferenceElement: C2
                          PsiElement(identifier)('C2')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: U
                          CodeReferenceElement: U
                            PsiElement(identifier)('U')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
