object Main {

  def main(args: Array[String]): Unit = {
    if (args.length > 0) then
      {
        println(args)
      } else {
      println("Hello world!")
    }
    if (args.length > 0)
      {
        println(args)
      } else {
      println("Hello world!")
    }
  }
}
-----
ScalaFile
  ScObject: Main
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Main')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[String]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            IfStatement
              PsiElement(if)('if')
              PsiWhiteSpace(' ')
              ExpressionInParenthesis
                PsiElement(()('(')
                InfixExpression
                  ReferenceExpression: args.length
                    ReferenceExpression: args
                      PsiElement(identifier)('args')
                    PsiElement(.)('.')
                    PsiElement(identifier)('length')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: >
                    PsiElement(identifier)('>')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('0')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(then)('then')
              PsiWhiteSpace('\n      ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n        ')
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: args
                      PsiElement(identifier)('args')
                    PsiElement())(')')
                PsiWhiteSpace('\n      ')
                PsiElement(})('}')
              PsiWhiteSpace(' ')
              PsiElement(else)('else')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"Hello world!"')
                    PsiElement())(')')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
            PsiWhiteSpace('\n    ')
            IfStatement
              PsiElement(if)('if')
              PsiWhiteSpace(' ')
              PsiElement(()('(')
              InfixExpression
                ReferenceExpression: args.length
                  ReferenceExpression: args
                    PsiElement(identifier)('args')
                  PsiElement(.)('.')
                  PsiElement(identifier)('length')
                PsiWhiteSpace(' ')
                ReferenceExpression: >
                  PsiElement(identifier)('>')
                PsiWhiteSpace(' ')
                IntegerLiteral
                  PsiElement(integer)('0')
              PsiElement())(')')
              PsiWhiteSpace('\n      ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n        ')
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: args
                      PsiElement(identifier)('args')
                    PsiElement())(')')
                PsiWhiteSpace('\n      ')
                PsiElement(})('}')
              PsiWhiteSpace(' ')
              PsiElement(else)('else')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"Hello world!"')
                    PsiElement())(')')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
