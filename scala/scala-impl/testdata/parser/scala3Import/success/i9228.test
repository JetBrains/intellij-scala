object ABug {

  class Graph { class Node }

  def ltol[O](tb: List[O]): List[O] = ???

  def gtoll(using g: Graph): List[List[g.Node]] = ???

  object graph extends Graph
  import graph.*
  given graph.type = graph

  val osq: List[List[Node]] = gtoll

  val r: List[List[Any ]] = ltol(gtoll)
  val q: List[List[Node]] = ltol(gtoll)

}
-----
ScalaFile
  ScObject: ABug
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ABug')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScClass: Graph
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Graph')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScClass: Node
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Node')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    <empty list>
                ExtendsBlock
                  <empty list>
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: ltol
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ltol')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: O
              PsiElement(identifier)('O')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: tb
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('tb')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[O]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: O
                        CodeReferenceElement: O
                          PsiElement(identifier)('O')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[O]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: O
                CodeReferenceElement: O
                  PsiElement(identifier)('O')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: gtoll
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('gtoll')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: g
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('g')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Graph
                    CodeReferenceElement: Graph
                      PsiElement(identifier)('Graph')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[List[g.Node]]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[g.Node]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: g.Node
                    CodeReferenceElement: g.Node
                      CodeReferenceElement: g
                        PsiElement(identifier)('g')
                      PsiElement(.)('.')
                      PsiElement(identifier)('Node')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScObject: graph
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('graph')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Graph
                  CodeReferenceElement: Graph
                    PsiElement(identifier)('Graph')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: graph
              PsiElement(identifier)('graph')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        ScGivenAliasDefinition: given_graph_type
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          SimpleType: graph.type
            CodeReferenceElement: graph
              PsiElement(identifier)('graph')
            PsiElement(.)('.')
            PsiElement(type)('type')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: graph
            PsiElement(identifier)('graph')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: osq
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: osq
              PsiElement(identifier)('osq')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[List[Node]]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[Node]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Node
                    CodeReferenceElement: Node
                      PsiElement(identifier)('Node')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: gtoll
            PsiElement(identifier)('gtoll')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: r
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: r
              PsiElement(identifier)('r')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[List[Any ]]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[Any ]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Any
                    CodeReferenceElement: Any
                      PsiElement(identifier)('Any')
                  PsiWhiteSpace(' ')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: ltol
              PsiElement(identifier)('ltol')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: gtoll
                PsiElement(identifier)('gtoll')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: q
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: q
              PsiElement(identifier)('q')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[List[Node]]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[Node]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Node
                    CodeReferenceElement: Node
                      PsiElement(identifier)('Node')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: ltol
              PsiElement(identifier)('ltol')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: gtoll
                PsiElement(identifier)('gtoll')
              PsiElement())(')')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
