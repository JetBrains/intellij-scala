// No unreachable or exhaustiveness warnings, please.

//
// The reported bug
//

trait AxisCompanion {
   sealed trait Format
   object Format {
      case object Decimal extends Format
      case object Integer extends Format
      // Gives an unrelated warning:  The outer reference in this type test cannot be checked at run time.
      //final case class Time( hours: Boolean = false, millis: Boolean = true ) extends Format
   }
}
object Axis extends AxisCompanion
class Axis {
   import Axis.*
   def test( f: Format ) = f match {
      case Format.Integer => "Int"
      // case Format.Time( hours, millis ) => "Time"
      case Format.Decimal => "Dec"
   }
}


//
// Some tricksier variations
//

trait T1[X] {
  trait T2[Y] {
    sealed trait Format
    object Format {
      case object Decimal extends Format
      case object Integer extends Format
    }
  }
}

object O1 extends T1[Any] {
  object O2 extends T2[Any] {

  }
}

case object Shorty extends O1.O2.Format

class Test1 {
   import O1.O2.*
   val FI: Format.Integer.type = Format.Integer
   def test( f: Format ) = {
     val ff: f.type = f
     ff match {
        case FI => "Int"
        case Format.Decimal => "Dec"
        case Shorty => "Sho"
     }
   }
}
-----
ScalaFile
  PsiComment(comment)('// No unreachable or exhaustiveness warnings, please.')
  PsiWhiteSpace('\n\n')
  PsiComment(comment)('//')
  PsiWhiteSpace('\n')
  PsiComment(comment)('// The reported bug')
  PsiWhiteSpace('\n')
  PsiComment(comment)('//')
  PsiWhiteSpace('\n\n')
  ScTrait: AxisCompanion
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('AxisCompanion')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n   ')
        ScTrait: Format
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(sealed)('sealed')
          PsiWhiteSpace(' ')
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Format')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n   ')
        ScObject: Format
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Format')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n      ')
              ScObject: Decimal
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(case)('case')
                PsiWhiteSpace(' ')
                PsiElement(object)('object')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Decimal')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      SimpleType: Format
                        CodeReferenceElement: Format
                          PsiElement(identifier)('Format')
              PsiWhiteSpace('\n      ')
              ScObject: Integer
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(case)('case')
                PsiWhiteSpace(' ')
                PsiElement(object)('object')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Integer')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      SimpleType: Format
                        CodeReferenceElement: Format
                          PsiElement(identifier)('Format')
              PsiWhiteSpace('\n      ')
              PsiComment(comment)('// Gives an unrelated warning:  The outer reference in this type test cannot be checked at run time.')
              PsiWhiteSpace('\n      ')
              PsiComment(comment)('//final case class Time( hours: Boolean = false, millis: Boolean = true ) extends Format')
              PsiWhiteSpace('\n   ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: Axis
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Axis')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: AxisCompanion
            CodeReferenceElement: AxisCompanion
              PsiElement(identifier)('AxisCompanion')
  PsiWhiteSpace('\n')
  ScClass: Axis
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Axis')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n   ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: Axis
              PsiElement(identifier)('Axis')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n   ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Format
                    CodeReferenceElement: Format
                      PsiElement(identifier)('Format')
              PsiWhiteSpace(' ')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: f
              PsiElement(identifier)('f')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n      ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: Format.Integer
                    ReferenceExpression: Format
                      PsiElement(identifier)('Format')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Integer')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"Int"')
              PsiWhiteSpace('\n      ')
              PsiComment(comment)('// case Format.Time( hours, millis ) => "Time"')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: Format.Decimal
                    ReferenceExpression: Format
                      PsiElement(identifier)('Format')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Decimal')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"Dec"')
            PsiWhiteSpace('\n   ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n\n')
  PsiComment(comment)('//')
  PsiWhiteSpace('\n')
  PsiComment(comment)('// Some tricksier variations')
  PsiWhiteSpace('\n')
  PsiComment(comment)('//')
  PsiWhiteSpace('\n\n')
  ScTrait: T1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('T1')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: X
        PsiElement(identifier)('X')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: T2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('T2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Y
              PsiElement(identifier)('Y')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTrait: Format
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(sealed)('sealed')
                PsiWhiteSpace(' ')
                PsiElement(trait)('trait')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Format')
                ExtendsBlock
                  <empty list>
              PsiWhiteSpace('\n    ')
              ScObject: Format
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(object)('object')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Format')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n      ')
                    ScObject: Decimal
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      PsiElement(object)('object')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('Decimal')
                      PsiWhiteSpace(' ')
                      ExtendsBlock
                        PsiElement(extends)('extends')
                        PsiWhiteSpace(' ')
                        TemplateParents
                          ConstructorInvocation
                            SimpleType: Format
                              CodeReferenceElement: Format
                                PsiElement(identifier)('Format')
                    PsiWhiteSpace('\n      ')
                    ScObject: Integer
                      AnnotationsList
                        <empty list>
                      Modifiers
                        PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      PsiElement(object)('object')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('Integer')
                      PsiWhiteSpace(' ')
                      ExtendsBlock
                        PsiElement(extends)('extends')
                        PsiWhiteSpace(' ')
                        TemplateParents
                          ConstructorInvocation
                            SimpleType: Format
                              CodeReferenceElement: Format
                                PsiElement(identifier)('Format')
                    PsiWhiteSpace('\n    ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: O1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('O1')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: T1[Any]
            SimpleType: T1
              CodeReferenceElement: T1
                PsiElement(identifier)('T1')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
              PsiElement(])(']')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScObject: O2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('O2')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: T2[Any]
                  SimpleType: T2
                    CodeReferenceElement: T2
                      PsiElement(identifier)('T2')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Any
                      CodeReferenceElement: Any
                        PsiElement(identifier)('Any')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Shorty
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Shorty')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: O1.O2.Format
            CodeReferenceElement: O1.O2.Format
              CodeReferenceElement: O1.O2
                CodeReferenceElement: O1
                  PsiElement(identifier)('O1')
                PsiElement(.)('.')
                PsiElement(identifier)('O2')
              PsiElement(.)('.')
              PsiElement(identifier)('Format')
  PsiWhiteSpace('\n\n')
  ScClass: Test1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test1')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n   ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: O1.O2
              CodeReferenceElement: O1
                PsiElement(identifier)('O1')
              PsiElement(.)('.')
              PsiElement(identifier)('O2')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n   ')
        ScPatternDefinition: FI
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: FI
              PsiElement(identifier)('FI')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Format.Integer.type
            CodeReferenceElement: Format.Integer
              CodeReferenceElement: Format
                PsiElement(identifier)('Format')
              PsiElement(.)('.')
              PsiElement(identifier)('Integer')
            PsiElement(.)('.')
            PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: Format.Integer
            ReferenceExpression: Format
              PsiElement(identifier)('Format')
            PsiElement(.)('.')
            PsiElement(identifier)('Integer')
        PsiWhiteSpace('\n   ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Format
                    CodeReferenceElement: Format
                      PsiElement(identifier)('Format')
              PsiWhiteSpace(' ')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n     ')
            ScPatternDefinition: ff
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: ff
                  PsiElement(identifier)('ff')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: f.type
                CodeReferenceElement: f
                  PsiElement(identifier)('f')
                PsiElement(.)('.')
                PsiElement(type)('type')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: f
                PsiElement(identifier)('f')
            PsiWhiteSpace('\n     ')
            MatchStatement
              ReferenceExpression: ff
                PsiElement(identifier)('ff')
              PsiWhiteSpace(' ')
              PsiElement(match)('match')
              PsiWhiteSpace(' ')
              PsiElement({)('{')
              PsiWhiteSpace('\n        ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  StableElementPattern
                    ReferenceExpression: FI
                      PsiElement(identifier)('FI')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    StringLiteral
                      PsiElement(string content)('"Int"')
                PsiWhiteSpace('\n        ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  StableElementPattern
                    ReferenceExpression: Format.Decimal
                      ReferenceExpression: Format
                        PsiElement(identifier)('Format')
                      PsiElement(.)('.')
                      PsiElement(identifier)('Decimal')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    StringLiteral
                      PsiElement(string content)('"Dec"')
                PsiWhiteSpace('\n        ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  StableElementPattern
                    ReferenceExpression: Shorty
                      PsiElement(identifier)('Shorty')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    StringLiteral
                      PsiElement(string content)('"Sho"')
              PsiWhiteSpace('\n     ')
              PsiElement(})('}')
            PsiWhiteSpace('\n   ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
