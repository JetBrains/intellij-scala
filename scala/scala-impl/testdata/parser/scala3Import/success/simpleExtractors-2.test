class Foo {
  def bar(x: Any): Unit = x match {
    case Some(Some(i: Int)) => println(i)
    case Some(s @ Some(i)) => println(s)
    case s @ Some(r @ Some(i)) => println(s)
  }
}
-----
ScalaFile
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: bar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('bar')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Any
                    CodeReferenceElement: Any
                      PsiElement(identifier)('Any')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Some
                    PsiElement(identifier)('Some')
                  Pattern Argument List
                    PsiElement(()('(')
                    ConstructorPattern
                      CodeReferenceElement: Some
                        PsiElement(identifier)('Some')
                      Pattern Argument List
                        PsiElement(()('(')
                        Scala3 TypedPattern
                          ReferencePattern: i
                            PsiElement(identifier)('i')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          TypePattern
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: println
                      PsiElement(identifier)('println')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: i
                        PsiElement(identifier)('i')
                      PsiElement())(')')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Some
                    PsiElement(identifier)('Some')
                  Pattern Argument List
                    PsiElement(()('(')
                    NamingPattern: s
                      PsiElement(identifier)('s')
                      PsiWhiteSpace(' ')
                      PsiElement(@)('@')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Some
                          PsiElement(identifier)('Some')
                        Pattern Argument List
                          PsiElement(()('(')
                          ReferencePattern: i
                            PsiElement(identifier)('i')
                          PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: println
                      PsiElement(identifier)('println')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: s
                        PsiElement(identifier)('s')
                      PsiElement())(')')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                NamingPattern: s
                  PsiElement(identifier)('s')
                  PsiWhiteSpace(' ')
                  PsiElement(@)('@')
                  PsiWhiteSpace(' ')
                  ConstructorPattern
                    CodeReferenceElement: Some
                      PsiElement(identifier)('Some')
                    Pattern Argument List
                      PsiElement(()('(')
                      NamingPattern: r
                        PsiElement(identifier)('r')
                        PsiWhiteSpace(' ')
                        PsiElement(@)('@')
                        PsiWhiteSpace(' ')
                        ConstructorPattern
                          CodeReferenceElement: Some
                            PsiElement(identifier)('Some')
                          Pattern Argument List
                            PsiElement(()('(')
                            ReferencePattern: i
                              PsiElement(identifier)('i')
                            PsiElement())(')')
                      PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: println
                      PsiElement(identifier)('println')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: s
                        PsiElement(identifier)('s')
                      PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
