package i7648

class IO[+A]

trait Functor[F[_]]
trait Monad[F[_]] extends Functor[F]

class Stream[+F[_], +A] {
  def take[F1[x] >: F[x]](n: Int)(implicit f: Functor[F1]): Stream[F1, A] = {
    this
  }
}

object Test:

  implicit val ioMonad: Monad[IO] = null

  val x = new Stream[IO, Int].take[IO](10)
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: i7648
      PsiElement(identifier)('i7648')
    PsiWhiteSpace('\n\n')
    ScClass: IO
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('IO')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: A
          PsiElement(identifier)('+')
          PsiElement(identifier)('A')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      ExtendsBlock
        <empty list>
    PsiWhiteSpace('\n\n')
    ScTrait: Functor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Functor')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: F
          PsiElement(identifier)('F')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: _
              PsiElement(_)('_')
            PsiElement(])(']')
        PsiElement(])(']')
      ExtendsBlock
        <empty list>
    PsiWhiteSpace('\n')
    ScTrait: Monad
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Monad')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: F
          PsiElement(identifier)('F')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: _
              PsiElement(_)('_')
            PsiElement(])(']')
        PsiElement(])(']')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            ParametrizedType: Functor[F]
              SimpleType: Functor
                CodeReferenceElement: Functor
                  PsiElement(identifier)('Functor')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                PsiElement(])(']')
    PsiWhiteSpace('\n\n')
    ScClass: Stream
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Stream')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: F
          PsiElement(identifier)('+')
          PsiElement(identifier)('F')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: _
              PsiElement(_)('_')
            PsiElement(])(']')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        TypeParameter: A
          PsiElement(identifier)('+')
          PsiElement(identifier)('A')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: take
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('take')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: F1
                PsiElement(identifier)('F1')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: x
                    PsiElement(identifier)('x')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(>:)('>:')
                PsiWhiteSpace(' ')
                ParametrizedType: F[x]
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: x
                      CodeReferenceElement: x
                        PsiElement(identifier)('x')
                    PsiElement(])(']')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: n
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('n')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                PsiElement())(')')
              ParametersClause
                PsiElement(()('(')
                PsiElement(implicit)('implicit')
                PsiWhiteSpace(' ')
                Parameter: f
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('f')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: Functor[F1]
                      SimpleType: Functor
                        CodeReferenceElement: Functor
                          PsiElement(identifier)('Functor')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: F1
                          CodeReferenceElement: F1
                            PsiElement(identifier)('F1')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Stream[F1, A]
              SimpleType: Stream
                CodeReferenceElement: Stream
                  PsiElement(identifier)('Stream')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: F1
                  CodeReferenceElement: F1
                    PsiElement(identifier)('F1')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ThisReference
                PsiElement(this)('this')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScObject: Test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test')
      ExtendsBlock
        ScTemplateBody
          PsiElement(:)(':')
          PsiWhiteSpace('\n\n  ')
          ScPatternDefinition: ioMonad
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(implicit)('implicit')
            PsiWhiteSpace(' ')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: ioMonad
                PsiElement(identifier)('ioMonad')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Monad[IO]
              SimpleType: Monad
                CodeReferenceElement: Monad
                  PsiElement(identifier)('Monad')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: IO
                  CodeReferenceElement: IO
                    PsiElement(identifier)('IO')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            NullLiteral
              PsiElement(null)('null')
          PsiWhiteSpace('\n\n  ')
          ScPatternDefinition: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: x
                PsiElement(identifier)('x')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            MethodCall
              GenericCall
                ReferenceExpression: new Stream[IO, Int].take
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          ParametrizedType: Stream[IO, Int]
                            SimpleType: Stream
                              CodeReferenceElement: Stream
                                PsiElement(identifier)('Stream')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: IO
                                CodeReferenceElement: IO
                                  PsiElement(identifier)('IO')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: Int
                                CodeReferenceElement: Int
                                  PsiElement(identifier)('Int')
                              PsiElement(])(']')
                  PsiElement(.)('.')
                  PsiElement(identifier)('take')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: IO
                    CodeReferenceElement: IO
                      PsiElement(identifier)('IO')
                  PsiElement(])(']')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('10')
                PsiElement())(')')
