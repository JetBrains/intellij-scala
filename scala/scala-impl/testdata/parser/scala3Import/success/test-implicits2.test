/* Compile with

    dotc implicits2.scala -Xprint:typer -Xprint-types -verbose

    and verify that the inserted wrapString comes from Predef. You should see

    val x: <root>.scala.collection.immutable.WrappedString =
      <
        <scala.Predef.wrapString:
          ((s: java.lang.String)scala.collection.immutable.WrappedString)
        >
      (<"abc":java.lang.String("abc")>):scala.collection.immutable.WrappedString
        >
*/
object implicits2 {

  val x: scala.collection.immutable.WrappedString = "abc"

  implicit val (xx: String, y: Int) = ("a", 22)

  def main(args: Array[String]) = {
    println(implicitly[String])
    println(implicitly[Int])
  }
}
-----
ScalaFile
  ScObject: implicits2
    PsiComment(BlockComment)('/* Compile with\n\n    dotc implicits2.scala -Xprint:typer -Xprint-types -verbose\n\n    and verify that the inserted wrapString comes from Predef. You should see\n\n    val x: <root>.scala.collection.immutable.WrappedString =\n      <\n        <scala.Predef.wrapString:\n          ((s: java.lang.String)scala.collection.immutable.WrappedString)\n        >\n      (<"abc":java.lang.String("abc")>):scala.collection.immutable.WrappedString\n        >\n*/')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('implicits2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: scala.collection.immutable.WrappedString
            CodeReferenceElement: scala.collection.immutable.WrappedString
              CodeReferenceElement: scala.collection.immutable
                CodeReferenceElement: scala.collection
                  CodeReferenceElement: scala
                    PsiElement(identifier)('scala')
                  PsiElement(.)('.')
                  PsiElement(identifier)('collection')
                PsiElement(.)('.')
                PsiElement(identifier)('immutable')
              PsiElement(.)('.')
              PsiElement(identifier)('WrappedString')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"abc"')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: xx, y
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            TuplePattern
              PsiElement(()('(')
              ArgumentPatterns
                Scala3 TypedPattern
                  ReferencePattern: xx
                    PsiElement(identifier)('xx')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TypePattern
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                Scala3 TypedPattern
                  ReferencePattern: y
                    PsiElement(identifier)('y')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TypePattern
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          Tuple
            PsiElement(()('(')
            StringLiteral
              PsiElement(string content)('"a"')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('22')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[String]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                GenericCall
                  ReferenceExpression: implicitly
                    PsiElement(identifier)('implicitly')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                    PsiElement(])(']')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                GenericCall
                  ReferenceExpression: implicitly
                    PsiElement(identifier)('implicitly')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
                PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
