package x
abstract class H[A] {
  type P <: R[P]
  def a: P
}
class R[F]
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: x
      PsiElement(identifier)('x')
    PsiWhiteSpace('\n')
    ScClass: H
      AnnotationsList
        <empty list>
      Modifiers
        PsiElement(abstract)('abstract')
      PsiWhiteSpace(' ')
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('H')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: A
          PsiElement(identifier)('A')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScTypeAliasDeclaration: P
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(type)('type')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('P')
            PsiWhiteSpace(' ')
            PsiElement(<:)('<:')
            PsiWhiteSpace(' ')
            ParametrizedType: R[P]
              SimpleType: R
                CodeReferenceElement: R
                  PsiElement(identifier)('R')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: P
                  CodeReferenceElement: P
                    PsiElement(identifier)('P')
                PsiElement(])(']')
          PsiWhiteSpace('\n  ')
          ScFunctionDeclaration: a
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('a')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: P
              CodeReferenceElement: P
                PsiElement(identifier)('P')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    ScClass: R
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('R')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: F
          PsiElement(identifier)('F')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      ExtendsBlock
        <empty list>
