object Test {
  def a = Symbol("a")
  def b = Symbol("B")
  def c = Symbol("+")
  //def d = '`\n` //error: unclosed character literal
  def e = Symbol("\u0041")
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('a')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Symbol
              PsiElement(identifier)('Symbol')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"a"')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: b
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('b')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Symbol
              PsiElement(identifier)('Symbol')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"B"')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: c
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('c')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Symbol
              PsiElement(identifier)('Symbol')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"+"')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: e
          PsiComment(comment)('//def d = '`\n` //error: unclosed character literal')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('e')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Symbol
              PsiElement(identifier)('Symbol')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"\u0041"')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
