object Test {
  trait A
  trait TestConstructor1 { type F[_ <: A] }
  trait TestConstructor2[D] {
    type F[_ <: D]
    class G[X <: D]
    trait TestConstructor3[E] {
      type G[_ <: D & E]
      class H[X <: D & E]
    }
  }

  val v1: TestConstructor1 => Unit = { f =>
    type P[a <: A] = f.F[a] // OK
  }

  val v2: TestConstructor2[A] => Unit = { f =>
    type P[a <: A] = f.F[a] // Error! Type argument a does not conform to upper bound D
  }

  def f2(f: TestConstructor2[A]): Unit = {
    type P[a <: A] = f.F[a] // Error! Type argument a does not conform to upper bound D
  }

  val v3: (f: TestConstructor2[A]) => (g: f.TestConstructor3[A]) => Unit = ??? // ok
  val v4: (f: TestConstructor2[A]) => (g: f.TestConstructor3[A]) => Unit = {f => ???}
  val v5: (f: TestConstructor2[A]) => (g: f.TestConstructor3[A]) => Unit = {(f: TestConstructor2[A]) => ???}
                                                                                                                                           // }
  def f3(f: TestConstructor2[A], g: f.TestConstructor3[A]): Unit = {
    type P[a <: A] = f.F[a] // Error! Type argument a does not conform to upper bound D
    type Q[a <: A] = g.G[a]
    // type R[a <: A] = (f.F & g.G)[a] // compiler error
    type R[a <: A] = ([X <: A] =>> f.F[X] & g.G[X])[a]
    type S[a <: A] = f.G[a] & g.H[a]
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: A
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScTrait: TestConstructor1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TestConstructor1')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScTypeAliasDeclaration: F
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('F')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScTrait: TestConstructor2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TestConstructor2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: D
              PsiElement(identifier)('D')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDeclaration: F
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('F')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    SimpleType: D
                      CodeReferenceElement: D
                        PsiElement(identifier)('D')
                  PsiElement(])(']')
              PsiWhiteSpace('\n    ')
              ScClass: G
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('G')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    SimpleType: D
                      CodeReferenceElement: D
                        PsiElement(identifier)('D')
                  PsiElement(])(']')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    <empty list>
                ExtendsBlock
                  <empty list>
              PsiWhiteSpace('\n    ')
              ScTrait: TestConstructor3
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(trait)('trait')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('TestConstructor3')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: E
                    PsiElement(identifier)('E')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n      ')
                    ScTypeAliasDeclaration: G
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(type)('type')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('G')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: _
                          PsiElement(_)('_')
                          PsiWhiteSpace(' ')
                          PsiElement(<:)('<:')
                          PsiWhiteSpace(' ')
                          InfixType: D & E
                            SimpleType: D
                              CodeReferenceElement: D
                                PsiElement(identifier)('D')
                            PsiWhiteSpace(' ')
                            CodeReferenceElement: &
                              PsiElement(identifier)('&')
                            PsiWhiteSpace(' ')
                            SimpleType: E
                              CodeReferenceElement: E
                                PsiElement(identifier)('E')
                        PsiElement(])(']')
                    PsiWhiteSpace('\n      ')
                    ScClass: H
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(class)('class')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('H')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: X
                          PsiElement(identifier)('X')
                          PsiWhiteSpace(' ')
                          PsiElement(<:)('<:')
                          PsiWhiteSpace(' ')
                          InfixType: D & E
                            SimpleType: D
                              CodeReferenceElement: D
                                PsiElement(identifier)('D')
                            PsiWhiteSpace(' ')
                            CodeReferenceElement: &
                              PsiElement(identifier)('&')
                            PsiWhiteSpace(' ')
                            SimpleType: E
                              CodeReferenceElement: E
                                PsiElement(identifier)('E')
                        PsiElement(])(']')
                      PrimaryConstructor
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        Parameters
                          <empty list>
                      ExtendsBlock
                        <empty list>
                    PsiWhiteSpace('\n    ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: v1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: v1
              PsiElement(identifier)('v1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          FunctionalType: TestConstructor1 => Unit
            SimpleType: TestConstructor1
              CodeReferenceElement: TestConstructor1
                PsiElement(identifier)('TestConstructor1')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            FunctionExpression
              Parameters
                ParametersClause
                  Parameter: f
                    PsiElement(identifier)('f')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace('\n    ')
              BlockOfExpressions
                ScTypeAliasDefinition: P
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(type)('type')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('P')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: a
                      PsiElement(identifier)('a')
                      PsiWhiteSpace(' ')
                      PsiElement(<:)('<:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ParametrizedType: f.F[a]
                    SimpleType: f.F
                      CodeReferenceElement: f.F
                        CodeReferenceElement: f
                          PsiElement(identifier)('f')
                        PsiElement(.)('.')
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: a
                        CodeReferenceElement: a
                          PsiElement(identifier)('a')
                      PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// OK')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: v2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: v2
              PsiElement(identifier)('v2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          FunctionalType: TestConstructor2[A] => Unit
            ParametrizedType: TestConstructor2[A]
              SimpleType: TestConstructor2
                CodeReferenceElement: TestConstructor2
                  PsiElement(identifier)('TestConstructor2')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            FunctionExpression
              Parameters
                ParametersClause
                  Parameter: f
                    PsiElement(identifier)('f')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace('\n    ')
              BlockOfExpressions
                ScTypeAliasDefinition: P
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(type)('type')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('P')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: a
                      PsiElement(identifier)('a')
                      PsiWhiteSpace(' ')
                      PsiElement(<:)('<:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ParametrizedType: f.F[a]
                    SimpleType: f.F
                      CodeReferenceElement: f.F
                        CodeReferenceElement: f
                          PsiElement(identifier)('f')
                        PsiElement(.)('.')
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: a
                        CodeReferenceElement: a
                          PsiElement(identifier)('a')
                      PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// Error! Type argument a does not conform to upper bound D')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: f2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f2')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: TestConstructor2[A]
                    SimpleType: TestConstructor2
                      CodeReferenceElement: TestConstructor2
                        PsiElement(identifier)('TestConstructor2')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScTypeAliasDefinition: P
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(type)('type')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('P')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: a
                  PsiElement(identifier)('a')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ParametrizedType: f.F[a]
                SimpleType: f.F
                  CodeReferenceElement: f.F
                    CodeReferenceElement: f
                      PsiElement(identifier)('f')
                    PsiElement(.)('.')
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: a
                    CodeReferenceElement: a
                      PsiElement(identifier)('a')
                  PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// Error! Type argument a does not conform to upper bound D')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: v3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: v3
              PsiElement(identifier)('v3')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          DependentFunctionType: (f: TestConstructor2[A]) => (g: f.TestConstructor3[A]) => Unit
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: TestConstructor2[A]
                  SimpleType: TestConstructor2
                    CodeReferenceElement: TestConstructor2
                      PsiElement(identifier)('TestConstructor2')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            DependentFunctionType: (g: f.TestConstructor3[A]) => Unit
              ParametersClause
                PsiElement(()('(')
                Parameter: g
                  PsiElement(identifier)('g')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: f.TestConstructor3[A]
                    SimpleType: f.TestConstructor3
                      CodeReferenceElement: f.TestConstructor3
                        CodeReferenceElement: f
                          PsiElement(identifier)('f')
                        PsiElement(.)('.')
                        PsiElement(identifier)('TestConstructor3')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              SimpleType: Unit
                CodeReferenceElement: Unit
                  PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// ok')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: v4
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: v4
              PsiElement(identifier)('v4')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          DependentFunctionType: (f: TestConstructor2[A]) => (g: f.TestConstructor3[A]) => Unit
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: TestConstructor2[A]
                  SimpleType: TestConstructor2
                    CodeReferenceElement: TestConstructor2
                      PsiElement(identifier)('TestConstructor2')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            DependentFunctionType: (g: f.TestConstructor3[A]) => Unit
              ParametersClause
                PsiElement(()('(')
                Parameter: g
                  PsiElement(identifier)('g')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: f.TestConstructor3[A]
                    SimpleType: f.TestConstructor3
                      CodeReferenceElement: f.TestConstructor3
                        CodeReferenceElement: f
                          PsiElement(identifier)('f')
                        PsiElement(.)('.')
                        PsiElement(identifier)('TestConstructor3')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              SimpleType: Unit
                CodeReferenceElement: Unit
                  PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            FunctionExpression
              Parameters
                ParametersClause
                  Parameter: f
                    PsiElement(identifier)('f')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
            PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: v5
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: v5
              PsiElement(identifier)('v5')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          DependentFunctionType: (f: TestConstructor2[A]) => (g: f.TestConstructor3[A]) => Unit
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: TestConstructor2[A]
                  SimpleType: TestConstructor2
                    CodeReferenceElement: TestConstructor2
                      PsiElement(identifier)('TestConstructor2')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            DependentFunctionType: (g: f.TestConstructor3[A]) => Unit
              ParametersClause
                PsiElement(()('(')
                Parameter: g
                  PsiElement(identifier)('g')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: f.TestConstructor3[A]
                    SimpleType: f.TestConstructor3
                      CodeReferenceElement: f.TestConstructor3
                        CodeReferenceElement: f
                          PsiElement(identifier)('f')
                        PsiElement(.)('.')
                        PsiElement(identifier)('TestConstructor3')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              SimpleType: Unit
                CodeReferenceElement: Unit
                  PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: f
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('f')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: TestConstructor2[A]
                        SimpleType: TestConstructor2
                          CodeReferenceElement: TestConstructor2
                            PsiElement(identifier)('TestConstructor2')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
            PsiElement(})('}')
        PsiWhiteSpace('\n                                                                                                                                           ')
        ScFunctionDefinition: f3
          PsiComment(comment)('// }')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f3')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: TestConstructor2[A]
                    SimpleType: TestConstructor2
                      CodeReferenceElement: TestConstructor2
                        PsiElement(identifier)('TestConstructor2')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: g
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('g')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: f.TestConstructor3[A]
                    SimpleType: f.TestConstructor3
                      CodeReferenceElement: f.TestConstructor3
                        CodeReferenceElement: f
                          PsiElement(identifier)('f')
                        PsiElement(.)('.')
                        PsiElement(identifier)('TestConstructor3')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScTypeAliasDefinition: P
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(type)('type')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('P')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: a
                  PsiElement(identifier)('a')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ParametrizedType: f.F[a]
                SimpleType: f.F
                  CodeReferenceElement: f.F
                    CodeReferenceElement: f
                      PsiElement(identifier)('f')
                    PsiElement(.)('.')
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: a
                    CodeReferenceElement: a
                      PsiElement(identifier)('a')
                  PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// Error! Type argument a does not conform to upper bound D')
            PsiWhiteSpace('\n    ')
            ScTypeAliasDefinition: Q
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(type)('type')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Q')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: a
                  PsiElement(identifier)('a')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ParametrizedType: g.G[a]
                SimpleType: g.G
                  CodeReferenceElement: g.G
                    CodeReferenceElement: g
                      PsiElement(identifier)('g')
                    PsiElement(.)('.')
                    PsiElement(identifier)('G')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: a
                    CodeReferenceElement: a
                      PsiElement(identifier)('a')
                  PsiElement(])(']')
            PsiWhiteSpace('\n    ')
            ScTypeAliasDefinition: R
              PsiComment(comment)('// type R[a <: A] = (f.F & g.G)[a] // compiler error')
              PsiWhiteSpace('\n    ')
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(type)('type')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('R')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: a
                  PsiElement(identifier)('a')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ParametrizedType: ([X <: A] =>> f.F[X] & g.G[X])[a]
                TypeInParenthesis: ([X <: A] =>> f.F[X] & g.G[X])
                  PsiElement(()('(')
                  TypeLambda: [X <: A] =>> f.F[X] & g.G[X]
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: X
                        PsiElement(identifier)('X')
                        PsiWhiteSpace(' ')
                        PsiElement(<:)('<:')
                        PsiWhiteSpace(' ')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                      PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=>>)('=>>')
                    PsiWhiteSpace(' ')
                    InfixType: f.F[X] & g.G[X]
                      ParametrizedType: f.F[X]
                        SimpleType: f.F
                          CodeReferenceElement: f.F
                            CodeReferenceElement: f
                              PsiElement(identifier)('f')
                            PsiElement(.)('.')
                            PsiElement(identifier)('F')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: X
                            CodeReferenceElement: X
                              PsiElement(identifier)('X')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      CodeReferenceElement: &
                        PsiElement(identifier)('&')
                      PsiWhiteSpace(' ')
                      ParametrizedType: g.G[X]
                        SimpleType: g.G
                          CodeReferenceElement: g.G
                            CodeReferenceElement: g
                              PsiElement(identifier)('g')
                            PsiElement(.)('.')
                            PsiElement(identifier)('G')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: X
                            CodeReferenceElement: X
                              PsiElement(identifier)('X')
                          PsiElement(])(']')
                  PsiElement())(')')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: a
                    CodeReferenceElement: a
                      PsiElement(identifier)('a')
                  PsiElement(])(']')
            PsiWhiteSpace('\n    ')
            ScTypeAliasDefinition: S
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(type)('type')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('S')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: a
                  PsiElement(identifier)('a')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              InfixType: f.G[a] & g.H[a]
                ParametrizedType: f.G[a]
                  SimpleType: f.G
                    CodeReferenceElement: f.G
                      CodeReferenceElement: f
                        PsiElement(identifier)('f')
                      PsiElement(.)('.')
                      PsiElement(identifier)('G')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: a
                      CodeReferenceElement: a
                        PsiElement(identifier)('a')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                CodeReferenceElement: &
                  PsiElement(identifier)('&')
                PsiWhiteSpace(' ')
                ParametrizedType: g.H[a]
                  SimpleType: g.H
                    CodeReferenceElement: g.H
                      CodeReferenceElement: g
                        PsiElement(identifier)('g')
                      PsiElement(.)('.')
                      PsiElement(identifier)('H')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: a
                      CodeReferenceElement: a
                        PsiElement(identifier)('a')
                    PsiElement(])(']')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
