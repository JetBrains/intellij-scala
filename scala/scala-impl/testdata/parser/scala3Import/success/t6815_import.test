trait U {
  trait ValOrDefDefApi {
    def name: Any
  }
  type ValOrDefDef <: ValOrDefDefApi
  type ValDef <: ValOrDefDef with ValDefApi
  trait ValDefApi extends ValOrDefDefApi { this: ValDef => }
  val emptyValDef: ValDef // the result type is volatile
}

object Test {
  val u: U = ???

  // but we shouldn't let that stop us from treating it as a stable identifier for import
  import u.emptyValDef.name
}
-----
ScalaFile
  ScTrait: U
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('U')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: ValOrDefDefApi
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ValOrDefDefApi')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: name
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('name')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Any
                  CodeReferenceElement: Any
                    PsiElement(identifier)('Any')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: ValOrDefDef
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ValOrDefDef')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: ValOrDefDefApi
            CodeReferenceElement: ValOrDefDefApi
              PsiElement(identifier)('ValOrDefDefApi')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: ValDef
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ValDef')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          CompoundType: ValOrDefDef with ValDefApi
            SimpleType: ValOrDefDef
              CodeReferenceElement: ValOrDefDef
                PsiElement(identifier)('ValOrDefDef')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            SimpleType: ValDefApi
              CodeReferenceElement: ValDefApi
                PsiElement(identifier)('ValDefApi')
        PsiWhiteSpace('\n  ')
        ScTrait: ValDefApi
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ValDefApi')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: ValOrDefDefApi
                  CodeReferenceElement: ValOrDefDefApi
                    PsiElement(identifier)('ValOrDefDefApi')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              SelfType: this
                PsiElement(this)('this')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: ValDef
                  CodeReferenceElement: ValDef
                    PsiElement(identifier)('ValDef')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: emptyValDef
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: emptyValDef
              PsiElement(identifier)('emptyValDef')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: ValDef
            CodeReferenceElement: ValDef
              PsiElement(identifier)('ValDef')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// the result type is volatile')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: u
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: u
              PsiElement(identifier)('u')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: U
            CodeReferenceElement: U
              PsiElement(identifier)('U')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// but we shouldn't let that stop us from treating it as a stable identifier for import')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: u.emptyValDef.name
              CodeReferenceElement: u.emptyValDef
                CodeReferenceElement: u
                  PsiElement(identifier)('u')
                PsiElement(.)('.')
                PsiElement(identifier)('emptyValDef')
              PsiElement(.)('.')
              PsiElement(identifier)('name')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
