class X(val elem: Int) {
  def foo(y: String): Int = y.length + elem
}

object X {
  implicit class BarDeco(x: X) {
    def bar: String = "!"
  }
}

object Implicits {

  implicit val impl: X = new X(0)

  implicit def conv(x: Int): X = new X(x)

  class Xdecorator(x: X) extends Object {
    def foo(cond: Boolean): Int = if (cond) x.foo("abc") else 0
  }

  implicit def XDecorator(x: X): Xdecorator = new Xdecorator(x)

  val a: Object = "abc"
  val b: Any = "abc"

  def foo(x: Int)(implicit y: X): Int = {
    println(y)
    x
  }

  val y: Int = foo(1)

  val z: X = 3

  val c: Int = y.elem

  val d: Int = z.foo("abc")

  val x: X = Byte.MinValue

  //import X.BarDeco

  println(z.bar)

  val e: Int = z.foo(true)

  // Haoyi Li's example on scala-user:

  trait Modifier

  implicit def stringNode(v: String): Modifier = new Modifier {}

  val s: Modifier = Some("rd").getOrElse("")

  val xx: Int = (1: Byte)

  // Problem with implicits over or types
  def useOrd[T: math.Ordering](xs: T*) = ()
  useOrd(Some(1), None)

}
-----
ScalaFile
  ScClass: X
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('X')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: elem
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('elem')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('y')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            ReferenceExpression: y.length
              ReferenceExpression: y
                PsiElement(identifier)('y')
              PsiElement(.)('.')
              PsiElement(identifier)('length')
            PsiWhiteSpace(' ')
            ReferenceExpression: +
              PsiElement(identifier)('+')
            PsiWhiteSpace(' ')
            ReferenceExpression: elem
              PsiElement(identifier)('elem')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: X
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('X')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: BarDeco
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('BarDeco')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: bar
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('bar')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('"!"')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Implicits
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Implicits')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: impl
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: impl
              PsiElement(identifier)('impl')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: X
            CodeReferenceElement: X
              PsiElement(identifier)('X')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: X
                    CodeReferenceElement: X
                      PsiElement(identifier)('X')
                  ArgumentList
                    PsiElement(()('(')
                    IntegerLiteral
                      PsiElement(integer)('0')
                    PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: conv
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('conv')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: X
            CodeReferenceElement: X
              PsiElement(identifier)('X')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: X
                    CodeReferenceElement: X
                      PsiElement(identifier)('X')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScClass: Xdecorator
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Xdecorator')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Object
                  CodeReferenceElement: Object
                    PsiElement(identifier)('Object')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: cond
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('cond')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  ReferenceExpression: cond
                    PsiElement(identifier)('cond')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: x.foo
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                      PsiElement(.)('.')
                      PsiElement(identifier)('foo')
                    ArgumentList
                      PsiElement(()('(')
                      StringLiteral
                        PsiElement(string content)('"abc"')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('0')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: XDecorator
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('XDecorator')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: X
                    CodeReferenceElement: X
                      PsiElement(identifier)('X')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Xdecorator
            CodeReferenceElement: Xdecorator
              PsiElement(identifier)('Xdecorator')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: Xdecorator
                    CodeReferenceElement: Xdecorator
                      PsiElement(identifier)('Xdecorator')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: a
              PsiElement(identifier)('a')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Object
            CodeReferenceElement: Object
              PsiElement(identifier)('Object')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"abc"')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: b
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: b
              PsiElement(identifier)('b')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Any
            CodeReferenceElement: Any
              PsiElement(identifier)('Any')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"abc"')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('y')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: X
                    CodeReferenceElement: X
                      PsiElement(identifier)('X')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: y
                  PsiElement(identifier)('y')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y
              PsiElement(identifier)('y')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: foo
              PsiElement(identifier)('foo')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: z
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: z
              PsiElement(identifier)('z')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: X
            CodeReferenceElement: X
              PsiElement(identifier)('X')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('3')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: c
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: c
              PsiElement(identifier)('c')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: y.elem
            ReferenceExpression: y
              PsiElement(identifier)('y')
            PsiElement(.)('.')
            PsiElement(identifier)('elem')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: d
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: d
              PsiElement(identifier)('d')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: z.foo
              ReferenceExpression: z
                PsiElement(identifier)('z')
              PsiElement(.)('.')
              PsiElement(identifier)('foo')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"abc"')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: X
            CodeReferenceElement: X
              PsiElement(identifier)('X')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: Byte.MinValue
            ReferenceExpression: Byte
              PsiElement(identifier)('Byte')
            PsiElement(.)('.')
            PsiElement(identifier)('MinValue')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('//import X.BarDeco')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: println
            PsiElement(identifier)('println')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: z.bar
              ReferenceExpression: z
                PsiElement(identifier)('z')
              PsiElement(.)('.')
              PsiElement(identifier)('bar')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: e
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: e
              PsiElement(identifier)('e')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: z.foo
              ReferenceExpression: z
                PsiElement(identifier)('z')
              PsiElement(.)('.')
              PsiElement(identifier)('foo')
            ArgumentList
              PsiElement(()('(')
              BooleanLiteral
                PsiElement(true)('true')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// Haoyi Li's example on scala-user:')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Modifier
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Modifier')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: stringNode
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('stringNode')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: v
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('v')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Modifier
            CodeReferenceElement: Modifier
              PsiElement(identifier)('Modifier')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: Modifier
                    CodeReferenceElement: Modifier
                      PsiElement(identifier)('Modifier')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: s
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s
              PsiElement(identifier)('s')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Modifier
            CodeReferenceElement: Modifier
              PsiElement(identifier)('Modifier')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Some("rd").getOrElse
              MethodCall
                ReferenceExpression: Some
                  PsiElement(identifier)('Some')
                ArgumentList
                  PsiElement(()('(')
                  StringLiteral
                    PsiElement(string content)('"rd"')
                  PsiElement())(')')
              PsiElement(.)('.')
              PsiElement(identifier)('getOrElse')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('""')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: xx
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xx
              PsiElement(identifier)('xx')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ExpressionInParenthesis
            PsiElement(()('(')
            TypedExpression
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Byte
                CodeReferenceElement: Byte
                  PsiElement(identifier)('Byte')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: useOrd
          PsiComment(comment)('// Problem with implicits over or types')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('useOrd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: math.Ordering
                CodeReferenceElement: math.Ordering
                  CodeReferenceElement: math
                    PsiElement(identifier)('math')
                  PsiElement(.)('.')
                  PsiElement(identifier)('Ordering')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiElement(identifier)('*')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: useOrd
            PsiElement(identifier)('useOrd')
          ArgumentList
            PsiElement(()('(')
            MethodCall
              ReferenceExpression: Some
                PsiElement(identifier)('Some')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('1')
                PsiElement())(')')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            ReferenceExpression: None
              PsiElement(identifier)('None')
            PsiElement())(')')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
