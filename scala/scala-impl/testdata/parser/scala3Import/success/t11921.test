object t1:
  class C
  class A:
    val c: B.c.type = B.c
  object B:
    val c = new C
    val a = new A:
      def m = c    // not ambiguous, `this.c` and `B.c` are compatible paths

object t2:
  class C[T]:
    type TT = T
  object O:
    type TT = String
    class D extends C[TT]:
      def n(x: TT) = x  // `TT` is not ambiguous, `this.TT` and `O.TT` are aliases
-----
ScalaFile
  ScObject: t1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('t1')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScClass: C
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScClass: A
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: c
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: c
                    PsiElement(identifier)('c')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: B.c.type
                  CodeReferenceElement: B.c
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                    PsiElement(.)('.')
                    PsiElement(identifier)('c')
                  PsiElement(.)('.')
                  PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: B.c
                  ReferenceExpression: B
                    PsiElement(identifier)('B')
                  PsiElement(.)('.')
                  PsiElement(identifier)('c')
        PsiWhiteSpace('\n  ')
        ScObject: B
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('B')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: c
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: c
                    PsiElement(identifier)('c')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: C
                          CodeReferenceElement: C
                            PsiElement(identifier)('C')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: a
                    PsiElement(identifier)('a')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    ScTemplateBody
                      PsiElement(:)(':')
                      PsiWhiteSpace('\n      ')
                      ScFunctionDefinition: m
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(def)('def')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('m')
                        Parameters
                          <empty list>
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: c
                          PsiElement(identifier)('c')
  PsiWhiteSpace('    ')
  PsiComment(comment)('// not ambiguous, `this.c` and `B.c` are compatible paths')
  PsiWhiteSpace('\n\n')
  ScObject: t2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('t2')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScClass: C
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: TT
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('TT')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
        PsiWhiteSpace('\n  ')
        ScObject: O
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('O')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: TT
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('TT')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
              PsiWhiteSpace('\n    ')
              ScClass: D
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('D')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    <empty list>
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: C[TT]
                        SimpleType: C
                          CodeReferenceElement: C
                            PsiElement(identifier)('C')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: TT
                            CodeReferenceElement: TT
                              PsiElement(identifier)('TT')
                          PsiElement(])(']')
                  ScTemplateBody
                    PsiElement(:)(':')
                    PsiWhiteSpace('\n      ')
                    ScFunctionDefinition: n
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('n')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: x
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('x')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: TT
                                CodeReferenceElement: TT
                                  PsiElement(identifier)('TT')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
  PsiWhiteSpace('  ')
  PsiComment(comment)('// `TT` is not ambiguous, `this.TT` and `O.TT` are aliases')
