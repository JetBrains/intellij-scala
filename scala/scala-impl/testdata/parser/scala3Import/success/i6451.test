object Test {

  type YZ = [Y[_]] =>> [Z[_]] =>> [T] =>> Y[Z[T]]

  val r1: List[List[Int]] = ???
  def r2(): List[List[Int]] = ???

  val l1: YZ[List][List][Int] = r1
  val l2: YZ[List][List][Int] = r2()
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: YZ
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('YZ')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          TypeLambda: [Y[_]] =>> [Z[_]] =>> [T] =>> Y[Z[T]]
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: Y
                PsiElement(identifier)('Y')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>>)('=>>')
            PsiWhiteSpace(' ')
            TypeLambda: [Z[_]] =>> [T] =>> Y[Z[T]]
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: Z
                  PsiElement(identifier)('Z')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: _
                      PsiElement(_)('_')
                    PsiElement(])(']')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=>>)('=>>')
              PsiWhiteSpace(' ')
              TypeLambda: [T] =>> Y[Z[T]]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: Y[Z[T]]
                  SimpleType: Y
                    CodeReferenceElement: Y
                      PsiElement(identifier)('Y')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: Z[T]
                      SimpleType: Z
                        CodeReferenceElement: Z
                          PsiElement(identifier)('Z')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiElement(])(']')
                    PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: r1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: r1
              PsiElement(identifier)('r1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[List[Int]]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[Int]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: r2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('r2')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[List[Int]]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[Int]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: l1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: l1
              PsiElement(identifier)('l1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: YZ[List][List][Int]
            ParametrizedType: YZ[List][List]
              ParametrizedType: YZ[List]
                SimpleType: YZ
                  CodeReferenceElement: YZ
                    PsiElement(identifier)('YZ')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  PsiElement(])(']')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                PsiElement(])(']')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: r1
            PsiElement(identifier)('r1')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: l2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: l2
              PsiElement(identifier)('l2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: YZ[List][List][Int]
            ParametrizedType: YZ[List][List]
              ParametrizedType: YZ[List]
                SimpleType: YZ
                  CodeReferenceElement: YZ
                    PsiElement(identifier)('YZ')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  PsiElement(])(']')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                PsiElement(])(']')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: r2
              PsiElement(identifier)('r2')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
