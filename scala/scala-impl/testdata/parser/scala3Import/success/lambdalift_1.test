import scala._;

object test {

  def f(x: Int) = {
    def g() = h();
    def h() = x;
    g();
    class inner() {
      def g() = h();
      def h() = x;
    }
    g() + new inner().g();
  }
}
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala
        PsiElement(identifier)('scala')
      PsiElement(.)('.')
      PsiElement(_)('_')
  PsiElement(;)(';')
  PsiWhiteSpace('\n\n')
  ScObject: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: g
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('g')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: h
                  PsiElement(identifier)('h')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
            PsiElement(;)(';')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: h
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('h')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
            PsiElement(;)(';')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: g
                PsiElement(identifier)('g')
              ArgumentList
                PsiElement(()('(')
                PsiElement())(')')
            PsiElement(;)(';')
            PsiWhiteSpace('\n    ')
            ScClass: inner
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('inner')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              ExtendsBlock
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  ScFunctionDefinition: g
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('g')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: h
                        PsiElement(identifier)('h')
                      ArgumentList
                        PsiElement(()('(')
                        PsiElement())(')')
                  PsiElement(;)(';')
                  PsiWhiteSpace('\n      ')
                  ScFunctionDefinition: h
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('h')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                  PsiElement(;)(';')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n    ')
            InfixExpression
              MethodCall
                ReferenceExpression: g
                  PsiElement(identifier)('g')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              ReferenceExpression: +
                PsiElement(identifier)('+')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: new inner().g
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: inner
                            CodeReferenceElement: inner
                              PsiElement(identifier)('inner')
                          ArgumentList
                            PsiElement(()('(')
                            PsiElement())(')')
                  PsiElement(.)('.')
                  PsiElement(identifier)('g')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
            PsiElement(;)(';')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
