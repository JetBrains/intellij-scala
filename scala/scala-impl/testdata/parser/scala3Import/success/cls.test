import scala._;

package scalac.util {

class A[X1, X2](x1: X1, x2: X2) {}
class B[Y](y1: Y, y2: Y) extends A[Y, Y](y1, y2) {
  def f(x: Y, xs: B[Y]): Unit = {}
  def g() = f(y1, this);
}

object test {
  val b: B[Int] = new B[Int](1, 2);
  val a: A[Int, Int] = b;
  val a1 = new A(1, "hello");
  val b1 = new B(1, "hello");
}
}
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala
        PsiElement(identifier)('scala')
      PsiElement(.)('.')
      PsiElement(_)('_')
  PsiElement(;)(';')
  PsiWhiteSpace('\n\n')
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: scalac.util
      CodeReferenceElement: scalac
        PsiElement(identifier)('scalac')
      PsiElement(.)('.')
      PsiElement(identifier)('util')
    PsiWhiteSpace(' ')
    PsiElement({)('{')
    PsiWhiteSpace('\n\n')
    ScClass: A
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('A')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: X1
          PsiElement(identifier)('X1')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        TypeParameter: X2
          PsiElement(identifier)('X2')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          ParametersClause
            PsiElement(()('(')
            ClassParameter: x1
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('x1')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: X1
                  CodeReferenceElement: X1
                    PsiElement(identifier)('X1')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            ClassParameter: x2
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('x2')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: X2
                  CodeReferenceElement: X2
                    PsiElement(identifier)('X2')
            PsiElement())(')')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    ScClass: B
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('B')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: Y
          PsiElement(identifier)('Y')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          ParametersClause
            PsiElement(()('(')
            ClassParameter: y1
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('y1')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Y
                  CodeReferenceElement: Y
                    PsiElement(identifier)('Y')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            ClassParameter: y2
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('y2')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Y
                  CodeReferenceElement: Y
                    PsiElement(identifier)('Y')
            PsiElement())(')')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            ParametrizedType: A[Y, Y]
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Y
                  CodeReferenceElement: Y
                    PsiElement(identifier)('Y')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: Y
                  CodeReferenceElement: Y
                    PsiElement(identifier)('Y')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: y1
                PsiElement(identifier)('y1')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: y2
                PsiElement(identifier)('y2')
              PsiElement())(')')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: f
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('f')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Y
                      CodeReferenceElement: Y
                        PsiElement(identifier)('Y')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                Parameter: xs
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('xs')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: B[Y]
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: Y
                          CodeReferenceElement: Y
                            PsiElement(identifier)('Y')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: g
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('g')
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: f
                PsiElement(identifier)('f')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: y1
                  PsiElement(identifier)('y1')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ThisReference
                  PsiElement(this)('this')
                PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScObject: test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('test')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: b
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: b
                PsiElement(identifier)('b')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: B[Int]
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: B[Int]
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                        PsiElement(])(']')
                    ArgumentList
                      PsiElement(()('(')
                      IntegerLiteral
                        PsiElement(integer)('1')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('2')
                      PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: a
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: a
                PsiElement(identifier)('a')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: A[Int, Int]
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: b
              PsiElement(identifier)('b')
          PsiElement(;)(';')
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: a1
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: a1
                PsiElement(identifier)('a1')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    ArgumentList
                      PsiElement(()('(')
                      IntegerLiteral
                        PsiElement(integer)('1')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      StringLiteral
                        PsiElement(string content)('"hello"')
                      PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: b1
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: b1
                PsiElement(identifier)('b1')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    ArgumentList
                      PsiElement(()('(')
                      IntegerLiteral
                        PsiElement(integer)('1')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      StringLiteral
                        PsiElement(string content)('"hello"')
                      PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
