trait Value {}
case class FloatValue(x: Double) extends Value
object Test {
  def applyNumeric(op: (Double, Double) => Double):
    PartialFunction[List[Value], Value] = {
    case List(FloatValue(x), FloatValue(y)) => FloatValue(op(x, y))
  }
}
-----
ScalaFile
  ScTrait: Value
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Value')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: FloatValue
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('FloatValue')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Double
                CodeReferenceElement: Double
                  PsiElement(identifier)('Double')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Value
            CodeReferenceElement: Value
              PsiElement(identifier)('Value')
  PsiWhiteSpace('\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: applyNumeric
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('applyNumeric')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: op
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('op')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: (Double, Double) => Double
                    TupleType: (Double, Double)
                      PsiElement(()('(')
                      TypesList
                        SimpleType: Double
                          CodeReferenceElement: Double
                            PsiElement(identifier)('Double')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: Double
                          CodeReferenceElement: Double
                            PsiElement(identifier)('Double')
                      PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: Double
                      CodeReferenceElement: Double
                        PsiElement(identifier)('Double')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace('\n    ')
          ParametrizedType: PartialFunction[List[Value], Value]
            SimpleType: PartialFunction
              CodeReferenceElement: PartialFunction
                PsiElement(identifier)('PartialFunction')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[Value]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Value
                    CodeReferenceElement: Value
                      PsiElement(identifier)('Value')
                  PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Value
                CodeReferenceElement: Value
                  PsiElement(identifier)('Value')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                  Pattern Argument List
                    PsiElement(()('(')
                    ConstructorPattern
                      CodeReferenceElement: FloatValue
                        PsiElement(identifier)('FloatValue')
                      Pattern Argument List
                        PsiElement(()('(')
                        ReferencePattern: x
                          PsiElement(identifier)('x')
                        PsiElement())(')')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ConstructorPattern
                      CodeReferenceElement: FloatValue
                        PsiElement(identifier)('FloatValue')
                      Pattern Argument List
                        PsiElement(()('(')
                        ReferencePattern: y
                          PsiElement(identifier)('y')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: FloatValue
                      PsiElement(identifier)('FloatValue')
                    ArgumentList
                      PsiElement(()('(')
                      MethodCall
                        ReferenceExpression: op
                          PsiElement(identifier)('op')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: y
                            PsiElement(identifier)('y')
                          PsiElement())(')')
                      PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
