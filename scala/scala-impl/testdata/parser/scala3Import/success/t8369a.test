object Bug {
  trait Sys[S]
  def test[S <: Sys[S]] = read[S]()
  def read[S <: Sys[S]](baz: Any = 0): Some[S] = ???
}
-----
ScalaFile
  ScObject: Bug
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bug')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: Sys
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Sys')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: S
              PsiElement(identifier)('S')
            PsiElement(])(']')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: S
              PsiElement(identifier)('S')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: Sys[S]
                SimpleType: Sys
                  CodeReferenceElement: Sys
                    PsiElement(identifier)('Sys')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: S
                    CodeReferenceElement: S
                      PsiElement(identifier)('S')
                  PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            GenericCall
              ReferenceExpression: read
                PsiElement(identifier)('read')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: S
                  CodeReferenceElement: S
                    PsiElement(identifier)('S')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: read
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('read')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: S
              PsiElement(identifier)('S')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: Sys[S]
                SimpleType: Sys
                  CodeReferenceElement: Sys
                    PsiElement(identifier)('Sys')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: S
                    CodeReferenceElement: S
                      PsiElement(identifier)('S')
                  PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: baz
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('baz')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Any
                    CodeReferenceElement: Any
                      PsiElement(identifier)('Any')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IntegerLiteral
                  PsiElement(integer)('0')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Some[S]
            SimpleType: Some
              CodeReferenceElement: Some
                PsiElement(identifier)('Some')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: S
                CodeReferenceElement: S
                  PsiElement(identifier)('S')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
