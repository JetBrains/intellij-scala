// Derived from the CI failure in compiling TreeUnpickler.scala
class Foo
class Bar extends Foo:
  type Self >: this.type <: Bar
  final def meth(): Self = this

class Test:
  def test(cond: Boolean, bar: Bar): Foo =
    val res = bar
    if cond then
      res.meth()
    else
      res
-----
ScalaFile
  ScClass: Foo
    PsiComment(comment)('// Derived from the CI failure in compiling TreeUnpickler.scala')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScClass: Bar
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bar')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Foo
            CodeReferenceElement: Foo
              PsiElement(identifier)('Foo')
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Self
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Self')
          PsiWhiteSpace(' ')
          PsiElement(>:)('>:')
          PsiWhiteSpace(' ')
          SimpleType: this.type
            ThisReference
              PsiElement(this)('this')
            PsiElement(.)('.')
            PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: Bar
            CodeReferenceElement: Bar
              PsiElement(identifier)('Bar')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: meth
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(final)('final')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('meth')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Self
            CodeReferenceElement: Self
              PsiElement(identifier)('Self')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ThisReference
            PsiElement(this)('this')
  PsiWhiteSpace('\n\n')
  ScClass: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: cond
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('cond')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: bar
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('bar')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Bar
                    CodeReferenceElement: Bar
                      PsiElement(identifier)('Bar')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Foo
            CodeReferenceElement: Foo
              PsiElement(identifier)('Foo')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: res
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: res
                  PsiElement(identifier)('res')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: bar
                PsiElement(identifier)('bar')
            PsiWhiteSpace('\n    ')
            IfStatement
              PsiElement(if)('if')
              PsiWhiteSpace(' ')
              ReferenceExpression: cond
                PsiElement(identifier)('cond')
              PsiWhiteSpace(' ')
              PsiElement(then)('then')
              PsiWhiteSpace('\n      ')
              MethodCall
                ReferenceExpression: res.meth
                  ReferenceExpression: res
                    PsiElement(identifier)('res')
                  PsiElement(.)('.')
                  PsiElement(identifier)('meth')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
              PsiWhiteSpace('\n    ')
              PsiElement(else)('else')
              PsiWhiteSpace('\n      ')
              ReferenceExpression: res
                PsiElement(identifier)('res')
