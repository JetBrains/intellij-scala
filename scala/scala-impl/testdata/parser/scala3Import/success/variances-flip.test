trait Foo[-A, +B, -C, +D] {
  private[this] def b: B = ???
  private[this] def d: D = ???

  def f(p1: B => A, p2: D => C) = g(p1(b), p2(d))
  def g(x: A, y: C) = ((b, d))
}
-----
ScalaFile
  ScTrait: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('-')
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('+')
        PsiElement(identifier)('B')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: C
        PsiElement(identifier)('-')
        PsiElement(identifier)('C')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: D
        PsiElement(identifier)('+')
        PsiElement(identifier)('D')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: b
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
              PsiElement([)('[')
              PsiElement(this)('this')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('b')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: B
            CodeReferenceElement: B
              PsiElement(identifier)('B')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: d
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
              PsiElement([)('[')
              PsiElement(this)('this')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('d')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: D
            CodeReferenceElement: D
              PsiElement(identifier)('D')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: p1
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('p1')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: B => A
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: p2
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('p2')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: D => C
                    SimpleType: D
                      CodeReferenceElement: D
                        PsiElement(identifier)('D')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: C
                      CodeReferenceElement: C
                        PsiElement(identifier)('C')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: g
              PsiElement(identifier)('g')
            ArgumentList
              PsiElement(()('(')
              MethodCall
                ReferenceExpression: p1
                  PsiElement(identifier)('p1')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: b
                    PsiElement(identifier)('b')
                  PsiElement())(')')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: p2
                  PsiElement(identifier)('p2')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: d
                    PsiElement(identifier)('d')
                  PsiElement())(')')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: g
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('g')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('y')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: C
                    CodeReferenceElement: C
                      PsiElement(identifier)('C')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ExpressionInParenthesis
            PsiElement(()('(')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: b
                PsiElement(identifier)('b')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: d
                PsiElement(identifier)('d')
              PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
