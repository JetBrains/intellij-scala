trait A {
  class B
}
abstract class Test2 { val a: A; val b: a.B }
object Test2 {
  def unapply(that: Test2): Option[(that.a.type, that.a.B)] = Some((that.a, that.b))
}
object anA extends A
object Test extends App {
  val t: Test2 { val a: anA.type; val b: anA.B } = new Test2 { val a: anA.type = anA; val b = new a.B }
  t match {
    case Test2(u, v) =>
      u: A
      u: t.a.type // error
      v: t.a.B // error
  }
}
object Test1 extends App {
  object t extends Test2 { val a = anA; val b = new a.B }
  t match {
    case Test2(u, v) =>
      u: A
      u: t.a.type // error
      v: t.a.B // error
  }
}
-----
ScalaFile
  ScTrait: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: B
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('B')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: Test2
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(abstract)('abstract')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test2')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ScValueDeclaration: a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: a
              PsiElement(identifier)('a')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
        PsiElement(;)(';')
        PsiWhiteSpace(' ')
        ScValueDeclaration: b
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: b
              PsiElement(identifier)('b')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: a.B
            CodeReferenceElement: a.B
              CodeReferenceElement: a
                PsiElement(identifier)('a')
              PsiElement(.)('.')
              PsiElement(identifier)('B')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: Test2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: unapply
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('unapply')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: that
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('that')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Test2
                    CodeReferenceElement: Test2
                      PsiElement(identifier)('Test2')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Option[(that.a.type, that.a.B)]
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            TypeArgumentsList
              PsiElement([)('[')
              TupleType: (that.a.type, that.a.B)
                PsiElement(()('(')
                TypesList
                  SimpleType: that.a.type
                    CodeReferenceElement: that.a
                      CodeReferenceElement: that
                        PsiElement(identifier)('that')
                      PsiElement(.)('.')
                      PsiElement(identifier)('a')
                    PsiElement(.)('.')
                    PsiElement(type)('type')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: that.a.B
                    CodeReferenceElement: that.a.B
                      CodeReferenceElement: that.a
                        CodeReferenceElement: that
                          PsiElement(identifier)('that')
                        PsiElement(.)('.')
                        PsiElement(identifier)('a')
                      PsiElement(.)('.')
                      PsiElement(identifier)('B')
                PsiElement())(')')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Some
              PsiElement(identifier)('Some')
            ArgumentList
              PsiElement(()('(')
              Tuple
                PsiElement(()('(')
                ReferenceExpression: that.a
                  ReferenceExpression: that
                    PsiElement(identifier)('that')
                  PsiElement(.)('.')
                  PsiElement(identifier)('a')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ReferenceExpression: that.b
                  ReferenceExpression: that
                    PsiElement(identifier)('that')
                  PsiElement(.)('.')
                  PsiElement(identifier)('b')
                PsiElement())(')')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: anA
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('anA')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
  PsiWhiteSpace('\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: App
            CodeReferenceElement: App
              PsiElement(identifier)('App')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: t
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: t
              PsiElement(identifier)('t')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          CompoundType: Test2 { val a: anA.type; val b: anA.B }
            SimpleType: Test2
              CodeReferenceElement: Test2
                PsiElement(identifier)('Test2')
            PsiWhiteSpace(' ')
            Refinement
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScValueDeclaration: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfIdentifiers
                  Field identifier: a
                    PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: anA.type
                  CodeReferenceElement: anA
                    PsiElement(identifier)('anA')
                  PsiElement(.)('.')
                  PsiElement(type)('type')
              PsiElement(;)(';')
              PsiWhiteSpace(' ')
              ScValueDeclaration: b
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfIdentifiers
                  Field identifier: b
                    PsiElement(identifier)('b')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: anA.B
                  CodeReferenceElement: anA.B
                    CodeReferenceElement: anA
                      PsiElement(identifier)('anA')
                    PsiElement(.)('.')
                    PsiElement(identifier)('B')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: Test2
                    CodeReferenceElement: Test2
                      PsiElement(identifier)('Test2')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace(' ')
                ScPatternDefinition: a
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: a
                      PsiElement(identifier)('a')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: anA.type
                    CodeReferenceElement: anA
                      PsiElement(identifier)('anA')
                    PsiElement(.)('.')
                    PsiElement(type)('type')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: anA
                    PsiElement(identifier)('anA')
                PsiElement(;)(';')
                PsiWhiteSpace(' ')
                ScPatternDefinition: b
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: b
                      PsiElement(identifier)('b')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: a.B
                            CodeReferenceElement: a.B
                              CodeReferenceElement: a
                                PsiElement(identifier)('a')
                              PsiElement(.)('.')
                              PsiElement(identifier)('B')
                PsiWhiteSpace(' ')
                PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        MatchStatement
          ReferenceExpression: t
            PsiElement(identifier)('t')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              ConstructorPattern
                CodeReferenceElement: Test2
                  PsiElement(identifier)('Test2')
                Pattern Argument List
                  PsiElement(()('(')
                  ReferencePattern: u
                    PsiElement(identifier)('u')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferencePattern: v
                    PsiElement(identifier)('v')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace('\n      ')
              BlockOfExpressions
                TypedExpression
                  ReferenceExpression: u
                    PsiElement(identifier)('u')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                PsiWhiteSpace('\n      ')
                TypedExpression
                  ReferenceExpression: u
                    PsiElement(identifier)('u')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: t.a.type
                    CodeReferenceElement: t.a
                      CodeReferenceElement: t
                        PsiElement(identifier)('t')
                      PsiElement(.)('.')
                      PsiElement(identifier)('a')
                    PsiElement(.)('.')
                    PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiComment(comment)('// error')
                PsiWhiteSpace('\n      ')
                TypedExpression
                  ReferenceExpression: v
                    PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: t.a.B
                    CodeReferenceElement: t.a.B
                      CodeReferenceElement: t.a
                        CodeReferenceElement: t
                          PsiElement(identifier)('t')
                        PsiElement(.)('.')
                        PsiElement(identifier)('a')
                      PsiElement(.)('.')
                      PsiElement(identifier)('B')
          PsiWhiteSpace(' ')
          PsiComment(comment)('// error')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: Test1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test1')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: App
            CodeReferenceElement: App
              PsiElement(identifier)('App')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScObject: t
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('t')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Test2
                  CodeReferenceElement: Test2
                    PsiElement(identifier)('Test2')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScPatternDefinition: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: a
                    PsiElement(identifier)('a')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: anA
                  PsiElement(identifier)('anA')
              PsiElement(;)(';')
              PsiWhiteSpace(' ')
              ScPatternDefinition: b
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: b
                    PsiElement(identifier)('b')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: a.B
                          CodeReferenceElement: a.B
                            CodeReferenceElement: a
                              PsiElement(identifier)('a')
                            PsiElement(.)('.')
                            PsiElement(identifier)('B')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        MatchStatement
          ReferenceExpression: t
            PsiElement(identifier)('t')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              ConstructorPattern
                CodeReferenceElement: Test2
                  PsiElement(identifier)('Test2')
                Pattern Argument List
                  PsiElement(()('(')
                  ReferencePattern: u
                    PsiElement(identifier)('u')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferencePattern: v
                    PsiElement(identifier)('v')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace('\n      ')
              BlockOfExpressions
                TypedExpression
                  ReferenceExpression: u
                    PsiElement(identifier)('u')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                PsiWhiteSpace('\n      ')
                TypedExpression
                  ReferenceExpression: u
                    PsiElement(identifier)('u')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: t.a.type
                    CodeReferenceElement: t.a
                      CodeReferenceElement: t
                        PsiElement(identifier)('t')
                      PsiElement(.)('.')
                      PsiElement(identifier)('a')
                    PsiElement(.)('.')
                    PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiComment(comment)('// error')
                PsiWhiteSpace('\n      ')
                TypedExpression
                  ReferenceExpression: v
                    PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: t.a.B
                    CodeReferenceElement: t.a.B
                      CodeReferenceElement: t.a
                        CodeReferenceElement: t
                          PsiElement(identifier)('t')
                        PsiElement(.)('.')
                        PsiElement(identifier)('a')
                      PsiElement(.)('.')
                      PsiElement(identifier)('B')
          PsiWhiteSpace(' ')
          PsiComment(comment)('// error')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
