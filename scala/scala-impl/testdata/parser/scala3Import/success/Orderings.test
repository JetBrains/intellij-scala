object Orderings {

  // A type class:
  trait Ord[T] { def less(x: T, y: T): Boolean }

  implicit val intOrd: Ord[Int] = new {
    def less(x: Int, y: Int) = x < y
  }

  implicit def listOrd[T](implicit ev: Ord[T]): Ord[List[T]] = new {
    def less(xs: List[T], ys: List[T]): Boolean =
      if ys.isEmpty then false
      else if xs.isEmpty then true
      else if xs.head == ys.head then less(xs.tail, ys.tail)
      else ev.less(xs.head, ys.head)
  }

  def isLess[T]: T => T => Ord[T] ?=> Boolean =
    x => y => implicitly[Ord[T]].less(x, y)
}
-----
ScalaFile
  ScObject: Orderings
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Orderings')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Ord
          PsiComment(comment)('// A type class:')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Ord')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScFunctionDeclaration: less
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('less')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: y
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('y')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Boolean
                  CodeReferenceElement: Boolean
                    PsiElement(identifier)('Boolean')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: intOrd
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: intOrd
              PsiElement(identifier)('intOrd')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Ord[Int]
            SimpleType: Ord
              CodeReferenceElement: Ord
                PsiElement(identifier)('Ord')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: less
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('less')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: x
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('x')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: y
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('y')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: <
                      PsiElement(identifier)('<')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: listOrd
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('listOrd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: ev
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('ev')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Ord[T]
                    SimpleType: Ord
                      CodeReferenceElement: Ord
                        PsiElement(identifier)('Ord')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Ord[List[T]]
            SimpleType: Ord
              CodeReferenceElement: Ord
                PsiElement(identifier)('Ord')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[T]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: less
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('less')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: xs
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('xs')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: List[T]
                            SimpleType: List
                              CodeReferenceElement: List
                                PsiElement(identifier)('List')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: T
                                CodeReferenceElement: T
                                  PsiElement(identifier)('T')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: ys
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('ys')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: List[T]
                            SimpleType: List
                              CodeReferenceElement: List
                                PsiElement(identifier)('List')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: T
                                CodeReferenceElement: T
                                  PsiElement(identifier)('T')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace('\n      ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ys.isEmpty
                      ReferenceExpression: ys
                        PsiElement(identifier)('ys')
                      PsiElement(.)('.')
                      PsiElement(identifier)('isEmpty')
                    PsiWhiteSpace(' ')
                    PsiElement(then)('then')
                    PsiWhiteSpace(' ')
                    BooleanLiteral
                      PsiElement(false)('false')
                    PsiWhiteSpace('\n      ')
                    PsiElement(else)('else')
                    PsiWhiteSpace(' ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: xs.isEmpty
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('isEmpty')
                      PsiWhiteSpace(' ')
                      PsiElement(then)('then')
                      PsiWhiteSpace(' ')
                      BooleanLiteral
                        PsiElement(true)('true')
                      PsiWhiteSpace('\n      ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        InfixExpression
                          ReferenceExpression: xs.head
                            ReferenceExpression: xs
                              PsiElement(identifier)('xs')
                            PsiElement(.)('.')
                            PsiElement(identifier)('head')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: ==
                            PsiElement(identifier)('==')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: ys.head
                            ReferenceExpression: ys
                              PsiElement(identifier)('ys')
                            PsiElement(.)('.')
                            PsiElement(identifier)('head')
                        PsiWhiteSpace(' ')
                        PsiElement(then)('then')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: less
                            PsiElement(identifier)('less')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: xs.tail
                              ReferenceExpression: xs
                                PsiElement(identifier)('xs')
                              PsiElement(.)('.')
                              PsiElement(identifier)('tail')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: ys.tail
                              ReferenceExpression: ys
                                PsiElement(identifier)('ys')
                              PsiElement(.)('.')
                              PsiElement(identifier)('tail')
                            PsiElement())(')')
                        PsiWhiteSpace('\n      ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: ev.less
                            ReferenceExpression: ev
                              PsiElement(identifier)('ev')
                            PsiElement(.)('.')
                            PsiElement(identifier)('less')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: xs.head
                              ReferenceExpression: xs
                                PsiElement(identifier)('xs')
                              PsiElement(.)('.')
                              PsiElement(identifier)('head')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: ys.head
                              ReferenceExpression: ys
                                PsiElement(identifier)('ys')
                              PsiElement(.)('.')
                              PsiElement(identifier)('head')
                            PsiElement())(')')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: isLess
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('isLess')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          FunctionalType: T => T => Ord[T] ?=> Boolean
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            FunctionalType: T => Ord[T] ?=> Boolean
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              FunctionalType: Ord[T] ?=> Boolean
                ParametrizedType: Ord[T]
                  SimpleType: Ord
                    CodeReferenceElement: Ord
                      PsiElement(identifier)('Ord')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(?=>)('?=>')
                PsiWhiteSpace(' ')
                SimpleType: Boolean
                  CodeReferenceElement: Boolean
                    PsiElement(identifier)('Boolean')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          FunctionExpression
            Parameters
              ParametersClause
                Parameter: x
                  PsiElement(identifier)('x')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            FunctionExpression
              Parameters
                ParametersClause
                  Parameter: y
                    PsiElement(identifier)('y')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: implicitly[Ord[T]].less
                  GenericCall
                    ReferenceExpression: implicitly
                      PsiElement(identifier)('implicitly')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Ord[T]
                        SimpleType: Ord
                          CodeReferenceElement: Ord
                            PsiElement(identifier)('Ord')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiElement(.)('.')
                  PsiElement(identifier)('less')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: y
                    PsiElement(identifier)('y')
                  PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
