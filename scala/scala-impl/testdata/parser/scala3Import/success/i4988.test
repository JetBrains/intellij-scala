object Trees {
  class PackageDef
  class ValDef
}

class ReplCompiler {
  type PackageDef = Trees.PackageDef
  type ValDef = Trees.ValDef

  def errors[A]: A = ???
  def success: ValDef = ???

  def typeCheck(cond: Boolean): ValDef =
    if (cond) success else errors // failure goes away with `errors[ValDef]`
}
-----
ScalaFile
  ScObject: Trees
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Trees')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: PackageDef
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('PackageDef')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScClass: ValDef
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ValDef')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: ReplCompiler
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ReplCompiler')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: PackageDef
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('PackageDef')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: Trees.PackageDef
            CodeReferenceElement: Trees.PackageDef
              CodeReferenceElement: Trees
                PsiElement(identifier)('Trees')
              PsiElement(.)('.')
              PsiElement(identifier)('PackageDef')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: ValDef
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ValDef')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: Trees.ValDef
            CodeReferenceElement: Trees.ValDef
              CodeReferenceElement: Trees
                PsiElement(identifier)('Trees')
              PsiElement(.)('.')
              PsiElement(identifier)('ValDef')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: errors
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('errors')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: success
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('success')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: ValDef
            CodeReferenceElement: ValDef
              PsiElement(identifier)('ValDef')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: typeCheck
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('typeCheck')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: cond
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('cond')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: ValDef
            CodeReferenceElement: ValDef
              PsiElement(identifier)('ValDef')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          IfStatement
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            PsiElement(()('(')
            ReferenceExpression: cond
              PsiElement(identifier)('cond')
            PsiElement())(')')
            PsiWhiteSpace(' ')
            ReferenceExpression: success
              PsiElement(identifier)('success')
            PsiWhiteSpace(' ')
            PsiElement(else)('else')
            PsiWhiteSpace(' ')
            ReferenceExpression: errors
              PsiElement(identifier)('errors')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// failure goes away with `errors[ValDef]`')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
