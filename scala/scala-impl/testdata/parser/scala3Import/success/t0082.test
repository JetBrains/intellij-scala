
object Main {

    def min0[A](less: (A, A) => Boolean, xs: List[A]): Option[A] = xs match {
        case List()  => None
        case List(x) => Some(x)
        case y :: ys => (min0(less, ys): @unchecked) match {
            case Some(m) => if (less(y, m)) Some(y) else Some(m)
        }
    }

    def min(xs: List[Int]) = min0((x: Int, y: Int) => x < y, xs);

    def main(args: Array[String]) =
        Console.println(min(List()));

}
-----
ScalaFile
  ScObject: Main
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Main')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n    ')
        ScFunctionDefinition: min0
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('min0')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: less
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('less')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: (A, A) => Boolean
                    TupleType: (A, A)
                      PsiElement(()('(')
                      TypesList
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                      PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: Boolean
                      CodeReferenceElement: Boolean
                        PsiElement(identifier)('Boolean')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[A]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Option[A]
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: xs
              PsiElement(identifier)('xs')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n        ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                  Pattern Argument List
                    PsiElement(()('(')
                    PsiElement())(')')
                PsiWhiteSpace('  ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: None
                    PsiElement(identifier)('None')
              PsiWhiteSpace('\n        ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: x
                      PsiElement(identifier)('x')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: Some
                      PsiElement(identifier)('Some')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                      PsiElement())(')')
              PsiWhiteSpace('\n        ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                InfixPattern
                  ReferencePattern: y
                    PsiElement(identifier)('y')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: ::
                    PsiElement(identifier)('::')
                  PsiWhiteSpace(' ')
                  ReferencePattern: ys
                    PsiElement(identifier)('ys')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MatchStatement
                    ExpressionInParenthesis
                      PsiElement(()('(')
                      TypedExpression
                        MethodCall
                          ReferenceExpression: min0
                            PsiElement(identifier)('min0')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: less
                              PsiElement(identifier)('less')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: ys
                              PsiElement(identifier)('ys')
                            PsiElement())(')')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        AnnotationsList
                          Annotation
                            PsiElement(@)('@')
                            AnnotationExpression
                              ConstructorInvocation
                                SimpleType: unchecked
                                  CodeReferenceElement: unchecked
                                    PsiElement(identifier)('unchecked')
                      PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(match)('match')
                    PsiWhiteSpace(' ')
                    PsiElement({)('{')
                    PsiWhiteSpace('\n            ')
                    CaseClauses
                      CaseClause
                        PsiElement(case)('case')
                        PsiWhiteSpace(' ')
                        ConstructorPattern
                          CodeReferenceElement: Some
                            PsiElement(identifier)('Some')
                          Pattern Argument List
                            PsiElement(()('(')
                            ReferencePattern: m
                              PsiElement(identifier)('m')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        BlockOfExpressions
                          IfStatement
                            PsiElement(if)('if')
                            PsiWhiteSpace(' ')
                            PsiElement(()('(')
                            MethodCall
                              ReferenceExpression: less
                                PsiElement(identifier)('less')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: y
                                  PsiElement(identifier)('y')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: m
                                  PsiElement(identifier)('m')
                                PsiElement())(')')
                            PsiElement())(')')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: Some
                                PsiElement(identifier)('Some')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: y
                                  PsiElement(identifier)('y')
                                PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(else)('else')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: Some
                                PsiElement(identifier)('Some')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: m
                                  PsiElement(identifier)('m')
                                PsiElement())(')')
                    PsiWhiteSpace('\n        ')
                    PsiElement(})('}')
            PsiWhiteSpace('\n    ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n    ')
        ScFunctionDefinition: min
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('min')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[Int]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: min0
              PsiElement(identifier)('min0')
            ArgumentList
              PsiElement(()('(')
              FunctionExpression
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: y
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('y')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                InfixExpression
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: <
                    PsiElement(identifier)('<')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: y
                    PsiElement(identifier)('y')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: xs
                PsiElement(identifier)('xs')
              PsiElement())(')')
        PsiElement(;)(';')
        PsiWhiteSpace('\n\n    ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[String]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          BlockExpression
            PsiWhiteSpace('\n        ')
            MethodCall
              ReferenceExpression: Console.println
                ReferenceExpression: Console
                  PsiElement(identifier)('Console')
                PsiElement(.)('.')
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: min
                    PsiElement(identifier)('min')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: List
                        PsiElement(identifier)('List')
                      ArgumentList
                        PsiElement(()('(')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiElement())(')')
            PsiElement(;)(';')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
