class Test {
  Option(3) match { case Some(n) => n; case None => 0 }
}
-----
ScalaFile
  ScClass: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        MatchStatement
          MethodCall
            ReferenceExpression: Option
              PsiElement(identifier)('Option')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('3')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace(' ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              ConstructorPattern
                CodeReferenceElement: Some
                  PsiElement(identifier)('Some')
                Pattern Argument List
                  PsiElement(()('(')
                  ReferencePattern: n
                    PsiElement(identifier)('n')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                ReferenceExpression: n
                  PsiElement(identifier)('n')
                PsiElement(;)(';')
            PsiWhiteSpace(' ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              StableElementPattern
                ReferenceExpression: None
                  PsiElement(identifier)('None')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                IntegerLiteral
                  PsiElement(integer)('0')
          PsiWhiteSpace(' ')
          PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
