trait TC[F[_]]

object TC {
  def check[F[_], A](x: F[A])(implicit F: TC[F]): Unit = ()
}

case class Foo[+E, +A](value: A)

object Foo {
  type WithList[+E, +A] = Foo[List[E], A]

  implicit def instance[E]: TC[[x] =>> Foo[E, x]] =
    new TC[[x] =>> Foo[E, x]] {}
}

val x1: Foo[List[String], Int] = Foo(1)
val x2: Foo.WithList[String, Int] = Foo(1)

def test =
  TC.check(x1)
  TC.check(x2)
-----
ScalaFile
  ScTrait: TC
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TC')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: TC
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TC')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: check
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('check')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: F[A]
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: TC[F]
                    SimpleType: TC
                      CodeReferenceElement: TC
                        PsiElement(identifier)('TC')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: E
        PsiElement(identifier)('+')
        PsiElement(identifier)('E')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: A
        PsiElement(identifier)('+')
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: value
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('value')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: WithList
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('WithList')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: E
              PsiElement(identifier)('+')
              PsiElement(identifier)('E')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('+')
              PsiElement(identifier)('A')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: Foo[List[E], A]
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[E]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: E
                    CodeReferenceElement: E
                      PsiElement(identifier)('E')
                  PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: instance
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('instance')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: E
              PsiElement(identifier)('E')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: TC[[x] =>> Foo[E, x]]
            SimpleType: TC
              CodeReferenceElement: TC
                PsiElement(identifier)('TC')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [x] =>> Foo[E, x]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: x
                    PsiElement(identifier)('x')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: Foo[E, x]
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: x
                      CodeReferenceElement: x
                        PsiElement(identifier)('x')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: TC[[x] =>> Foo[E, x]]
                    SimpleType: TC
                      CodeReferenceElement: TC
                        PsiElement(identifier)('TC')
                    TypeArgumentsList
                      PsiElement([)('[')
                      TypeLambda: [x] =>> Foo[E, x]
                        TypeParameterClause
                          PsiElement([)('[')
                          TypeParameter: x
                            PsiElement(identifier)('x')
                          PsiElement(])(']')
                        PsiWhiteSpace(' ')
                        PsiElement(=>>)('=>>')
                        PsiWhiteSpace(' ')
                        ParametrizedType: Foo[E, x]
                          SimpleType: Foo
                            CodeReferenceElement: Foo
                              PsiElement(identifier)('Foo')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: E
                              CodeReferenceElement: E
                                PsiElement(identifier)('E')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: x
                              CodeReferenceElement: x
                                PsiElement(identifier)('x')
                            PsiElement(])(']')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: x1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: x1
        PsiElement(identifier)('x1')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: Foo[List[String], Int]
      SimpleType: Foo
        CodeReferenceElement: Foo
          PsiElement(identifier)('Foo')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: List[String]
          SimpleType: List
            CodeReferenceElement: List
              PsiElement(identifier)('List')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
            PsiElement(])(']')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        SimpleType: Int
          CodeReferenceElement: Int
            PsiElement(identifier)('Int')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: Foo
        PsiElement(identifier)('Foo')
      ArgumentList
        PsiElement(()('(')
        IntegerLiteral
          PsiElement(integer)('1')
        PsiElement())(')')
  PsiWhiteSpace('\n')
  ScPatternDefinition: x2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: x2
        PsiElement(identifier)('x2')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: Foo.WithList[String, Int]
      SimpleType: Foo.WithList
        CodeReferenceElement: Foo.WithList
          CodeReferenceElement: Foo
            PsiElement(identifier)('Foo')
          PsiElement(.)('.')
          PsiElement(identifier)('WithList')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: String
          CodeReferenceElement: String
            PsiElement(identifier)('String')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        SimpleType: Int
          CodeReferenceElement: Int
            PsiElement(identifier)('Int')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: Foo
        PsiElement(identifier)('Foo')
      ArgumentList
        PsiElement(()('(')
        IntegerLiteral
          PsiElement(integer)('1')
        PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    BlockExpression
      PsiWhiteSpace('\n  ')
      MethodCall
        ReferenceExpression: TC.check
          ReferenceExpression: TC
            PsiElement(identifier)('TC')
          PsiElement(.)('.')
          PsiElement(identifier)('check')
        ArgumentList
          PsiElement(()('(')
          ReferenceExpression: x1
            PsiElement(identifier)('x1')
          PsiElement())(')')
      PsiWhiteSpace('\n  ')
      MethodCall
        ReferenceExpression: TC.check
          ReferenceExpression: TC
            PsiElement(identifier)('TC')
          PsiElement(.)('.')
          PsiElement(identifier)('check')
        ArgumentList
          PsiElement(()('(')
          ReferenceExpression: x2
            PsiElement(identifier)('x2')
          PsiElement())(')')
