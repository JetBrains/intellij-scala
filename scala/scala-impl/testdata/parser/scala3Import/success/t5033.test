trait Eater {
  type Food[T]
}

trait Fruit {
  type Seed
}

trait PipExtractor {
  def extract(a: Fruit)(b: Eater): b.Food[a.Seed]
}

trait LaserGuidedPipExtractor extends PipExtractor {
  def extract(f: Fruit)(g: Eater): g.Food[f.Seed]
}
-----
ScalaFile
  ScTrait: Eater
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Eater')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Food
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Food')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: Fruit
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Fruit')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Seed
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Seed')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: PipExtractor
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('PipExtractor')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: extract
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('extract')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Fruit
                    CodeReferenceElement: Fruit
                      PsiElement(identifier)('Fruit')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              Parameter: b
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('b')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Eater
                    CodeReferenceElement: Eater
                      PsiElement(identifier)('Eater')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: b.Food[a.Seed]
            SimpleType: b.Food
              CodeReferenceElement: b.Food
                CodeReferenceElement: b
                  PsiElement(identifier)('b')
                PsiElement(.)('.')
                PsiElement(identifier)('Food')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: a.Seed
                CodeReferenceElement: a.Seed
                  CodeReferenceElement: a
                    PsiElement(identifier)('a')
                  PsiElement(.)('.')
                  PsiElement(identifier)('Seed')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: LaserGuidedPipExtractor
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('LaserGuidedPipExtractor')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: PipExtractor
            CodeReferenceElement: PipExtractor
              PsiElement(identifier)('PipExtractor')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: extract
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('extract')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Fruit
                    CodeReferenceElement: Fruit
                      PsiElement(identifier)('Fruit')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              Parameter: g
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('g')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Eater
                    CodeReferenceElement: Eater
                      PsiElement(identifier)('Eater')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: g.Food[f.Seed]
            SimpleType: g.Food
              CodeReferenceElement: g.Food
                CodeReferenceElement: g
                  PsiElement(identifier)('g')
                PsiElement(.)('.')
                PsiElement(identifier)('Food')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: f.Seed
                CodeReferenceElement: f.Seed
                  CodeReferenceElement: f
                    PsiElement(identifier)('f')
                  PsiElement(.)('.')
                  PsiElement(identifier)('Seed')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
