trait Monoid[A]
trait Semigroup[A]
trait Applicative[F[_]]

trait OptionT[F[_], A]
trait EitherT[F[_], A, B]
trait IorT[F[_], A, B]
trait WriterT[F[_], L, V]
trait Kleisli[F[_], A, B]

final class ApplicativeIdOps[A](private val a: A) extends AnyVal {
  def pure[F[_]](implicit F: Applicative[F]): F[A] = ???
}

object ApplicativeSyntax {
  implicit final def syntaxApplicativeId[A](a: A): ApplicativeIdOps[A] = new ApplicativeIdOps[A](a)
}

trait Sync[F[_]]

object Sync {
  implicit def syncForOptionT[F[_]](implicit F0: Sync[F]): Sync[[X] =>> OptionT[F, X]] = ???
  implicit def syncForEitherT[F[_], E](implicit F0: Sync[F]): Sync[[X] =>> EitherT[F, E, X]] = ???
  implicit def syncForIorT[F[_], L](implicit F0: Sync[F], L0: Semigroup[L]): Sync[[X] =>> IorT[F, L, X]] = ???
  implicit def syncForWriterT[F[_], L](implicit F0: Sync[F], L0: Monoid[L]): Sync[[X] =>> WriterT[F, L, X]] = ???
  implicit def syncForKleisli[F[_], R](implicit F0: Sync[F]): Sync[[X] =>> Kleisli[F, R, X]] = ???
}

trait Async[F[_]] extends Sync[F]

object Async {
  implicit def asyncForOptionT[F[_]](implicit F0: Async[F]): Async[[X] =>> OptionT[F, X]] = ???
  implicit def asyncForEitherT[F[_], E](implicit F0: Async[F]): Async[[X] =>> EitherT[F, E, X]] = ???
  implicit def asyncForIorT[F[_], L](implicit F0: Async[F], L0: Semigroup[L]): Async[[X] =>> IorT[F, L, X]] = ???
  implicit def asyncForWriterT[F[_], L](implicit F0: Async[F], L0: Monoid[L]): Async[[X] =>> WriterT[F, L, X]] = ???
  implicit def asyncForKleisli[F[_], R](implicit F0: Async[F]): Async[[X] =>> Kleisli[F, R, X]] = ???
}

trait Concurrent[F[_], E] extends Applicative[F]

trait Ref[F[_], A]

object Ref {
  trait Make[F[_]]
  object Make extends MakeInstances

  trait MakeInstances extends MakeLowPriorityInstances {
    implicit def concurrentInstance[F[_]](implicit F: Concurrent[F, _]): Make[F] = ???
  }

  trait MakeLowPriorityInstances {
    implicit def syncInstance[F[_]](implicit F: Sync[F]): Make[F] = ???
  }

  def of[F[_], A](a: A)(implicit mk: Make[F]): F[Ref[F, A]] = ???
}


class Resource[F[_], A] {
  import ApplicativeSyntax.*

  implicit def asyncForResource[F[_]](implicit F0: Async[F]): Async[[X] =>> Resource[F, X]] = ???

  def parZip(implicit F: Concurrent[F, Throwable]) = {
    Ref.of /*[F, (F[Unit], F[Unit])]*/ (().pure[F] -> ().pure[F])
    ()
  }
}
-----
ScalaFile
  ScTrait: Monoid
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Monoid')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScTrait: Semigroup
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Semigroup')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScTrait: Applicative
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Applicative')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScTrait: OptionT
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('OptionT')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScTrait: EitherT
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('EitherT')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScTrait: IorT
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('IorT')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScTrait: WriterT
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('WriterT')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: L
        PsiElement(identifier)('L')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: V
        PsiElement(identifier)('V')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScTrait: Kleisli
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Kleisli')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScClass: ApplicativeIdOps
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ApplicativeIdOps')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: a
            AnnotationsList
              <empty list>
            Modifiers
              AccessModifier
                PsiElement(private)('private')
            PsiWhiteSpace(' ')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('a')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: AnyVal
            CodeReferenceElement: AnyVal
              PsiElement(identifier)('AnyVal')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: pure
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('pure')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Applicative[F]
                    SimpleType: Applicative
                      CodeReferenceElement: Applicative
                        PsiElement(identifier)('Applicative')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: F[A]
            SimpleType: F
              CodeReferenceElement: F
                PsiElement(identifier)('F')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: ApplicativeSyntax
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ApplicativeSyntax')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: syntaxApplicativeId
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
            PsiWhiteSpace(' ')
            PsiElement(final)('final')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('syntaxApplicativeId')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: ApplicativeIdOps[A]
            SimpleType: ApplicativeIdOps
              CodeReferenceElement: ApplicativeIdOps
                PsiElement(identifier)('ApplicativeIdOps')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: ApplicativeIdOps[A]
                    SimpleType: ApplicativeIdOps
                      CodeReferenceElement: ApplicativeIdOps
                        PsiElement(identifier)('ApplicativeIdOps')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: a
                      PsiElement(identifier)('a')
                    PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: Sync
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Sync')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: Sync
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Sync')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: syncForOptionT
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('syncForOptionT')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Sync[F]
                    SimpleType: Sync
                      CodeReferenceElement: Sync
                        PsiElement(identifier)('Sync')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Sync[[X] =>> OptionT[F, X]]
            SimpleType: Sync
              CodeReferenceElement: Sync
                PsiElement(identifier)('Sync')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> OptionT[F, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: OptionT[F, X]
                  SimpleType: OptionT
                    CodeReferenceElement: OptionT
                      PsiElement(identifier)('OptionT')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: syncForEitherT
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('syncForEitherT')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: E
              PsiElement(identifier)('E')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Sync[F]
                    SimpleType: Sync
                      CodeReferenceElement: Sync
                        PsiElement(identifier)('Sync')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Sync[[X] =>> EitherT[F, E, X]]
            SimpleType: Sync
              CodeReferenceElement: Sync
                PsiElement(identifier)('Sync')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> EitherT[F, E, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: EitherT[F, E, X]
                  SimpleType: EitherT
                    CodeReferenceElement: EitherT
                      PsiElement(identifier)('EitherT')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: syncForIorT
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('syncForIorT')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: L
              PsiElement(identifier)('L')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Sync[F]
                    SimpleType: Sync
                      CodeReferenceElement: Sync
                        PsiElement(identifier)('Sync')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: L0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('L0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Semigroup[L]
                    SimpleType: Semigroup
                      CodeReferenceElement: Semigroup
                        PsiElement(identifier)('Semigroup')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: L
                        CodeReferenceElement: L
                          PsiElement(identifier)('L')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Sync[[X] =>> IorT[F, L, X]]
            SimpleType: Sync
              CodeReferenceElement: Sync
                PsiElement(identifier)('Sync')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> IorT[F, L, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: IorT[F, L, X]
                  SimpleType: IorT
                    CodeReferenceElement: IorT
                      PsiElement(identifier)('IorT')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: L
                      CodeReferenceElement: L
                        PsiElement(identifier)('L')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: syncForWriterT
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('syncForWriterT')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: L
              PsiElement(identifier)('L')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Sync[F]
                    SimpleType: Sync
                      CodeReferenceElement: Sync
                        PsiElement(identifier)('Sync')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: L0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('L0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Monoid[L]
                    SimpleType: Monoid
                      CodeReferenceElement: Monoid
                        PsiElement(identifier)('Monoid')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: L
                        CodeReferenceElement: L
                          PsiElement(identifier)('L')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Sync[[X] =>> WriterT[F, L, X]]
            SimpleType: Sync
              CodeReferenceElement: Sync
                PsiElement(identifier)('Sync')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> WriterT[F, L, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: WriterT[F, L, X]
                  SimpleType: WriterT
                    CodeReferenceElement: WriterT
                      PsiElement(identifier)('WriterT')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: L
                      CodeReferenceElement: L
                        PsiElement(identifier)('L')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: syncForKleisli
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('syncForKleisli')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: R
              PsiElement(identifier)('R')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Sync[F]
                    SimpleType: Sync
                      CodeReferenceElement: Sync
                        PsiElement(identifier)('Sync')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Sync[[X] =>> Kleisli[F, R, X]]
            SimpleType: Sync
              CodeReferenceElement: Sync
                PsiElement(identifier)('Sync')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> Kleisli[F, R, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: Kleisli[F, R, X]
                  SimpleType: Kleisli
                    CodeReferenceElement: Kleisli
                      PsiElement(identifier)('Kleisli')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: R
                      CodeReferenceElement: R
                        PsiElement(identifier)('R')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: Async
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Async')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Sync[F]
            SimpleType: Sync
              CodeReferenceElement: Sync
                PsiElement(identifier)('Sync')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: F
                CodeReferenceElement: F
                  PsiElement(identifier)('F')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScObject: Async
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Async')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asyncForOptionT
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asyncForOptionT')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Async[F]
                    SimpleType: Async
                      CodeReferenceElement: Async
                        PsiElement(identifier)('Async')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Async[[X] =>> OptionT[F, X]]
            SimpleType: Async
              CodeReferenceElement: Async
                PsiElement(identifier)('Async')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> OptionT[F, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: OptionT[F, X]
                  SimpleType: OptionT
                    CodeReferenceElement: OptionT
                      PsiElement(identifier)('OptionT')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asyncForEitherT
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asyncForEitherT')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: E
              PsiElement(identifier)('E')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Async[F]
                    SimpleType: Async
                      CodeReferenceElement: Async
                        PsiElement(identifier)('Async')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Async[[X] =>> EitherT[F, E, X]]
            SimpleType: Async
              CodeReferenceElement: Async
                PsiElement(identifier)('Async')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> EitherT[F, E, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: EitherT[F, E, X]
                  SimpleType: EitherT
                    CodeReferenceElement: EitherT
                      PsiElement(identifier)('EitherT')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asyncForIorT
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asyncForIorT')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: L
              PsiElement(identifier)('L')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Async[F]
                    SimpleType: Async
                      CodeReferenceElement: Async
                        PsiElement(identifier)('Async')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: L0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('L0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Semigroup[L]
                    SimpleType: Semigroup
                      CodeReferenceElement: Semigroup
                        PsiElement(identifier)('Semigroup')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: L
                        CodeReferenceElement: L
                          PsiElement(identifier)('L')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Async[[X] =>> IorT[F, L, X]]
            SimpleType: Async
              CodeReferenceElement: Async
                PsiElement(identifier)('Async')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> IorT[F, L, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: IorT[F, L, X]
                  SimpleType: IorT
                    CodeReferenceElement: IorT
                      PsiElement(identifier)('IorT')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: L
                      CodeReferenceElement: L
                        PsiElement(identifier)('L')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asyncForWriterT
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asyncForWriterT')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: L
              PsiElement(identifier)('L')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Async[F]
                    SimpleType: Async
                      CodeReferenceElement: Async
                        PsiElement(identifier)('Async')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: L0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('L0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Monoid[L]
                    SimpleType: Monoid
                      CodeReferenceElement: Monoid
                        PsiElement(identifier)('Monoid')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: L
                        CodeReferenceElement: L
                          PsiElement(identifier)('L')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Async[[X] =>> WriterT[F, L, X]]
            SimpleType: Async
              CodeReferenceElement: Async
                PsiElement(identifier)('Async')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> WriterT[F, L, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: WriterT[F, L, X]
                  SimpleType: WriterT
                    CodeReferenceElement: WriterT
                      PsiElement(identifier)('WriterT')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: L
                      CodeReferenceElement: L
                        PsiElement(identifier)('L')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asyncForKleisli
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asyncForKleisli')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: R
              PsiElement(identifier)('R')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Async[F]
                    SimpleType: Async
                      CodeReferenceElement: Async
                        PsiElement(identifier)('Async')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Async[[X] =>> Kleisli[F, R, X]]
            SimpleType: Async
              CodeReferenceElement: Async
                PsiElement(identifier)('Async')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> Kleisli[F, R, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: Kleisli[F, R, X]
                  SimpleType: Kleisli
                    CodeReferenceElement: Kleisli
                      PsiElement(identifier)('Kleisli')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: R
                      CodeReferenceElement: R
                        PsiElement(identifier)('R')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: Concurrent
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Concurrent')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: E
        PsiElement(identifier)('E')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Applicative[F]
            SimpleType: Applicative
              CodeReferenceElement: Applicative
                PsiElement(identifier)('Applicative')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: F
                CodeReferenceElement: F
                  PsiElement(identifier)('F')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScTrait: Ref
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Ref')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: Ref
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Ref')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: Make
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Make')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScObject: Make
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Make')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: MakeInstances
                  CodeReferenceElement: MakeInstances
                    PsiElement(identifier)('MakeInstances')
        PsiWhiteSpace('\n\n  ')
        ScTrait: MakeInstances
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('MakeInstances')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: MakeLowPriorityInstances
                  CodeReferenceElement: MakeLowPriorityInstances
                    PsiElement(identifier)('MakeLowPriorityInstances')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: concurrentInstance
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(implicit)('implicit')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('concurrentInstance')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: F
                    PsiElement(identifier)('F')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: F
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('F')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Concurrent[F, _]
                          SimpleType: Concurrent
                            CodeReferenceElement: Concurrent
                              PsiElement(identifier)('Concurrent')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: F
                              CodeReferenceElement: F
                                PsiElement(identifier)('F')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            WildcardType: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Make[F]
                  SimpleType: Make
                    CodeReferenceElement: Make
                      PsiElement(identifier)('Make')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScTrait: MakeLowPriorityInstances
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('MakeLowPriorityInstances')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: syncInstance
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(implicit)('implicit')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('syncInstance')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: F
                    PsiElement(identifier)('F')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: F
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('F')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Sync[F]
                          SimpleType: Sync
                            CodeReferenceElement: Sync
                              PsiElement(identifier)('Sync')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: F
                              CodeReferenceElement: F
                                PsiElement(identifier)('F')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Make[F]
                  SimpleType: Make
                    CodeReferenceElement: Make
                      PsiElement(identifier)('Make')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: of
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('of')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: mk
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('mk')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Make[F]
                    SimpleType: Make
                      CodeReferenceElement: Make
                        PsiElement(identifier)('Make')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: F[Ref[F, A]]
            SimpleType: F
              CodeReferenceElement: F
                PsiElement(identifier)('F')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Ref[F, A]
                SimpleType: Ref
                  CodeReferenceElement: Ref
                    PsiElement(identifier)('Ref')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n\n')
  ScClass: Resource
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Resource')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: ApplicativeSyntax
              PsiElement(identifier)('ApplicativeSyntax')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: asyncForResource
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asyncForResource')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F0
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F0')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Async[F]
                    SimpleType: Async
                      CodeReferenceElement: Async
                        PsiElement(identifier)('Async')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Async[[X] =>> Resource[F, X]]
            SimpleType: Async
              CodeReferenceElement: Async
                PsiElement(identifier)('Async')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [X] =>> Resource[F, X]
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                ParametrizedType: Resource[F, X]
                  SimpleType: Resource
                    CodeReferenceElement: Resource
                      PsiElement(identifier)('Resource')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: parZip
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('parZip')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: F
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('F')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Concurrent[F, Throwable]
                    SimpleType: Concurrent
                      CodeReferenceElement: Concurrent
                        PsiElement(identifier)('Concurrent')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Throwable
                        CodeReferenceElement: Throwable
                          PsiElement(identifier)('Throwable')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: Ref.of
                ReferenceExpression: Ref
                  PsiElement(identifier)('Ref')
                PsiElement(.)('.')
                PsiElement(identifier)('of')
              PsiWhiteSpace(' ')
              PsiComment(BlockComment)('/*[F, (F[Unit], F[Unit])]*/')
              PsiWhiteSpace(' ')
              ArgumentList
                PsiElement(()('(')
                InfixExpression
                  GenericCall
                    ReferenceExpression: ().pure
                      UnitExpression
                        PsiElement(()('(')
                        PsiElement())(')')
                      PsiElement(.)('.')
                      PsiElement(identifier)('pure')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: ->
                    PsiElement(identifier)('->')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: ().pure
                      UnitExpression
                        PsiElement(()('(')
                        PsiElement())(')')
                      PsiElement(.)('.')
                      PsiElement(identifier)('pure')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            UnitExpression
              PsiElement(()('(')
              PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
