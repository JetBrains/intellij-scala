package collection

trait Seq[+A] extends SeqOps[A, Seq, Seq[A]]
trait SeqOps[+A, +CC[_], +C] extends Any

package immutable {
  trait Seq[+A] extends collection.Seq[A] with SeqOps[A, Seq, Seq[A]]
  trait SeqOps[+A, +CC[_], +C] extends collection.SeqOps[A, CC, C]
}

class StringOps extends collection.SeqOps[Char, immutable.Seq, String]
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: collection
      PsiElement(identifier)('collection')
    PsiWhiteSpace('\n\n')
    ScTrait: Seq
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Seq')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: A
          PsiElement(identifier)('+')
          PsiElement(identifier)('A')
        PsiElement(])(']')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            ParametrizedType: SeqOps[A, Seq, Seq[A]]
              SimpleType: SeqOps
                CodeReferenceElement: SeqOps
                  PsiElement(identifier)('SeqOps')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: Seq
                  CodeReferenceElement: Seq
                    PsiElement(identifier)('Seq')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ParametrizedType: Seq[A]
                  SimpleType: Seq
                    CodeReferenceElement: Seq
                      PsiElement(identifier)('Seq')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
                PsiElement(])(']')
    PsiWhiteSpace('\n')
    ScTrait: SeqOps
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('SeqOps')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: A
          PsiElement(identifier)('+')
          PsiElement(identifier)('A')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        TypeParameter: CC
          PsiElement(identifier)('+')
          PsiElement(identifier)('CC')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: _
              PsiElement(_)('_')
            PsiElement(])(']')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        TypeParameter: C
          PsiElement(identifier)('+')
          PsiElement(identifier)('C')
        PsiElement(])(']')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: Any
              CodeReferenceElement: Any
                PsiElement(identifier)('Any')
    PsiWhiteSpace('\n\n')
    ScPackaging
      PsiElement(package)('package')
      PsiWhiteSpace(' ')
      CodeReferenceElement: immutable
        PsiElement(identifier)('immutable')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      ScTrait: Seq
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(trait)('trait')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('Seq')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: A
            PsiElement(identifier)('+')
            PsiElement(identifier)('A')
          PsiElement(])(']')
        PsiWhiteSpace(' ')
        ExtendsBlock
          PsiElement(extends)('extends')
          PsiWhiteSpace(' ')
          TemplateParents
            ConstructorInvocation
              ParametrizedType: collection.Seq[A]
                SimpleType: collection.Seq
                  CodeReferenceElement: collection.Seq
                    CodeReferenceElement: collection
                      PsiElement(identifier)('collection')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Seq')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            ConstructorInvocation
              ParametrizedType: SeqOps[A, Seq, Seq[A]]
                SimpleType: SeqOps
                  CodeReferenceElement: SeqOps
                    PsiElement(identifier)('SeqOps')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Seq
                    CodeReferenceElement: Seq
                      PsiElement(identifier)('Seq')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Seq[A]
                    SimpleType: Seq
                      CodeReferenceElement: Seq
                        PsiElement(identifier)('Seq')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiElement(])(']')
      PsiWhiteSpace('\n  ')
      ScTrait: SeqOps
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(trait)('trait')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('SeqOps')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: A
            PsiElement(identifier)('+')
            PsiElement(identifier)('A')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          TypeParameter: CC
            PsiElement(identifier)('+')
            PsiElement(identifier)('CC')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          TypeParameter: C
            PsiElement(identifier)('+')
            PsiElement(identifier)('C')
          PsiElement(])(']')
        PsiWhiteSpace(' ')
        ExtendsBlock
          PsiElement(extends)('extends')
          PsiWhiteSpace(' ')
          TemplateParents
            ConstructorInvocation
              ParametrizedType: collection.SeqOps[A, CC, C]
                SimpleType: collection.SeqOps
                  CodeReferenceElement: collection.SeqOps
                    CodeReferenceElement: collection
                      PsiElement(identifier)('collection')
                    PsiElement(.)('.')
                    PsiElement(identifier)('SeqOps')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: CC
                    CodeReferenceElement: CC
                      PsiElement(identifier)('CC')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: C
                    CodeReferenceElement: C
                      PsiElement(identifier)('C')
                  PsiElement(])(']')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScClass: StringOps
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('StringOps')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            ParametrizedType: collection.SeqOps[Char, immutable.Seq, String]
              SimpleType: collection.SeqOps
                CodeReferenceElement: collection.SeqOps
                  CodeReferenceElement: collection
                    PsiElement(identifier)('collection')
                  PsiElement(.)('.')
                  PsiElement(identifier)('SeqOps')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Char
                  CodeReferenceElement: Char
                    PsiElement(identifier)('Char')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: immutable.Seq
                  CodeReferenceElement: immutable.Seq
                    CodeReferenceElement: immutable
                      PsiElement(identifier)('immutable')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Seq')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(])(']')
