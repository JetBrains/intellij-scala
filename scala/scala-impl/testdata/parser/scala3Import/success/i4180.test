object Test {
  def foo(s: Boolean, j: java.lang.Boolean) = {
    val a = s == j
    val b = j == s
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: s
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('s')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: j
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('j')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: java.lang.Boolean
                    CodeReferenceElement: java.lang.Boolean
                      CodeReferenceElement: java.lang
                        CodeReferenceElement: java
                          PsiElement(identifier)('java')
                        PsiElement(.)('.')
                        PsiElement(identifier)('lang')
                      PsiElement(.)('.')
                      PsiElement(identifier)('Boolean')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: a
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: a
                  PsiElement(identifier)('a')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              InfixExpression
                ReferenceExpression: s
                  PsiElement(identifier)('s')
                PsiWhiteSpace(' ')
                ReferenceExpression: ==
                  PsiElement(identifier)('==')
                PsiWhiteSpace(' ')
                ReferenceExpression: j
                  PsiElement(identifier)('j')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: b
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: b
                  PsiElement(identifier)('b')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              InfixExpression
                ReferenceExpression: j
                  PsiElement(identifier)('j')
                PsiWhiteSpace(' ')
                ReferenceExpression: ==
                  PsiElement(identifier)('==')
                PsiWhiteSpace(' ')
                ReferenceExpression: s
                  PsiElement(identifier)('s')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
