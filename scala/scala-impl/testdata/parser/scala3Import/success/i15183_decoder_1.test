import scala.deriving._

sealed trait Decoder[T]
object Decoder {
  given Decoder[Double] = ???

  inline given summonEmptyTuple[H]: Tuple.Map[EmptyTuple.type, Decoder] =
    EmptyTuple

  inline given summonTuple[H, T <: Tuple](using hd: Decoder[H], td: Tuple.Map[T, Decoder]): Tuple.Map[H *: T, Decoder] =
    hd *: td

  inline given derived[T](using m: Mirror.Of[T], d: Tuple.Map[m.MirroredElemTypes, Decoder]): Decoder[T] = ???
}
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.deriving
        CodeReferenceElement: scala
          PsiElement(identifier)('scala')
        PsiElement(.)('.')
        PsiElement(identifier)('deriving')
      PsiElement(.)('.')
      PsiElement(_)('_')
  PsiWhiteSpace('\n\n')
  ScTrait: Decoder
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(sealed)('sealed')
    PsiWhiteSpace(' ')
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Decoder')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScObject: Decoder
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Decoder')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScGivenAliasDefinition: given_Decoder_Double
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          ParametrizedType: Decoder[Double]
            SimpleType: Decoder
              CodeReferenceElement: Decoder
                PsiElement(identifier)('Decoder')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Double
                CodeReferenceElement: Double
                  PsiElement(identifier)('Double')
              PsiElement(])(']')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScGivenAliasDefinition: summonEmptyTuple
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('summonEmptyTuple')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: H
              PsiElement(identifier)('H')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Tuple.Map[EmptyTuple.type, Decoder]
            SimpleType: Tuple.Map
              CodeReferenceElement: Tuple.Map
                CodeReferenceElement: Tuple
                  PsiElement(identifier)('Tuple')
                PsiElement(.)('.')
                PsiElement(identifier)('Map')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: EmptyTuple.type
                CodeReferenceElement: EmptyTuple
                  PsiElement(identifier)('EmptyTuple')
                PsiElement(.)('.')
                PsiElement(type)('type')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Decoder
                CodeReferenceElement: Decoder
                  PsiElement(identifier)('Decoder')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          ReferenceExpression: EmptyTuple
            PsiElement(identifier)('EmptyTuple')
        PsiWhiteSpace('\n\n  ')
        ScGivenAliasDefinition: summonTuple
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('summonTuple')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: H
              PsiElement(identifier)('H')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: Tuple
                CodeReferenceElement: Tuple
                  PsiElement(identifier)('Tuple')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: hd
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('hd')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Decoder[H]
                    SimpleType: Decoder
                      CodeReferenceElement: Decoder
                        PsiElement(identifier)('Decoder')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: H
                        CodeReferenceElement: H
                          PsiElement(identifier)('H')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: td
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('td')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Tuple.Map[T, Decoder]
                    SimpleType: Tuple.Map
                      CodeReferenceElement: Tuple.Map
                        CodeReferenceElement: Tuple
                          PsiElement(identifier)('Tuple')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Map')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Decoder
                        CodeReferenceElement: Decoder
                          PsiElement(identifier)('Decoder')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Tuple.Map[H *: T, Decoder]
            SimpleType: Tuple.Map
              CodeReferenceElement: Tuple.Map
                CodeReferenceElement: Tuple
                  PsiElement(identifier)('Tuple')
                PsiElement(.)('.')
                PsiElement(identifier)('Map')
            TypeArgumentsList
              PsiElement([)('[')
              InfixType: H *: T
                SimpleType: H
                  CodeReferenceElement: H
                    PsiElement(identifier)('H')
                PsiWhiteSpace(' ')
                CodeReferenceElement: *:
                  PsiElement(identifier)('*:')
                PsiWhiteSpace(' ')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Decoder
                CodeReferenceElement: Decoder
                  PsiElement(identifier)('Decoder')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          InfixExpression
            ReferenceExpression: hd
              PsiElement(identifier)('hd')
            PsiWhiteSpace(' ')
            ReferenceExpression: *:
              PsiElement(identifier)('*:')
            PsiWhiteSpace(' ')
            ReferenceExpression: td
              PsiElement(identifier)('td')
        PsiWhiteSpace('\n\n  ')
        ScGivenAliasDefinition: derived
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('derived')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: m
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('m')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Mirror.Of[T]
                    SimpleType: Mirror.Of
                      CodeReferenceElement: Mirror.Of
                        CodeReferenceElement: Mirror
                          PsiElement(identifier)('Mirror')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Of')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: d
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('d')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Tuple.Map[m.MirroredElemTypes, Decoder]
                    SimpleType: Tuple.Map
                      CodeReferenceElement: Tuple.Map
                        CodeReferenceElement: Tuple
                          PsiElement(identifier)('Tuple')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Map')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: m.MirroredElemTypes
                        CodeReferenceElement: m.MirroredElemTypes
                          CodeReferenceElement: m
                            PsiElement(identifier)('m')
                          PsiElement(.)('.')
                          PsiElement(identifier)('MirroredElemTypes')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Decoder
                        CodeReferenceElement: Decoder
                          PsiElement(identifier)('Decoder')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Decoder[T]
            SimpleType: Decoder
              CodeReferenceElement: Decoder
                PsiElement(identifier)('Decoder')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
