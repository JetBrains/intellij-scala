object Test {
  val xs = List(1, 2, 3)

  xs match {
    case x :: xs1 => println(x); println(xs1)
    case Nil => println("none")
  }

  xs.length match {
    case 0 => println("0")
    case 1: Int => println("1")
    case 2 => println("2")
    case 3 => println("3")
    case 4 => println("4")
    case _ => println("something else")
  }

  (xs.length, xs) match {
    case (0, Nil) => println("1")
    case (_, Nil) => println("2")
    case (0, _)   => println("3")
    case (x, y)   => println("4")
  }

  xs match {
    case 0 :: Nil => println("1")
    case _ :: Nil => println("2")
    case 0 :: _   => println("3")
    case x :: y   => println("4")
  }

  (xs.length, xs) match {
    case (_, Nil) | (0, _) => println("1 or 2")
    case (x, y)   => println("4")
  }

  enum Option[+T] {
    case Some[T](value: T) extends Option[T]
    case None
  }
  import Option.*

  val x: Option[String] = Some("abc")

  x match {
    case Some(s) => println(s)
    case None => println("nothing")
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: xs
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xs
              PsiElement(identifier)('xs')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: List
              PsiElement(identifier)('List')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('2')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('3')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MatchStatement
          ReferenceExpression: xs
            PsiElement(identifier)('xs')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              InfixPattern
                ReferencePattern: x
                  PsiElement(identifier)('x')
                PsiWhiteSpace(' ')
                CodeReferenceElement: ::
                  PsiElement(identifier)('::')
                PsiWhiteSpace(' ')
                ReferencePattern: xs1
                  PsiElement(identifier)('xs1')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement())(')')
                PsiElement(;)(';')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: xs1
                      PsiElement(identifier)('xs1')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              StableElementPattern
                ReferenceExpression: Nil
                  PsiElement(identifier)('Nil')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"none"')
                    PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        MatchStatement
          ReferenceExpression: xs.length
            ReferenceExpression: xs
              PsiElement(identifier)('xs')
            PsiElement(.)('.')
            PsiElement(identifier)('length')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              LiteralPattern
                IntegerLiteral
                  PsiElement(integer)('0')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"0"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              Scala3 TypedPattern
                LiteralPattern
                  IntegerLiteral
                    PsiElement(integer)('1')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                TypePattern
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"1"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              LiteralPattern
                IntegerLiteral
                  PsiElement(integer)('2')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"2"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              LiteralPattern
                IntegerLiteral
                  PsiElement(integer)('3')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"3"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              LiteralPattern
                IntegerLiteral
                  PsiElement(integer)('4')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"4"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              WildcardPattern
                PsiElement(_)('_')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"something else"')
                    PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        MatchStatement
          Tuple
            PsiElement(()('(')
            ReferenceExpression: xs.length
              ReferenceExpression: xs
                PsiElement(identifier)('xs')
              PsiElement(.)('.')
              PsiElement(identifier)('length')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            ReferenceExpression: xs
              PsiElement(identifier)('xs')
            PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              TuplePattern
                PsiElement(()('(')
                ArgumentPatterns
                  LiteralPattern
                    IntegerLiteral
                      PsiElement(integer)('0')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  StableElementPattern
                    ReferenceExpression: Nil
                      PsiElement(identifier)('Nil')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"1"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              TuplePattern
                PsiElement(()('(')
                ArgumentPatterns
                  WildcardPattern
                    PsiElement(_)('_')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  StableElementPattern
                    ReferenceExpression: Nil
                      PsiElement(identifier)('Nil')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"2"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              TuplePattern
                PsiElement(()('(')
                ArgumentPatterns
                  LiteralPattern
                    IntegerLiteral
                      PsiElement(integer)('0')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  WildcardPattern
                    PsiElement(_)('_')
                PsiElement())(')')
              PsiWhiteSpace('   ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"3"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              TuplePattern
                PsiElement(()('(')
                ArgumentPatterns
                  ReferencePattern: x
                    PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferencePattern: y
                    PsiElement(identifier)('y')
                PsiElement())(')')
              PsiWhiteSpace('   ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"4"')
                    PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        MatchStatement
          ReferenceExpression: xs
            PsiElement(identifier)('xs')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              InfixPattern
                LiteralPattern
                  IntegerLiteral
                    PsiElement(integer)('0')
                PsiWhiteSpace(' ')
                CodeReferenceElement: ::
                  PsiElement(identifier)('::')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: Nil
                    PsiElement(identifier)('Nil')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"1"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              InfixPattern
                WildcardPattern
                  PsiElement(_)('_')
                PsiWhiteSpace(' ')
                CodeReferenceElement: ::
                  PsiElement(identifier)('::')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: Nil
                    PsiElement(identifier)('Nil')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"2"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              InfixPattern
                LiteralPattern
                  IntegerLiteral
                    PsiElement(integer)('0')
                PsiWhiteSpace(' ')
                CodeReferenceElement: ::
                  PsiElement(identifier)('::')
                PsiWhiteSpace(' ')
                WildcardPattern
                  PsiElement(_)('_')
              PsiWhiteSpace('   ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"3"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              InfixPattern
                ReferencePattern: x
                  PsiElement(identifier)('x')
                PsiWhiteSpace(' ')
                CodeReferenceElement: ::
                  PsiElement(identifier)('::')
                PsiWhiteSpace(' ')
                ReferencePattern: y
                  PsiElement(identifier)('y')
              PsiWhiteSpace('   ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"4"')
                    PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        MatchStatement
          Tuple
            PsiElement(()('(')
            ReferenceExpression: xs.length
              ReferenceExpression: xs
                PsiElement(identifier)('xs')
              PsiElement(.)('.')
              PsiElement(identifier)('length')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            ReferenceExpression: xs
              PsiElement(identifier)('xs')
            PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              CompositePattern
                TuplePattern
                  PsiElement(()('(')
                  ArgumentPatterns
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    StableElementPattern
                      ReferenceExpression: Nil
                        PsiElement(identifier)('Nil')
                  PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('|')
                PsiWhiteSpace(' ')
                TuplePattern
                  PsiElement(()('(')
                  ArgumentPatterns
                    LiteralPattern
                      IntegerLiteral
                        PsiElement(integer)('0')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    WildcardPattern
                      PsiElement(_)('_')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"1 or 2"')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              TuplePattern
                PsiElement(()('(')
                ArgumentPatterns
                  ReferencePattern: x
                    PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferencePattern: y
                    PsiElement(identifier)('y')
                PsiElement())(')')
              PsiWhiteSpace('   ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"4"')
                    PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScEnum: Option
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(enum)('enum')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Option')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('+')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScEnumCases: Some
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ScEnumClassCase: Some
                  PsiElement(identifier)('Some')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: T
                      PsiElement(identifier)('T')
                    PsiElement(])(']')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        ClassParameter: value
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('value')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                        PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    PsiElement(extends)('extends')
                    PsiWhiteSpace(' ')
                    TemplateParents
                      ConstructorInvocation
                        ParametrizedType: Option[T]
                          SimpleType: Option
                            CodeReferenceElement: Option
                              PsiElement(identifier)('Option')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
              PsiWhiteSpace('\n    ')
              ScEnumCases: None
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ScEnumSingletonCase: None
                  PsiElement(identifier)('None')
                  ExtendsBlock
                    <empty list>
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: Option
              PsiElement(identifier)('Option')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Option[String]
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Some
              PsiElement(identifier)('Some')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"abc"')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MatchStatement
          ReferenceExpression: x
            PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              ConstructorPattern
                CodeReferenceElement: Some
                  PsiElement(identifier)('Some')
                Pattern Argument List
                  PsiElement(()('(')
                  ReferencePattern: s
                    PsiElement(identifier)('s')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: s
                      PsiElement(identifier)('s')
                    PsiElement())(')')
            PsiWhiteSpace('\n    ')
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              StableElementPattern
                ReferenceExpression: None
                  PsiElement(identifier)('None')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"nothing"')
                    PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
