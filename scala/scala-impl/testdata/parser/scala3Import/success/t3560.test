trait Foo[X] { def foo : Map[String,Foo[X]] }
object T3560 { def f[T]() : Foo[T] = new Foo[T] { var foo = Map[String,Foo[T]]() } }
-----
ScalaFile
  ScTrait: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: X
        PsiElement(identifier)('X')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ScFunctionDeclaration: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Map[String,Foo[X]]
            SimpleType: Map
              CodeReferenceElement: Map
                PsiElement(identifier)('Map')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(,)(',')
              ParametrizedType: Foo[X]
                SimpleType: Foo
                  CodeReferenceElement: Foo
                    PsiElement(identifier)('Foo')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: X
                    CodeReferenceElement: X
                      PsiElement(identifier)('X')
                  PsiElement(])(']')
              PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: T3560
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('T3560')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Foo[T]
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Foo[T]
                    SimpleType: Foo
                      CodeReferenceElement: Foo
                        PsiElement(identifier)('Foo')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace(' ')
                ScVariableDefinition: foo
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(var)('var')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: foo
                      PsiElement(identifier)('foo')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    GenericCall
                      ReferenceExpression: Map
                        PsiElement(identifier)('Map')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: String
                          CodeReferenceElement: String
                            PsiElement(identifier)('String')
                        PsiElement(,)(',')
                        ParametrizedType: Foo[T]
                          SimpleType: Foo
                            CodeReferenceElement: Foo
                              PsiElement(identifier)('Foo')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
                        PsiElement(])(']')
                    ArgumentList
                      PsiElement(()('(')
                      PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(})('}')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
