class Common:

  trait Ord[T]:
    extension (x: T) def compareTo(y: T): Int
    extension (x: T) def < (y: T) = x.compareTo(y) < 0
    extension (x: T) def > (y: T) = x.compareTo(y) > 0

  trait Convertible[From, To]:
    extension (x: From) def convert: To

  trait SemiGroup[T]:
    extension (x: T) def combine(y: T): T

  trait Monoid[T] extends SemiGroup[T]:
    def unit: T

  trait Functor[F[_]]:
    extension [A](x: F[A]) def map[B](f: A => B): F[B]

  trait Monad[F[_]] extends Functor[F]:
    extension [A](x: F[A]) def flatMap[B](f: A => F[B]): F[B]
    extension [A](x: F[A]) def map[B](f: A => B) = x.flatMap(f `andThen` pure)

    def pure[A](x: A): F[A]
end Common

object Instances extends Common:

  given intOrd: Ord[Int] with
    extension (x: Int) def compareTo(y: Int) =
      if (x < y) -1 else if (x > y) +1 else 0

  given listOrd[T](using Ord[T]): Ord[List[T]] with
    extension (xs: List[T]) def compareTo(ys: List[T]): Int = (xs, ys) match
      case (Nil, Nil) => 0
      case (Nil, _) => -1
      case (_, Nil) => +1
      case (x :: xs1, y :: ys1) =>
        val fst = x.compareTo(y)
        if (fst != 0) fst else xs1.compareTo(ys1)
  end listOrd

  extension (xs: Seq[String])
    def longestStrings: Seq[String] =
      val maxLength = xs.map(_.length).max
      xs.filter(_.length == maxLength)

  extension [T](xs: List[T])
    def second = xs.tail.head
    def third = xs.tail.tail.head

  given listMonad: Monad[List] with
    extension [A](xs: List[A]) def flatMap[B](f: A => List[B]): List[B] =
      xs.flatMap(f)
    def pure[A](x: A): List[A] =
      List(x)

  given readerMonad[Ctx]: Monad[[X] =>> Ctx => X] with
    extension [A](r: Ctx => A) def flatMap[B](f: A => Ctx => B): Ctx => B =
      ctx => f(r(ctx))(ctx)
    def pure[A](x: A): Ctx => A =
      ctx => x

  def maximum[T](xs: List[T])(using Ord[T]): T =
    xs.reduceLeft((x, y) => if (x < y) y else x)

  def descending[T](using asc: Ord[T]): Ord[T] = new Ord[T]:
    extension (x: T) def compareTo(y: T) = asc.compareTo(y)(x)

  def minimum[T](xs: List[T])(using Ord[T]) =
    maximum(xs)(using descending)

  def test(): Unit =
    val xs = List(1, 2, 3)
    println(maximum(xs))
    println(maximum(xs)(using descending))
    println(maximum(xs)(using descending(using intOrd)))
    println(minimum(xs))

  case class Context(value: String)
  val c0: Context ?=> String = ctx ?=> ctx.value
  val c1: Context ?=> String = (ctx: Context) ?=> ctx.value

  class A
  class B
  val ab: (x: A, y: B) ?=> Int = (a: A, b: B) ?=> 22

  trait TastyAPI:
    type Symbol
    trait SymDeco:
      extension (sym: Symbol) def name: String
    given symDeco: SymDeco

  object TastyImpl extends TastyAPI:
    type Symbol = String
    given symDeco: SymDeco with
      extension (sym: Symbol) def name = sym

  class D[T]

  class C(using ctx: Context):
    def f() =
      locally {
        given Context = this.ctx
        println(summon[Context].value)
      }
      locally {
        lazy val ctx1 = this.ctx
        given Context = ctx1
        println(summon[Context].value)
      }
      locally {
        given d[T]: D[T]()
        println(summon[D[Int]])
      }
      locally {
        given (using Context): D[Int]()
        println(summon[D[Int]])
      }
  end C

  class Token(str: String)

  object Token:
    given StringToToken: Conversion[String, Token] with
      def apply(str: String): Token = new Token(str)

  val x: Token = "if"
end Instances

object PostConditions:
  opaque type WrappedResult[T] = T

  def result[T](using x: WrappedResult[T]): T = x

  extension [T](x: T)
    def ensuring(condition: WrappedResult[T] ?=> Boolean): T =
      assert(condition(using x))
      x
end PostConditions

object AnonymousInstances extends Common:
  given Ord[Int] with
    extension (x: Int) def compareTo(y: Int) =
      if (x < y) -1 else if (x > y) +1 else 0

  given [T: Ord]: Ord[List[T]] with
    extension (xs: List[T]) def compareTo(ys: List[T]): Int = (xs, ys).match
      case (Nil, Nil) => 0
      case (Nil, _) => -1
      case (_, Nil) => +1
      case (x :: xs1, y :: ys1) =>
        val fst = x.compareTo(y)
        if (fst != 0) fst else xs1.compareTo(ys1)

  extension (xs: Seq[String])
    def longestStrings: Seq[String] =
      val maxLength = xs.map(_.length).max
      xs.filter(_.length == maxLength)

  extension [T](xs: List[T])
    def second = xs.tail.head

  given [From, To](using c: Convertible[From, To])
      : Convertible[List[From], List[To]] with
    extension (x: List[From]) def convert: List[To] = x.map(c.convert)

  given Monoid[String] with
    extension (x: String) def combine(y: String): String = x.concat(y)
    def unit: String = ""

  def sum[T: Monoid](xs: List[T]): T =
      xs.foldLeft(summon[Monoid[T]].unit)(_.combine(_))
end AnonymousInstances

object Implicits extends Common:
  implicit object IntOrd extends Ord[Int]:
    extension (x: Int) def compareTo(y: Int) =
      if (x < y) -1 else if (x > y) +1 else 0

  class ListOrd[T: Ord] extends Ord[List[T]]:
    extension (xs: List[T]) def compareTo(ys: List[T]): Int = (xs, ys).match
      case (Nil, Nil) => 0
      case (Nil, _) => -1
      case (_, Nil) => +1
      case (x :: xs1, y :: ys1) =>
        val fst = x.compareTo(y)
        if (fst != 0) fst else xs1.compareTo(ys1)
  implicit def ListOrd[T: Ord]: Ord[List[T]] = new ListOrd[T]

  class given_Convertible_List_List[From, To](implicit c: Convertible[From, To])
  extends Convertible[List[From], List[To]]:
    extension (x: List[From]) def convert: List[To] = x.map(c.convert)
  implicit def given_Convertible_List_List[From, To](implicit c: Convertible[From, To])
    : Convertible[List[From], List[To]] =
    new given_Convertible_List_List[From, To]

  def maximum[T](xs: List[T])
                (implicit cmp: Ord[T]): T =
    xs.reduceLeft((x, y) => if (x < y) y else x)

  def descending[T](implicit asc: Ord[T]): Ord[T] = new Ord[T]:
    extension (x: T) def compareTo(y: T) = asc.compareTo(y)(x)

  def minimum[T](xs: List[T])(implicit cmp: Ord[T]) =
    maximum(xs)(descending)

object Test extends App:
  Instances.test()
  import PostConditions.{result, ensuring}
  val s = List(1, 2, 3).sum
  s.ensuring(result == 6)
end Test

object Completions:

  class Future[T]
  class HttpResponse
  class StatusCode

  // The argument "magnet" type
  enum CompletionArg:
    case Error(s: String)
    case Response(f: Future[HttpResponse])
    case Status(code: Future[StatusCode])
  object CompletionArg:

    // conversions defining the possible arguments to pass to `complete`
    // these always come with CompletionArg
    // They can be invoked explicitly, e.g.
    //
    //   CompletionArg.from(statusCode)

    given fromString    : Conversion[String, CompletionArg] = Error(_)
    given fromFuture    : Conversion[Future[HttpResponse], CompletionArg] = Response(_)
    given fromStatusCode: Conversion[Future[StatusCode], CompletionArg] = Status(_)
  import CompletionArg.*

  def complete[T](arg: CompletionArg) = arg match
    case Error(s) => ???
    case Response(f) => ???
    case Status(code) => ???
end Completions
-----
ScalaFile
  ScClass: Common
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Common')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Ord
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Ord')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              Extension on T
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDeclaration: compareTo
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('compareTo')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: y
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('y')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
              PsiWhiteSpace('\n    ')
              Extension on T
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: <
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('<')
                    PsiWhiteSpace(' ')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: y
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('y')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    InfixExpression
                      MethodCall
                        ReferenceExpression: x.compareTo
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement(.)('.')
                          PsiElement(identifier)('compareTo')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: y
                            PsiElement(identifier)('y')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: <
                        PsiElement(identifier)('<')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('0')
              PsiWhiteSpace('\n    ')
              Extension on T
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: >
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('>')
                    PsiWhiteSpace(' ')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: y
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('y')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    InfixExpression
                      MethodCall
                        ReferenceExpression: x.compareTo
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement(.)('.')
                          PsiElement(identifier)('compareTo')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: y
                            PsiElement(identifier)('y')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: >
                        PsiElement(identifier)('>')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('0')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Convertible
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Convertible')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: From
              PsiElement(identifier)('From')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: To
              PsiElement(identifier)('To')
            PsiElement(])(']')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              Extension on From
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: From
                          CodeReferenceElement: From
                            PsiElement(identifier)('From')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDeclaration: convert
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('convert')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: To
                      CodeReferenceElement: To
                        PsiElement(identifier)('To')
        PsiWhiteSpace('\n\n  ')
        ScTrait: SemiGroup
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('SemiGroup')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              Extension on T
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDeclaration: combine
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('combine')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: y
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('y')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Monoid
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Monoid')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: SemiGroup[T]
                  SimpleType: SemiGroup
                    CodeReferenceElement: SemiGroup
                      PsiElement(identifier)('SemiGroup')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: unit
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('unit')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Functor
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Functor')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              Extension on F[A]
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: F[A]
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDeclaration: map
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('map')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => B
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[B]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Monad
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Monad')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Functor[F]
                  SimpleType: Functor
                    CodeReferenceElement: Functor
                      PsiElement(identifier)('Functor')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(])(']')
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              Extension on F[A]
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: F[A]
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDeclaration: flatMap
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatMap')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => F[B]
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              ParametrizedType: F[B]
                                SimpleType: F
                                  CodeReferenceElement: F
                                    PsiElement(identifier)('F')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: F[B]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
              PsiWhiteSpace('\n    ')
              Extension on F[A]
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: F[A]
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: map
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('map')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => B
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: x.flatMap
                        ReferenceExpression: x
                          PsiElement(identifier)('x')
                        PsiElement(.)('.')
                        PsiElement(identifier)('flatMap')
                      ArgumentList
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: f
                            PsiElement(identifier)('f')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: `andThen`
                            PsiElement(identifier)('`andThen`')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: pure
                            PsiElement(identifier)('pure')
                        PsiElement())(')')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDeclaration: pure
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('pure')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: F[A]
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
        PsiWhiteSpace('\n')
        End: Common
          PsiElement(end)('end')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Common')
  PsiWhiteSpace('\n\n')
  ScObject: Instances
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Instances')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Common
            CodeReferenceElement: Common
              PsiElement(identifier)('Common')
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: intOrd
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('intOrd')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Ord[Int]
                  SimpleType: Ord
                    CodeReferenceElement: Ord
                      PsiElement(identifier)('Ord')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              Extension on Int
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: compareTo
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('compareTo')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: y
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('y')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: x
                          PsiElement(identifier)('x')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: <
                          PsiElement(identifier)('<')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: y
                          PsiElement(identifier)('y')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PrefixExpression
                        ReferenceExpression: -
                          PsiElement(identifier)('-')
                        IntegerLiteral
                          PsiElement(integer)('1')
                      PsiWhiteSpace(' ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: >
                            PsiElement(identifier)('>')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: y
                            PsiElement(identifier)('y')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PrefixExpression
                          ReferenceExpression: +
                            PsiElement(identifier)('+')
                          IntegerLiteral
                            PsiElement(integer)('1')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: listOrd
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('listOrd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: <anonymous>
                ParameterType
                  ParametrizedType: Ord[T]
                    SimpleType: Ord
                      CodeReferenceElement: Ord
                        PsiElement(identifier)('Ord')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Ord[List[T]]
                  SimpleType: Ord
                    CodeReferenceElement: Ord
                      PsiElement(identifier)('Ord')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: List[T]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiElement(])(']')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              Extension on List[T]
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: xs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('xs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: List[T]
                          SimpleType: List
                            CodeReferenceElement: List
                              PsiElement(identifier)('List')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: compareTo
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('compareTo')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: ys
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('ys')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: List[T]
                              SimpleType: List
                                CodeReferenceElement: List
                                  PsiElement(identifier)('List')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: T
                                  CodeReferenceElement: T
                                    PsiElement(identifier)('T')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MatchStatement
                      Tuple
                        PsiElement(()('(')
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: ys
                          PsiElement(identifier)('ys')
                        PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(match)('match')
                      PsiWhiteSpace('\n      ')
                      CaseClauses
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            IntegerLiteral
                              PsiElement(integer)('0')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              WildcardPattern
                                PsiElement(_)('_')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            PrefixExpression
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              IntegerLiteral
                                PsiElement(integer)('1')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              WildcardPattern
                                PsiElement(_)('_')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            PrefixExpression
                              ReferenceExpression: +
                                PsiElement(identifier)('+')
                              IntegerLiteral
                                PsiElement(integer)('1')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              InfixPattern
                                ReferencePattern: x
                                  PsiElement(identifier)('x')
                                PsiWhiteSpace(' ')
                                CodeReferenceElement: ::
                                  PsiElement(identifier)('::')
                                PsiWhiteSpace(' ')
                                ReferencePattern: xs1
                                  PsiElement(identifier)('xs1')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              InfixPattern
                                ReferencePattern: y
                                  PsiElement(identifier)('y')
                                PsiWhiteSpace(' ')
                                CodeReferenceElement: ::
                                  PsiElement(identifier)('::')
                                PsiWhiteSpace(' ')
                                ReferencePattern: ys1
                                  PsiElement(identifier)('ys1')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace('\n        ')
                          BlockOfExpressions
                            ScPatternDefinition: fst
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(val)('val')
                              PsiWhiteSpace(' ')
                              ListOfPatterns
                                ReferencePattern: fst
                                  PsiElement(identifier)('fst')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: x.compareTo
                                  ReferenceExpression: x
                                    PsiElement(identifier)('x')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('compareTo')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: y
                                    PsiElement(identifier)('y')
                                  PsiElement())(')')
                            PsiWhiteSpace('\n        ')
                            IfStatement
                              PsiElement(if)('if')
                              PsiWhiteSpace(' ')
                              PsiElement(()('(')
                              InfixExpression
                                ReferenceExpression: fst
                                  PsiElement(identifier)('fst')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: !=
                                  PsiElement(identifier)('!=')
                                PsiWhiteSpace(' ')
                                IntegerLiteral
                                  PsiElement(integer)('0')
                              PsiElement())(')')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: fst
                                PsiElement(identifier)('fst')
                              PsiWhiteSpace(' ')
                              PsiElement(else)('else')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: xs1.compareTo
                                  ReferenceExpression: xs1
                                    PsiElement(identifier)('xs1')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('compareTo')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: ys1
                                    PsiElement(identifier)('ys1')
                                  PsiElement())(')')
              PsiWhiteSpace('\n  ')
              End: listOrd
                PsiElement(end)('end')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('listOrd')
        PsiWhiteSpace('\n\n  ')
        Extension on Seq[String]
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Seq[String]
                    SimpleType: Seq
                      CodeReferenceElement: Seq
                        PsiElement(identifier)('Seq')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDefinition: longestStrings
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('longestStrings')
              Parameters
                <empty list>
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: Seq[String]
                SimpleType: Seq
                  CodeReferenceElement: Seq
                    PsiElement(identifier)('Seq')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              BlockExpression
                PsiWhiteSpace('\n      ')
                ScPatternDefinition: maxLength
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: maxLength
                      PsiElement(identifier)('maxLength')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.map(_.length).max
                    MethodCall
                      ReferenceExpression: xs.map
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('map')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: _.length
                          UnderscoreSection
                            PsiElement(_)('_')
                          PsiElement(.)('.')
                          PsiElement(identifier)('length')
                        PsiElement())(')')
                    PsiElement(.)('.')
                    PsiElement(identifier)('max')
                PsiWhiteSpace('\n      ')
                MethodCall
                  ReferenceExpression: xs.filter
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('filter')
                  ArgumentList
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: _.length
                        UnderscoreSection
                          PsiElement(_)('_')
                        PsiElement(.)('.')
                        PsiElement(identifier)('length')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: ==
                        PsiElement(identifier)('==')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: maxLength
                        PsiElement(identifier)('maxLength')
                    PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        Extension on List[T]
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[T]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDefinition: second
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('second')
              Parameters
                <empty list>
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: xs.tail.head
                ReferenceExpression: xs.tail
                  ReferenceExpression: xs
                    PsiElement(identifier)('xs')
                  PsiElement(.)('.')
                  PsiElement(identifier)('tail')
                PsiElement(.)('.')
                PsiElement(identifier)('head')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: third
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('third')
              Parameters
                <empty list>
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: xs.tail.tail.head
                ReferenceExpression: xs.tail.tail
                  ReferenceExpression: xs.tail
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('tail')
                  PsiElement(.)('.')
                  PsiElement(identifier)('tail')
                PsiElement(.)('.')
                PsiElement(identifier)('head')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: listMonad
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('listMonad')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Monad[List]
                  SimpleType: Monad
                    CodeReferenceElement: Monad
                      PsiElement(identifier)('Monad')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              Extension on List[A]
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: xs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('xs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: List[A]
                          SimpleType: List
                            CodeReferenceElement: List
                              PsiElement(identifier)('List')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: flatMap
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatMap')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => List[B]
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              ParametrizedType: List[B]
                                SimpleType: List
                                  CodeReferenceElement: List
                                    PsiElement(identifier)('List')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: List[B]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    MethodCall
                      ReferenceExpression: xs.flatMap
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('flatMap')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: f
                          PsiElement(identifier)('f')
                        PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: pure
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('pure')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: List[A]
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                MethodCall
                  ReferenceExpression: List
                    PsiElement(identifier)('List')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: readerMonad
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('readerMonad')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Ctx
              PsiElement(identifier)('Ctx')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Monad[[X] =>> Ctx => X]
                  SimpleType: Monad
                    CodeReferenceElement: Monad
                      PsiElement(identifier)('Monad')
                  TypeArgumentsList
                    PsiElement([)('[')
                    TypeLambda: [X] =>> Ctx => X
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: X
                          PsiElement(identifier)('X')
                        PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=>>)('=>>')
                      PsiWhiteSpace(' ')
                      FunctionalType: Ctx => X
                        SimpleType: Ctx
                          CodeReferenceElement: Ctx
                            PsiElement(identifier)('Ctx')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        SimpleType: X
                          CodeReferenceElement: X
                            PsiElement(identifier)('X')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              Extension on Ctx => A
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: r
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('r')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: Ctx => A
                          SimpleType: Ctx
                            CodeReferenceElement: Ctx
                              PsiElement(identifier)('Ctx')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: flatMap
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatMap')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => Ctx => B
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              FunctionalType: Ctx => B
                                SimpleType: Ctx
                                  CodeReferenceElement: Ctx
                                    PsiElement(identifier)('Ctx')
                                PsiWhiteSpace(' ')
                                PsiElement(=>)('=>')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    FunctionalType: Ctx => B
                      SimpleType: Ctx
                        CodeReferenceElement: Ctx
                          PsiElement(identifier)('Ctx')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    FunctionExpression
                      Parameters
                        ParametersClause
                          Parameter: ctx
                            PsiElement(identifier)('ctx')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      MethodCall
                        MethodCall
                          ReferenceExpression: f
                            PsiElement(identifier)('f')
                          ArgumentList
                            PsiElement(()('(')
                            MethodCall
                              ReferenceExpression: r
                                PsiElement(identifier)('r')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: ctx
                                  PsiElement(identifier)('ctx')
                                PsiElement())(')')
                            PsiElement())(')')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: ctx
                            PsiElement(identifier)('ctx')
                          PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: pure
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('pure')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                FunctionalType: Ctx => A
                  SimpleType: Ctx
                    CodeReferenceElement: Ctx
                      PsiElement(identifier)('Ctx')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                FunctionExpression
                  Parameters
                    ParametersClause
                      Parameter: ctx
                        PsiElement(identifier)('ctx')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: maximum
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('maximum')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[T]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: <anonymous>
                ParameterType
                  ParametrizedType: Ord[T]
                    SimpleType: Ord
                      CodeReferenceElement: Ord
                        PsiElement(identifier)('Ord')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            ReferenceExpression: xs.reduceLeft
              ReferenceExpression: xs
                PsiElement(identifier)('xs')
              PsiElement(.)('.')
              PsiElement(identifier)('reduceLeft')
            ArgumentList
              PsiElement(()('(')
              FunctionExpression
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('x')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: y
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('y')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: <
                      PsiElement(identifier)('<')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: y
                    PsiElement(identifier)('y')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: descending
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('descending')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: asc
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('asc')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Ord[T]
                    SimpleType: Ord
                      CodeReferenceElement: Ord
                        PsiElement(identifier)('Ord')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Ord[T]
            SimpleType: Ord
              CodeReferenceElement: Ord
                PsiElement(identifier)('Ord')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Ord[T]
                    SimpleType: Ord
                      CodeReferenceElement: Ord
                        PsiElement(identifier)('Ord')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              ScTemplateBody
                PsiElement(:)(':')
                PsiWhiteSpace('\n    ')
                Extension on T
                  PsiElement(extension)('extension')
                  PsiWhiteSpace(' ')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: x
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('x')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ScExtensionBody
                    ScFunctionDefinition: compareTo
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('compareTo')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: y
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('y')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: T
                                CodeReferenceElement: T
                                  PsiElement(identifier)('T')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        MethodCall
                          ReferenceExpression: asc.compareTo
                            ReferenceExpression: asc
                              PsiElement(identifier)('asc')
                            PsiElement(.)('.')
                            PsiElement(identifier)('compareTo')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: y
                              PsiElement(identifier)('y')
                            PsiElement())(')')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: minimum
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('minimum')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[T]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: <anonymous>
                ParameterType
                  ParametrizedType: Ord[T]
                    SimpleType: Ord
                      CodeReferenceElement: Ord
                        PsiElement(identifier)('Ord')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            MethodCall
              ReferenceExpression: maximum
                PsiElement(identifier)('maximum')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: xs
                  PsiElement(identifier)('xs')
                PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              ReferenceExpression: descending
                PsiElement(identifier)('descending')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: xs
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: xs
                  PsiElement(identifier)('xs')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: maximum
                    PsiElement(identifier)('maximum')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  MethodCall
                    ReferenceExpression: maximum
                      PsiElement(identifier)('maximum')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement())(')')
                  ArgumentList
                    PsiElement(()('(')
                    PsiElement(using)('using')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: descending
                      PsiElement(identifier)('descending')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  MethodCall
                    ReferenceExpression: maximum
                      PsiElement(identifier)('maximum')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement())(')')
                  ArgumentList
                    PsiElement(()('(')
                    PsiElement(using)('using')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: descending
                        PsiElement(identifier)('descending')
                      ArgumentList
                        PsiElement(()('(')
                        PsiElement(using)('using')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: intOrd
                          PsiElement(identifier)('intOrd')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: minimum
                    PsiElement(identifier)('minimum')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement())(')')
                PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScClass: Context
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Context')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: value
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('value')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                PsiElement())(')')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: c0
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: c0
              PsiElement(identifier)('c0')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          FunctionalType: Context ?=> String
            SimpleType: Context
              CodeReferenceElement: Context
                PsiElement(identifier)('Context')
            PsiWhiteSpace(' ')
            PsiElement(?=>)('?=>')
            PsiWhiteSpace(' ')
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          FunctionExpression
            Parameters
              ParametersClause
                Parameter: ctx
                  PsiElement(identifier)('ctx')
            PsiWhiteSpace(' ')
            PsiElement(?=>)('?=>')
            PsiWhiteSpace(' ')
            ReferenceExpression: ctx.value
              ReferenceExpression: ctx
                PsiElement(identifier)('ctx')
              PsiElement(.)('.')
              PsiElement(identifier)('value')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: c1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: c1
              PsiElement(identifier)('c1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          FunctionalType: Context ?=> String
            SimpleType: Context
              CodeReferenceElement: Context
                PsiElement(identifier)('Context')
            PsiWhiteSpace(' ')
            PsiElement(?=>)('?=>')
            PsiWhiteSpace(' ')
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          FunctionExpression
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: ctx
                  AnnotationsList
                    <empty list>
                  PsiElement(identifier)('ctx')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Context
                      CodeReferenceElement: Context
                        PsiElement(identifier)('Context')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(?=>)('?=>')
            PsiWhiteSpace(' ')
            ReferenceExpression: ctx.value
              ReferenceExpression: ctx
                PsiElement(identifier)('ctx')
              PsiElement(.)('.')
              PsiElement(identifier)('value')
        PsiWhiteSpace('\n\n  ')
        ScClass: A
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScClass: B
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('B')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: ab
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: ab
              PsiElement(identifier)('ab')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          DependentFunctionType: (x: A, y: B) ?=> Int
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: y
                PsiElement(identifier)('y')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: B
                  CodeReferenceElement: B
                    PsiElement(identifier)('B')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(?=>)('?=>')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          FunctionExpression
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: a
                  AnnotationsList
                    <empty list>
                  PsiElement(identifier)('a')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                Parameter: b
                  AnnotationsList
                    <empty list>
                  PsiElement(identifier)('b')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(?=>)('?=>')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('22')
        PsiWhiteSpace('\n\n  ')
        ScTrait: TastyAPI
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TastyAPI')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDeclaration: Symbol
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Symbol')
              PsiWhiteSpace('\n    ')
              ScTrait: SymDeco
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(trait)('trait')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('SymDeco')
                ExtendsBlock
                  ScTemplateBody
                    PsiElement(:)(':')
                    PsiWhiteSpace('\n      ')
                    Extension on Symbol
                      PsiElement(extension)('extension')
                      PsiWhiteSpace(' ')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: sym
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('sym')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: Symbol
                                CodeReferenceElement: Symbol
                                  PsiElement(identifier)('Symbol')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      ScExtensionBody
                        ScFunctionDeclaration: name
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(def)('def')
                          PsiWhiteSpace(' ')
                          PsiElement(identifier)('name')
                          Parameters
                            <empty list>
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
              PsiWhiteSpace('\n    ')
              ScGivenAliasDeclaration: symDeco
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(given)('given')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('symDeco')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: SymDeco
                  CodeReferenceElement: SymDeco
                    PsiElement(identifier)('SymDeco')
        PsiWhiteSpace('\n\n  ')
        ScObject: TastyImpl
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TastyImpl')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: TastyAPI
                  CodeReferenceElement: TastyAPI
                    PsiElement(identifier)('TastyAPI')
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: Symbol
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Symbol')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
              PsiWhiteSpace('\n    ')
              ScGivenDefinition: symDeco
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(given)('given')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('symDeco')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      SimpleType: SymDeco
                        CodeReferenceElement: SymDeco
                          PsiElement(identifier)('SymDeco')
                  PsiWhiteSpace(' ')
                  PsiElement(with)('with')
                  PsiWhiteSpace('\n      ')
                  ScTemplateBody
                    Extension on Symbol
                      PsiElement(extension)('extension')
                      PsiWhiteSpace(' ')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: sym
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('sym')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: Symbol
                                CodeReferenceElement: Symbol
                                  PsiElement(identifier)('Symbol')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      ScExtensionBody
                        ScFunctionDefinition: name
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(def)('def')
                          PsiWhiteSpace(' ')
                          PsiElement(identifier)('name')
                          Parameters
                            <empty list>
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: sym
                            PsiElement(identifier)('sym')
        PsiWhiteSpace('\n\n  ')
        ScClass: D
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('D')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScClass: C
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement(using)('using')
                PsiWhiteSpace(' ')
                ClassParameter: ctx
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('ctx')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Context
                      CodeReferenceElement: Context
                        PsiElement(identifier)('Context')
                PsiElement())(')')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('f')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                BlockExpression
                  PsiWhiteSpace('\n      ')
                  MethodCall
                    ReferenceExpression: locally
                      PsiElement(identifier)('locally')
                    PsiWhiteSpace(' ')
                    ArgumentList
                      BlockExpression
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        ScGivenAliasDefinition: given_Context
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(given)('given')
                          PsiWhiteSpace(' ')
                          SimpleType: Context
                            CodeReferenceElement: Context
                              PsiElement(identifier)('Context')
                          Parameters
                            <empty list>
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: this.ctx
                            ThisReference
                              PsiElement(this)('this')
                            PsiElement(.)('.')
                            PsiElement(identifier)('ctx')
                        PsiWhiteSpace('\n        ')
                        MethodCall
                          ReferenceExpression: println
                            PsiElement(identifier)('println')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: summon[Context].value
                              GenericCall
                                ReferenceExpression: summon
                                  PsiElement(identifier)('summon')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: Context
                                    CodeReferenceElement: Context
                                      PsiElement(identifier)('Context')
                                  PsiElement(])(']')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement())(')')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                  PsiWhiteSpace('\n      ')
                  MethodCall
                    ReferenceExpression: locally
                      PsiElement(identifier)('locally')
                    PsiWhiteSpace(' ')
                    ArgumentList
                      BlockExpression
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        ScPatternDefinition: ctx1
                          AnnotationsList
                            <empty list>
                          Modifiers
                            PsiElement(lazy)('lazy')
                          PsiWhiteSpace(' ')
                          PsiElement(val)('val')
                          PsiWhiteSpace(' ')
                          ListOfPatterns
                            ReferencePattern: ctx1
                              PsiElement(identifier)('ctx1')
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: this.ctx
                            ThisReference
                              PsiElement(this)('this')
                            PsiElement(.)('.')
                            PsiElement(identifier)('ctx')
                        PsiWhiteSpace('\n        ')
                        ScGivenAliasDefinition: given_Context
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(given)('given')
                          PsiWhiteSpace(' ')
                          SimpleType: Context
                            CodeReferenceElement: Context
                              PsiElement(identifier)('Context')
                          Parameters
                            <empty list>
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: ctx1
                            PsiElement(identifier)('ctx1')
                        PsiWhiteSpace('\n        ')
                        MethodCall
                          ReferenceExpression: println
                            PsiElement(identifier)('println')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: summon[Context].value
                              GenericCall
                                ReferenceExpression: summon
                                  PsiElement(identifier)('summon')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: Context
                                    CodeReferenceElement: Context
                                      PsiElement(identifier)('Context')
                                  PsiElement(])(']')
                              PsiElement(.)('.')
                              PsiElement(identifier)('value')
                            PsiElement())(')')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                  PsiWhiteSpace('\n      ')
                  MethodCall
                    ReferenceExpression: locally
                      PsiElement(identifier)('locally')
                    PsiWhiteSpace(' ')
                    ArgumentList
                      BlockExpression
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        ScGivenDefinition: d
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(given)('given')
                          PsiWhiteSpace(' ')
                          PsiElement(identifier)('d')
                          TypeParameterClause
                            PsiElement([)('[')
                            TypeParameter: T
                              PsiElement(identifier)('T')
                            PsiElement(])(']')
                          Parameters
                            <empty list>
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                ParametrizedType: D[T]
                                  SimpleType: D
                                    CodeReferenceElement: D
                                      PsiElement(identifier)('D')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: T
                                      CodeReferenceElement: T
                                        PsiElement(identifier)('T')
                                    PsiElement(])(']')
                                ArgumentList
                                  PsiElement(()('(')
                                  PsiElement())(')')
                        PsiWhiteSpace('\n        ')
                        MethodCall
                          ReferenceExpression: println
                            PsiElement(identifier)('println')
                          ArgumentList
                            PsiElement(()('(')
                            GenericCall
                              ReferenceExpression: summon
                                PsiElement(identifier)('summon')
                              TypeArgumentsList
                                PsiElement([)('[')
                                ParametrizedType: D[Int]
                                  SimpleType: D
                                    CodeReferenceElement: D
                                      PsiElement(identifier)('D')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: Int
                                      CodeReferenceElement: Int
                                        PsiElement(identifier)('Int')
                                    PsiElement(])(']')
                                PsiElement(])(']')
                            PsiElement())(')')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                  PsiWhiteSpace('\n      ')
                  MethodCall
                    ReferenceExpression: locally
                      PsiElement(identifier)('locally')
                    PsiWhiteSpace(' ')
                    ArgumentList
                      BlockExpression
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        ScGivenDefinition: given_D_Int
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(given)('given')
                          PsiWhiteSpace(' ')
                          Parameters
                            ParametersClause
                              PsiElement(()('(')
                              PsiElement(using)('using')
                              PsiWhiteSpace(' ')
                              Parameter: <anonymous>
                                ParameterType
                                  SimpleType: Context
                                    CodeReferenceElement: Context
                                      PsiElement(identifier)('Context')
                              PsiElement())(')')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                ParametrizedType: D[Int]
                                  SimpleType: D
                                    CodeReferenceElement: D
                                      PsiElement(identifier)('D')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: Int
                                      CodeReferenceElement: Int
                                        PsiElement(identifier)('Int')
                                    PsiElement(])(']')
                                ArgumentList
                                  PsiElement(()('(')
                                  PsiElement())(')')
                        PsiWhiteSpace('\n        ')
                        MethodCall
                          ReferenceExpression: println
                            PsiElement(identifier)('println')
                          ArgumentList
                            PsiElement(()('(')
                            GenericCall
                              ReferenceExpression: summon
                                PsiElement(identifier)('summon')
                              TypeArgumentsList
                                PsiElement([)('[')
                                ParametrizedType: D[Int]
                                  SimpleType: D
                                    CodeReferenceElement: D
                                      PsiElement(identifier)('D')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: Int
                                      CodeReferenceElement: Int
                                        PsiElement(identifier)('Int')
                                    PsiElement(])(']')
                                PsiElement(])(']')
                            PsiElement())(')')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              End: C
                PsiElement(end)('end')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('C')
        PsiWhiteSpace('\n\n  ')
        ScClass: Token
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Token')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: str
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('str')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                PsiElement())(')')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScObject: Token
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Token')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScGivenDefinition: StringToToken
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(given)('given')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('StringToToken')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Conversion[String, Token]
                        SimpleType: Conversion
                          CodeReferenceElement: Conversion
                            PsiElement(identifier)('Conversion')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: Token
                            CodeReferenceElement: Token
                              PsiElement(identifier)('Token')
                          PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(with)('with')
                  PsiWhiteSpace('\n      ')
                  ScTemplateBody
                    ScFunctionDefinition: apply
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('apply')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: str
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('str')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: String
                                CodeReferenceElement: String
                                  PsiElement(identifier)('String')
                          PsiElement())(')')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: Token
                        CodeReferenceElement: Token
                          PsiElement(identifier)('Token')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              SimpleType: Token
                                CodeReferenceElement: Token
                                  PsiElement(identifier)('Token')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: str
                                  PsiElement(identifier)('str')
                                PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Token
            CodeReferenceElement: Token
              PsiElement(identifier)('Token')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"if"')
        PsiWhiteSpace('\n')
        End: Instances
          PsiElement(end)('end')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Instances')
  PsiWhiteSpace('\n\n')
  ScObject: PostConditions
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('PostConditions')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: WrappedResult
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(opaque)('opaque')
          PsiWhiteSpace(' ')
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('WrappedResult')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: result
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('result')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: WrappedResult[T]
                    SimpleType: WrappedResult
                      CodeReferenceElement: WrappedResult
                        PsiElement(identifier)('WrappedResult')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n\n  ')
        Extension on T
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDefinition: ensuring
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('ensuring')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: condition
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('condition')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      FunctionalType: WrappedResult[T] ?=> Boolean
                        ParametrizedType: WrappedResult[T]
                          SimpleType: WrappedResult
                            CodeReferenceElement: WrappedResult
                              PsiElement(identifier)('WrappedResult')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
                        PsiWhiteSpace(' ')
                        PsiElement(?=>)('?=>')
                        PsiWhiteSpace(' ')
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              BlockExpression
                PsiWhiteSpace('\n      ')
                MethodCall
                  ReferenceExpression: assert
                    PsiElement(identifier)('assert')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: condition
                        PsiElement(identifier)('condition')
                      ArgumentList
                        PsiElement(()('(')
                        PsiElement(using)('using')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: x
                          PsiElement(identifier)('x')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace('\n      ')
                ReferenceExpression: x
                  PsiElement(identifier)('x')
        PsiWhiteSpace('\n')
        End: PostConditions
          PsiElement(end)('end')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('PostConditions')
  PsiWhiteSpace('\n\n')
  ScObject: AnonymousInstances
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('AnonymousInstances')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Common
            CodeReferenceElement: Common
              PsiElement(identifier)('Common')
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScGivenDefinition: given_Ord_Int
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Ord[Int]
                  SimpleType: Ord
                    CodeReferenceElement: Ord
                      PsiElement(identifier)('Ord')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              Extension on Int
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: compareTo
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('compareTo')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: y
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('y')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: x
                          PsiElement(identifier)('x')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: <
                          PsiElement(identifier)('<')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: y
                          PsiElement(identifier)('y')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PrefixExpression
                        ReferenceExpression: -
                          PsiElement(identifier)('-')
                        IntegerLiteral
                          PsiElement(integer)('1')
                      PsiWhiteSpace(' ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: >
                            PsiElement(identifier)('>')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: y
                            PsiElement(identifier)('y')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PrefixExpression
                          ReferenceExpression: +
                            PsiElement(identifier)('+')
                          IntegerLiteral
                            PsiElement(integer)('1')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: given_Ord_List
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Ord
                CodeReferenceElement: Ord
                  PsiElement(identifier)('Ord')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Ord[List[T]]
                  SimpleType: Ord
                    CodeReferenceElement: Ord
                      PsiElement(identifier)('Ord')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: List[T]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiElement(])(']')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              Extension on List[T]
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: xs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('xs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: List[T]
                          SimpleType: List
                            CodeReferenceElement: List
                              PsiElement(identifier)('List')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: compareTo
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('compareTo')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: ys
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('ys')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: List[T]
                              SimpleType: List
                                CodeReferenceElement: List
                                  PsiElement(identifier)('List')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: T
                                  CodeReferenceElement: T
                                    PsiElement(identifier)('T')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MatchStatement
                      Tuple
                        PsiElement(()('(')
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: ys
                          PsiElement(identifier)('ys')
                        PsiElement())(')')
                      PsiElement(.)('.')
                      PsiElement(match)('match')
                      PsiWhiteSpace('\n      ')
                      CaseClauses
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            IntegerLiteral
                              PsiElement(integer)('0')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              WildcardPattern
                                PsiElement(_)('_')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            PrefixExpression
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              IntegerLiteral
                                PsiElement(integer)('1')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              WildcardPattern
                                PsiElement(_)('_')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            PrefixExpression
                              ReferenceExpression: +
                                PsiElement(identifier)('+')
                              IntegerLiteral
                                PsiElement(integer)('1')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              InfixPattern
                                ReferencePattern: x
                                  PsiElement(identifier)('x')
                                PsiWhiteSpace(' ')
                                CodeReferenceElement: ::
                                  PsiElement(identifier)('::')
                                PsiWhiteSpace(' ')
                                ReferencePattern: xs1
                                  PsiElement(identifier)('xs1')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              InfixPattern
                                ReferencePattern: y
                                  PsiElement(identifier)('y')
                                PsiWhiteSpace(' ')
                                CodeReferenceElement: ::
                                  PsiElement(identifier)('::')
                                PsiWhiteSpace(' ')
                                ReferencePattern: ys1
                                  PsiElement(identifier)('ys1')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace('\n        ')
                          BlockOfExpressions
                            ScPatternDefinition: fst
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(val)('val')
                              PsiWhiteSpace(' ')
                              ListOfPatterns
                                ReferencePattern: fst
                                  PsiElement(identifier)('fst')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: x.compareTo
                                  ReferenceExpression: x
                                    PsiElement(identifier)('x')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('compareTo')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: y
                                    PsiElement(identifier)('y')
                                  PsiElement())(')')
                            PsiWhiteSpace('\n        ')
                            IfStatement
                              PsiElement(if)('if')
                              PsiWhiteSpace(' ')
                              PsiElement(()('(')
                              InfixExpression
                                ReferenceExpression: fst
                                  PsiElement(identifier)('fst')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: !=
                                  PsiElement(identifier)('!=')
                                PsiWhiteSpace(' ')
                                IntegerLiteral
                                  PsiElement(integer)('0')
                              PsiElement())(')')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: fst
                                PsiElement(identifier)('fst')
                              PsiWhiteSpace(' ')
                              PsiElement(else)('else')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: xs1.compareTo
                                  ReferenceExpression: xs1
                                    PsiElement(identifier)('xs1')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('compareTo')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: ys1
                                    PsiElement(identifier)('ys1')
                                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        Extension on Seq[String]
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Seq[String]
                    SimpleType: Seq
                      CodeReferenceElement: Seq
                        PsiElement(identifier)('Seq')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDefinition: longestStrings
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('longestStrings')
              Parameters
                <empty list>
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: Seq[String]
                SimpleType: Seq
                  CodeReferenceElement: Seq
                    PsiElement(identifier)('Seq')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              BlockExpression
                PsiWhiteSpace('\n      ')
                ScPatternDefinition: maxLength
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: maxLength
                      PsiElement(identifier)('maxLength')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.map(_.length).max
                    MethodCall
                      ReferenceExpression: xs.map
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('map')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: _.length
                          UnderscoreSection
                            PsiElement(_)('_')
                          PsiElement(.)('.')
                          PsiElement(identifier)('length')
                        PsiElement())(')')
                    PsiElement(.)('.')
                    PsiElement(identifier)('max')
                PsiWhiteSpace('\n      ')
                MethodCall
                  ReferenceExpression: xs.filter
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('filter')
                  ArgumentList
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: _.length
                        UnderscoreSection
                          PsiElement(_)('_')
                        PsiElement(.)('.')
                        PsiElement(identifier)('length')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: ==
                        PsiElement(identifier)('==')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: maxLength
                        PsiElement(identifier)('maxLength')
                    PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        Extension on List[T]
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[T]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDefinition: second
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('second')
              Parameters
                <empty list>
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: xs.tail.head
                ReferenceExpression: xs.tail
                  ReferenceExpression: xs
                    PsiElement(identifier)('xs')
                  PsiElement(.)('.')
                  PsiElement(identifier)('tail')
                PsiElement(.)('.')
                PsiElement(identifier)('head')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: given_Convertible_List_List
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: From
              PsiElement(identifier)('From')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: To
              PsiElement(identifier)('To')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: c
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('c')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Convertible[From, To]
                    SimpleType: Convertible
                      CodeReferenceElement: Convertible
                        PsiElement(identifier)('Convertible')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: From
                        CodeReferenceElement: From
                          PsiElement(identifier)('From')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: To
                        CodeReferenceElement: To
                          PsiElement(identifier)('To')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace('\n      ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Convertible[List[From], List[To]]
                  SimpleType: Convertible
                    CodeReferenceElement: Convertible
                      PsiElement(identifier)('Convertible')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: List[From]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: From
                          CodeReferenceElement: From
                            PsiElement(identifier)('From')
                        PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ParametrizedType: List[To]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: To
                          CodeReferenceElement: To
                            PsiElement(identifier)('To')
                        PsiElement(])(']')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              Extension on List[From]
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: List[From]
                          SimpleType: List
                            CodeReferenceElement: List
                              PsiElement(identifier)('List')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: From
                              CodeReferenceElement: From
                                PsiElement(identifier)('From')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: convert
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('convert')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: List[To]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: To
                          CodeReferenceElement: To
                            PsiElement(identifier)('To')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: x.map
                        ReferenceExpression: x
                          PsiElement(identifier)('x')
                        PsiElement(.)('.')
                        PsiElement(identifier)('map')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: c.convert
                          ReferenceExpression: c
                            PsiElement(identifier)('c')
                          PsiElement(.)('.')
                          PsiElement(identifier)('convert')
                        PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: given_Monoid_String
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Monoid[String]
                  SimpleType: Monoid
                    CodeReferenceElement: Monoid
                      PsiElement(identifier)('Monoid')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace('\n    ')
            ScTemplateBody
              Extension on String
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: String
                          CodeReferenceElement: String
                            PsiElement(identifier)('String')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: combine
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('combine')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: y
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('y')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: String
                              CodeReferenceElement: String
                                PsiElement(identifier)('String')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: x.concat
                        ReferenceExpression: x
                          PsiElement(identifier)('x')
                        PsiElement(.)('.')
                        PsiElement(identifier)('concat')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: y
                          PsiElement(identifier)('y')
                        PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: unit
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('unit')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('""')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: sum
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('sum')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Monoid
                CodeReferenceElement: Monoid
                  PsiElement(identifier)('Monoid')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[T]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n      ')
          MethodCall
            MethodCall
              ReferenceExpression: xs.foldLeft
                ReferenceExpression: xs
                  PsiElement(identifier)('xs')
                PsiElement(.)('.')
                PsiElement(identifier)('foldLeft')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: summon[Monoid[T]].unit
                  GenericCall
                    ReferenceExpression: summon
                      PsiElement(identifier)('summon')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Monoid[T]
                        SimpleType: Monoid
                          CodeReferenceElement: Monoid
                            PsiElement(identifier)('Monoid')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiElement(.)('.')
                  PsiElement(identifier)('unit')
                PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              MethodCall
                ReferenceExpression: _.combine
                  UnderscoreSection
                    PsiElement(_)('_')
                  PsiElement(.)('.')
                  PsiElement(identifier)('combine')
                ArgumentList
                  PsiElement(()('(')
                  UnderscoreSection
                    PsiElement(_)('_')
                  PsiElement())(')')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        End: AnonymousInstances
          PsiElement(end)('end')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('AnonymousInstances')
  PsiWhiteSpace('\n\n')
  ScObject: Implicits
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Implicits')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Common
            CodeReferenceElement: Common
              PsiElement(identifier)('Common')
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScObject: IntOrd
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('IntOrd')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Ord[Int]
                  SimpleType: Ord
                    CodeReferenceElement: Ord
                      PsiElement(identifier)('Ord')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              Extension on Int
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: compareTo
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('compareTo')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: y
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('y')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      InfixExpression
                        ReferenceExpression: x
                          PsiElement(identifier)('x')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: <
                          PsiElement(identifier)('<')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: y
                          PsiElement(identifier)('y')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PrefixExpression
                        ReferenceExpression: -
                          PsiElement(identifier)('-')
                        IntegerLiteral
                          PsiElement(integer)('1')
                      PsiWhiteSpace(' ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: >
                            PsiElement(identifier)('>')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: y
                            PsiElement(identifier)('y')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PrefixExpression
                          ReferenceExpression: +
                            PsiElement(identifier)('+')
                          IntegerLiteral
                            PsiElement(integer)('1')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
        PsiWhiteSpace('\n\n  ')
        ScClass: ListOrd
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ListOrd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Ord
                CodeReferenceElement: Ord
                  PsiElement(identifier)('Ord')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Ord[List[T]]
                  SimpleType: Ord
                    CodeReferenceElement: Ord
                      PsiElement(identifier)('Ord')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: List[T]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiElement(])(']')
                    PsiElement(])(']')
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              Extension on List[T]
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: xs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('xs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: List[T]
                          SimpleType: List
                            CodeReferenceElement: List
                              PsiElement(identifier)('List')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: compareTo
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('compareTo')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: ys
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('ys')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: List[T]
                              SimpleType: List
                                CodeReferenceElement: List
                                  PsiElement(identifier)('List')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: T
                                  CodeReferenceElement: T
                                    PsiElement(identifier)('T')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MatchStatement
                      Tuple
                        PsiElement(()('(')
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: ys
                          PsiElement(identifier)('ys')
                        PsiElement())(')')
                      PsiElement(.)('.')
                      PsiElement(match)('match')
                      PsiWhiteSpace('\n      ')
                      CaseClauses
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            IntegerLiteral
                              PsiElement(integer)('0')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              WildcardPattern
                                PsiElement(_)('_')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            PrefixExpression
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              IntegerLiteral
                                PsiElement(integer)('1')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              WildcardPattern
                                PsiElement(_)('_')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              StableElementPattern
                                ReferenceExpression: Nil
                                  PsiElement(identifier)('Nil')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            PrefixExpression
                              ReferenceExpression: +
                                PsiElement(identifier)('+')
                              IntegerLiteral
                                PsiElement(integer)('1')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          TuplePattern
                            PsiElement(()('(')
                            ArgumentPatterns
                              InfixPattern
                                ReferencePattern: x
                                  PsiElement(identifier)('x')
                                PsiWhiteSpace(' ')
                                CodeReferenceElement: ::
                                  PsiElement(identifier)('::')
                                PsiWhiteSpace(' ')
                                ReferencePattern: xs1
                                  PsiElement(identifier)('xs1')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              InfixPattern
                                ReferencePattern: y
                                  PsiElement(identifier)('y')
                                PsiWhiteSpace(' ')
                                CodeReferenceElement: ::
                                  PsiElement(identifier)('::')
                                PsiWhiteSpace(' ')
                                ReferencePattern: ys1
                                  PsiElement(identifier)('ys1')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace('\n        ')
                          BlockOfExpressions
                            ScPatternDefinition: fst
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(val)('val')
                              PsiWhiteSpace(' ')
                              ListOfPatterns
                                ReferencePattern: fst
                                  PsiElement(identifier)('fst')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: x.compareTo
                                  ReferenceExpression: x
                                    PsiElement(identifier)('x')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('compareTo')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: y
                                    PsiElement(identifier)('y')
                                  PsiElement())(')')
                            PsiWhiteSpace('\n        ')
                            IfStatement
                              PsiElement(if)('if')
                              PsiWhiteSpace(' ')
                              PsiElement(()('(')
                              InfixExpression
                                ReferenceExpression: fst
                                  PsiElement(identifier)('fst')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: !=
                                  PsiElement(identifier)('!=')
                                PsiWhiteSpace(' ')
                                IntegerLiteral
                                  PsiElement(integer)('0')
                              PsiElement())(')')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: fst
                                PsiElement(identifier)('fst')
                              PsiWhiteSpace(' ')
                              PsiElement(else)('else')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: xs1.compareTo
                                  ReferenceExpression: xs1
                                    PsiElement(identifier)('xs1')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('compareTo')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: ys1
                                    PsiElement(identifier)('ys1')
                                  PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: ListOrd
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ListOrd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Ord
                CodeReferenceElement: Ord
                  PsiElement(identifier)('Ord')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Ord[List[T]]
            SimpleType: Ord
              CodeReferenceElement: Ord
                PsiElement(identifier)('Ord')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[T]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: ListOrd[T]
                    SimpleType: ListOrd
                      CodeReferenceElement: ListOrd
                        PsiElement(identifier)('ListOrd')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScClass: given_Convertible_List_List
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('given_Convertible_List_List')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: From
              PsiElement(identifier)('From')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: To
              PsiElement(identifier)('To')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement(implicit)('implicit')
                PsiWhiteSpace(' ')
                ClassParameter: c
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('c')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: Convertible[From, To]
                      SimpleType: Convertible
                        CodeReferenceElement: Convertible
                          PsiElement(identifier)('Convertible')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: From
                          CodeReferenceElement: From
                            PsiElement(identifier)('From')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: To
                          CodeReferenceElement: To
                            PsiElement(identifier)('To')
                        PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace('\n  ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Convertible[List[From], List[To]]
                  SimpleType: Convertible
                    CodeReferenceElement: Convertible
                      PsiElement(identifier)('Convertible')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: List[From]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: From
                          CodeReferenceElement: From
                            PsiElement(identifier)('From')
                        PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ParametrizedType: List[To]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: To
                          CodeReferenceElement: To
                            PsiElement(identifier)('To')
                        PsiElement(])(']')
                    PsiElement(])(']')
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              Extension on List[From]
                PsiElement(extension)('extension')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: List[From]
                          SimpleType: List
                            CodeReferenceElement: List
                              PsiElement(identifier)('List')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: From
                              CodeReferenceElement: From
                                PsiElement(identifier)('From')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                ScExtensionBody
                  ScFunctionDefinition: convert
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('convert')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: List[To]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: To
                          CodeReferenceElement: To
                            PsiElement(identifier)('To')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: x.map
                        ReferenceExpression: x
                          PsiElement(identifier)('x')
                        PsiElement(.)('.')
                        PsiElement(identifier)('map')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: c.convert
                          ReferenceExpression: c
                            PsiElement(identifier)('c')
                          PsiElement(.)('.')
                          PsiElement(identifier)('convert')
                        PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: given_Convertible_List_List
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('given_Convertible_List_List')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: From
              PsiElement(identifier)('From')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: To
              PsiElement(identifier)('To')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: c
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('c')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Convertible[From, To]
                    SimpleType: Convertible
                      CodeReferenceElement: Convertible
                        PsiElement(identifier)('Convertible')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: From
                        CodeReferenceElement: From
                          PsiElement(identifier)('From')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: To
                        CodeReferenceElement: To
                          PsiElement(identifier)('To')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Convertible[List[From], List[To]]
            SimpleType: Convertible
              CodeReferenceElement: Convertible
                PsiElement(identifier)('Convertible')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[From]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: From
                    CodeReferenceElement: From
                      PsiElement(identifier)('From')
                  PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ParametrizedType: List[To]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: To
                    CodeReferenceElement: To
                      PsiElement(identifier)('To')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: given_Convertible_List_List[From, To]
                    SimpleType: given_Convertible_List_List
                      CodeReferenceElement: given_Convertible_List_List
                        PsiElement(identifier)('given_Convertible_List_List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: From
                        CodeReferenceElement: From
                          PsiElement(identifier)('From')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: To
                        CodeReferenceElement: To
                          PsiElement(identifier)('To')
                      PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: maximum
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('maximum')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[T]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
            PsiWhiteSpace('\n                ')
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: cmp
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('cmp')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Ord[T]
                    SimpleType: Ord
                      CodeReferenceElement: Ord
                        PsiElement(identifier)('Ord')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            ReferenceExpression: xs.reduceLeft
              ReferenceExpression: xs
                PsiElement(identifier)('xs')
              PsiElement(.)('.')
              PsiElement(identifier)('reduceLeft')
            ArgumentList
              PsiElement(()('(')
              FunctionExpression
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('x')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: y
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('y')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                IfStatement
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: <
                      PsiElement(identifier)('<')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                  PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: y
                    PsiElement(identifier)('y')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: descending
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('descending')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: asc
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('asc')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Ord[T]
                    SimpleType: Ord
                      CodeReferenceElement: Ord
                        PsiElement(identifier)('Ord')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Ord[T]
            SimpleType: Ord
              CodeReferenceElement: Ord
                PsiElement(identifier)('Ord')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Ord[T]
                    SimpleType: Ord
                      CodeReferenceElement: Ord
                        PsiElement(identifier)('Ord')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              ScTemplateBody
                PsiElement(:)(':')
                PsiWhiteSpace('\n    ')
                Extension on T
                  PsiElement(extension)('extension')
                  PsiWhiteSpace(' ')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: x
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('x')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ScExtensionBody
                    ScFunctionDefinition: compareTo
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('compareTo')
                      Parameters
                        ParametersClause
                          PsiElement(()('(')
                          Parameter: y
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(identifier)('y')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParameterType
                              SimpleType: T
                                CodeReferenceElement: T
                                  PsiElement(identifier)('T')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        MethodCall
                          ReferenceExpression: asc.compareTo
                            ReferenceExpression: asc
                              PsiElement(identifier)('asc')
                            PsiElement(.)('.')
                            PsiElement(identifier)('compareTo')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: y
                              PsiElement(identifier)('y')
                            PsiElement())(')')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: minimum
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('minimum')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[T]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: cmp
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('cmp')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Ord[T]
                    SimpleType: Ord
                      CodeReferenceElement: Ord
                        PsiElement(identifier)('Ord')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            MethodCall
              ReferenceExpression: maximum
                PsiElement(identifier)('maximum')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: xs
                  PsiElement(identifier)('xs')
                PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: descending
                PsiElement(identifier)('descending')
              PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: App
            CodeReferenceElement: App
              PsiElement(identifier)('App')
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: Instances.test
            ReferenceExpression: Instances
              PsiElement(identifier)('Instances')
            PsiElement(.)('.')
            PsiElement(identifier)('test')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: PostConditions
              PsiElement(identifier)('PostConditions')
            PsiElement(.)('.')
            ImportSelectors
              PsiElement({)('{')
              ImportSelector
                CodeReferenceElement: result
                  PsiElement(identifier)('result')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ImportSelector
                CodeReferenceElement: ensuring
                  PsiElement(identifier)('ensuring')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s
              PsiElement(identifier)('s')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: List(1, 2, 3).sum
            MethodCall
              ReferenceExpression: List
                PsiElement(identifier)('List')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('1')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                IntegerLiteral
                  PsiElement(integer)('2')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                IntegerLiteral
                  PsiElement(integer)('3')
                PsiElement())(')')
            PsiElement(.)('.')
            PsiElement(identifier)('sum')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: s.ensuring
            ReferenceExpression: s
              PsiElement(identifier)('s')
            PsiElement(.)('.')
            PsiElement(identifier)('ensuring')
          ArgumentList
            PsiElement(()('(')
            InfixExpression
              ReferenceExpression: result
                PsiElement(identifier)('result')
              PsiWhiteSpace(' ')
              ReferenceExpression: ==
                PsiElement(identifier)('==')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('6')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        End: Test
          PsiElement(end)('end')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Test')
  PsiWhiteSpace('\n\n')
  ScObject: Completions
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Completions')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n\n  ')
        ScClass: Future
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Future')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScClass: HttpResponse
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('HttpResponse')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScClass: StatusCode
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('StatusCode')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScEnum: CompletionArg
          PsiComment(comment)('// The argument "magnet" type')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(enum)('enum')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('CompletionArg')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScEnumCases: Error
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ScEnumClassCase: Error
                  PsiElement(identifier)('Error')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        ClassParameter: s
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('s')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: String
                              CodeReferenceElement: String
                                PsiElement(identifier)('String')
                        PsiElement())(')')
                  ExtendsBlock
                    <empty list>
              PsiWhiteSpace('\n    ')
              ScEnumCases: Response
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ScEnumClassCase: Response
                  PsiElement(identifier)('Response')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        ClassParameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Future[HttpResponse]
                              SimpleType: Future
                                CodeReferenceElement: Future
                                  PsiElement(identifier)('Future')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: HttpResponse
                                  CodeReferenceElement: HttpResponse
                                    PsiElement(identifier)('HttpResponse')
                                PsiElement(])(']')
                        PsiElement())(')')
                  ExtendsBlock
                    <empty list>
              PsiWhiteSpace('\n    ')
              ScEnumCases: Status
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ScEnumClassCase: Status
                  PsiElement(identifier)('Status')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        ClassParameter: code
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('code')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Future[StatusCode]
                              SimpleType: Future
                                CodeReferenceElement: Future
                                  PsiElement(identifier)('Future')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: StatusCode
                                  CodeReferenceElement: StatusCode
                                    PsiElement(identifier)('StatusCode')
                                PsiElement(])(']')
                        PsiElement())(')')
                  ExtendsBlock
                    <empty list>
        PsiWhiteSpace('\n  ')
        ScObject: CompletionArg
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('CompletionArg')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n\n    ')
              PsiComment(comment)('// conversions defining the possible arguments to pass to `complete`')
              PsiWhiteSpace('\n    ')
              PsiComment(comment)('// these always come with CompletionArg')
              PsiWhiteSpace('\n    ')
              PsiComment(comment)('// They can be invoked explicitly, e.g.')
              PsiWhiteSpace('\n    ')
              PsiComment(comment)('//')
              PsiWhiteSpace('\n    ')
              PsiComment(comment)('//   CompletionArg.from(statusCode)')
              PsiWhiteSpace('\n\n    ')
              ScGivenAliasDefinition: fromString
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(given)('given')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('fromString')
                Parameters
                  <empty list>
                PsiWhiteSpace('    ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Conversion[String, CompletionArg]
                  SimpleType: Conversion
                    CodeReferenceElement: Conversion
                      PsiElement(identifier)('Conversion')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: CompletionArg
                      CodeReferenceElement: CompletionArg
                        PsiElement(identifier)('CompletionArg')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Error
                    PsiElement(identifier)('Error')
                  ArgumentList
                    PsiElement(()('(')
                    UnderscoreSection
                      PsiElement(_)('_')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScGivenAliasDefinition: fromFuture
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(given)('given')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('fromFuture')
                Parameters
                  <empty list>
                PsiWhiteSpace('    ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Conversion[Future[HttpResponse], CompletionArg]
                  SimpleType: Conversion
                    CodeReferenceElement: Conversion
                      PsiElement(identifier)('Conversion')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: Future[HttpResponse]
                      SimpleType: Future
                        CodeReferenceElement: Future
                          PsiElement(identifier)('Future')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: HttpResponse
                          CodeReferenceElement: HttpResponse
                            PsiElement(identifier)('HttpResponse')
                        PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: CompletionArg
                      CodeReferenceElement: CompletionArg
                        PsiElement(identifier)('CompletionArg')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Response
                    PsiElement(identifier)('Response')
                  ArgumentList
                    PsiElement(()('(')
                    UnderscoreSection
                      PsiElement(_)('_')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScGivenAliasDefinition: fromStatusCode
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(given)('given')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('fromStatusCode')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Conversion[Future[StatusCode], CompletionArg]
                  SimpleType: Conversion
                    CodeReferenceElement: Conversion
                      PsiElement(identifier)('Conversion')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: Future[StatusCode]
                      SimpleType: Future
                        CodeReferenceElement: Future
                          PsiElement(identifier)('Future')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: StatusCode
                          CodeReferenceElement: StatusCode
                            PsiElement(identifier)('StatusCode')
                        PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: CompletionArg
                      CodeReferenceElement: CompletionArg
                        PsiElement(identifier)('CompletionArg')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Status
                    PsiElement(identifier)('Status')
                  ArgumentList
                    PsiElement(()('(')
                    UnderscoreSection
                      PsiElement(_)('_')
                    PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: CompletionArg
              PsiElement(identifier)('CompletionArg')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: complete
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('complete')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: arg
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('arg')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: CompletionArg
                    CodeReferenceElement: CompletionArg
                      PsiElement(identifier)('CompletionArg')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: arg
              PsiElement(identifier)('arg')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Error
                    PsiElement(identifier)('Error')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: s
                      PsiElement(identifier)('s')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: ???
                    PsiElement(identifier)('???')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Response
                    PsiElement(identifier)('Response')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: f
                      PsiElement(identifier)('f')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: ???
                    PsiElement(identifier)('???')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Status
                    PsiElement(identifier)('Status')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: code
                      PsiElement(identifier)('code')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: ???
                    PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        End: Completions
          PsiElement(end)('end')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Completions')
