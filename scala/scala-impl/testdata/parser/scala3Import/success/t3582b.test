object ParamScoping {
  // scoping worked fine in the result type, but was wrong in body
  // reason: typedTypeDef needs new context, which was set up by typed1 but not by typedDefDef and typedClassDef
  def noOverlapFOwithHO[T, G[T]]: G[T] =  null.asInstanceOf[G[T]]
}
-----
ScalaFile
  ScObject: ParamScoping
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ParamScoping')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: noOverlapFOwithHO
          PsiComment(comment)('// scoping worked fine in the result type, but was wrong in body')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('// reason: typedTypeDef needs new context, which was set up by typed1 but not by typedDefDef and typedClassDef')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('noOverlapFOwithHO')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: G
              PsiElement(identifier)('G')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: T
                  PsiElement(identifier)('T')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: G[T]
            SimpleType: G
              CodeReferenceElement: G
                PsiElement(identifier)('G')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('  ')
          GenericCall
            ReferenceExpression: null.asInstanceOf
              NullLiteral
                PsiElement(null)('null')
              PsiElement(.)('.')
              PsiElement(identifier)('asInstanceOf')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: G[T]
                SimpleType: G
                  CodeReferenceElement: G
                    PsiElement(identifier)('G')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiElement(])(']')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
