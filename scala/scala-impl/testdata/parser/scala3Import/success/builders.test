object builders {

  trait Builder[-From, +To, -Elem] {
    def += (elem: Elem): Unit
    def result: To
  }

  implicit def iterableBuilder[A, B]: builders.Builder[Iterable[A],Iterable[B],B] = new Builder[Iterable[A], Iterable[B], B] {
    println("new iterable builder")
    private val buf = new scala.collection.mutable.ListBuffer[B]
    def += (elem: B): Unit = { buf += elem }
    def result: Iterable[B] = buf.toList
  }

  implicit def listBuilder[A, B]: builders.Builder[List[A],List[B],B] = new Builder[List[A], List[B], B] {
    println("new list builder")
    private val buf = new scala.collection.mutable.ListBuffer[B]
    def += (elem: B): Unit = { buf += elem }
    def result: List[B] = buf.toList
  }
/*
  def fill[A, Dim1, Dim2, Coll](n1: Int, n2: Int, elem: A)(implicit b1: Builder[Coll, Dim1, A], b2: Builder[Coll, Dim2, Dim1]) = {
    for (i <- 0 until n1) {
      for (j <- 0 until n2) {
        b1 += elem
      }
      b2 += b1.result
    }
    b2.result
  }
*/
/*
  implicit def arrayBuilder[A, B] = new Builder[Array[A], Array[B], B] {
    println("new arr ay builder")
    private val buf = new scala.collection.mutable.ListBuffer[B]
    def += (elem: B) { buf += elem }
    def result: Array[B] = buf.toArray
  }
*/
  class Iter[A, C](elems: List[A]) {
    def ++ [B  >: A, D](xs: Iterable[B])(implicit b: Builder[C, D, B]): D = {
      for (x <- elems) b += x
      for (x <- xs) b += x
      b.result
    }
    def map[B, D](f: A => B)(implicit b: Builder[C, D, B]): D = {
      for (x <- elems) b += f(x)
      b.result
    }
  }

  def main(args : Array[String]) : Unit = {
    val x1 = new Iter[Int, List[Int]](List(1, 2, 3))
//    val x2 = new Iter[Int, Array[Int]](List(1, 2, 3))
    val x3 = new Iter[Int, Iterable[Int]](List(1, 2, 3))
    val y1: List[Int] = x1.map (_ + 1)
//    val y2: Array[Int] = x2.map (_ + 1)
    val y3: Iterable[Int] = x3.map (_ + 1)
    val z1: List[Int] = y1
//    val z2: Array[Int] = y2
    val z3: Iterable[Int] = y3
    println(z1)
//    println(z2)
    println(z3)
  }
}
-----
ScalaFile
  ScObject: builders
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('builders')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Builder
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Builder')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: From
              PsiElement(identifier)('-')
              PsiElement(identifier)('From')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: To
              PsiElement(identifier)('+')
              PsiElement(identifier)('To')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: Elem
              PsiElement(identifier)('-')
              PsiElement(identifier)('Elem')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: +=
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('+=')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: elem
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('elem')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Elem
                          CodeReferenceElement: Elem
                            PsiElement(identifier)('Elem')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: result
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('result')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: To
                  CodeReferenceElement: To
                    PsiElement(identifier)('To')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: iterableBuilder
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('iterableBuilder')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: builders.Builder[Iterable[A],Iterable[B],B]
            SimpleType: builders.Builder
              CodeReferenceElement: builders.Builder
                CodeReferenceElement: builders
                  PsiElement(identifier)('builders')
                PsiElement(.)('.')
                PsiElement(identifier)('Builder')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Iterable[A]
                SimpleType: Iterable
                  CodeReferenceElement: Iterable
                    PsiElement(identifier)('Iterable')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
              PsiElement(,)(',')
              ParametrizedType: Iterable[B]
                SimpleType: Iterable
                  CodeReferenceElement: Iterable
                    PsiElement(identifier)('Iterable')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiElement(])(']')
              PsiElement(,)(',')
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Builder[Iterable[A], Iterable[B], B]
                    SimpleType: Builder
                      CodeReferenceElement: Builder
                        PsiElement(identifier)('Builder')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Iterable[A]
                        SimpleType: Iterable
                          CodeReferenceElement: Iterable
                            PsiElement(identifier)('Iterable')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Iterable[B]
                        SimpleType: Iterable
                          CodeReferenceElement: Iterable
                            PsiElement(identifier)('Iterable')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"new iterable builder"')
                    PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScPatternDefinition: buf
                  AnnotationsList
                    <empty list>
                  Modifiers
                    AccessModifier
                      PsiElement(private)('private')
                  PsiWhiteSpace(' ')
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: buf
                      PsiElement(identifier)('buf')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          ParametrizedType: scala.collection.mutable.ListBuffer[B]
                            SimpleType: scala.collection.mutable.ListBuffer
                              CodeReferenceElement: scala.collection.mutable.ListBuffer
                                CodeReferenceElement: scala.collection.mutable
                                  CodeReferenceElement: scala.collection
                                    CodeReferenceElement: scala
                                      PsiElement(identifier)('scala')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('collection')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('mutable')
                                PsiElement(.)('.')
                                PsiElement(identifier)('ListBuffer')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: +=
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('+=')
                  PsiWhiteSpace(' ')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: elem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('elem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Unit
                    CodeReferenceElement: Unit
                      PsiElement(identifier)('Unit')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace(' ')
                    InfixExpression
                      ReferenceExpression: buf
                        PsiElement(identifier)('buf')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: +=
                        PsiElement(identifier)('+=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: elem
                        PsiElement(identifier)('elem')
                    PsiWhiteSpace(' ')
                    PsiElement(})('}')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: result
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('result')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterable[B]
                    SimpleType: Iterable
                      CodeReferenceElement: Iterable
                        PsiElement(identifier)('Iterable')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: buf.toList
                    ReferenceExpression: buf
                      PsiElement(identifier)('buf')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toList')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: listBuilder
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('listBuilder')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: builders.Builder[List[A],List[B],B]
            SimpleType: builders.Builder
              CodeReferenceElement: builders.Builder
                CodeReferenceElement: builders
                  PsiElement(identifier)('builders')
                PsiElement(.)('.')
                PsiElement(identifier)('Builder')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[A]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
              PsiElement(,)(',')
              ParametrizedType: List[B]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiElement(])(']')
              PsiElement(,)(',')
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Builder[List[A], List[B], B]
                    SimpleType: Builder
                      CodeReferenceElement: Builder
                        PsiElement(identifier)('Builder')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: List[A]
                        SimpleType: List
                          CodeReferenceElement: List
                            PsiElement(identifier)('List')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: List[B]
                        SimpleType: List
                          CodeReferenceElement: List
                            PsiElement(identifier)('List')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"new list builder"')
                    PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScPatternDefinition: buf
                  AnnotationsList
                    <empty list>
                  Modifiers
                    AccessModifier
                      PsiElement(private)('private')
                  PsiWhiteSpace(' ')
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: buf
                      PsiElement(identifier)('buf')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          ParametrizedType: scala.collection.mutable.ListBuffer[B]
                            SimpleType: scala.collection.mutable.ListBuffer
                              CodeReferenceElement: scala.collection.mutable.ListBuffer
                                CodeReferenceElement: scala.collection.mutable
                                  CodeReferenceElement: scala.collection
                                    CodeReferenceElement: scala
                                      PsiElement(identifier)('scala')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('collection')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('mutable')
                                PsiElement(.)('.')
                                PsiElement(identifier)('ListBuffer')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: +=
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('+=')
                  PsiWhiteSpace(' ')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: elem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('elem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Unit
                    CodeReferenceElement: Unit
                      PsiElement(identifier)('Unit')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace(' ')
                    InfixExpression
                      ReferenceExpression: buf
                        PsiElement(identifier)('buf')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: +=
                        PsiElement(identifier)('+=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: elem
                        PsiElement(identifier)('elem')
                    PsiWhiteSpace(' ')
                    PsiElement(})('}')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: result
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('result')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: List[B]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: buf.toList
                    ReferenceExpression: buf
                      PsiElement(identifier)('buf')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toList')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n')
        ScClass: Iter
          PsiComment(BlockComment)('/*\n  def fill[A, Dim1, Dim2, Coll](n1: Int, n2: Int, elem: A)(implicit b1: Builder[Coll, Dim1, A], b2: Builder[Coll, Dim2, Dim1]) = {\n    for (i <- 0 until n1) {\n      for (j <- 0 until n2) {\n        b1 += elem\n      }\n      b2 += b1.result\n    }\n    b2.result\n  }\n*/')
          PsiWhiteSpace('\n')
          PsiComment(BlockComment)('/*\n  implicit def arrayBuilder[A, B] = new Builder[Array[A], Array[B], B] {\n    println("new arr ay builder")\n    private val buf = new scala.collection.mutable.ListBuffer[B]\n    def += (elem: B) { buf += elem }\n    def result: Array[B] = buf.toArray\n  }\n*/')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Iter')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: C
              PsiElement(identifier)('C')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: elems
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('elems')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: List[A]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: ++
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('++')
                PsiWhiteSpace(' ')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                    PsiWhiteSpace('  ')
                    PsiElement(>:)('>:')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: D
                    PsiElement(identifier)('D')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: xs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('xs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Iterable[B]
                          SimpleType: Iterable
                            CodeReferenceElement: Iterable
                              PsiElement(identifier)('Iterable')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: b
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('b')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Builder[C, D, B]
                          SimpleType: Builder
                            CodeReferenceElement: Builder
                              PsiElement(identifier)('Builder')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: C
                              CodeReferenceElement: C
                                PsiElement(identifier)('C')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: D
                              CodeReferenceElement: D
                                PsiElement(identifier)('D')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: D
                  CodeReferenceElement: D
                    PsiElement(identifier)('D')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  ForStatement
                    PsiElement(for)('for')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    Enumerators
                      Generator
                        ReferencePattern: x
                          PsiElement(identifier)('x')
                        PsiWhiteSpace(' ')
                        PsiElement(<-)('<-')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: elems
                          PsiElement(identifier)('elems')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    InfixExpression
                      ReferenceExpression: b
                        PsiElement(identifier)('b')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: +=
                        PsiElement(identifier)('+=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                  PsiWhiteSpace('\n      ')
                  ForStatement
                    PsiElement(for)('for')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    Enumerators
                      Generator
                        ReferencePattern: x
                          PsiElement(identifier)('x')
                        PsiWhiteSpace(' ')
                        PsiElement(<-)('<-')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    InfixExpression
                      ReferenceExpression: b
                        PsiElement(identifier)('b')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: +=
                        PsiElement(identifier)('+=')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                  PsiWhiteSpace('\n      ')
                  ReferenceExpression: b.result
                    ReferenceExpression: b
                      PsiElement(identifier)('b')
                    PsiElement(.)('.')
                    PsiElement(identifier)('result')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: map
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('map')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: D
                    PsiElement(identifier)('D')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: A => B
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: b
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('b')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Builder[C, D, B]
                          SimpleType: Builder
                            CodeReferenceElement: Builder
                              PsiElement(identifier)('Builder')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: C
                              CodeReferenceElement: C
                                PsiElement(identifier)('C')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: D
                              CodeReferenceElement: D
                                PsiElement(identifier)('D')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: D
                  CodeReferenceElement: D
                    PsiElement(identifier)('D')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  ForStatement
                    PsiElement(for)('for')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    Enumerators
                      Generator
                        ReferencePattern: x
                          PsiElement(identifier)('x')
                        PsiWhiteSpace(' ')
                        PsiElement(<-)('<-')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: elems
                          PsiElement(identifier)('elems')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    InfixExpression
                      ReferenceExpression: b
                        PsiElement(identifier)('b')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: +=
                        PsiElement(identifier)('+=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: f
                          PsiElement(identifier)('f')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement())(')')
                  PsiWhiteSpace('\n      ')
                  ReferenceExpression: b.result
                    ReferenceExpression: b
                      PsiElement(identifier)('b')
                    PsiElement(.)('.')
                    PsiElement(identifier)('result')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[String]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: x1
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: x1
                  PsiElement(identifier)('x1')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Iter[Int, List[Int]]
                        SimpleType: Iter
                          CodeReferenceElement: Iter
                            PsiElement(identifier)('Iter')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ParametrizedType: List[Int]
                            SimpleType: List
                              CodeReferenceElement: List
                                PsiElement(identifier)('List')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: Int
                                CodeReferenceElement: Int
                                  PsiElement(identifier)('Int')
                              PsiElement(])(']')
                          PsiElement(])(']')
                      ArgumentList
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: List
                            PsiElement(identifier)('List')
                          ArgumentList
                            PsiElement(()('(')
                            IntegerLiteral
                              PsiElement(integer)('1')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('2')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('3')
                            PsiElement())(')')
                        PsiElement())(')')
            PsiWhiteSpace('\n')
            ScPatternDefinition: x3
              PsiComment(comment)('//    val x2 = new Iter[Int, Array[Int]](List(1, 2, 3))')
              PsiWhiteSpace('\n    ')
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: x3
                  PsiElement(identifier)('x3')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Iter[Int, Iterable[Int]]
                        SimpleType: Iter
                          CodeReferenceElement: Iter
                            PsiElement(identifier)('Iter')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ParametrizedType: Iterable[Int]
                            SimpleType: Iterable
                              CodeReferenceElement: Iterable
                                PsiElement(identifier)('Iterable')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: Int
                                CodeReferenceElement: Int
                                  PsiElement(identifier)('Int')
                              PsiElement(])(']')
                          PsiElement(])(']')
                      ArgumentList
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: List
                            PsiElement(identifier)('List')
                          ArgumentList
                            PsiElement(()('(')
                            IntegerLiteral
                              PsiElement(integer)('1')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('2')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('3')
                            PsiElement())(')')
                        PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: y1
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: y1
                  PsiElement(identifier)('y1')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: List[Int]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: x1.map
                  ReferenceExpression: x1
                    PsiElement(identifier)('x1')
                  PsiElement(.)('.')
                  PsiElement(identifier)('map')
                PsiWhiteSpace(' ')
                ArgumentList
                  PsiElement(()('(')
                  InfixExpression
                    UnderscoreSection
                      PsiElement(_)('_')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: +
                      PsiElement(identifier)('+')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('1')
                  PsiElement())(')')
            PsiWhiteSpace('\n')
            ScPatternDefinition: y3
              PsiComment(comment)('//    val y2: Array[Int] = x2.map (_ + 1)')
              PsiWhiteSpace('\n    ')
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: y3
                  PsiElement(identifier)('y3')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: Iterable[Int]
                SimpleType: Iterable
                  CodeReferenceElement: Iterable
                    PsiElement(identifier)('Iterable')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: x3.map
                  ReferenceExpression: x3
                    PsiElement(identifier)('x3')
                  PsiElement(.)('.')
                  PsiElement(identifier)('map')
                PsiWhiteSpace(' ')
                ArgumentList
                  PsiElement(()('(')
                  InfixExpression
                    UnderscoreSection
                      PsiElement(_)('_')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: +
                      PsiElement(identifier)('+')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('1')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: z1
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: z1
                  PsiElement(identifier)('z1')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: List[Int]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: y1
                PsiElement(identifier)('y1')
            PsiWhiteSpace('\n')
            ScPatternDefinition: z3
              PsiComment(comment)('//    val z2: Array[Int] = y2')
              PsiWhiteSpace('\n    ')
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: z3
                  PsiElement(identifier)('z3')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: Iterable[Int]
                SimpleType: Iterable
                  CodeReferenceElement: Iterable
                    PsiElement(identifier)('Iterable')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: y3
                PsiElement(identifier)('y3')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: z1
                  PsiElement(identifier)('z1')
                PsiElement())(')')
            PsiWhiteSpace('\n')
            PsiComment(comment)('//    println(z2)')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: z3
                  PsiElement(identifier)('z3')
                PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
