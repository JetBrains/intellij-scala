given foo(using x: Int): AnyRef with
  type T = x.type

// #7859

trait Lub2[A, B]:
  type Output

given [A <: C, B <: C, C]: Lub2[A, B] with
  type Output = C

trait Lub[Union]:
  type Output

given [A]: Lub[A] with
  type Output = A

given [Left, Right](
    using lubLeft: Lub[Right], lubRight: Lub[Right])(
    using lub2: Lub2[lubLeft.Output, lubRight.Output])
  : Lub[Left | Right] with
  type Output = lub2.Output
-----
ScalaFile
  ScGivenDefinition: foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('foo')
    Parameters
      ParametersClause
        PsiElement(()('(')
        PsiElement(using)('using')
        PsiWhiteSpace(' ')
        Parameter: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ExtendsBlock
      TemplateParents
        ConstructorInvocation
          SimpleType: AnyRef
            CodeReferenceElement: AnyRef
              PsiElement(identifier)('AnyRef')
      PsiWhiteSpace(' ')
      PsiElement(with)('with')
      PsiWhiteSpace('\n  ')
      ScTemplateBody
        ScTypeAliasDefinition: T
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: x.type
            CodeReferenceElement: x
              PsiElement(identifier)('x')
            PsiElement(.)('.')
            PsiElement(type)('type')
  PsiWhiteSpace('\n\n')
  PsiComment(comment)('// #7859')
  PsiWhiteSpace('\n\n')
  ScTrait: Lub2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Lub2')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
      PsiElement(])(']')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Output
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Output')
  PsiWhiteSpace('\n\n')
  ScGivenDefinition: given_Lub2_A_B
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: C
          CodeReferenceElement: C
            PsiElement(identifier)('C')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: C
          CodeReferenceElement: C
            PsiElement(identifier)('C')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: C
        PsiElement(identifier)('C')
      PsiElement(])(']')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ExtendsBlock
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Lub2[A, B]
            SimpleType: Lub2
              CodeReferenceElement: Lub2
                PsiElement(identifier)('Lub2')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
              PsiElement(])(']')
      PsiWhiteSpace(' ')
      PsiElement(with)('with')
      PsiWhiteSpace('\n  ')
      ScTemplateBody
        ScTypeAliasDefinition: Output
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Output')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: C
            CodeReferenceElement: C
              PsiElement(identifier)('C')
  PsiWhiteSpace('\n\n')
  ScTrait: Lub
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Lub')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: Union
        PsiElement(identifier)('Union')
      PsiElement(])(']')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Output
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Output')
  PsiWhiteSpace('\n\n')
  ScGivenDefinition: given_Lub_A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ExtendsBlock
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Lub[A]
            SimpleType: Lub
              CodeReferenceElement: Lub
                PsiElement(identifier)('Lub')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
      PsiWhiteSpace(' ')
      PsiElement(with)('with')
      PsiWhiteSpace('\n  ')
      ScTemplateBody
        ScTypeAliasDefinition: Output
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Output')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
  PsiWhiteSpace('\n\n')
  ScGivenDefinition: given_Lub_|
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: Left
        PsiElement(identifier)('Left')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: Right
        PsiElement(identifier)('Right')
      PsiElement(])(']')
    Parameters
      ParametersClause
        PsiElement(()('(')
        PsiWhiteSpace('\n    ')
        PsiElement(using)('using')
        PsiWhiteSpace(' ')
        Parameter: lubLeft
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('lubLeft')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: Lub[Right]
              SimpleType: Lub
                CodeReferenceElement: Lub
                  PsiElement(identifier)('Lub')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Right
                  CodeReferenceElement: Right
                    PsiElement(identifier)('Right')
                PsiElement(])(']')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        Parameter: lubRight
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('lubRight')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: Lub[Right]
              SimpleType: Lub
                CodeReferenceElement: Lub
                  PsiElement(identifier)('Lub')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Right
                  CodeReferenceElement: Right
                    PsiElement(identifier)('Right')
                PsiElement(])(']')
        PsiElement())(')')
      ParametersClause
        PsiElement(()('(')
        PsiWhiteSpace('\n    ')
        PsiElement(using)('using')
        PsiWhiteSpace(' ')
        Parameter: lub2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('lub2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: Lub2[lubLeft.Output, lubRight.Output]
              SimpleType: Lub2
                CodeReferenceElement: Lub2
                  PsiElement(identifier)('Lub2')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: lubLeft.Output
                  CodeReferenceElement: lubLeft.Output
                    CodeReferenceElement: lubLeft
                      PsiElement(identifier)('lubLeft')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Output')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: lubRight.Output
                  CodeReferenceElement: lubRight.Output
                    CodeReferenceElement: lubRight
                      PsiElement(identifier)('lubRight')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Output')
                PsiElement(])(']')
        PsiElement())(')')
    PsiWhiteSpace('\n  ')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ExtendsBlock
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Lub[Left | Right]
            SimpleType: Lub
              CodeReferenceElement: Lub
                PsiElement(identifier)('Lub')
            TypeArgumentsList
              PsiElement([)('[')
              InfixType: Left | Right
                SimpleType: Left
                  CodeReferenceElement: Left
                    PsiElement(identifier)('Left')
                PsiWhiteSpace(' ')
                CodeReferenceElement: |
                  PsiElement(identifier)('|')
                PsiWhiteSpace(' ')
                SimpleType: Right
                  CodeReferenceElement: Right
                    PsiElement(identifier)('Right')
              PsiElement(])(']')
      PsiWhiteSpace(' ')
      PsiElement(with)('with')
      PsiWhiteSpace('\n  ')
      ScTemplateBody
        ScTypeAliasDefinition: Output
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Output')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: lub2.Output
            CodeReferenceElement: lub2.Output
              CodeReferenceElement: lub2
                PsiElement(identifier)('lub2')
              PsiElement(.)('.')
              PsiElement(identifier)('Output')
