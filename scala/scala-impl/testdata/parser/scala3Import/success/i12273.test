import scala.annotation.unchecked.uncheckedVariance

final case class Outlet[T](out: T)
final case class SourceShape[+T](val out: Outlet[T @uncheckedVariance])
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.annotation.unchecked.uncheckedVariance
        CodeReferenceElement: scala.annotation.unchecked
          CodeReferenceElement: scala.annotation
            CodeReferenceElement: scala
              PsiElement(identifier)('scala')
            PsiElement(.)('.')
            PsiElement(identifier)('annotation')
          PsiElement(.)('.')
          PsiElement(identifier)('unchecked')
        PsiElement(.)('.')
        PsiElement(identifier)('uncheckedVariance')
  PsiWhiteSpace('\n\n')
  ScClass: Outlet
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
      PsiWhiteSpace(' ')
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Outlet')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: out
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('out')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScClass: SourceShape
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
      PsiWhiteSpace(' ')
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('SourceShape')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('+')
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: out
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('out')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: Outlet[T @uncheckedVariance]
                SimpleType: Outlet
                  CodeReferenceElement: Outlet
                    PsiElement(identifier)('Outlet')
                TypeArgumentsList
                  PsiElement([)('[')
                  TypeWithAnnotation: T @uncheckedVariance
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiWhiteSpace(' ')
                    AnnotationsList
                      Annotation
                        PsiElement(@)('@')
                        AnnotationExpression
                          ConstructorInvocation
                            SimpleType: uncheckedVariance
                              CodeReferenceElement: uncheckedVariance
                                PsiElement(identifier)('uncheckedVariance')
                  PsiElement(])(']')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
