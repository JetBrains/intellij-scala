package s

import j.J_1

class ScalaSubClass extends J_1 {
  override def method(javaInnerClass: J_1#JavaInnerClass): Unit = {
    println("world")
  }
}

-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: s
      PsiElement(identifier)('s')
    PsiWhiteSpace('\n\n')
    ScImportStatement
      PsiElement(import)('import')
      PsiWhiteSpace(' ')
      ImportExpression
        CodeReferenceElement: j.J_1
          CodeReferenceElement: j
            PsiElement(identifier)('j')
          PsiElement(.)('.')
          PsiElement(identifier)('J_1')
    PsiWhiteSpace('\n\n')
    ScClass: ScalaSubClass
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('ScalaSubClass')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: J_1
              CodeReferenceElement: J_1
                PsiElement(identifier)('J_1')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: method
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(override)('override')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('method')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: javaInnerClass
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('javaInnerClass')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    TypeProjection: J_1#JavaInnerClass
                      SimpleType: J_1
                        CodeReferenceElement: J_1
                          PsiElement(identifier)('J_1')
                      PsiElement(#)('#')
                      PsiElement(identifier)('JavaInnerClass')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              MethodCall
                ReferenceExpression: println
                  PsiElement(identifier)('println')
                ArgumentList
                  PsiElement(()('(')
                  StringLiteral
                    PsiElement(string content)('"world"')
                  PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
