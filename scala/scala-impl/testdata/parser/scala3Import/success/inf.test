object Test {

  def f[T](x: T, y: T): T = x
  def g[T](x: T)(y: T): T = x

  val x: Int = 1
  val y: Long = x

  val xs: Seq[Int] = Seq(1)
  val ys: Traversable[Int] = xs

  val r1 = f(x, y)
  val s1: AnyVal = r1
  val r2 = f(y, x)
  val s2: AnyVal = r2
  val r3 = f(xs, ys)
  val s3: Traversable[Int] = r3
  val r4 = f(ys, xs)
  val s4: Traversable[Int] = r4
  val r5 = g(x)(y)
  val s5: AnyVal = r5
  val r6 = g(y)(x)
  val s6: AnyVal = r6
  val r7 = g(xs)(ys)
  val s7: Traversable[Int]= r7
  val r8 = g(ys)(xs)
  val s8: Traversable[Int] = r8
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('y')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: g
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('g')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              Parameter: y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('y')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('1')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y
              PsiElement(identifier)('y')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Long
            CodeReferenceElement: Long
              PsiElement(identifier)('Long')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: xs
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xs
              PsiElement(identifier)('xs')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Seq[Int]
            SimpleType: Seq
              CodeReferenceElement: Seq
                PsiElement(identifier)('Seq')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Seq
              PsiElement(identifier)('Seq')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: ys
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: ys
              PsiElement(identifier)('ys')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Traversable[Int]
            SimpleType: Traversable
              CodeReferenceElement: Traversable
                PsiElement(identifier)('Traversable')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: xs
            PsiElement(identifier)('xs')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: r1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: r1
              PsiElement(identifier)('r1')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: f
              PsiElement(identifier)('f')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: y
                PsiElement(identifier)('y')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s1
              PsiElement(identifier)('s1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: AnyVal
            CodeReferenceElement: AnyVal
              PsiElement(identifier)('AnyVal')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: r1
            PsiElement(identifier)('r1')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: r2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: r2
              PsiElement(identifier)('r2')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: f
              PsiElement(identifier)('f')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: y
                PsiElement(identifier)('y')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s2
              PsiElement(identifier)('s2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: AnyVal
            CodeReferenceElement: AnyVal
              PsiElement(identifier)('AnyVal')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: r2
            PsiElement(identifier)('r2')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: r3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: r3
              PsiElement(identifier)('r3')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: f
              PsiElement(identifier)('f')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: xs
                PsiElement(identifier)('xs')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: ys
                PsiElement(identifier)('ys')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s3
              PsiElement(identifier)('s3')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Traversable[Int]
            SimpleType: Traversable
              CodeReferenceElement: Traversable
                PsiElement(identifier)('Traversable')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: r3
            PsiElement(identifier)('r3')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: r4
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: r4
              PsiElement(identifier)('r4')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: f
              PsiElement(identifier)('f')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: ys
                PsiElement(identifier)('ys')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: xs
                PsiElement(identifier)('xs')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s4
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s4
              PsiElement(identifier)('s4')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Traversable[Int]
            SimpleType: Traversable
              CodeReferenceElement: Traversable
                PsiElement(identifier)('Traversable')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: r4
            PsiElement(identifier)('r4')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: r5
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: r5
              PsiElement(identifier)('r5')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            MethodCall
              ReferenceExpression: g
                PsiElement(identifier)('g')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: x
                  PsiElement(identifier)('x')
                PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: y
                PsiElement(identifier)('y')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s5
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s5
              PsiElement(identifier)('s5')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: AnyVal
            CodeReferenceElement: AnyVal
              PsiElement(identifier)('AnyVal')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: r5
            PsiElement(identifier)('r5')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: r6
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: r6
              PsiElement(identifier)('r6')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            MethodCall
              ReferenceExpression: g
                PsiElement(identifier)('g')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: y
                  PsiElement(identifier)('y')
                PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s6
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s6
              PsiElement(identifier)('s6')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: AnyVal
            CodeReferenceElement: AnyVal
              PsiElement(identifier)('AnyVal')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: r6
            PsiElement(identifier)('r6')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: r7
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: r7
              PsiElement(identifier)('r7')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            MethodCall
              ReferenceExpression: g
                PsiElement(identifier)('g')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: xs
                  PsiElement(identifier)('xs')
                PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: ys
                PsiElement(identifier)('ys')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s7
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s7
              PsiElement(identifier)('s7')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Traversable[Int]
            SimpleType: Traversable
              CodeReferenceElement: Traversable
                PsiElement(identifier)('Traversable')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: r7
            PsiElement(identifier)('r7')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: r8
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: r8
              PsiElement(identifier)('r8')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            MethodCall
              ReferenceExpression: g
                PsiElement(identifier)('g')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: ys
                  PsiElement(identifier)('ys')
                PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: xs
                PsiElement(identifier)('xs')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s8
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s8
              PsiElement(identifier)('s8')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Traversable[Int]
            SimpleType: Traversable
              CodeReferenceElement: Traversable
                PsiElement(identifier)('Traversable')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: r8
            PsiElement(identifier)('r8')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
