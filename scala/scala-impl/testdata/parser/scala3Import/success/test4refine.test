trait C {}
trait D {}
trait E {}

object test {
  def c: C = c;
  def d: D = d;
  def e: E = e;
}

import test._;

trait S extends p.I {
    type Y = D;
    def bar: E = foo(c,d);
}

abstract class O() {
    type X;
    abstract trait I {
    type Y;
        def foo(x: X, y: Y): E = e;
    }
    val i:I { type Y = E } = null;
    val j:I { type Y = X } = null;
}

object p extends O() {
  type X = C;

  def main = {
    val s: S = null;
    import s._;
    foo(c,d);
    p.i.foo(c,e);
    p.j.foo(c,c);
    bar
  }
}

class Main() {
  val s: S = null;
  import s._;
  foo(c,d);
  p.i.foo(c,e);
  p.j.foo(c,c);
  bar;
}

-----
ScalaFile
  ScTrait: C
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('C')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScTrait: D
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('D')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScTrait: E
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('E')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: c
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('c')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: C
            CodeReferenceElement: C
              PsiElement(identifier)('C')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: c
            PsiElement(identifier)('c')
        PsiElement(;)(';')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: d
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('d')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: D
            CodeReferenceElement: D
              PsiElement(identifier)('D')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: d
            PsiElement(identifier)('d')
        PsiElement(;)(';')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: e
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('e')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: E
            CodeReferenceElement: E
              PsiElement(identifier)('E')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: e
            PsiElement(identifier)('e')
        PsiElement(;)(';')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: test
        PsiElement(identifier)('test')
      PsiElement(.)('.')
      PsiElement(_)('_')
  PsiElement(;)(';')
  PsiWhiteSpace('\n\n')
  ScTrait: S
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('S')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: p.I
            CodeReferenceElement: p.I
              CodeReferenceElement: p
                PsiElement(identifier)('p')
              PsiElement(.)('.')
              PsiElement(identifier)('I')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n    ')
        ScTypeAliasDefinition: Y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Y')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: D
            CodeReferenceElement: D
              PsiElement(identifier)('D')
        PsiElement(;)(';')
        PsiWhiteSpace('\n    ')
        ScFunctionDefinition: bar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('bar')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: E
            CodeReferenceElement: E
              PsiElement(identifier)('E')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: foo
              PsiElement(identifier)('foo')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: c
                PsiElement(identifier)('c')
              PsiElement(,)(',')
              ReferenceExpression: d
                PsiElement(identifier)('d')
              PsiElement())(')')
        PsiElement(;)(';')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: O
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(abstract)('abstract')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('O')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n    ')
        ScTypeAliasDeclaration: X
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('X')
        PsiElement(;)(';')
        PsiWhiteSpace('\n    ')
        ScTrait: I
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(abstract)('abstract')
          PsiWhiteSpace(' ')
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('I')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDeclaration: Y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Y')
              PsiElement(;)(';')
              PsiWhiteSpace('\n        ')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: X
                          CodeReferenceElement: X
                            PsiElement(identifier)('X')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: y
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('y')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Y
                          CodeReferenceElement: Y
                            PsiElement(identifier)('Y')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: E
                  CodeReferenceElement: E
                    PsiElement(identifier)('E')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: e
                  PsiElement(identifier)('e')
              PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              PsiElement(})('}')
        PsiWhiteSpace('\n    ')
        ScPatternDefinition: i
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: i
              PsiElement(identifier)('i')
          PsiElement(:)(':')
          CompoundType: I { type Y = E }
            SimpleType: I
              CodeReferenceElement: I
                PsiElement(identifier)('I')
            PsiWhiteSpace(' ')
            Refinement
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScTypeAliasDefinition: Y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Y')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: E
                  CodeReferenceElement: E
                    PsiElement(identifier)('E')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          NullLiteral
            PsiElement(null)('null')
        PsiElement(;)(';')
        PsiWhiteSpace('\n    ')
        ScPatternDefinition: j
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: j
              PsiElement(identifier)('j')
          PsiElement(:)(':')
          CompoundType: I { type Y = X }
            SimpleType: I
              CodeReferenceElement: I
                PsiElement(identifier)('I')
            PsiWhiteSpace(' ')
            Refinement
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScTypeAliasDefinition: Y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Y')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: X
                  CodeReferenceElement: X
                    PsiElement(identifier)('X')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          NullLiteral
            PsiElement(null)('null')
        PsiElement(;)(';')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: p
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('p')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: O
            CodeReferenceElement: O
              PsiElement(identifier)('O')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: X
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('X')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: C
            CodeReferenceElement: C
              PsiElement(identifier)('C')
        PsiElement(;)(';')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: s
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: s
                  PsiElement(identifier)('s')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: S
                CodeReferenceElement: S
                  PsiElement(identifier)('S')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              NullLiteral
                PsiElement(null)('null')
            PsiElement(;)(';')
            PsiWhiteSpace('\n    ')
            ScImportStatement
              PsiElement(import)('import')
              PsiWhiteSpace(' ')
              ImportExpression
                CodeReferenceElement: s
                  PsiElement(identifier)('s')
                PsiElement(.)('.')
                PsiElement(_)('_')
            PsiElement(;)(';')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: foo
                PsiElement(identifier)('foo')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: c
                  PsiElement(identifier)('c')
                PsiElement(,)(',')
                ReferenceExpression: d
                  PsiElement(identifier)('d')
                PsiElement())(')')
            PsiElement(;)(';')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: p.i.foo
                ReferenceExpression: p.i
                  ReferenceExpression: p
                    PsiElement(identifier)('p')
                  PsiElement(.)('.')
                  PsiElement(identifier)('i')
                PsiElement(.)('.')
                PsiElement(identifier)('foo')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: c
                  PsiElement(identifier)('c')
                PsiElement(,)(',')
                ReferenceExpression: e
                  PsiElement(identifier)('e')
                PsiElement())(')')
            PsiElement(;)(';')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: p.j.foo
                ReferenceExpression: p.j
                  ReferenceExpression: p
                    PsiElement(identifier)('p')
                  PsiElement(.)('.')
                  PsiElement(identifier)('j')
                PsiElement(.)('.')
                PsiElement(identifier)('foo')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: c
                  PsiElement(identifier)('c')
                PsiElement(,)(',')
                ReferenceExpression: c
                  PsiElement(identifier)('c')
                PsiElement())(')')
            PsiElement(;)(';')
            PsiWhiteSpace('\n    ')
            ReferenceExpression: bar
              PsiElement(identifier)('bar')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Main
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Main')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: s
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: s
              PsiElement(identifier)('s')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: S
            CodeReferenceElement: S
              PsiElement(identifier)('S')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          NullLiteral
            PsiElement(null)('null')
        PsiElement(;)(';')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: s
              PsiElement(identifier)('s')
            PsiElement(.)('.')
            PsiElement(_)('_')
        PsiElement(;)(';')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: c
              PsiElement(identifier)('c')
            PsiElement(,)(',')
            ReferenceExpression: d
              PsiElement(identifier)('d')
            PsiElement())(')')
        PsiElement(;)(';')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: p.i.foo
            ReferenceExpression: p.i
              ReferenceExpression: p
                PsiElement(identifier)('p')
              PsiElement(.)('.')
              PsiElement(identifier)('i')
            PsiElement(.)('.')
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: c
              PsiElement(identifier)('c')
            PsiElement(,)(',')
            ReferenceExpression: e
              PsiElement(identifier)('e')
            PsiElement())(')')
        PsiElement(;)(';')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: p.j.foo
            ReferenceExpression: p.j
              ReferenceExpression: p
                PsiElement(identifier)('p')
              PsiElement(.)('.')
              PsiElement(identifier)('j')
            PsiElement(.)('.')
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: c
              PsiElement(identifier)('c')
            PsiElement(,)(',')
            ReferenceExpression: c
              PsiElement(identifier)('c')
            PsiElement())(')')
        PsiElement(;)(';')
        PsiWhiteSpace('\n  ')
        ReferenceExpression: bar
          PsiElement(identifier)('bar')
        PsiElement(;)(';')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
