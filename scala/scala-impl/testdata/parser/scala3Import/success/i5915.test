trait RunDSL

val rdsl = new RunDSL {}

given RunNNFExpr[B]: RunDSL = rdsl

given RunNNFImpl[B]: RunDSL with {
  //override def runDSL(b: NNF[B]): B = b.terminal
}
-----
ScalaFile
  ScTrait: RunDSL
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('RunDSL')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: rdsl
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: rdsl
        PsiElement(identifier)('rdsl')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ScNewTemplateDefinition: <anonymous>
      PsiElement(new)('new')
      PsiWhiteSpace(' ')
      ExtendsBlock
        TemplateParents
          ConstructorInvocation
            SimpleType: RunDSL
              CodeReferenceElement: RunDSL
                PsiElement(identifier)('RunDSL')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScGivenAliasDefinition: RunNNFExpr
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('RunNNFExpr')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: B
        PsiElement(identifier)('B')
      PsiElement(])(']')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: RunDSL
      CodeReferenceElement: RunDSL
        PsiElement(identifier)('RunDSL')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: rdsl
      PsiElement(identifier)('rdsl')
  PsiWhiteSpace('\n\n')
  ScGivenDefinition: RunNNFImpl
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('RunNNFImpl')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: B
        PsiElement(identifier)('B')
      PsiElement(])(']')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ExtendsBlock
      TemplateParents
        ConstructorInvocation
          SimpleType: RunDSL
            CodeReferenceElement: RunDSL
              PsiElement(identifier)('RunDSL')
      PsiWhiteSpace(' ')
      PsiElement(with)('with')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('//override def runDSL(b: NNF[B]): B = b.terminal')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
