package test;
object Test {
  trait Core {
    abstract class Visitor[T <: Visitor[T]];
    trait HasVisitor {
      def visit[T <: Visitor[T]](initial : T) : T;
    }
  }
  trait Ext extends Core {
    class Foo {
      def visit[T <: Visitor[T]](initial : T) : T = initial;
    }
  }
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: test
      PsiElement(identifier)('test')
    PsiElement(;)(';')
    PsiWhiteSpace('\n')
    ScObject: Test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScTrait: Core
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(trait)('trait')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('Core')
            PsiWhiteSpace(' ')
            ExtendsBlock
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScClass: Visitor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    PsiElement(abstract)('abstract')
                  PsiWhiteSpace(' ')
                  PsiElement(class)('class')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('Visitor')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: T
                      PsiElement(identifier)('T')
                      PsiWhiteSpace(' ')
                      PsiElement(<:)('<:')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Visitor[T]
                        SimpleType: Visitor
                          CodeReferenceElement: Visitor
                            PsiElement(identifier)('Visitor')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiElement(])(']')
                    PsiElement(])(']')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      <empty list>
                  ExtendsBlock
                    <empty list>
                PsiElement(;)(';')
                PsiWhiteSpace('\n    ')
                ScTrait: HasVisitor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(trait)('trait')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('HasVisitor')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    ScTemplateBody
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScFunctionDeclaration: visit
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(def)('def')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('visit')
                        TypeParameterClause
                          PsiElement([)('[')
                          TypeParameter: T
                            PsiElement(identifier)('T')
                            PsiWhiteSpace(' ')
                            PsiElement(<:)('<:')
                            PsiWhiteSpace(' ')
                            ParametrizedType: Visitor[T]
                              SimpleType: Visitor
                                CodeReferenceElement: Visitor
                                  PsiElement(identifier)('Visitor')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: T
                                  CodeReferenceElement: T
                                    PsiElement(identifier)('T')
                                PsiElement(])(']')
                          PsiElement(])(']')
                        Parameters
                          ParametersClause
                            PsiElement(()('(')
                            Parameter: initial
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(identifier)('initial')
                              PsiWhiteSpace(' ')
                              PsiElement(:)(':')
                              PsiWhiteSpace(' ')
                              ParameterType
                                SimpleType: T
                                  CodeReferenceElement: T
                                    PsiElement(identifier)('T')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                      PsiElement(;)(';')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          ScTrait: Ext
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(trait)('trait')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('Ext')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Core
                    CodeReferenceElement: Core
                      PsiElement(identifier)('Core')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScClass: Foo
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(class)('class')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('Foo')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      <empty list>
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    ScTemplateBody
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScFunctionDefinition: visit
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(def)('def')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('visit')
                        TypeParameterClause
                          PsiElement([)('[')
                          TypeParameter: T
                            PsiElement(identifier)('T')
                            PsiWhiteSpace(' ')
                            PsiElement(<:)('<:')
                            PsiWhiteSpace(' ')
                            ParametrizedType: Visitor[T]
                              SimpleType: Visitor
                                CodeReferenceElement: Visitor
                                  PsiElement(identifier)('Visitor')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: T
                                  CodeReferenceElement: T
                                    PsiElement(identifier)('T')
                                PsiElement(])(']')
                          PsiElement(])(']')
                        Parameters
                          ParametersClause
                            PsiElement(()('(')
                            Parameter: initial
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(identifier)('initial')
                              PsiWhiteSpace(' ')
                              PsiElement(:)(':')
                              PsiWhiteSpace(' ')
                              ParameterType
                                SimpleType: T
                                  CodeReferenceElement: T
                                    PsiElement(identifier)('T')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: initial
                          PsiElement(identifier)('initial')
                      PsiElement(;)(';')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
