package test;

object test {
  abstract class A {
    abstract class C {
      type M;
      def foo(n : M) : Unit = {}
    }
  }
  trait B extends A {
    type N;
    trait CC extends super.C {
      type M = N;
      override def foo(n : M) : Unit = super.foo(n);
    }
  }
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: test
      PsiElement(identifier)('test')
    PsiElement(;)(';')
    PsiWhiteSpace('\n\n')
    ScObject: test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('test')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScClass: A
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(abstract)('abstract')
            PsiWhiteSpace(' ')
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('A')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                <empty list>
            PsiWhiteSpace(' ')
            ExtendsBlock
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScClass: C
                  AnnotationsList
                    <empty list>
                  Modifiers
                    PsiElement(abstract)('abstract')
                  PsiWhiteSpace(' ')
                  PsiElement(class)('class')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('C')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      <empty list>
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    ScTemplateBody
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScTypeAliasDeclaration: M
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(type)('type')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('M')
                      PsiElement(;)(';')
                      PsiWhiteSpace('\n      ')
                      ScFunctionDefinition: foo
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(def)('def')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('foo')
                        Parameters
                          ParametersClause
                            PsiElement(()('(')
                            Parameter: n
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(identifier)('n')
                              PsiWhiteSpace(' ')
                              PsiElement(:)(':')
                              PsiWhiteSpace(' ')
                              ParameterType
                                SimpleType: M
                                  CodeReferenceElement: M
                                    PsiElement(identifier)('M')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        SimpleType: Unit
                          CodeReferenceElement: Unit
                            PsiElement(identifier)('Unit')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiElement(})('}')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          ScTrait: B
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(trait)('trait')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('B')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScTypeAliasDeclaration: N
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(type)('type')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('N')
                PsiElement(;)(';')
                PsiWhiteSpace('\n    ')
                ScTrait: CC
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(trait)('trait')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('CC')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    PsiElement(extends)('extends')
                    PsiWhiteSpace(' ')
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: super.C
                          CodeReferenceElement: super.C
                            SuperReference
                              PsiElement(super)('super')
                            PsiElement(.)('.')
                            PsiElement(identifier)('C')
                    PsiWhiteSpace(' ')
                    ScTemplateBody
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScTypeAliasDefinition: M
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(type)('type')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('M')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        SimpleType: N
                          CodeReferenceElement: N
                            PsiElement(identifier)('N')
                      PsiElement(;)(';')
                      PsiWhiteSpace('\n      ')
                      ScFunctionDefinition: foo
                        AnnotationsList
                          <empty list>
                        Modifiers
                          PsiElement(override)('override')
                        PsiWhiteSpace(' ')
                        PsiElement(def)('def')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('foo')
                        Parameters
                          ParametersClause
                            PsiElement(()('(')
                            Parameter: n
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(identifier)('n')
                              PsiWhiteSpace(' ')
                              PsiElement(:)(':')
                              PsiWhiteSpace(' ')
                              ParameterType
                                SimpleType: M
                                  CodeReferenceElement: M
                                    PsiElement(identifier)('M')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        SimpleType: Unit
                          CodeReferenceElement: Unit
                            PsiElement(identifier)('Unit')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: super.foo
                            SuperReference
                              PsiElement(super)('super')
                            PsiElement(.)('.')
                            PsiElement(identifier)('foo')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: n
                              PsiElement(identifier)('n')
                            PsiElement())(')')
                      PsiElement(;)(';')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
