package test;

trait C {}
trait D {}
trait E {}

object test {
  def c: C = c;
  def d: D = d;
  def e: E = e;
}

import test._;

trait S extends ooo.I[D] {
    def bar: E = foo(c,d);
}

class O[X]() {
    trait I[Y] {
        def foo(x: X, y: Y): E = e;
    }
    val i:I[E] = null;
    val j:I[X] = null;
}

object ooo extends O[C]() {

  def main = {
    val s: S = null;
    import s._;
    foo(c,d);
    ooo.i.foo(c,e);
    ooo.j.foo(c,c);
    bar
  }
}

class Main() {
  val s: S = null;
  import s._;
  foo(c,d);
  ooo.i.foo(c,e);
  ooo.j.foo(c,c);
  bar;
}

-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: test
      PsiElement(identifier)('test')
    PsiElement(;)(';')
    PsiWhiteSpace('\n\n')
    ScTrait: C
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('C')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    ScTrait: D
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('D')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    ScTrait: E
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('E')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScObject: test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('test')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: c
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('c')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: c
              PsiElement(identifier)('c')
          PsiElement(;)(';')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: d
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('d')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: D
              CodeReferenceElement: D
                PsiElement(identifier)('D')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: d
              PsiElement(identifier)('d')
          PsiElement(;)(';')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: e
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('e')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: E
              CodeReferenceElement: E
                PsiElement(identifier)('E')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: e
              PsiElement(identifier)('e')
          PsiElement(;)(';')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScImportStatement
      PsiElement(import)('import')
      PsiWhiteSpace(' ')
      ImportExpression
        CodeReferenceElement: test
          PsiElement(identifier)('test')
        PsiElement(.)('.')
        PsiElement(_)('_')
    PsiElement(;)(';')
    PsiWhiteSpace('\n\n')
    ScTrait: S
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('S')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            ParametrizedType: ooo.I[D]
              SimpleType: ooo.I
                CodeReferenceElement: ooo.I
                  CodeReferenceElement: ooo
                    PsiElement(identifier)('ooo')
                  PsiElement(.)('.')
                  PsiElement(identifier)('I')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: D
                  CodeReferenceElement: D
                    PsiElement(identifier)('D')
                PsiElement(])(']')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          ScFunctionDefinition: bar
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('bar')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: E
              CodeReferenceElement: E
                PsiElement(identifier)('E')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: foo
                PsiElement(identifier)('foo')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: c
                  PsiElement(identifier)('c')
                PsiElement(,)(',')
                ReferenceExpression: d
                  PsiElement(identifier)('d')
                PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScClass: O
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('O')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: X
          PsiElement(identifier)('X')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          ParametersClause
            PsiElement(()('(')
            PsiElement())(')')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          ScTrait: I
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(trait)('trait')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('I')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: Y
                PsiElement(identifier)('Y')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            ExtendsBlock
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n        ')
                ScFunctionDefinition: foo
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('foo')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: x
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('x')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: X
                            CodeReferenceElement: X
                              PsiElement(identifier)('X')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: y
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('y')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Y
                            CodeReferenceElement: Y
                              PsiElement(identifier)('Y')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: E
                    CodeReferenceElement: E
                      PsiElement(identifier)('E')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: e
                    PsiElement(identifier)('e')
                PsiElement(;)(';')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
          PsiWhiteSpace('\n    ')
          ScPatternDefinition: i
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: i
                PsiElement(identifier)('i')
            PsiElement(:)(':')
            ParametrizedType: I[E]
              SimpleType: I
                CodeReferenceElement: I
                  PsiElement(identifier)('I')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: E
                  CodeReferenceElement: E
                    PsiElement(identifier)('E')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            NullLiteral
              PsiElement(null)('null')
          PsiElement(;)(';')
          PsiWhiteSpace('\n    ')
          ScPatternDefinition: j
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: j
                PsiElement(identifier)('j')
            PsiElement(:)(':')
            ParametrizedType: I[X]
              SimpleType: I
                CodeReferenceElement: I
                  PsiElement(identifier)('I')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: X
                  CodeReferenceElement: X
                    PsiElement(identifier)('X')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            NullLiteral
              PsiElement(null)('null')
          PsiElement(;)(';')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScObject: ooo
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('ooo')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            ParametrizedType: O[C]
              SimpleType: O
                CodeReferenceElement: O
                  PsiElement(identifier)('O')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: main
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('main')
            Parameters
              <empty list>
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: s
                    PsiElement(identifier)('s')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: S
                  CodeReferenceElement: S
                    PsiElement(identifier)('S')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                NullLiteral
                  PsiElement(null)('null')
              PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              ScImportStatement
                PsiElement(import)('import')
                PsiWhiteSpace(' ')
                ImportExpression
                  CodeReferenceElement: s
                    PsiElement(identifier)('s')
                  PsiElement(.)('.')
                  PsiElement(_)('_')
              PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              MethodCall
                ReferenceExpression: foo
                  PsiElement(identifier)('foo')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: c
                    PsiElement(identifier)('c')
                  PsiElement(,)(',')
                  ReferenceExpression: d
                    PsiElement(identifier)('d')
                  PsiElement())(')')
              PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              MethodCall
                ReferenceExpression: ooo.i.foo
                  ReferenceExpression: ooo.i
                    ReferenceExpression: ooo
                      PsiElement(identifier)('ooo')
                    PsiElement(.)('.')
                    PsiElement(identifier)('i')
                  PsiElement(.)('.')
                  PsiElement(identifier)('foo')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: c
                    PsiElement(identifier)('c')
                  PsiElement(,)(',')
                  ReferenceExpression: e
                    PsiElement(identifier)('e')
                  PsiElement())(')')
              PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              MethodCall
                ReferenceExpression: ooo.j.foo
                  ReferenceExpression: ooo.j
                    ReferenceExpression: ooo
                      PsiElement(identifier)('ooo')
                    PsiElement(.)('.')
                    PsiElement(identifier)('j')
                  PsiElement(.)('.')
                  PsiElement(identifier)('foo')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: c
                    PsiElement(identifier)('c')
                  PsiElement(,)(',')
                  ReferenceExpression: c
                    PsiElement(identifier)('c')
                  PsiElement())(')')
              PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              ReferenceExpression: bar
                PsiElement(identifier)('bar')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScClass: Main
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Main')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          ParametersClause
            PsiElement(()('(')
            PsiElement())(')')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: s
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: s
                PsiElement(identifier)('s')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: S
              CodeReferenceElement: S
                PsiElement(identifier)('S')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            NullLiteral
              PsiElement(null)('null')
          PsiElement(;)(';')
          PsiWhiteSpace('\n  ')
          ScImportStatement
            PsiElement(import)('import')
            PsiWhiteSpace(' ')
            ImportExpression
              CodeReferenceElement: s
                PsiElement(identifier)('s')
              PsiElement(.)('.')
              PsiElement(_)('_')
          PsiElement(;)(';')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: foo
              PsiElement(identifier)('foo')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: c
                PsiElement(identifier)('c')
              PsiElement(,)(',')
              ReferenceExpression: d
                PsiElement(identifier)('d')
              PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: ooo.i.foo
              ReferenceExpression: ooo.i
                ReferenceExpression: ooo
                  PsiElement(identifier)('ooo')
                PsiElement(.)('.')
                PsiElement(identifier)('i')
              PsiElement(.)('.')
              PsiElement(identifier)('foo')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: c
                PsiElement(identifier)('c')
              PsiElement(,)(',')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: ooo.j.foo
              ReferenceExpression: ooo.j
                ReferenceExpression: ooo
                  PsiElement(identifier)('ooo')
                PsiElement(.)('.')
                PsiElement(identifier)('j')
              PsiElement(.)('.')
              PsiElement(identifier)('foo')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: c
                PsiElement(identifier)('c')
              PsiElement(,)(',')
              ReferenceExpression: c
                PsiElement(identifier)('c')
              PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace('\n  ')
          ReferenceExpression: bar
            PsiElement(identifier)('bar')
          PsiElement(;)(';')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
