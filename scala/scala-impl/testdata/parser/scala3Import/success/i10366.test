import scala.compiletime.testing._

object Test:
  implicit class ShouldWrapper(lhs: Boolean):
    def shouldBe(rhs: Boolean): Unit = ???

  typeChecks("class Bar") shouldBe true
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.compiletime.testing
        CodeReferenceElement: scala.compiletime
          CodeReferenceElement: scala
            PsiElement(identifier)('scala')
          PsiElement(.)('.')
          PsiElement(identifier)('compiletime')
        PsiElement(.)('.')
        PsiElement(identifier)('testing')
      PsiElement(.)('.')
      PsiElement(_)('_')
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScClass: ShouldWrapper
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ShouldWrapper')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: lhs
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('lhs')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Boolean
                      CodeReferenceElement: Boolean
                        PsiElement(identifier)('Boolean')
                PsiElement())(')')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: shouldBe
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('shouldBe')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: rhs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('rhs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Boolean
                          CodeReferenceElement: Boolean
                            PsiElement(identifier)('Boolean')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        InfixExpression
          MethodCall
            ReferenceExpression: typeChecks
              PsiElement(identifier)('typeChecks')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"class Bar"')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          ReferenceExpression: shouldBe
            PsiElement(identifier)('shouldBe')
          PsiWhiteSpace(' ')
          BooleanLiteral
            PsiElement(true)('true')
