import scala.quoted._

inline def isTrue: Boolean = true

inline def oneOf(): String = {
  inline if isTrue then
    "foo"
  else
    "bar"
}

def test1 = oneOf()
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.quoted
        CodeReferenceElement: scala
          PsiElement(identifier)('scala')
        PsiElement(.)('.')
        PsiElement(identifier)('quoted')
      PsiElement(.)('.')
      PsiElement(_)('_')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: isTrue
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('isTrue')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Boolean
      CodeReferenceElement: Boolean
        PsiElement(identifier)('Boolean')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BooleanLiteral
      PsiElement(true)('true')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: oneOf
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('oneOf')
    Parameters
      ParametersClause
        PsiElement(()('(')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: String
      CodeReferenceElement: String
        PsiElement(identifier)('String')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      IfStatement
        PsiElement(inline)('inline')
        PsiWhiteSpace(' ')
        PsiElement(if)('if')
        PsiWhiteSpace(' ')
        ReferenceExpression: isTrue
          PsiElement(identifier)('isTrue')
        PsiWhiteSpace(' ')
        PsiElement(then)('then')
        PsiWhiteSpace('\n    ')
        StringLiteral
          PsiElement(string content)('"foo"')
        PsiWhiteSpace('\n  ')
        PsiElement(else)('else')
        PsiWhiteSpace('\n    ')
        StringLiteral
          PsiElement(string content)('"bar"')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test1')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: oneOf
        PsiElement(identifier)('oneOf')
      ArgumentList
        PsiElement(()('(')
        PsiElement())(')')
