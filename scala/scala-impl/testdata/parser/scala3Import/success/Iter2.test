package dotty1.collections
package immutable

import annotation.unchecked.uncheckedVariance

object Iter2 {

  trait Iterator[+A] extends IterableOnce[A] {
    def hasNext: Boolean
    def next: A
    def iterator = this
    def foreach(f: A => Unit): Unit = ???
    def map[B](f: A => B): Iterator[B] = ???
    def flatMap[B](f: A => IterableOnce[B]): Iterator[B] = ???
    def ++[B >: A](xs: IterableOnce[B]): Iterator[B] = ???
    def drop(n: Int): Iterator[A] = ???
    def indexWhere(p: A => Boolean): Int = {
      var i = 0
      while (hasNext) {
        if (p(next)) return i
        i += 1
      }
      -1
    }
    def zip[B](that: Iterator[B]): Iterator[(A, B)] = ???
    def copy: Iterator[A] = ???
  }
/*
  trait View[+A] { self =>
    def iterator: Iterator[A]
    def foreach(f: A => Unit): Unit = iterator.foreach(f)
    def map[B](f: A => B): View[B] =
      new View[B] { def iterator = self.iterator.map(f) }
    def flatMap[B](f: A => IterableOnce[B]): View[B] =
      new View[B]  { def iterator = self.iterator.flatMap(f) }
    def ++[B >: A](xs: IterableOnce[B]): View[B] =
      new View[B] { def iteratpr = self.iterator ++ xs }
    def drop(n: Int): View[A] =
      new View[A] { def iteratpr =   self.iterator.drop(n) }
    def indexWhere(p: A => Boolean): Int = {
      var i = 0
      while (hasNext) {
        if (p(next)) return i
        i += 1
      }
      -1
    }
    def zip[B](that: Iterator[B]): Iterator[(A, B)] = ???
  }
*/

  trait IterableOnce[+A] {
    def iterator: Iterator[A]
    def buildIterator: Iterator[A] = iterator
  }

  trait FromIterator[+C[X] <: Iterable[X]] {
    def fromIterator[B](it: Iterator[B]): C[B]
  }

  trait Iterable[+IA] extends IterableOnce[IA], FromIterator[Iterable] {
    def view: View[IA] = new View(iterator)
  }

  trait Seq[+AA] extends Iterable[AA], FromIterator[Seq] {
    def apply(i: Int): AA
    def length: Int
  }

  sealed trait List[+A] extends Seq[A], FromIterator[List] {
    def isEmpty: Boolean
    def head: A
    def tail: List[A]
    def iterator = new ListIterator[A](this)
    def fromIterator[B](it: Iterator[B]): List[B] = it match {
      case ListIterator(xs) => xs
      case _ => if (it.hasNext) Cons(it.next, fromIterator(it)) else Nil
    }
    def apply(i: Int): A = {
      require(!isEmpty)
      if (i == 0) head else tail.apply(i - 1)
    }
    def length: Int =
      if (isEmpty) 0 else 1 + tail.length
  }

  class View[+A](it: Iterator[A]) extends Iterable[A], FromIterator[View] {
    def iterator: Iterator[A] = it.copy
    def fromIterator[B](it: Iterator[B]): View[B] = new View(it)
  }

  case class Cons[+A](x: A, xs: List[A]) extends List[A] {
    def isEmpty = false
    def head = x
    def tail = xs
  }

  case object Nil extends List[Nothing] {
    def isEmpty = true
    def head = ???
    def tail = ???
  }

  class ArrayBuffer[A] private (initElems: Array[AnyRef], initLen: Int) extends Seq[A], FromIterator[ArrayBuffer] {
    def this() = this(new Array[AnyRef](16), 0)
    def this(it: ArrayIterator[A]) = this(it.elems, it.len)
    private var elems: Array[AnyRef] = initElems
    private var len = 0
    def iterator =
      elems.iterator.take(len).asInstanceOf[Iterator[A]]
    override def buildIterator =
      new ArrayIterator(elems, len).asInstanceOf[Iterator[A]]
    def fromIterator[B](it: Iterator[B]): ArrayBuffer[B] =
      new ArrayBuffer(ArrayIterator.fromIterator(it))
    def apply(i: Int) = elems(i).asInstanceOf[A]
    def length = len
  }
/*
  class SeqView[A](itf: () => Iterator) extends Seq[A], FromIterator[SeqView] {
    def iterator = it
    def buildIterator = it
    def fromIterator[B](it: Iterator[B]) = it match {
      case ViewIterator(itf) => SeqView(itf)
    }
  }
*/
  implicit class IterableTransforms[A, C[X] <: Iterable[X]](val c: Iterable[A] with FromIterator[C]) extends AnyVal {
    def map[B](f: A => B): C[B] = c.fromIterator(c.buildIterator.map(f))
    def flatMap[B](f: A => IterableOnce[B]): C[B] = c.fromIterator(c.buildIterator.flatMap(f(_).buildIterator))
    def ++[B >: A](xs: IterableOnce[B]): C[B] = c.fromIterator(c.buildIterator ++ xs.buildIterator)
    def drop(n: Int): C[A] = c.fromIterator(c.buildIterator.drop(n))
    def head: A = c.iterator.next
    def zip[B](xs: IterableOnce[B]): C[(A, B)] = c.fromIterator(c.iterator.zip(xs.iterator))
  }

  implicit class SeqTransforms[SA, C[X] <: Seq[X]](val c: Seq[SA] with FromIterator[C]) extends AnyVal {
    def reverse: C[SA] = {
      val elems = new Array[AnyRef](c.length)
      var i = elems.length
      val it = c.iterator
      while (it.hasNext) {
        i -= 1
        elems(i) = it.next.asInstanceOf[AnyRef]
      }
      val xzz = c.fromIterator(ArrayIterator[SA](elems, c.length))
      xzz
    }
    def indexWhere(p: SA => Boolean): Int = c.iterator.indexWhere(p)
  }
/*
  case class ViewIterator[+A](itf: () => Iterator) extends Iterator[A] {

    def hasNext = it.hasNext
    def next
    def map(f: A => B): ViewIterator[B] = ViewIterator(() => it().map(f))
    def
  }
*/
  case class ListIterator[+A](xs: List[A]) extends Iterator[A] {
    private[this] var current: List[A] = xs
    def hasNext = !current.isEmpty
    def next = { val res = current.head; current = current.tail; res }
  }

  case class ArrayIterator[+A](elems: Array[AnyRef], len: Int) extends Iterator[A] {
    import ArrayIterator.*

    private def elem(i: Int) = elems(i).asInstanceOf[A]

    private var cur = 0

    def hasNext = cur < len
    def next = { val res = elem(cur); cur += 1; res }

    override def foreach(f: A => Unit): Unit =
      for (i <- 0 until len) f(elem(i))

    override def map[B](f: A => B): ArrayIterator[B] = {
      var mapped = elems
      for (i <- 0 until len) {
        val x = elem(i)
        val y = widen(f(x))
        if (widen(x) ne y) {
          if (mapped eq elems) mapped = new Array[AnyRef](len)
          mapped(i) = y
        }
      }
      if (mapped eq elems) this.asInstanceOf[ArrayIterator[B]]
      else new ArrayIterator(mapped, len)
    }

    override def flatMap[B](f: A => IterableOnce[B]): ArrayIterator[B] =
      flatten(map(f(_).buildIterator))

    override def ++[B >: A](that: IterableOnce[B]): ArrayIterator[B] = {
      val thatIterator @ ArrayIterator(elems2, len2) = fromIterator(that.iterator)
      if (len == 0) thatIterator
      else if (len2 == 0) this
      else {
        val resLen = len + len2
        val resElems = new Array[AnyRef](resLen)
        Array.copy(elems, 0, resElems, 0, len)
        Array.copy(elems2, 0, resElems, len, len2)
        new ArrayIterator(resElems, resLen)
      }
    }
  }

  object ArrayIterator {
    private def widen(x: Any): AnyRef = x.asInstanceOf[AnyRef]

    def fromIterator[A](it: Iterator[A]): ArrayIterator[A] = it match {
      case it: ArrayIterator[A] => it
      case _ =>
        var elems = new Array[AnyRef](32)
        var len = 0
        def ensureCapacity() = {
          while (len > elems.length) {
            val newElems = new Array[AnyRef](elems.length * 2)
            Array.copy(elems, 0, newElems, 0, elems.length)
            elems = newElems
          }
        }
        while (it.hasNext) {
          len += 1
          ensureCapacity()
          elems(len - 1) = widen(it.next)
        }
        ArrayIterator(elems, len)
    }

    def flatten[A](its: ArrayIterator[Iterator[A]]): ArrayIterator[A] = {
      var arrayIts = its.map(fromIterator)
      var totalLen = 0
      arrayIts.foreach(totalLen += _.len)
      val allElems = new Array[AnyRef](totalLen)
      var j = 0
      arrayIts.foreach { it =>
        Array.copy(it.elems, 0, allElems, j, it.len)
        j += it.len
      }
      new ArrayIterator(allElems, totalLen)
    }
  }
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: dotty1.collections
      CodeReferenceElement: dotty1
        PsiElement(identifier)('dotty1')
      PsiElement(.)('.')
      PsiElement(identifier)('collections')
    PsiWhiteSpace('\n')
    ScPackaging
      PsiElement(package)('package')
      PsiWhiteSpace(' ')
      CodeReferenceElement: immutable
        PsiElement(identifier)('immutable')
      PsiWhiteSpace('\n\n')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: annotation.unchecked.uncheckedVariance
            CodeReferenceElement: annotation.unchecked
              CodeReferenceElement: annotation
                PsiElement(identifier)('annotation')
              PsiElement(.)('.')
              PsiElement(identifier)('unchecked')
            PsiElement(.)('.')
            PsiElement(identifier)('uncheckedVariance')
      PsiWhiteSpace('\n\n')
      ScObject: Iter2
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(object)('object')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('Iter2')
        PsiWhiteSpace(' ')
        ExtendsBlock
          ScTemplateBody
            PsiElement({)('{')
            PsiWhiteSpace('\n\n  ')
            ScTrait: Iterator
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(trait)('trait')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Iterator')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: IterableOnce[A]
                      SimpleType: IterableOnce
                        CodeReferenceElement: IterableOnce
                          PsiElement(identifier)('IterableOnce')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDeclaration: hasNext
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('hasNext')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Boolean
                      CodeReferenceElement: Boolean
                        PsiElement(identifier)('Boolean')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDeclaration: next
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('next')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: iterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('iterator')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ThisReference
                      PsiElement(this)('this')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: foreach
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('foreach')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => Unit
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: Unit
                                CodeReferenceElement: Unit
                                  PsiElement(identifier)('Unit')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Unit
                      CodeReferenceElement: Unit
                        PsiElement(identifier)('Unit')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ???
                      PsiElement(identifier)('???')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: map
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('map')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => B
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Iterator[B]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ???
                      PsiElement(identifier)('???')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: flatMap
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatMap')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => IterableOnce[B]
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              ParametrizedType: IterableOnce[B]
                                SimpleType: IterableOnce
                                  CodeReferenceElement: IterableOnce
                                    PsiElement(identifier)('IterableOnce')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Iterator[B]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ???
                      PsiElement(identifier)('???')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: ++
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('++')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                        PsiWhiteSpace(' ')
                        PsiElement(>:)('>:')
                        PsiWhiteSpace(' ')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: xs
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('xs')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: IterableOnce[B]
                              SimpleType: IterableOnce
                                CodeReferenceElement: IterableOnce
                                  PsiElement(identifier)('IterableOnce')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Iterator[B]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ???
                      PsiElement(identifier)('???')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: drop
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('drop')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: n
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('n')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Iterator[A]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ???
                      PsiElement(identifier)('???')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: indexWhere
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('indexWhere')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: p
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('p')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => Boolean
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: Boolean
                                CodeReferenceElement: Boolean
                                  PsiElement(identifier)('Boolean')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScVariableDefinition: i
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(var)('var')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: i
                            PsiElement(identifier)('i')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
                      PsiWhiteSpace('\n      ')
                      WhileStatement
                        PsiElement(while)('while')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        ReferenceExpression: hasNext
                          PsiElement(identifier)('hasNext')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n        ')
                          IfStatement
                            PsiElement(if)('if')
                            PsiWhiteSpace(' ')
                            PsiElement(()('(')
                            MethodCall
                              ReferenceExpression: p
                                PsiElement(identifier)('p')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: next
                                  PsiElement(identifier)('next')
                                PsiElement())(')')
                            PsiElement())(')')
                            PsiWhiteSpace(' ')
                            ReturnStatement
                              PsiElement(return)('return')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: i
                                PsiElement(identifier)('i')
                          PsiWhiteSpace('\n        ')
                          InfixExpression
                            ReferenceExpression: i
                              PsiElement(identifier)('i')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: +=
                              PsiElement(identifier)('+=')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('1')
                          PsiWhiteSpace('\n      ')
                          PsiElement(})('}')
                      PsiWhiteSpace('\n      ')
                      PrefixExpression
                        ReferenceExpression: -
                          PsiElement(identifier)('-')
                        IntegerLiteral
                          PsiElement(integer)('1')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: zip
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('zip')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: that
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('that')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Iterator[B]
                              SimpleType: Iterator
                                CodeReferenceElement: Iterator
                                  PsiElement(identifier)('Iterator')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Iterator[(A, B)]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        TupleType: (A, B)
                          PsiElement(()('(')
                          TypesList
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                          PsiElement())(')')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ???
                      PsiElement(identifier)('???')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: copy
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('copy')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Iterator[A]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ???
                      PsiElement(identifier)('???')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n')
            PsiComment(BlockComment)('/*\n  trait View[+A] { self =>\n    def iterator: Iterator[A]\n    def foreach(f: A => Unit): Unit = iterator.foreach(f)\n    def map[B](f: A => B): View[B] =\n      new View[B] { def iterator = self.iterator.map(f) }\n    def flatMap[B](f: A => IterableOnce[B]): View[B] =\n      new View[B]  { def iterator = self.iterator.flatMap(f) }\n    def ++[B >: A](xs: IterableOnce[B]): View[B] =\n      new View[B] { def iteratpr = self.iterator ++ xs }\n    def drop(n: Int): View[A] =\n      new View[A] { def iteratpr =   self.iterator.drop(n) }\n    def indexWhere(p: A => Boolean): Int = {\n      var i = 0\n      while (hasNext) {\n        if (p(next)) return i\n        i += 1\n      }\n      -1\n    }\n    def zip[B](that: Iterator[B]): Iterator[(A, B)] = ???\n  }\n*/')
            PsiWhiteSpace('\n\n  ')
            ScTrait: IterableOnce
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(trait)('trait')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('IterableOnce')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              ExtendsBlock
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDeclaration: iterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('iterator')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Iterator[A]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: buildIterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('buildIterator')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Iterator[A]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: iterator
                      PsiElement(identifier)('iterator')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScTrait: FromIterator
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(trait)('trait')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('FromIterator')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: C
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('C')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: X
                      PsiElement(identifier)('X')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterable[X]
                    SimpleType: Iterable
                      CodeReferenceElement: Iterable
                        PsiElement(identifier)('Iterable')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: X
                        CodeReferenceElement: X
                          PsiElement(identifier)('X')
                      PsiElement(])(']')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              ExtendsBlock
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDeclaration: fromIterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('fromIterator')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: it
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('it')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Iterator[B]
                              SimpleType: Iterator
                                CodeReferenceElement: Iterator
                                  PsiElement(identifier)('Iterator')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: C[B]
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScTrait: Iterable
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(trait)('trait')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Iterable')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: IA
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('IA')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: IterableOnce[IA]
                      SimpleType: IterableOnce
                        CodeReferenceElement: IterableOnce
                          PsiElement(identifier)('IterableOnce')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: IA
                          CodeReferenceElement: IA
                            PsiElement(identifier)('IA')
                        PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ConstructorInvocation
                    ParametrizedType: FromIterator[Iterable]
                      SimpleType: FromIterator
                        CodeReferenceElement: FromIterator
                          PsiElement(identifier)('FromIterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: Iterable
                          CodeReferenceElement: Iterable
                            PsiElement(identifier)('Iterable')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: view
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('view')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: View[IA]
                      SimpleType: View
                        CodeReferenceElement: View
                          PsiElement(identifier)('View')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: IA
                          CodeReferenceElement: IA
                            PsiElement(identifier)('IA')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ScNewTemplateDefinition: <anonymous>
                      PsiElement(new)('new')
                      PsiWhiteSpace(' ')
                      ExtendsBlock
                        TemplateParents
                          ConstructorInvocation
                            SimpleType: View
                              CodeReferenceElement: View
                                PsiElement(identifier)('View')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: iterator
                                PsiElement(identifier)('iterator')
                              PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScTrait: Seq
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(trait)('trait')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Seq')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: AA
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('AA')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: Iterable[AA]
                      SimpleType: Iterable
                        CodeReferenceElement: Iterable
                          PsiElement(identifier)('Iterable')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: AA
                          CodeReferenceElement: AA
                            PsiElement(identifier)('AA')
                        PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ConstructorInvocation
                    ParametrizedType: FromIterator[Seq]
                      SimpleType: FromIterator
                        CodeReferenceElement: FromIterator
                          PsiElement(identifier)('FromIterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: Seq
                          CodeReferenceElement: Seq
                            PsiElement(identifier)('Seq')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDeclaration: apply
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('apply')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: i
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('i')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: AA
                      CodeReferenceElement: AA
                        PsiElement(identifier)('AA')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDeclaration: length
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('length')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScTrait: List
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(sealed)('sealed')
              PsiWhiteSpace(' ')
              PsiElement(trait)('trait')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('List')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: Seq[A]
                      SimpleType: Seq
                        CodeReferenceElement: Seq
                          PsiElement(identifier)('Seq')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ConstructorInvocation
                    ParametrizedType: FromIterator[List]
                      SimpleType: FromIterator
                        CodeReferenceElement: FromIterator
                          PsiElement(identifier)('FromIterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: List
                          CodeReferenceElement: List
                            PsiElement(identifier)('List')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDeclaration: isEmpty
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('isEmpty')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Boolean
                      CodeReferenceElement: Boolean
                        PsiElement(identifier)('Boolean')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDeclaration: head
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('head')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDeclaration: tail
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('tail')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: List[A]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: iterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('iterator')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ScNewTemplateDefinition: <anonymous>
                      PsiElement(new)('new')
                      PsiWhiteSpace(' ')
                      ExtendsBlock
                        TemplateParents
                          ConstructorInvocation
                            ParametrizedType: ListIterator[A]
                              SimpleType: ListIterator
                                CodeReferenceElement: ListIterator
                                  PsiElement(identifier)('ListIterator')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(])(']')
                            ArgumentList
                              PsiElement(()('(')
                              ThisReference
                                PsiElement(this)('this')
                              PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: fromIterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('fromIterator')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: it
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('it')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Iterator[B]
                              SimpleType: Iterator
                                CodeReferenceElement: Iterator
                                  PsiElement(identifier)('Iterator')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: List[B]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MatchStatement
                      ReferenceExpression: it
                        PsiElement(identifier)('it')
                      PsiWhiteSpace(' ')
                      PsiElement(match)('match')
                      PsiWhiteSpace(' ')
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      CaseClauses
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          ConstructorPattern
                            CodeReferenceElement: ListIterator
                              PsiElement(identifier)('ListIterator')
                            Pattern Argument List
                              PsiElement(()('(')
                              ReferencePattern: xs
                                PsiElement(identifier)('xs')
                              PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            ReferenceExpression: xs
                              PsiElement(identifier)('xs')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          WildcardPattern
                            PsiElement(_)('_')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            IfStatement
                              PsiElement(if)('if')
                              PsiWhiteSpace(' ')
                              PsiElement(()('(')
                              ReferenceExpression: it.hasNext
                                ReferenceExpression: it
                                  PsiElement(identifier)('it')
                                PsiElement(.)('.')
                                PsiElement(identifier)('hasNext')
                              PsiElement())(')')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: Cons
                                  PsiElement(identifier)('Cons')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: it.next
                                    ReferenceExpression: it
                                      PsiElement(identifier)('it')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('next')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  MethodCall
                                    ReferenceExpression: fromIterator
                                      PsiElement(identifier)('fromIterator')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: it
                                        PsiElement(identifier)('it')
                                      PsiElement())(')')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(else)('else')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: Nil
                                PsiElement(identifier)('Nil')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: apply
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('apply')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: i
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('i')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      MethodCall
                        ReferenceExpression: require
                          PsiElement(identifier)('require')
                        ArgumentList
                          PsiElement(()('(')
                          PrefixExpression
                            ReferenceExpression: !
                              PsiElement(identifier)('!')
                            ReferenceExpression: isEmpty
                              PsiElement(identifier)('isEmpty')
                          PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: i
                            PsiElement(identifier)('i')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: ==
                            PsiElement(identifier)('==')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('0')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: head
                          PsiElement(identifier)('head')
                        PsiWhiteSpace(' ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: tail.apply
                            ReferenceExpression: tail
                              PsiElement(identifier)('tail')
                            PsiElement(.)('.')
                            PsiElement(identifier)('apply')
                          ArgumentList
                            PsiElement(()('(')
                            InfixExpression
                              ReferenceExpression: i
                                PsiElement(identifier)('i')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: -
                                PsiElement(identifier)('-')
                              PsiWhiteSpace(' ')
                              IntegerLiteral
                                PsiElement(integer)('1')
                            PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: length
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('length')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    IfStatement
                      PsiElement(if)('if')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      ReferenceExpression: isEmpty
                        PsiElement(identifier)('isEmpty')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('0')
                      PsiWhiteSpace(' ')
                      PsiElement(else)('else')
                      PsiWhiteSpace(' ')
                      InfixExpression
                        IntegerLiteral
                          PsiElement(integer)('1')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: +
                          PsiElement(identifier)('+')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: tail.length
                          ReferenceExpression: tail
                            PsiElement(identifier)('tail')
                          PsiElement(.)('.')
                          PsiElement(identifier)('length')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScClass: View
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('View')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    ClassParameter: it
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('it')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Iterator[A]
                          SimpleType: Iterator
                            CodeReferenceElement: Iterator
                              PsiElement(identifier)('Iterator')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: Iterable[A]
                      SimpleType: Iterable
                        CodeReferenceElement: Iterable
                          PsiElement(identifier)('Iterable')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ConstructorInvocation
                    ParametrizedType: FromIterator[View]
                      SimpleType: FromIterator
                        CodeReferenceElement: FromIterator
                          PsiElement(identifier)('FromIterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: View
                          CodeReferenceElement: View
                            PsiElement(identifier)('View')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: iterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('iterator')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Iterator[A]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: it.copy
                      ReferenceExpression: it
                        PsiElement(identifier)('it')
                      PsiElement(.)('.')
                      PsiElement(identifier)('copy')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: fromIterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('fromIterator')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: it
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('it')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Iterator[B]
                              SimpleType: Iterator
                                CodeReferenceElement: Iterator
                                  PsiElement(identifier)('Iterator')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: View[B]
                      SimpleType: View
                        CodeReferenceElement: View
                          PsiElement(identifier)('View')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ScNewTemplateDefinition: <anonymous>
                      PsiElement(new)('new')
                      PsiWhiteSpace(' ')
                      ExtendsBlock
                        TemplateParents
                          ConstructorInvocation
                            SimpleType: View
                              CodeReferenceElement: View
                                PsiElement(identifier)('View')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: it
                                PsiElement(identifier)('it')
                              PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScClass: Cons
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(case)('case')
              PsiWhiteSpace(' ')
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Cons')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    ClassParameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ClassParameter: xs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('xs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: List[A]
                          SimpleType: List
                            CodeReferenceElement: List
                              PsiElement(identifier)('List')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: List[A]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: isEmpty
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('isEmpty')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BooleanLiteral
                      PsiElement(false)('false')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: head
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('head')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: tail
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('tail')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScObject: Nil
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(case)('case')
              PsiWhiteSpace(' ')
              PsiElement(object)('object')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Nil')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: List[Nothing]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: Nothing
                          CodeReferenceElement: Nothing
                            PsiElement(identifier)('Nothing')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: isEmpty
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('isEmpty')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BooleanLiteral
                      PsiElement(true)('true')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: head
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('head')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ???
                      PsiElement(identifier)('???')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: tail
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('tail')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ???
                      PsiElement(identifier)('???')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScClass: ArrayBuffer
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('ArrayBuffer')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  AccessModifier
                    PsiElement(private)('private')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    ClassParameter: initElems
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('initElems')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Array[AnyRef]
                          SimpleType: Array
                            CodeReferenceElement: Array
                              PsiElement(identifier)('Array')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: AnyRef
                              CodeReferenceElement: AnyRef
                                PsiElement(identifier)('AnyRef')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ClassParameter: initLen
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('initLen')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: Seq[A]
                      SimpleType: Seq
                        CodeReferenceElement: Seq
                          PsiElement(identifier)('Seq')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ConstructorInvocation
                    ParametrizedType: FromIterator[ArrayBuffer]
                      SimpleType: FromIterator
                        CodeReferenceElement: FromIterator
                          PsiElement(identifier)('FromIterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: ArrayBuffer
                          CodeReferenceElement: ArrayBuffer
                            PsiElement(identifier)('ArrayBuffer')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: this
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(this)('this')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    SelfInvocation
                      PsiElement(this)('this')
                      ArgumentList
                        PsiElement(()('(')
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                ParametrizedType: Array[AnyRef]
                                  SimpleType: Array
                                    CodeReferenceElement: Array
                                      PsiElement(identifier)('Array')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: AnyRef
                                      CodeReferenceElement: AnyRef
                                        PsiElement(identifier)('AnyRef')
                                    PsiElement(])(']')
                                ArgumentList
                                  PsiElement(()('(')
                                  IntegerLiteral
                                    PsiElement(integer)('16')
                                  PsiElement())(')')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: this
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(this)('this')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: it
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('it')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: ArrayIterator[A]
                              SimpleType: ArrayIterator
                                CodeReferenceElement: ArrayIterator
                                  PsiElement(identifier)('ArrayIterator')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    SelfInvocation
                      PsiElement(this)('this')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: it.elems
                          ReferenceExpression: it
                            PsiElement(identifier)('it')
                          PsiElement(.)('.')
                          PsiElement(identifier)('elems')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: it.len
                          ReferenceExpression: it
                            PsiElement(identifier)('it')
                          PsiElement(.)('.')
                          PsiElement(identifier)('len')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScVariableDefinition: elems
                    AnnotationsList
                      <empty list>
                    Modifiers
                      AccessModifier
                        PsiElement(private)('private')
                    PsiWhiteSpace(' ')
                    PsiElement(var)('var')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: elems
                        PsiElement(identifier)('elems')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Array[AnyRef]
                      SimpleType: Array
                        CodeReferenceElement: Array
                          PsiElement(identifier)('Array')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: AnyRef
                          CodeReferenceElement: AnyRef
                            PsiElement(identifier)('AnyRef')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: initElems
                      PsiElement(identifier)('initElems')
                  PsiWhiteSpace('\n    ')
                  ScVariableDefinition: len
                    AnnotationsList
                      <empty list>
                    Modifiers
                      AccessModifier
                        PsiElement(private)('private')
                    PsiWhiteSpace(' ')
                    PsiElement(var)('var')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: len
                        PsiElement(identifier)('len')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('0')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: iterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('iterator')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    GenericCall
                      ReferenceExpression: elems.iterator.take(len).asInstanceOf
                        MethodCall
                          ReferenceExpression: elems.iterator.take
                            ReferenceExpression: elems.iterator
                              ReferenceExpression: elems
                                PsiElement(identifier)('elems')
                              PsiElement(.)('.')
                              PsiElement(identifier)('iterator')
                            PsiElement(.)('.')
                            PsiElement(identifier)('take')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: len
                              PsiElement(identifier)('len')
                            PsiElement())(')')
                        PsiElement(.)('.')
                        PsiElement(identifier)('asInstanceOf')
                      TypeArgumentsList
                        PsiElement([)('[')
                        ParametrizedType: Iterator[A]
                          SimpleType: Iterator
                            CodeReferenceElement: Iterator
                              PsiElement(identifier)('Iterator')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: buildIterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      PsiElement(override)('override')
                    PsiWhiteSpace(' ')
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('buildIterator')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    GenericCall
                      ReferenceExpression: new ArrayIterator(elems, len).asInstanceOf
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                SimpleType: ArrayIterator
                                  CodeReferenceElement: ArrayIterator
                                    PsiElement(identifier)('ArrayIterator')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: elems
                                    PsiElement(identifier)('elems')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: len
                                    PsiElement(identifier)('len')
                                  PsiElement())(')')
                        PsiElement(.)('.')
                        PsiElement(identifier)('asInstanceOf')
                      TypeArgumentsList
                        PsiElement([)('[')
                        ParametrizedType: Iterator[A]
                          SimpleType: Iterator
                            CodeReferenceElement: Iterator
                              PsiElement(identifier)('Iterator')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: fromIterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('fromIterator')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: it
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('it')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Iterator[B]
                              SimpleType: Iterator
                                CodeReferenceElement: Iterator
                                  PsiElement(identifier)('Iterator')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: ArrayBuffer[B]
                      SimpleType: ArrayBuffer
                        CodeReferenceElement: ArrayBuffer
                          PsiElement(identifier)('ArrayBuffer')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    ScNewTemplateDefinition: <anonymous>
                      PsiElement(new)('new')
                      PsiWhiteSpace(' ')
                      ExtendsBlock
                        TemplateParents
                          ConstructorInvocation
                            SimpleType: ArrayBuffer
                              CodeReferenceElement: ArrayBuffer
                                PsiElement(identifier)('ArrayBuffer')
                            ArgumentList
                              PsiElement(()('(')
                              MethodCall
                                ReferenceExpression: ArrayIterator.fromIterator
                                  ReferenceExpression: ArrayIterator
                                    PsiElement(identifier)('ArrayIterator')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('fromIterator')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: it
                                    PsiElement(identifier)('it')
                                  PsiElement())(')')
                              PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: apply
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('apply')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: i
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('i')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    GenericCall
                      ReferenceExpression: elems(i).asInstanceOf
                        MethodCall
                          ReferenceExpression: elems
                            PsiElement(identifier)('elems')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: i
                              PsiElement(identifier)('i')
                            PsiElement())(')')
                        PsiElement(.)('.')
                        PsiElement(identifier)('asInstanceOf')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: length
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('length')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: len
                      PsiElement(identifier)('len')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n')
            ScClass: IterableTransforms
              PsiComment(BlockComment)('/*\n  class SeqView[A](itf: () => Iterator) extends Seq[A], FromIterator[SeqView] {\n    def iterator = it\n    def buildIterator = it\n    def fromIterator[B](it: Iterator[B]) = it match {\n      case ViewIterator(itf) => SeqView(itf)\n    }\n  }\n*/')
              PsiWhiteSpace('\n  ')
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('IterableTransforms')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('A')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                TypeParameter: C
                  PsiElement(identifier)('C')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: X
                      PsiElement(identifier)('X')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterable[X]
                    SimpleType: Iterable
                      CodeReferenceElement: Iterable
                        PsiElement(identifier)('Iterable')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: X
                        CodeReferenceElement: X
                          PsiElement(identifier)('X')
                      PsiElement(])(']')
                PsiElement(])(']')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    ClassParameter: c
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('c')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        CompoundType: Iterable[A] with FromIterator[C]
                          ParametrizedType: Iterable[A]
                            SimpleType: Iterable
                              CodeReferenceElement: Iterable
                                PsiElement(identifier)('Iterable')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                          PsiWhiteSpace(' ')
                          PsiElement(with)('with')
                          PsiWhiteSpace(' ')
                          ParametrizedType: FromIterator[C]
                            SimpleType: FromIterator
                              CodeReferenceElement: FromIterator
                                PsiElement(identifier)('FromIterator')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: C
                                CodeReferenceElement: C
                                  PsiElement(identifier)('C')
                              PsiElement(])(']')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    SimpleType: AnyVal
                      CodeReferenceElement: AnyVal
                        PsiElement(identifier)('AnyVal')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: map
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('map')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => B
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: C[B]
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: c.fromIterator
                        ReferenceExpression: c
                          PsiElement(identifier)('c')
                        PsiElement(.)('.')
                        PsiElement(identifier)('fromIterator')
                      ArgumentList
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: c.buildIterator.map
                            ReferenceExpression: c.buildIterator
                              ReferenceExpression: c
                                PsiElement(identifier)('c')
                              PsiElement(.)('.')
                              PsiElement(identifier)('buildIterator')
                            PsiElement(.)('.')
                            PsiElement(identifier)('map')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: f
                              PsiElement(identifier)('f')
                            PsiElement())(')')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: flatMap
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatMap')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => IterableOnce[B]
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              ParametrizedType: IterableOnce[B]
                                SimpleType: IterableOnce
                                  CodeReferenceElement: IterableOnce
                                    PsiElement(identifier)('IterableOnce')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: C[B]
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: c.fromIterator
                        ReferenceExpression: c
                          PsiElement(identifier)('c')
                        PsiElement(.)('.')
                        PsiElement(identifier)('fromIterator')
                      ArgumentList
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: c.buildIterator.flatMap
                            ReferenceExpression: c.buildIterator
                              ReferenceExpression: c
                                PsiElement(identifier)('c')
                              PsiElement(.)('.')
                              PsiElement(identifier)('buildIterator')
                            PsiElement(.)('.')
                            PsiElement(identifier)('flatMap')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: f(_).buildIterator
                              MethodCall
                                ReferenceExpression: f
                                  PsiElement(identifier)('f')
                                ArgumentList
                                  PsiElement(()('(')
                                  UnderscoreSection
                                    PsiElement(_)('_')
                                  PsiElement())(')')
                              PsiElement(.)('.')
                              PsiElement(identifier)('buildIterator')
                            PsiElement())(')')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: ++
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('++')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                        PsiWhiteSpace(' ')
                        PsiElement(>:)('>:')
                        PsiWhiteSpace(' ')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: xs
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('xs')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: IterableOnce[B]
                              SimpleType: IterableOnce
                                CodeReferenceElement: IterableOnce
                                  PsiElement(identifier)('IterableOnce')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: C[B]
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: c.fromIterator
                        ReferenceExpression: c
                          PsiElement(identifier)('c')
                        PsiElement(.)('.')
                        PsiElement(identifier)('fromIterator')
                      ArgumentList
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: c.buildIterator
                            ReferenceExpression: c
                              PsiElement(identifier)('c')
                            PsiElement(.)('.')
                            PsiElement(identifier)('buildIterator')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: ++
                            PsiElement(identifier)('++')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: xs.buildIterator
                            ReferenceExpression: xs
                              PsiElement(identifier)('xs')
                            PsiElement(.)('.')
                            PsiElement(identifier)('buildIterator')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: drop
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('drop')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: n
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('n')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: C[A]
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: c.fromIterator
                        ReferenceExpression: c
                          PsiElement(identifier)('c')
                        PsiElement(.)('.')
                        PsiElement(identifier)('fromIterator')
                      ArgumentList
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: c.buildIterator.drop
                            ReferenceExpression: c.buildIterator
                              ReferenceExpression: c
                                PsiElement(identifier)('c')
                              PsiElement(.)('.')
                              PsiElement(identifier)('buildIterator')
                            PsiElement(.)('.')
                            PsiElement(identifier)('drop')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: n
                              PsiElement(identifier)('n')
                            PsiElement())(')')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: head
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('head')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: c.iterator.next
                      ReferenceExpression: c.iterator
                        ReferenceExpression: c
                          PsiElement(identifier)('c')
                        PsiElement(.)('.')
                        PsiElement(identifier)('iterator')
                      PsiElement(.)('.')
                      PsiElement(identifier)('next')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: zip
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('zip')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: xs
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('xs')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: IterableOnce[B]
                              SimpleType: IterableOnce
                                CodeReferenceElement: IterableOnce
                                  PsiElement(identifier)('IterableOnce')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: C[(A, B)]
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      TypeArgumentsList
                        PsiElement([)('[')
                        TupleType: (A, B)
                          PsiElement(()('(')
                          TypesList
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                          PsiElement())(')')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: c.fromIterator
                        ReferenceExpression: c
                          PsiElement(identifier)('c')
                        PsiElement(.)('.')
                        PsiElement(identifier)('fromIterator')
                      ArgumentList
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: c.iterator.zip
                            ReferenceExpression: c.iterator
                              ReferenceExpression: c
                                PsiElement(identifier)('c')
                              PsiElement(.)('.')
                              PsiElement(identifier)('iterator')
                            PsiElement(.)('.')
                            PsiElement(identifier)('zip')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: xs.iterator
                              ReferenceExpression: xs
                                PsiElement(identifier)('xs')
                              PsiElement(.)('.')
                              PsiElement(identifier)('iterator')
                            PsiElement())(')')
                        PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScClass: SeqTransforms
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('SeqTransforms')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: SA
                  PsiElement(identifier)('SA')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                TypeParameter: C
                  PsiElement(identifier)('C')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: X
                      PsiElement(identifier)('X')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Seq[X]
                    SimpleType: Seq
                      CodeReferenceElement: Seq
                        PsiElement(identifier)('Seq')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: X
                        CodeReferenceElement: X
                          PsiElement(identifier)('X')
                      PsiElement(])(']')
                PsiElement(])(']')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    ClassParameter: c
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('c')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        CompoundType: Seq[SA] with FromIterator[C]
                          ParametrizedType: Seq[SA]
                            SimpleType: Seq
                              CodeReferenceElement: Seq
                                PsiElement(identifier)('Seq')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: SA
                                CodeReferenceElement: SA
                                  PsiElement(identifier)('SA')
                              PsiElement(])(']')
                          PsiWhiteSpace(' ')
                          PsiElement(with)('with')
                          PsiWhiteSpace(' ')
                          ParametrizedType: FromIterator[C]
                            SimpleType: FromIterator
                              CodeReferenceElement: FromIterator
                                PsiElement(identifier)('FromIterator')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: C
                                CodeReferenceElement: C
                                  PsiElement(identifier)('C')
                              PsiElement(])(']')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    SimpleType: AnyVal
                      CodeReferenceElement: AnyVal
                        PsiElement(identifier)('AnyVal')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: reverse
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('reverse')
                    Parameters
                      <empty list>
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: C[SA]
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: SA
                          CodeReferenceElement: SA
                            PsiElement(identifier)('SA')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScPatternDefinition: elems
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: elems
                            PsiElement(identifier)('elems')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                ParametrizedType: Array[AnyRef]
                                  SimpleType: Array
                                    CodeReferenceElement: Array
                                      PsiElement(identifier)('Array')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: AnyRef
                                      CodeReferenceElement: AnyRef
                                        PsiElement(identifier)('AnyRef')
                                    PsiElement(])(']')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: c.length
                                    ReferenceExpression: c
                                      PsiElement(identifier)('c')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('length')
                                  PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      ScVariableDefinition: i
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(var)('var')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: i
                            PsiElement(identifier)('i')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: elems.length
                          ReferenceExpression: elems
                            PsiElement(identifier)('elems')
                          PsiElement(.)('.')
                          PsiElement(identifier)('length')
                      PsiWhiteSpace('\n      ')
                      ScPatternDefinition: it
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: it
                            PsiElement(identifier)('it')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: c.iterator
                          ReferenceExpression: c
                            PsiElement(identifier)('c')
                          PsiElement(.)('.')
                          PsiElement(identifier)('iterator')
                      PsiWhiteSpace('\n      ')
                      WhileStatement
                        PsiElement(while)('while')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        ReferenceExpression: it.hasNext
                          ReferenceExpression: it
                            PsiElement(identifier)('it')
                          PsiElement(.)('.')
                          PsiElement(identifier)('hasNext')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n        ')
                          InfixExpression
                            ReferenceExpression: i
                              PsiElement(identifier)('i')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -=
                              PsiElement(identifier)('-=')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('1')
                          PsiWhiteSpace('\n        ')
                          AssignStatement
                            MethodCall
                              ReferenceExpression: elems
                                PsiElement(identifier)('elems')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: i
                                  PsiElement(identifier)('i')
                                PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            GenericCall
                              ReferenceExpression: it.next.asInstanceOf
                                ReferenceExpression: it.next
                                  ReferenceExpression: it
                                    PsiElement(identifier)('it')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('next')
                                PsiElement(.)('.')
                                PsiElement(identifier)('asInstanceOf')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: AnyRef
                                  CodeReferenceElement: AnyRef
                                    PsiElement(identifier)('AnyRef')
                                PsiElement(])(']')
                          PsiWhiteSpace('\n      ')
                          PsiElement(})('}')
                      PsiWhiteSpace('\n      ')
                      ScPatternDefinition: xzz
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: xzz
                            PsiElement(identifier)('xzz')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: c.fromIterator
                            ReferenceExpression: c
                              PsiElement(identifier)('c')
                            PsiElement(.)('.')
                            PsiElement(identifier)('fromIterator')
                          ArgumentList
                            PsiElement(()('(')
                            MethodCall
                              GenericCall
                                ReferenceExpression: ArrayIterator
                                  PsiElement(identifier)('ArrayIterator')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: SA
                                    CodeReferenceElement: SA
                                      PsiElement(identifier)('SA')
                                  PsiElement(])(']')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: elems
                                  PsiElement(identifier)('elems')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: c.length
                                  ReferenceExpression: c
                                    PsiElement(identifier)('c')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('length')
                                PsiElement())(')')
                            PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      ReferenceExpression: xzz
                        PsiElement(identifier)('xzz')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: indexWhere
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('indexWhere')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: p
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('p')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: SA => Boolean
                              SimpleType: SA
                                CodeReferenceElement: SA
                                  PsiElement(identifier)('SA')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: Boolean
                                CodeReferenceElement: Boolean
                                  PsiElement(identifier)('Boolean')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: c.iterator.indexWhere
                        ReferenceExpression: c.iterator
                          ReferenceExpression: c
                            PsiElement(identifier)('c')
                          PsiElement(.)('.')
                          PsiElement(identifier)('iterator')
                        PsiElement(.)('.')
                        PsiElement(identifier)('indexWhere')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: p
                          PsiElement(identifier)('p')
                        PsiElement())(')')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n')
            ScClass: ListIterator
              PsiComment(BlockComment)('/*\n  case class ViewIterator[+A](itf: () => Iterator) extends Iterator[A] {\n\n    def hasNext = it.hasNext\n    def next\n    def map(f: A => B): ViewIterator[B] = ViewIterator(() => it().map(f))\n    def\n  }\n*/')
              PsiWhiteSpace('\n  ')
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(case)('case')
              PsiWhiteSpace(' ')
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('ListIterator')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    ClassParameter: xs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('xs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: List[A]
                          SimpleType: List
                            CodeReferenceElement: List
                              PsiElement(identifier)('List')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: Iterator[A]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScVariableDefinition: current
                    AnnotationsList
                      <empty list>
                    Modifiers
                      AccessModifier
                        PsiElement(private)('private')
                        PsiElement([)('[')
                        PsiElement(this)('this')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(var)('var')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: current
                        PsiElement(identifier)('current')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: List[A]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: hasNext
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('hasNext')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    PrefixExpression
                      ReferenceExpression: !
                        PsiElement(identifier)('!')
                      ReferenceExpression: current.isEmpty
                        ReferenceExpression: current
                          PsiElement(identifier)('current')
                        PsiElement(.)('.')
                        PsiElement(identifier)('isEmpty')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: next
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('next')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace(' ')
                      ScPatternDefinition: res
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: res
                            PsiElement(identifier)('res')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: current.head
                          ReferenceExpression: current
                            PsiElement(identifier)('current')
                          PsiElement(.)('.')
                          PsiElement(identifier)('head')
                      PsiElement(;)(';')
                      PsiWhiteSpace(' ')
                      AssignStatement
                        ReferenceExpression: current
                          PsiElement(identifier)('current')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: current.tail
                          ReferenceExpression: current
                            PsiElement(identifier)('current')
                          PsiElement(.)('.')
                          PsiElement(identifier)('tail')
                      PsiElement(;)(';')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: res
                        PsiElement(identifier)('res')
                      PsiWhiteSpace(' ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScClass: ArrayIterator
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(case)('case')
              PsiWhiteSpace(' ')
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('ArrayIterator')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('+')
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    ClassParameter: elems
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('elems')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Array[AnyRef]
                          SimpleType: Array
                            CodeReferenceElement: Array
                              PsiElement(identifier)('Array')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: AnyRef
                              CodeReferenceElement: AnyRef
                                PsiElement(identifier)('AnyRef')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ClassParameter: len
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('len')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    ParametrizedType: Iterator[A]
                      SimpleType: Iterator
                        CodeReferenceElement: Iterator
                          PsiElement(identifier)('Iterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScImportStatement
                    PsiElement(import)('import')
                    PsiWhiteSpace(' ')
                    ImportExpression
                      CodeReferenceElement: ArrayIterator
                        PsiElement(identifier)('ArrayIterator')
                      PsiElement(.)('.')
                      PsiElement(*)('*')
                  PsiWhiteSpace('\n\n    ')
                  ScFunctionDefinition: elem
                    AnnotationsList
                      <empty list>
                    Modifiers
                      AccessModifier
                        PsiElement(private)('private')
                    PsiWhiteSpace(' ')
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('elem')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: i
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('i')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    GenericCall
                      ReferenceExpression: elems(i).asInstanceOf
                        MethodCall
                          ReferenceExpression: elems
                            PsiElement(identifier)('elems')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: i
                              PsiElement(identifier)('i')
                            PsiElement())(')')
                        PsiElement(.)('.')
                        PsiElement(identifier)('asInstanceOf')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n\n    ')
                  ScVariableDefinition: cur
                    AnnotationsList
                      <empty list>
                    Modifiers
                      AccessModifier
                        PsiElement(private)('private')
                    PsiWhiteSpace(' ')
                    PsiElement(var)('var')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: cur
                        PsiElement(identifier)('cur')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('0')
                  PsiWhiteSpace('\n\n    ')
                  ScFunctionDefinition: hasNext
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('hasNext')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    InfixExpression
                      ReferenceExpression: cur
                        PsiElement(identifier)('cur')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: <
                        PsiElement(identifier)('<')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: len
                        PsiElement(identifier)('len')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: next
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('next')
                    Parameters
                      <empty list>
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace(' ')
                      ScPatternDefinition: res
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: res
                            PsiElement(identifier)('res')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: elem
                            PsiElement(identifier)('elem')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: cur
                              PsiElement(identifier)('cur')
                            PsiElement())(')')
                      PsiElement(;)(';')
                      PsiWhiteSpace(' ')
                      InfixExpression
                        ReferenceExpression: cur
                          PsiElement(identifier)('cur')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: +=
                          PsiElement(identifier)('+=')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('1')
                      PsiElement(;)(';')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: res
                        PsiElement(identifier)('res')
                      PsiWhiteSpace(' ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n\n    ')
                  ScFunctionDefinition: foreach
                    AnnotationsList
                      <empty list>
                    Modifiers
                      PsiElement(override)('override')
                    PsiWhiteSpace(' ')
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('foreach')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => Unit
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: Unit
                                CodeReferenceElement: Unit
                                  PsiElement(identifier)('Unit')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Unit
                      CodeReferenceElement: Unit
                        PsiElement(identifier)('Unit')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    ForStatement
                      PsiElement(for)('for')
                      PsiWhiteSpace(' ')
                      PsiElement(()('(')
                      Enumerators
                        Generator
                          ReferencePattern: i
                            PsiElement(identifier)('i')
                          PsiWhiteSpace(' ')
                          PsiElement(<-)('<-')
                          PsiWhiteSpace(' ')
                          InfixExpression
                            IntegerLiteral
                              PsiElement(integer)('0')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: until
                              PsiElement(identifier)('until')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: len
                              PsiElement(identifier)('len')
                      PsiElement())(')')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: f
                          PsiElement(identifier)('f')
                        ArgumentList
                          PsiElement(()('(')
                          MethodCall
                            ReferenceExpression: elem
                              PsiElement(identifier)('elem')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: i
                                PsiElement(identifier)('i')
                              PsiElement())(')')
                          PsiElement())(')')
                  PsiWhiteSpace('\n\n    ')
                  ScFunctionDefinition: map
                    AnnotationsList
                      <empty list>
                    Modifiers
                      PsiElement(override)('override')
                    PsiWhiteSpace(' ')
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('map')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => B
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: ArrayIterator[B]
                      SimpleType: ArrayIterator
                        CodeReferenceElement: ArrayIterator
                          PsiElement(identifier)('ArrayIterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScVariableDefinition: mapped
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(var)('var')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: mapped
                            PsiElement(identifier)('mapped')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: elems
                          PsiElement(identifier)('elems')
                      PsiWhiteSpace('\n      ')
                      ForStatement
                        PsiElement(for)('for')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        Enumerators
                          Generator
                            ReferencePattern: i
                              PsiElement(identifier)('i')
                            PsiWhiteSpace(' ')
                            PsiElement(<-)('<-')
                            PsiWhiteSpace(' ')
                            InfixExpression
                              IntegerLiteral
                                PsiElement(integer)('0')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: until
                                PsiElement(identifier)('until')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: len
                                PsiElement(identifier)('len')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        BlockExpression
                          PsiElement({)('{')
                          PsiWhiteSpace('\n        ')
                          ScPatternDefinition: x
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(val)('val')
                            PsiWhiteSpace(' ')
                            ListOfPatterns
                              ReferencePattern: x
                                PsiElement(identifier)('x')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: elem
                                PsiElement(identifier)('elem')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: i
                                  PsiElement(identifier)('i')
                                PsiElement())(')')
                          PsiWhiteSpace('\n        ')
                          ScPatternDefinition: y
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(val)('val')
                            PsiWhiteSpace(' ')
                            ListOfPatterns
                              ReferencePattern: y
                                PsiElement(identifier)('y')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            MethodCall
                              ReferenceExpression: widen
                                PsiElement(identifier)('widen')
                              ArgumentList
                                PsiElement(()('(')
                                MethodCall
                                  ReferenceExpression: f
                                    PsiElement(identifier)('f')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: x
                                      PsiElement(identifier)('x')
                                    PsiElement())(')')
                                PsiElement())(')')
                          PsiWhiteSpace('\n        ')
                          IfStatement
                            PsiElement(if)('if')
                            PsiWhiteSpace(' ')
                            PsiElement(()('(')
                            InfixExpression
                              MethodCall
                                ReferenceExpression: widen
                                  PsiElement(identifier)('widen')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: x
                                    PsiElement(identifier)('x')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: ne
                                PsiElement(identifier)('ne')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: y
                                PsiElement(identifier)('y')
                            PsiElement())(')')
                            PsiWhiteSpace(' ')
                            BlockExpression
                              PsiElement({)('{')
                              PsiWhiteSpace('\n          ')
                              IfStatement
                                PsiElement(if)('if')
                                PsiWhiteSpace(' ')
                                PsiElement(()('(')
                                InfixExpression
                                  ReferenceExpression: mapped
                                    PsiElement(identifier)('mapped')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: eq
                                    PsiElement(identifier)('eq')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: elems
                                    PsiElement(identifier)('elems')
                                PsiElement())(')')
                                PsiWhiteSpace(' ')
                                AssignStatement
                                  ReferenceExpression: mapped
                                    PsiElement(identifier)('mapped')
                                  PsiWhiteSpace(' ')
                                  PsiElement(=)('=')
                                  PsiWhiteSpace(' ')
                                  ScNewTemplateDefinition: <anonymous>
                                    PsiElement(new)('new')
                                    PsiWhiteSpace(' ')
                                    ExtendsBlock
                                      TemplateParents
                                        ConstructorInvocation
                                          ParametrizedType: Array[AnyRef]
                                            SimpleType: Array
                                              CodeReferenceElement: Array
                                                PsiElement(identifier)('Array')
                                            TypeArgumentsList
                                              PsiElement([)('[')
                                              SimpleType: AnyRef
                                                CodeReferenceElement: AnyRef
                                                  PsiElement(identifier)('AnyRef')
                                              PsiElement(])(']')
                                          ArgumentList
                                            PsiElement(()('(')
                                            ReferenceExpression: len
                                              PsiElement(identifier)('len')
                                            PsiElement())(')')
                              PsiWhiteSpace('\n          ')
                              AssignStatement
                                MethodCall
                                  ReferenceExpression: mapped
                                    PsiElement(identifier)('mapped')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: i
                                      PsiElement(identifier)('i')
                                    PsiElement())(')')
                                PsiWhiteSpace(' ')
                                PsiElement(=)('=')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: y
                                  PsiElement(identifier)('y')
                              PsiWhiteSpace('\n        ')
                              PsiElement(})('}')
                          PsiWhiteSpace('\n      ')
                          PsiElement(})('}')
                      PsiWhiteSpace('\n      ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: mapped
                            PsiElement(identifier)('mapped')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: eq
                            PsiElement(identifier)('eq')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: elems
                            PsiElement(identifier)('elems')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        GenericCall
                          ReferenceExpression: this.asInstanceOf
                            ThisReference
                              PsiElement(this)('this')
                            PsiElement(.)('.')
                            PsiElement(identifier)('asInstanceOf')
                          TypeArgumentsList
                            PsiElement([)('[')
                            ParametrizedType: ArrayIterator[B]
                              SimpleType: ArrayIterator
                                CodeReferenceElement: ArrayIterator
                                  PsiElement(identifier)('ArrayIterator')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                            PsiElement(])(']')
                        PsiWhiteSpace('\n      ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                SimpleType: ArrayIterator
                                  CodeReferenceElement: ArrayIterator
                                    PsiElement(identifier)('ArrayIterator')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: mapped
                                    PsiElement(identifier)('mapped')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: len
                                    PsiElement(identifier)('len')
                                  PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n\n    ')
                  ScFunctionDefinition: flatMap
                    AnnotationsList
                      <empty list>
                    Modifiers
                      PsiElement(override)('override')
                    PsiWhiteSpace(' ')
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatMap')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: f
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('f')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            FunctionalType: A => IterableOnce[B]
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              ParametrizedType: IterableOnce[B]
                                SimpleType: IterableOnce
                                  CodeReferenceElement: IterableOnce
                                    PsiElement(identifier)('IterableOnce')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: B
                                    CodeReferenceElement: B
                                      PsiElement(identifier)('B')
                                  PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: ArrayIterator[B]
                      SimpleType: ArrayIterator
                        CodeReferenceElement: ArrayIterator
                          PsiElement(identifier)('ArrayIterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace('\n      ')
                    MethodCall
                      ReferenceExpression: flatten
                        PsiElement(identifier)('flatten')
                      ArgumentList
                        PsiElement(()('(')
                        MethodCall
                          ReferenceExpression: map
                            PsiElement(identifier)('map')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: f(_).buildIterator
                              MethodCall
                                ReferenceExpression: f
                                  PsiElement(identifier)('f')
                                ArgumentList
                                  PsiElement(()('(')
                                  UnderscoreSection
                                    PsiElement(_)('_')
                                  PsiElement())(')')
                              PsiElement(.)('.')
                              PsiElement(identifier)('buildIterator')
                            PsiElement())(')')
                        PsiElement())(')')
                  PsiWhiteSpace('\n\n    ')
                  ScFunctionDefinition: ++
                    AnnotationsList
                      <empty list>
                    Modifiers
                      PsiElement(override)('override')
                    PsiWhiteSpace(' ')
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('++')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: B
                        PsiElement(identifier)('B')
                        PsiWhiteSpace(' ')
                        PsiElement(>:)('>:')
                        PsiWhiteSpace(' ')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: that
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('that')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: IterableOnce[B]
                              SimpleType: IterableOnce
                                CodeReferenceElement: IterableOnce
                                  PsiElement(identifier)('IterableOnce')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: ArrayIterator[B]
                      SimpleType: ArrayIterator
                        CodeReferenceElement: ArrayIterator
                          PsiElement(identifier)('ArrayIterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScPatternDefinition: thatIterator, elems2, len2
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          NamingPattern: thatIterator
                            PsiElement(identifier)('thatIterator')
                            PsiWhiteSpace(' ')
                            PsiElement(@)('@')
                            PsiWhiteSpace(' ')
                            ConstructorPattern
                              CodeReferenceElement: ArrayIterator
                                PsiElement(identifier)('ArrayIterator')
                              Pattern Argument List
                                PsiElement(()('(')
                                ReferencePattern: elems2
                                  PsiElement(identifier)('elems2')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferencePattern: len2
                                  PsiElement(identifier)('len2')
                                PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: fromIterator
                            PsiElement(identifier)('fromIterator')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: that.iterator
                              ReferenceExpression: that
                                PsiElement(identifier)('that')
                              PsiElement(.)('.')
                              PsiElement(identifier)('iterator')
                            PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      IfStatement
                        PsiElement(if)('if')
                        PsiWhiteSpace(' ')
                        PsiElement(()('(')
                        InfixExpression
                          ReferenceExpression: len
                            PsiElement(identifier)('len')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: ==
                            PsiElement(identifier)('==')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('0')
                        PsiElement())(')')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: thatIterator
                          PsiElement(identifier)('thatIterator')
                        PsiWhiteSpace('\n      ')
                        PsiElement(else)('else')
                        PsiWhiteSpace(' ')
                        IfStatement
                          PsiElement(if)('if')
                          PsiWhiteSpace(' ')
                          PsiElement(()('(')
                          InfixExpression
                            ReferenceExpression: len2
                              PsiElement(identifier)('len2')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: ==
                              PsiElement(identifier)('==')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('0')
                          PsiElement())(')')
                          PsiWhiteSpace(' ')
                          ThisReference
                            PsiElement(this)('this')
                          PsiWhiteSpace('\n      ')
                          PsiElement(else)('else')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n        ')
                            ScPatternDefinition: resLen
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(val)('val')
                              PsiWhiteSpace(' ')
                              ListOfPatterns
                                ReferencePattern: resLen
                                  PsiElement(identifier)('resLen')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              InfixExpression
                                ReferenceExpression: len
                                  PsiElement(identifier)('len')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: +
                                  PsiElement(identifier)('+')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: len2
                                  PsiElement(identifier)('len2')
                            PsiWhiteSpace('\n        ')
                            ScPatternDefinition: resElems
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(val)('val')
                              PsiWhiteSpace(' ')
                              ListOfPatterns
                                ReferencePattern: resElems
                                  PsiElement(identifier)('resElems')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              ScNewTemplateDefinition: <anonymous>
                                PsiElement(new)('new')
                                PsiWhiteSpace(' ')
                                ExtendsBlock
                                  TemplateParents
                                    ConstructorInvocation
                                      ParametrizedType: Array[AnyRef]
                                        SimpleType: Array
                                          CodeReferenceElement: Array
                                            PsiElement(identifier)('Array')
                                        TypeArgumentsList
                                          PsiElement([)('[')
                                          SimpleType: AnyRef
                                            CodeReferenceElement: AnyRef
                                              PsiElement(identifier)('AnyRef')
                                          PsiElement(])(']')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: resLen
                                          PsiElement(identifier)('resLen')
                                        PsiElement())(')')
                            PsiWhiteSpace('\n        ')
                            MethodCall
                              ReferenceExpression: Array.copy
                                ReferenceExpression: Array
                                  PsiElement(identifier)('Array')
                                PsiElement(.)('.')
                                PsiElement(identifier)('copy')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: elems
                                  PsiElement(identifier)('elems')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                IntegerLiteral
                                  PsiElement(integer)('0')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: resElems
                                  PsiElement(identifier)('resElems')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                IntegerLiteral
                                  PsiElement(integer)('0')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: len
                                  PsiElement(identifier)('len')
                                PsiElement())(')')
                            PsiWhiteSpace('\n        ')
                            MethodCall
                              ReferenceExpression: Array.copy
                                ReferenceExpression: Array
                                  PsiElement(identifier)('Array')
                                PsiElement(.)('.')
                                PsiElement(identifier)('copy')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: elems2
                                  PsiElement(identifier)('elems2')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                IntegerLiteral
                                  PsiElement(integer)('0')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: resElems
                                  PsiElement(identifier)('resElems')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: len
                                  PsiElement(identifier)('len')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: len2
                                  PsiElement(identifier)('len2')
                                PsiElement())(')')
                            PsiWhiteSpace('\n        ')
                            ScNewTemplateDefinition: <anonymous>
                              PsiElement(new)('new')
                              PsiWhiteSpace(' ')
                              ExtendsBlock
                                TemplateParents
                                  ConstructorInvocation
                                    SimpleType: ArrayIterator
                                      CodeReferenceElement: ArrayIterator
                                        PsiElement(identifier)('ArrayIterator')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: resElems
                                        PsiElement(identifier)('resElems')
                                      PsiElement(,)(',')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: resLen
                                        PsiElement(identifier)('resLen')
                                      PsiElement())(')')
                            PsiWhiteSpace('\n      ')
                            PsiElement(})('}')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n  ')
            ScObject: ArrayIterator
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(object)('object')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('ArrayIterator')
              PsiWhiteSpace(' ')
              ExtendsBlock
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  ScFunctionDefinition: widen
                    AnnotationsList
                      <empty list>
                    Modifiers
                      AccessModifier
                        PsiElement(private)('private')
                    PsiWhiteSpace(' ')
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('widen')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: x
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('x')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Any
                              CodeReferenceElement: Any
                                PsiElement(identifier)('Any')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: AnyRef
                      CodeReferenceElement: AnyRef
                        PsiElement(identifier)('AnyRef')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    GenericCall
                      ReferenceExpression: x.asInstanceOf
                        ReferenceExpression: x
                          PsiElement(identifier)('x')
                        PsiElement(.)('.')
                        PsiElement(identifier)('asInstanceOf')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: AnyRef
                          CodeReferenceElement: AnyRef
                            PsiElement(identifier)('AnyRef')
                        PsiElement(])(']')
                  PsiWhiteSpace('\n\n    ')
                  ScFunctionDefinition: fromIterator
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('fromIterator')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: A
                        PsiElement(identifier)('A')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: it
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('it')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Iterator[A]
                              SimpleType: Iterator
                                CodeReferenceElement: Iterator
                                  PsiElement(identifier)('Iterator')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: ArrayIterator[A]
                      SimpleType: ArrayIterator
                        CodeReferenceElement: ArrayIterator
                          PsiElement(identifier)('ArrayIterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MatchStatement
                      ReferenceExpression: it
                        PsiElement(identifier)('it')
                      PsiWhiteSpace(' ')
                      PsiElement(match)('match')
                      PsiWhiteSpace(' ')
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      CaseClauses
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          Scala3 TypedPattern
                            ReferencePattern: it
                              PsiElement(identifier)('it')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            TypePattern
                              ParametrizedType: ArrayIterator[A]
                                SimpleType: ArrayIterator
                                  CodeReferenceElement: ArrayIterator
                                    PsiElement(identifier)('ArrayIterator')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: A
                                    CodeReferenceElement: A
                                      PsiElement(identifier)('A')
                                  PsiElement(])(']')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            ReferenceExpression: it
                              PsiElement(identifier)('it')
                        PsiWhiteSpace('\n      ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          WildcardPattern
                            PsiElement(_)('_')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace('\n        ')
                          BlockOfExpressions
                            ScVariableDefinition: elems
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(var)('var')
                              PsiWhiteSpace(' ')
                              ListOfPatterns
                                ReferencePattern: elems
                                  PsiElement(identifier)('elems')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              ScNewTemplateDefinition: <anonymous>
                                PsiElement(new)('new')
                                PsiWhiteSpace(' ')
                                ExtendsBlock
                                  TemplateParents
                                    ConstructorInvocation
                                      ParametrizedType: Array[AnyRef]
                                        SimpleType: Array
                                          CodeReferenceElement: Array
                                            PsiElement(identifier)('Array')
                                        TypeArgumentsList
                                          PsiElement([)('[')
                                          SimpleType: AnyRef
                                            CodeReferenceElement: AnyRef
                                              PsiElement(identifier)('AnyRef')
                                          PsiElement(])(']')
                                      ArgumentList
                                        PsiElement(()('(')
                                        IntegerLiteral
                                          PsiElement(integer)('32')
                                        PsiElement())(')')
                            PsiWhiteSpace('\n        ')
                            ScVariableDefinition: len
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(var)('var')
                              PsiWhiteSpace(' ')
                              ListOfPatterns
                                ReferencePattern: len
                                  PsiElement(identifier)('len')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              IntegerLiteral
                                PsiElement(integer)('0')
                            PsiWhiteSpace('\n        ')
                            ScFunctionDefinition: ensureCapacity
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(def)('def')
                              PsiWhiteSpace(' ')
                              PsiElement(identifier)('ensureCapacity')
                              Parameters
                                ParametersClause
                                  PsiElement(()('(')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              BlockExpression
                                PsiElement({)('{')
                                PsiWhiteSpace('\n          ')
                                WhileStatement
                                  PsiElement(while)('while')
                                  PsiWhiteSpace(' ')
                                  PsiElement(()('(')
                                  InfixExpression
                                    ReferenceExpression: len
                                      PsiElement(identifier)('len')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: >
                                      PsiElement(identifier)('>')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: elems.length
                                      ReferenceExpression: elems
                                        PsiElement(identifier)('elems')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('length')
                                  PsiElement())(')')
                                  PsiWhiteSpace(' ')
                                  BlockExpression
                                    PsiElement({)('{')
                                    PsiWhiteSpace('\n            ')
                                    ScPatternDefinition: newElems
                                      AnnotationsList
                                        <empty list>
                                      Modifiers
                                        <empty list>
                                      PsiElement(val)('val')
                                      PsiWhiteSpace(' ')
                                      ListOfPatterns
                                        ReferencePattern: newElems
                                          PsiElement(identifier)('newElems')
                                      PsiWhiteSpace(' ')
                                      PsiElement(=)('=')
                                      PsiWhiteSpace(' ')
                                      ScNewTemplateDefinition: <anonymous>
                                        PsiElement(new)('new')
                                        PsiWhiteSpace(' ')
                                        ExtendsBlock
                                          TemplateParents
                                            ConstructorInvocation
                                              ParametrizedType: Array[AnyRef]
                                                SimpleType: Array
                                                  CodeReferenceElement: Array
                                                    PsiElement(identifier)('Array')
                                                TypeArgumentsList
                                                  PsiElement([)('[')
                                                  SimpleType: AnyRef
                                                    CodeReferenceElement: AnyRef
                                                      PsiElement(identifier)('AnyRef')
                                                  PsiElement(])(']')
                                              ArgumentList
                                                PsiElement(()('(')
                                                InfixExpression
                                                  ReferenceExpression: elems.length
                                                    ReferenceExpression: elems
                                                      PsiElement(identifier)('elems')
                                                    PsiElement(.)('.')
                                                    PsiElement(identifier)('length')
                                                  PsiWhiteSpace(' ')
                                                  ReferenceExpression: *
                                                    PsiElement(identifier)('*')
                                                  PsiWhiteSpace(' ')
                                                  IntegerLiteral
                                                    PsiElement(integer)('2')
                                                PsiElement())(')')
                                    PsiWhiteSpace('\n            ')
                                    MethodCall
                                      ReferenceExpression: Array.copy
                                        ReferenceExpression: Array
                                          PsiElement(identifier)('Array')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('copy')
                                      ArgumentList
                                        PsiElement(()('(')
                                        ReferenceExpression: elems
                                          PsiElement(identifier)('elems')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        IntegerLiteral
                                          PsiElement(integer)('0')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: newElems
                                          PsiElement(identifier)('newElems')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        IntegerLiteral
                                          PsiElement(integer)('0')
                                        PsiElement(,)(',')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: elems.length
                                          ReferenceExpression: elems
                                            PsiElement(identifier)('elems')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('length')
                                        PsiElement())(')')
                                    PsiWhiteSpace('\n            ')
                                    AssignStatement
                                      ReferenceExpression: elems
                                        PsiElement(identifier)('elems')
                                      PsiWhiteSpace(' ')
                                      PsiElement(=)('=')
                                      PsiWhiteSpace(' ')
                                      ReferenceExpression: newElems
                                        PsiElement(identifier)('newElems')
                                    PsiWhiteSpace('\n          ')
                                    PsiElement(})('}')
                                PsiWhiteSpace('\n        ')
                                PsiElement(})('}')
                            PsiWhiteSpace('\n        ')
                            WhileStatement
                              PsiElement(while)('while')
                              PsiWhiteSpace(' ')
                              PsiElement(()('(')
                              ReferenceExpression: it.hasNext
                                ReferenceExpression: it
                                  PsiElement(identifier)('it')
                                PsiElement(.)('.')
                                PsiElement(identifier)('hasNext')
                              PsiElement())(')')
                              PsiWhiteSpace(' ')
                              BlockExpression
                                PsiElement({)('{')
                                PsiWhiteSpace('\n          ')
                                InfixExpression
                                  ReferenceExpression: len
                                    PsiElement(identifier)('len')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: +=
                                    PsiElement(identifier)('+=')
                                  PsiWhiteSpace(' ')
                                  IntegerLiteral
                                    PsiElement(integer)('1')
                                PsiWhiteSpace('\n          ')
                                MethodCall
                                  ReferenceExpression: ensureCapacity
                                    PsiElement(identifier)('ensureCapacity')
                                  ArgumentList
                                    PsiElement(()('(')
                                    PsiElement())(')')
                                PsiWhiteSpace('\n          ')
                                AssignStatement
                                  MethodCall
                                    ReferenceExpression: elems
                                      PsiElement(identifier)('elems')
                                    ArgumentList
                                      PsiElement(()('(')
                                      InfixExpression
                                        ReferenceExpression: len
                                          PsiElement(identifier)('len')
                                        PsiWhiteSpace(' ')
                                        ReferenceExpression: -
                                          PsiElement(identifier)('-')
                                        PsiWhiteSpace(' ')
                                        IntegerLiteral
                                          PsiElement(integer)('1')
                                      PsiElement())(')')
                                  PsiWhiteSpace(' ')
                                  PsiElement(=)('=')
                                  PsiWhiteSpace(' ')
                                  MethodCall
                                    ReferenceExpression: widen
                                      PsiElement(identifier)('widen')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: it.next
                                        ReferenceExpression: it
                                          PsiElement(identifier)('it')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('next')
                                      PsiElement())(')')
                                PsiWhiteSpace('\n        ')
                                PsiElement(})('}')
                            PsiWhiteSpace('\n        ')
                            MethodCall
                              ReferenceExpression: ArrayIterator
                                PsiElement(identifier)('ArrayIterator')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: elems
                                  PsiElement(identifier)('elems')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: len
                                  PsiElement(identifier)('len')
                                PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n\n    ')
                  ScFunctionDefinition: flatten
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('flatten')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: A
                        PsiElement(identifier)('A')
                      PsiElement(])(']')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: its
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('its')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: ArrayIterator[Iterator[A]]
                              SimpleType: ArrayIterator
                                CodeReferenceElement: ArrayIterator
                                  PsiElement(identifier)('ArrayIterator')
                              TypeArgumentsList
                                PsiElement([)('[')
                                ParametrizedType: Iterator[A]
                                  SimpleType: Iterator
                                    CodeReferenceElement: Iterator
                                      PsiElement(identifier)('Iterator')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: A
                                      CodeReferenceElement: A
                                        PsiElement(identifier)('A')
                                    PsiElement(])(']')
                                PsiElement(])(']')
                        PsiElement())(')')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParametrizedType: ArrayIterator[A]
                      SimpleType: ArrayIterator
                        CodeReferenceElement: ArrayIterator
                          PsiElement(identifier)('ArrayIterator')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScVariableDefinition: arrayIts
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(var)('var')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: arrayIts
                            PsiElement(identifier)('arrayIts')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        MethodCall
                          ReferenceExpression: its.map
                            ReferenceExpression: its
                              PsiElement(identifier)('its')
                            PsiElement(.)('.')
                            PsiElement(identifier)('map')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: fromIterator
                              PsiElement(identifier)('fromIterator')
                            PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      ScVariableDefinition: totalLen
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(var)('var')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: totalLen
                            PsiElement(identifier)('totalLen')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
                      PsiWhiteSpace('\n      ')
                      MethodCall
                        ReferenceExpression: arrayIts.foreach
                          ReferenceExpression: arrayIts
                            PsiElement(identifier)('arrayIts')
                          PsiElement(.)('.')
                          PsiElement(identifier)('foreach')
                        ArgumentList
                          PsiElement(()('(')
                          InfixExpression
                            ReferenceExpression: totalLen
                              PsiElement(identifier)('totalLen')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: +=
                              PsiElement(identifier)('+=')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: _.len
                              UnderscoreSection
                                PsiElement(_)('_')
                              PsiElement(.)('.')
                              PsiElement(identifier)('len')
                          PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      ScPatternDefinition: allElems
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: allElems
                            PsiElement(identifier)('allElems')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                ParametrizedType: Array[AnyRef]
                                  SimpleType: Array
                                    CodeReferenceElement: Array
                                      PsiElement(identifier)('Array')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: AnyRef
                                      CodeReferenceElement: AnyRef
                                        PsiElement(identifier)('AnyRef')
                                    PsiElement(])(']')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: totalLen
                                    PsiElement(identifier)('totalLen')
                                  PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      ScVariableDefinition: j
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(var)('var')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: j
                            PsiElement(identifier)('j')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
                      PsiWhiteSpace('\n      ')
                      MethodCall
                        ReferenceExpression: arrayIts.foreach
                          ReferenceExpression: arrayIts
                            PsiElement(identifier)('arrayIts')
                          PsiElement(.)('.')
                          PsiElement(identifier)('foreach')
                        PsiWhiteSpace(' ')
                        ArgumentList
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace(' ')
                            FunctionExpression
                              Parameters
                                ParametersClause
                                  Parameter: it
                                    PsiElement(identifier)('it')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace('\n        ')
                              BlockOfExpressions
                                MethodCall
                                  ReferenceExpression: Array.copy
                                    ReferenceExpression: Array
                                      PsiElement(identifier)('Array')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('copy')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: it.elems
                                      ReferenceExpression: it
                                        PsiElement(identifier)('it')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('elems')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    IntegerLiteral
                                      PsiElement(integer)('0')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: allElems
                                      PsiElement(identifier)('allElems')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: j
                                      PsiElement(identifier)('j')
                                    PsiElement(,)(',')
                                    PsiWhiteSpace(' ')
                                    ReferenceExpression: it.len
                                      ReferenceExpression: it
                                        PsiElement(identifier)('it')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('len')
                                    PsiElement())(')')
                                PsiWhiteSpace('\n        ')
                                InfixExpression
                                  ReferenceExpression: j
                                    PsiElement(identifier)('j')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: +=
                                    PsiElement(identifier)('+=')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: it.len
                                    ReferenceExpression: it
                                      PsiElement(identifier)('it')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('len')
                            PsiWhiteSpace('\n      ')
                            PsiElement(})('}')
                      PsiWhiteSpace('\n      ')
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              SimpleType: ArrayIterator
                                CodeReferenceElement: ArrayIterator
                                  PsiElement(identifier)('ArrayIterator')
                              ArgumentList
                                PsiElement(()('(')
                                ReferenceExpression: allElems
                                  PsiElement(identifier)('allElems')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: totalLen
                                  PsiElement(identifier)('totalLen')
                                PsiElement())(')')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n')
            PsiElement(})('}')
