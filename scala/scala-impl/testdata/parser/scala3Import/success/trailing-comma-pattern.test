object Test:
  val List(x, y, _*,
  ) = List(1, 2, 3)
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x, y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ConstructorPattern
              CodeReferenceElement: List
                PsiElement(identifier)('List')
              Pattern Argument List
                PsiElement(()('(')
                ReferencePattern: x
                  PsiElement(identifier)('x')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ReferencePattern: y
                  PsiElement(identifier)('y')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SequenceWildcardPattern: _
                  PsiElement(_)('_')
                  PsiElement(identifier)('*')
                PsiElement(,)(',')
                PsiWhiteSpace('\n  ')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: List
              PsiElement(identifier)('List')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('2')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('3')
              PsiElement())(')')
