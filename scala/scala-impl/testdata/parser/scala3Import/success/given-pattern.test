

class Test {
  import scala.collection.immutable.{TreeSet, HashSet}

  transparent inline def trySummon[S, T](f: PartialFunction[S, T]): T = ???

  inline def setFor[T]: Set[T] = trySummon {
    case ord @ given Ordering[T] => new TreeSet[T]
    case given Ordering[T]       => new TreeSet[T]
    case _                       => new HashSet[T]
  }

  def f1[T](x: Ordering[T]) = (x, x) match {
    case (y @ given Ordering[T], _) => new TreeSet[T]
  }
  def f2[T](x: Ordering[T]) = {
    val xs = List(x, x, x)
    for y @ given Ordering[T] <- xs
    yield new TreeSet[T]
  }
  def f3[T](x: Ordering[T]) = (x, x) match {
    case (given Ordering[T], _) => new TreeSet[T]
  }
  def f4[T](x: Ordering[T]) = {
    val xs = List(x, x, x)
    for given Ordering[T] <- xs
    yield new TreeSet[T]
  }
}
-----
ScalaFile
  ScClass: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: scala.collection.immutable
              CodeReferenceElement: scala.collection
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('collection')
              PsiElement(.)('.')
              PsiElement(identifier)('immutable')
            PsiElement(.)('.')
            ImportSelectors
              PsiElement({)('{')
              ImportSelector
                CodeReferenceElement: TreeSet
                  PsiElement(identifier)('TreeSet')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ImportSelector
                CodeReferenceElement: HashSet
                  PsiElement(identifier)('HashSet')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: trySummon
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('trySummon')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: S
              PsiElement(identifier)('S')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: PartialFunction[S, T]
                    SimpleType: PartialFunction
                      CodeReferenceElement: PartialFunction
                        PsiElement(identifier)('PartialFunction')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: S
                        CodeReferenceElement: S
                          PsiElement(identifier)('S')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: setFor
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('setFor')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Set[T]
            SimpleType: Set
              CodeReferenceElement: Set
                PsiElement(identifier)('Set')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: trySummon
              PsiElement(identifier)('trySummon')
            PsiWhiteSpace(' ')
            ArgumentList
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                CaseClauses
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    NamingPattern: ord
                      PsiElement(identifier)('ord')
                      PsiWhiteSpace(' ')
                      PsiElement(@)('@')
                      PsiWhiteSpace(' ')
                      ScGivenPatternImpl(given pattern)
                        PsiElement(given)('given')
                        PsiWhiteSpace(' ')
                        ParametrizedType: Ordering[T]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              ParametrizedType: TreeSet[T]
                                SimpleType: TreeSet
                                  CodeReferenceElement: TreeSet
                                    PsiElement(identifier)('TreeSet')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: T
                                    CodeReferenceElement: T
                                      PsiElement(identifier)('T')
                                  PsiElement(])(']')
                  PsiWhiteSpace('\n    ')
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    ScGivenPatternImpl(given pattern)
                      PsiElement(given)('given')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Ordering[T]
                        SimpleType: Ordering
                          CodeReferenceElement: Ordering
                            PsiElement(identifier)('Ordering')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiElement(])(']')
                    PsiWhiteSpace('       ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              ParametrizedType: TreeSet[T]
                                SimpleType: TreeSet
                                  CodeReferenceElement: TreeSet
                                    PsiElement(identifier)('TreeSet')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: T
                                    CodeReferenceElement: T
                                      PsiElement(identifier)('T')
                                  PsiElement(])(']')
                  PsiWhiteSpace('\n    ')
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiWhiteSpace('                       ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              ParametrizedType: HashSet[T]
                                SimpleType: HashSet
                                  CodeReferenceElement: HashSet
                                    PsiElement(identifier)('HashSet')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: T
                                    CodeReferenceElement: T
                                      PsiElement(identifier)('T')
                                  PsiElement(])(']')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: f1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Ordering[T]
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            Tuple
              PsiElement(()('(')
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                TuplePattern
                  PsiElement(()('(')
                  ArgumentPatterns
                    NamingPattern: y
                      PsiElement(identifier)('y')
                      PsiWhiteSpace(' ')
                      PsiElement(@)('@')
                      PsiWhiteSpace(' ')
                      ScGivenPatternImpl(given pattern)
                        PsiElement(given)('given')
                        PsiWhiteSpace(' ')
                        ParametrizedType: Ordering[T]
                          SimpleType: Ordering
                            CodeReferenceElement: Ordering
                              PsiElement(identifier)('Ordering')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    WildcardPattern
                      PsiElement(_)('_')
                  PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          ParametrizedType: TreeSet[T]
                            SimpleType: TreeSet
                              CodeReferenceElement: TreeSet
                                PsiElement(identifier)('TreeSet')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: T
                                CodeReferenceElement: T
                                  PsiElement(identifier)('T')
                              PsiElement(])(']')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Ordering[T]
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: xs
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: xs
                  PsiElement(identifier)('xs')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ForStatement
              PsiElement(for)('for')
              PsiWhiteSpace(' ')
              Enumerators
                Generator
                  NamingPattern: y
                    PsiElement(identifier)('y')
                    PsiWhiteSpace(' ')
                    PsiElement(@)('@')
                    PsiWhiteSpace(' ')
                    ScGivenPatternImpl(given pattern)
                      PsiElement(given)('given')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Ordering[T]
                        SimpleType: Ordering
                          CodeReferenceElement: Ordering
                            PsiElement(identifier)('Ordering')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(<-)('<-')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs
                    PsiElement(identifier)('xs')
              PsiWhiteSpace('\n    ')
              PsiElement(yield)('yield')
              PsiWhiteSpace(' ')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: TreeSet[T]
                        SimpleType: TreeSet
                          CodeReferenceElement: TreeSet
                            PsiElement(identifier)('TreeSet')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiElement(])(']')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f3')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Ordering[T]
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            Tuple
              PsiElement(()('(')
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                TuplePattern
                  PsiElement(()('(')
                  ArgumentPatterns
                    ScGivenPatternImpl(given pattern)
                      PsiElement(given)('given')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Ordering[T]
                        SimpleType: Ordering
                          CodeReferenceElement: Ordering
                            PsiElement(identifier)('Ordering')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    WildcardPattern
                      PsiElement(_)('_')
                  PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          ParametrizedType: TreeSet[T]
                            SimpleType: TreeSet
                              CodeReferenceElement: TreeSet
                                PsiElement(identifier)('TreeSet')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: T
                                CodeReferenceElement: T
                                  PsiElement(identifier)('T')
                              PsiElement(])(']')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f4
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f4')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Ordering[T]
                    SimpleType: Ordering
                      CodeReferenceElement: Ordering
                        PsiElement(identifier)('Ordering')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: xs
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: xs
                  PsiElement(identifier)('xs')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: x
                    PsiElement(identifier)('x')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ForStatement
              PsiElement(for)('for')
              PsiWhiteSpace(' ')
              Enumerators
                Generator
                  ScGivenPatternImpl(given pattern)
                    PsiElement(given)('given')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Ordering[T]
                      SimpleType: Ordering
                        CodeReferenceElement: Ordering
                          PsiElement(identifier)('Ordering')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(<-)('<-')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs
                    PsiElement(identifier)('xs')
              PsiWhiteSpace('\n    ')
              PsiElement(yield)('yield')
              PsiWhiteSpace(' ')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: TreeSet[T]
                        SimpleType: TreeSet
                          CodeReferenceElement: TreeSet
                            PsiElement(identifier)('TreeSet')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiElement(])(']')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
