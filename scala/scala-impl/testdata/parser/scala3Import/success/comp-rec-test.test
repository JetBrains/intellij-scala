object Comp extends App {

   trait Family {
     type T
   }

   object Trivial extends Family {
     type T = Unit
   }

   trait Wrap extends Family {
     val v : Family
     type T = v.T
   }

   object WrapTrivial extends Wrap {
     val v = Trivial
   }

   object WrapWrapTrivial extends Wrap {
     val v = WrapTrivial
   }

}
-----
ScalaFile
  ScObject: Comp
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Comp')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: App
            CodeReferenceElement: App
              PsiElement(identifier)('App')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n   ')
        ScTrait: Family
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Family')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n     ')
              ScTypeAliasDeclaration: T
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('T')
              PsiWhiteSpace('\n   ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n   ')
        ScObject: Trivial
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Trivial')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Family
                  CodeReferenceElement: Family
                    PsiElement(identifier)('Family')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n     ')
              ScTypeAliasDefinition: T
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('T')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
              PsiWhiteSpace('\n   ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n   ')
        ScTrait: Wrap
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Wrap')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Family
                  CodeReferenceElement: Family
                    PsiElement(identifier)('Family')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n     ')
              ScValueDeclaration: v
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfIdentifiers
                  Field identifier: v
                    PsiElement(identifier)('v')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Family
                  CodeReferenceElement: Family
                    PsiElement(identifier)('Family')
              PsiWhiteSpace('\n     ')
              ScTypeAliasDefinition: T
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('T')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: v.T
                  CodeReferenceElement: v.T
                    CodeReferenceElement: v
                      PsiElement(identifier)('v')
                    PsiElement(.)('.')
                    PsiElement(identifier)('T')
              PsiWhiteSpace('\n   ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n   ')
        ScObject: WrapTrivial
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('WrapTrivial')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Wrap
                  CodeReferenceElement: Wrap
                    PsiElement(identifier)('Wrap')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n     ')
              ScPatternDefinition: v
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: v
                    PsiElement(identifier)('v')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: Trivial
                  PsiElement(identifier)('Trivial')
              PsiWhiteSpace('\n   ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n   ')
        ScObject: WrapWrapTrivial
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('WrapWrapTrivial')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Wrap
                  CodeReferenceElement: Wrap
                    PsiElement(identifier)('Wrap')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n     ')
              ScPatternDefinition: v
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: v
                    PsiElement(identifier)('v')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: WrapTrivial
                  PsiElement(identifier)('WrapTrivial')
              PsiWhiteSpace('\n   ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
