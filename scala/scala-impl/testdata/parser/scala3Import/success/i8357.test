trait FieldInfo {
  val fieldType: ALL_TYPE
}

opaque type TypeSymbol = String

trait ConcreteType {
  val name: String
  val typeParameters: List[TypeSymbol]
  val isUnion: Boolean = false
}

trait UnionContainer {
  val hasUnion: Boolean
}

type ALL_TYPE = ConcreteType | TypeSymbol

case class StaticUnionInfo(name: String, typeParameters: List[TypeSymbol]) extends ConcreteType 
case class AliasInfo(name: String, typeParameters: List[TypeSymbol]) extends ConcreteType

object UnionKind {
  def unapply(f: FieldInfo): Boolean = 
    f.fieldType match {
      case _: StaticUnionInfo => true
      case t: AliasInfo if t.isUnion =>  true
      case t: UnionContainer if t.hasUnion => true  // this line here causes crash
      case _ => false
    }
}
-----
ScalaFile
  ScTrait: FieldInfo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('FieldInfo')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: fieldType
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: fieldType
              PsiElement(identifier)('fieldType')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: ALL_TYPE
            CodeReferenceElement: ALL_TYPE
              PsiElement(identifier)('ALL_TYPE')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTypeAliasDefinition: TypeSymbol
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(opaque)('opaque')
    PsiWhiteSpace(' ')
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TypeSymbol')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    SimpleType: String
      CodeReferenceElement: String
        PsiElement(identifier)('String')
  PsiWhiteSpace('\n\n')
  ScTrait: ConcreteType
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ConcreteType')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: name
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: name
              PsiElement(identifier)('name')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: typeParameters
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: typeParameters
              PsiElement(identifier)('typeParameters')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[TypeSymbol]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: TypeSymbol
                CodeReferenceElement: TypeSymbol
                  PsiElement(identifier)('TypeSymbol')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: isUnion
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: isUnion
              PsiElement(identifier)('isUnion')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Boolean
            CodeReferenceElement: Boolean
              PsiElement(identifier)('Boolean')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BooleanLiteral
            PsiElement(false)('false')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: UnionContainer
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('UnionContainer')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: hasUnion
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: hasUnion
              PsiElement(identifier)('hasUnion')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Boolean
            CodeReferenceElement: Boolean
              PsiElement(identifier)('Boolean')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTypeAliasDefinition: ALL_TYPE
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ALL_TYPE')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    InfixType: ConcreteType | TypeSymbol
      SimpleType: ConcreteType
        CodeReferenceElement: ConcreteType
          PsiElement(identifier)('ConcreteType')
      PsiWhiteSpace(' ')
      CodeReferenceElement: |
        PsiElement(identifier)('|')
      PsiWhiteSpace(' ')
      SimpleType: TypeSymbol
        CodeReferenceElement: TypeSymbol
          PsiElement(identifier)('TypeSymbol')
  PsiWhiteSpace('\n\n')
  ScClass: StaticUnionInfo
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('StaticUnionInfo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: name
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('name')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: typeParameters
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('typeParameters')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: List[TypeSymbol]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: TypeSymbol
                    CodeReferenceElement: TypeSymbol
                      PsiElement(identifier)('TypeSymbol')
                  PsiElement(])(']')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: ConcreteType
            CodeReferenceElement: ConcreteType
              PsiElement(identifier)('ConcreteType')
  PsiWhiteSpace(' \n')
  ScClass: AliasInfo
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('AliasInfo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: name
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('name')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: typeParameters
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('typeParameters')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: List[TypeSymbol]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: TypeSymbol
                    CodeReferenceElement: TypeSymbol
                      PsiElement(identifier)('TypeSymbol')
                  PsiElement(])(']')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: ConcreteType
            CodeReferenceElement: ConcreteType
              PsiElement(identifier)('ConcreteType')
  PsiWhiteSpace('\n\n')
  ScObject: UnionKind
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('UnionKind')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: unapply
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('unapply')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: FieldInfo
                    CodeReferenceElement: FieldInfo
                      PsiElement(identifier)('FieldInfo')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Boolean
            CodeReferenceElement: Boolean
              PsiElement(identifier)('Boolean')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' \n    ')
          MatchStatement
            ReferenceExpression: f.fieldType
              ReferenceExpression: f
                PsiElement(identifier)('f')
              PsiElement(.)('.')
              PsiElement(identifier)('fieldType')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n      ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                Scala3 TypedPattern
                  WildcardPattern
                    PsiElement(_)('_')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TypePattern
                    SimpleType: StaticUnionInfo
                      CodeReferenceElement: StaticUnionInfo
                        PsiElement(identifier)('StaticUnionInfo')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  BooleanLiteral
                    PsiElement(true)('true')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                Scala3 TypedPattern
                  ReferencePattern: t
                    PsiElement(identifier)('t')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TypePattern
                    SimpleType: AliasInfo
                      CodeReferenceElement: AliasInfo
                        PsiElement(identifier)('AliasInfo')
                PsiWhiteSpace(' ')
                Guard
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: t.isUnion
                    ReferenceExpression: t
                      PsiElement(identifier)('t')
                    PsiElement(.)('.')
                    PsiElement(identifier)('isUnion')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace('  ')
                BlockOfExpressions
                  BooleanLiteral
                    PsiElement(true)('true')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                Scala3 TypedPattern
                  ReferencePattern: t
                    PsiElement(identifier)('t')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TypePattern
                    SimpleType: UnionContainer
                      CodeReferenceElement: UnionContainer
                        PsiElement(identifier)('UnionContainer')
                PsiWhiteSpace(' ')
                Guard
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: t.hasUnion
                    ReferenceExpression: t
                      PsiElement(identifier)('t')
                    PsiElement(.)('.')
                    PsiElement(identifier)('hasUnion')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  BooleanLiteral
                    PsiElement(true)('true')
              PsiWhiteSpace('  ')
              PsiComment(comment)('// this line here causes crash')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                WildcardPattern
                  PsiElement(_)('_')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  BooleanLiteral
                    PsiElement(false)('false')
            PsiWhiteSpace('\n    ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
