// Invalid because nested hk type parameters are no longer allowed
import scala.language.higherKinds

object Bug {
  class Tag[W[M1[X1]]]

  def ofType[W[M2[X2]]]: Tag[W] = ???
  type InSeq  [M3[X3]] = Some[M3[Any]]

  // fail
  val x = ofType[InSeq]

  // okay
  val y: Any = ofType[InSeq]
  object T {
    val z = ofType[InSeq]
  }
}
-----
ScalaFile
  PsiComment(comment)('// Invalid because nested hk type parameters are no longer allowed')
  PsiWhiteSpace('\n')
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.language.higherKinds
        CodeReferenceElement: scala.language
          CodeReferenceElement: scala
            PsiElement(identifier)('scala')
          PsiElement(.)('.')
          PsiElement(identifier)('language')
        PsiElement(.)('.')
        PsiElement(identifier)('higherKinds')
  PsiWhiteSpace('\n\n')
  ScObject: Bug
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bug')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: Tag
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Tag')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: W
              PsiElement(identifier)('W')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: M1
                  PsiElement(identifier)('M1')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: X1
                      PsiElement(identifier)('X1')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: ofType
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ofType')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: W
              PsiElement(identifier)('W')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: M2
                  PsiElement(identifier)('M2')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: X2
                      PsiElement(identifier)('X2')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Tag[W]
            SimpleType: Tag
              CodeReferenceElement: Tag
                PsiElement(identifier)('Tag')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: W
                CodeReferenceElement: W
                  PsiElement(identifier)('W')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: InSeq
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('InSeq')
          PsiWhiteSpace('  ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: M3
              PsiElement(identifier)('M3')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: X3
                  PsiElement(identifier)('X3')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: Some[M3[Any]]
            SimpleType: Some
              CodeReferenceElement: Some
                PsiElement(identifier)('Some')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: M3[Any]
                SimpleType: M3
                  CodeReferenceElement: M3
                    PsiElement(identifier)('M3')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Any
                    CodeReferenceElement: Any
                      PsiElement(identifier)('Any')
                  PsiElement(])(']')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: x
          PsiComment(comment)('// fail')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: ofType
              PsiElement(identifier)('ofType')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: InSeq
                CodeReferenceElement: InSeq
                  PsiElement(identifier)('InSeq')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: y
          PsiComment(comment)('// okay')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y
              PsiElement(identifier)('y')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Any
            CodeReferenceElement: Any
              PsiElement(identifier)('Any')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: ofType
              PsiElement(identifier)('ofType')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: InSeq
                CodeReferenceElement: InSeq
                  PsiElement(identifier)('InSeq')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScObject: T
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: z
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: z
                    PsiElement(identifier)('z')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                GenericCall
                  ReferenceExpression: ofType
                    PsiElement(identifier)('ofType')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: InSeq
                      CodeReferenceElement: InSeq
                        PsiElement(identifier)('InSeq')
                    PsiElement(])(']')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
