object JS {

  object dom {
    type Event
    type MouseEvent <: Event
  }

  type EventTypeOf[Tp <: String] <: dom.Event = Tp match {
    case "click" => dom.MouseEvent
    case _ => dom.Event
  }

  def addEventListener[Tp <: String, Ev <: EventTypeOf[Tp]](tpe: Tp)(e: Ev => Any): Unit = ???

  addEventListener("click") { (e: dom.MouseEvent) => ??? }

}
-----
ScalaFile
  ScObject: JS
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('JS')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScObject: dom
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('dom')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDeclaration: Event
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Event')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDeclaration: MouseEvent
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('MouseEvent')
                PsiWhiteSpace(' ')
                PsiElement(<:)('<:')
                PsiWhiteSpace(' ')
                SimpleType: Event
                  CodeReferenceElement: Event
                    PsiElement(identifier)('Event')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: EventTypeOf
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('EventTypeOf')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Tp
              PsiElement(identifier)('Tp')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: dom.Event
            CodeReferenceElement: dom.Event
              CodeReferenceElement: dom
                PsiElement(identifier)('dom')
              PsiElement(.)('.')
              PsiElement(identifier)('Event')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchType: Tp match {
    case "click" => dom.MouseEvent
    case _ => dom.Event
  }
            SimpleType: Tp
              CodeReferenceElement: Tp
                PsiElement(identifier)('Tp')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScMatchTypeCasesImpl(match type cases)
              ScMatchTypeCaseImpl(match type case)
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                LiteralType: "click"
                  StringLiteral
                    PsiElement(string content)('"click"')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                SimpleType: dom.MouseEvent
                  CodeReferenceElement: dom.MouseEvent
                    CodeReferenceElement: dom
                      PsiElement(identifier)('dom')
                    PsiElement(.)('.')
                    PsiElement(identifier)('MouseEvent')
              PsiWhiteSpace('\n    ')
              ScMatchTypeCaseImpl(match type case)
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                WildcardType: _
                  PsiElement(_)('_')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                SimpleType: dom.Event
                  CodeReferenceElement: dom.Event
                    CodeReferenceElement: dom
                      PsiElement(identifier)('dom')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Event')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: addEventListener
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('addEventListener')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Tp
              PsiElement(identifier)('Tp')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: Ev
              PsiElement(identifier)('Ev')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: EventTypeOf[Tp]
                SimpleType: EventTypeOf
                  CodeReferenceElement: EventTypeOf
                    PsiElement(identifier)('EventTypeOf')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Tp
                    CodeReferenceElement: Tp
                      PsiElement(identifier)('Tp')
                  PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: tpe
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('tpe')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Tp
                    CodeReferenceElement: Tp
                      PsiElement(identifier)('Tp')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              Parameter: e
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('e')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: Ev => Any
                    SimpleType: Ev
                      CodeReferenceElement: Ev
                        PsiElement(identifier)('Ev')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: Any
                      CodeReferenceElement: Any
                        PsiElement(identifier)('Any')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          MethodCall
            ReferenceExpression: addEventListener
              PsiElement(identifier)('addEventListener')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"click"')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          ArgumentList
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              FunctionExpression
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: e
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('e')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: dom.MouseEvent
                          CodeReferenceElement: dom.MouseEvent
                            CodeReferenceElement: dom
                              PsiElement(identifier)('dom')
                            PsiElement(.)('.')
                            PsiElement(identifier)('MouseEvent')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: ???
                    PsiElement(identifier)('???')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
