class Foo {

  type E[X]

  def i: Int = ???
  def e: E[Int] = ???

  // Transforms `(T1, ... Tn)` into `(E[T1], ..., E[Tn])`
  type F[T <: Tuple] <: Tuple = T match {
    case EmptyTuple => EmptyTuple
    case h *: t => E[h] *: F[t]
  }

  def foo1[Args <: Tuple](args: Args, args2: F[Args]): Unit = ()

  foo1((i, i), (e, e)) // fails
  foo1((i, i), (e, e): F[(Int, Int)]) // fails

}

class Foo2 {

  type E[X]

  def i: Int = ???
  def e: E[Int] = ???

  // Transforms `(T1, ... Tn)` into `(E[T1], ..., E[Tn])`
  type F[T <: Tuple] <: Tuple = T match {
    case EmptyTuple => EmptyTuple
    case h *: t => E[h] *: F[t]
  }

  def foo2[Args <: Tuple, Args2 >: F[Args] <: F[Args]](args: Args, args2: Args2): Unit = ()

  foo2((i, i), (e, e)) // fails

  // all these work
  foo2[(Int, Int), F[(Int, Int)]]((i, i), (e, e))
  foo2[(Int, Int), F[(Int, Int)]]((i, i), (e, e))
  foo2[(Int, Int), F[Int *: Int *: EmptyTuple]]((i, i), (e, e))
  foo2[(Int, Int), (E[Int], E[Int])]((i, i), (e, e))
  foo2[(Int, Int), E[Int] *: E[Int] *: EmptyTuple]((i, i), (e, e))

}
-----
ScalaFile
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDeclaration: E
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('E')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
            PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: i
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('i')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: e
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('e')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: E[Int]
            SimpleType: E
              CodeReferenceElement: E
                PsiElement(identifier)('E')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: F
          PsiComment(comment)('// Transforms `(T1, ... Tn)` into `(E[T1], ..., E[Tn])`')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('F')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: Tuple
                CodeReferenceElement: Tuple
                  PsiElement(identifier)('Tuple')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: Tuple
            CodeReferenceElement: Tuple
              PsiElement(identifier)('Tuple')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchType: T match {
    case EmptyTuple => EmptyTuple
    case h *: t => E[h] *: F[t]
  }
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScMatchTypeCasesImpl(match type cases)
              ScMatchTypeCaseImpl(match type case)
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                SimpleType: EmptyTuple
                  CodeReferenceElement: EmptyTuple
                    PsiElement(identifier)('EmptyTuple')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                SimpleType: EmptyTuple
                  CodeReferenceElement: EmptyTuple
                    PsiElement(identifier)('EmptyTuple')
              PsiWhiteSpace('\n    ')
              ScMatchTypeCaseImpl(match type case)
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                InfixType: h *: t
                  TypeVariable: h
                    PsiElement(identifier)('h')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: *:
                    PsiElement(identifier)('*:')
                  PsiWhiteSpace(' ')
                  TypeVariable: t
                    PsiElement(identifier)('t')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                InfixType: E[h] *: F[t]
                  ParametrizedType: E[h]
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: h
                        CodeReferenceElement: h
                          PsiElement(identifier)('h')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: *:
                    PsiElement(identifier)('*:')
                  PsiWhiteSpace(' ')
                  ParametrizedType: F[t]
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: t
                        CodeReferenceElement: t
                          PsiElement(identifier)('t')
                      PsiElement(])(']')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: foo1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Args
              PsiElement(identifier)('Args')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: Tuple
                CodeReferenceElement: Tuple
                  PsiElement(identifier)('Tuple')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Args
                    CodeReferenceElement: Args
                      PsiElement(identifier)('Args')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: args2
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args2')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: F[Args]
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Args
                        CodeReferenceElement: Args
                          PsiElement(identifier)('Args')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo1
            PsiElement(identifier)('foo1')
          ArgumentList
            PsiElement(()('(')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement())(')')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// fails')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: foo1
            PsiElement(identifier)('foo1')
          ArgumentList
            PsiElement(()('(')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement())(')')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypedExpression
              Tuple
                PsiElement(()('(')
                ReferenceExpression: e
                  PsiElement(identifier)('e')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ReferenceExpression: e
                  PsiElement(identifier)('e')
                PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: F[(Int, Int)]
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  TupleType: (Int, Int)
                    PsiElement(()('(')
                    TypesList
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                    PsiElement())(')')
                  PsiElement(])(']')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// fails')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Foo2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo2')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDeclaration: E
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('E')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
            PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: i
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('i')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: e
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('e')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: E[Int]
            SimpleType: E
              CodeReferenceElement: E
                PsiElement(identifier)('E')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: F
          PsiComment(comment)('// Transforms `(T1, ... Tn)` into `(E[T1], ..., E[Tn])`')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('F')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: Tuple
                CodeReferenceElement: Tuple
                  PsiElement(identifier)('Tuple')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: Tuple
            CodeReferenceElement: Tuple
              PsiElement(identifier)('Tuple')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchType: T match {
    case EmptyTuple => EmptyTuple
    case h *: t => E[h] *: F[t]
  }
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScMatchTypeCasesImpl(match type cases)
              ScMatchTypeCaseImpl(match type case)
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                SimpleType: EmptyTuple
                  CodeReferenceElement: EmptyTuple
                    PsiElement(identifier)('EmptyTuple')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                SimpleType: EmptyTuple
                  CodeReferenceElement: EmptyTuple
                    PsiElement(identifier)('EmptyTuple')
              PsiWhiteSpace('\n    ')
              ScMatchTypeCaseImpl(match type case)
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                InfixType: h *: t
                  TypeVariable: h
                    PsiElement(identifier)('h')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: *:
                    PsiElement(identifier)('*:')
                  PsiWhiteSpace(' ')
                  TypeVariable: t
                    PsiElement(identifier)('t')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                InfixType: E[h] *: F[t]
                  ParametrizedType: E[h]
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: h
                        CodeReferenceElement: h
                          PsiElement(identifier)('h')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: *:
                    PsiElement(identifier)('*:')
                  PsiWhiteSpace(' ')
                  ParametrizedType: F[t]
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: t
                        CodeReferenceElement: t
                          PsiElement(identifier)('t')
                      PsiElement(])(']')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: foo2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Args
              PsiElement(identifier)('Args')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: Tuple
                CodeReferenceElement: Tuple
                  PsiElement(identifier)('Tuple')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: Args2
              PsiElement(identifier)('Args2')
              PsiWhiteSpace(' ')
              PsiElement(>:)('>:')
              PsiWhiteSpace(' ')
              ParametrizedType: F[Args]
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Args
                    CodeReferenceElement: Args
                      PsiElement(identifier)('Args')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: F[Args]
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Args
                    CodeReferenceElement: Args
                      PsiElement(identifier)('Args')
                  PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Args
                    CodeReferenceElement: Args
                      PsiElement(identifier)('Args')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: args2
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args2')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Args2
                    CodeReferenceElement: Args2
                      PsiElement(identifier)('Args2')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: foo2
            PsiElement(identifier)('foo2')
          ArgumentList
            PsiElement(()('(')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement())(')')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// fails')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// all these work')
        PsiWhiteSpace('\n  ')
        MethodCall
          GenericCall
            ReferenceExpression: foo2
              PsiElement(identifier)('foo2')
            TypeArgumentsList
              PsiElement([)('[')
              TupleType: (Int, Int)
                PsiElement(()('(')
                TypesList
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                PsiElement())(')')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ParametrizedType: F[(Int, Int)]
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  TupleType: (Int, Int)
                    PsiElement(()('(')
                    TypesList
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                    PsiElement())(')')
                  PsiElement(])(']')
              PsiElement(])(']')
          ArgumentList
            PsiElement(()('(')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement())(')')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          GenericCall
            ReferenceExpression: foo2
              PsiElement(identifier)('foo2')
            TypeArgumentsList
              PsiElement([)('[')
              TupleType: (Int, Int)
                PsiElement(()('(')
                TypesList
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                PsiElement())(')')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ParametrizedType: F[(Int, Int)]
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  TupleType: (Int, Int)
                    PsiElement(()('(')
                    TypesList
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                    PsiElement())(')')
                  PsiElement(])(']')
              PsiElement(])(']')
          ArgumentList
            PsiElement(()('(')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement())(')')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          GenericCall
            ReferenceExpression: foo2
              PsiElement(identifier)('foo2')
            TypeArgumentsList
              PsiElement([)('[')
              TupleType: (Int, Int)
                PsiElement(()('(')
                TypesList
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                PsiElement())(')')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ParametrizedType: F[Int *: Int *: EmptyTuple]
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                TypeArgumentsList
                  PsiElement([)('[')
                  InfixType: Int *: Int *: EmptyTuple
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiWhiteSpace(' ')
                    CodeReferenceElement: *:
                      PsiElement(identifier)('*:')
                    PsiWhiteSpace(' ')
                    InfixType: Int *: EmptyTuple
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiWhiteSpace(' ')
                      CodeReferenceElement: *:
                        PsiElement(identifier)('*:')
                      PsiWhiteSpace(' ')
                      SimpleType: EmptyTuple
                        CodeReferenceElement: EmptyTuple
                          PsiElement(identifier)('EmptyTuple')
                  PsiElement(])(']')
              PsiElement(])(']')
          ArgumentList
            PsiElement(()('(')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement())(')')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          GenericCall
            ReferenceExpression: foo2
              PsiElement(identifier)('foo2')
            TypeArgumentsList
              PsiElement([)('[')
              TupleType: (Int, Int)
                PsiElement(()('(')
                TypesList
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                PsiElement())(')')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TupleType: (E[Int], E[Int])
                PsiElement(()('(')
                TypesList
                  ParametrizedType: E[Int]
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ParametrizedType: E[Int]
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(])(']')
                PsiElement())(')')
              PsiElement(])(']')
          ArgumentList
            PsiElement(()('(')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement())(')')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          GenericCall
            ReferenceExpression: foo2
              PsiElement(identifier)('foo2')
            TypeArgumentsList
              PsiElement([)('[')
              TupleType: (Int, Int)
                PsiElement(()('(')
                TypesList
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                PsiElement())(')')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              InfixType: E[Int] *: E[Int] *: EmptyTuple
                ParametrizedType: E[Int]
                  SimpleType: E
                    CodeReferenceElement: E
                      PsiElement(identifier)('E')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                CodeReferenceElement: *:
                  PsiElement(identifier)('*:')
                PsiWhiteSpace(' ')
                InfixType: E[Int] *: EmptyTuple
                  ParametrizedType: E[Int]
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: *:
                    PsiElement(identifier)('*:')
                  PsiWhiteSpace(' ')
                  SimpleType: EmptyTuple
                    CodeReferenceElement: EmptyTuple
                      PsiElement(identifier)('EmptyTuple')
              PsiElement(])(']')
          ArgumentList
            PsiElement(()('(')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement())(')')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            Tuple
              PsiElement(()('(')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: e
                PsiElement(identifier)('e')
              PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
