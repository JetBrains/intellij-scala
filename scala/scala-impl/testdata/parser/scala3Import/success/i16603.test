trait MyData

object MyData:
  extension (m: MyData)
    def printIt() = println("hey from my data")

class MyClass:
  def sel(s: String): Int = s.hashCode()

enum MyTag[A]:
  case MyDataTag  extends MyTag[MyData]
  case MyClassTag extends MyTag[MyClass]

def callExtension[A](tag: MyTag[A], a:A): Unit =
  tag match
    case MyTag.MyDataTag  => a.printIt()
    case MyTag.MyClassTag => a.sel("hi")

def callExtensionDirectly(m: MyData): Unit =
  m.printIt()
-----
ScalaFile
  ScTrait: MyData
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('MyData')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: MyData
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('MyData')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        Extension on MyData
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: m
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('m')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: MyData
                    CodeReferenceElement: MyData
                      PsiElement(identifier)('MyData')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDefinition: printIt
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('printIt')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: println
                  PsiElement(identifier)('println')
                ArgumentList
                  PsiElement(()('(')
                  StringLiteral
                    PsiElement(string content)('"hey from my data"')
                  PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScClass: MyClass
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('MyClass')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: sel
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('sel')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: s
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('s')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: s.hashCode
              ReferenceExpression: s
                PsiElement(identifier)('s')
              PsiElement(.)('.')
              PsiElement(identifier)('hashCode')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScEnum: MyTag
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('MyTag')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScEnumCases: MyDataTag
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: MyDataTag
            PsiElement(identifier)('MyDataTag')
            PsiWhiteSpace('  ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: MyTag[MyData]
                    SimpleType: MyTag
                      CodeReferenceElement: MyTag
                        PsiElement(identifier)('MyTag')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: MyData
                        CodeReferenceElement: MyData
                          PsiElement(identifier)('MyData')
                      PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScEnumCases: MyClassTag
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: MyClassTag
            PsiElement(identifier)('MyClassTag')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: MyTag[MyClass]
                    SimpleType: MyTag
                      CodeReferenceElement: MyTag
                        PsiElement(identifier)('MyTag')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: MyClass
                        CodeReferenceElement: MyClass
                          PsiElement(identifier)('MyClass')
                      PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: callExtension
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('callExtension')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: tag
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('tag')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: MyTag[A]
              SimpleType: MyTag
                CodeReferenceElement: MyTag
                  PsiElement(identifier)('MyTag')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiElement(])(']')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        Parameter: a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('a')
          PsiElement(:)(':')
          ParameterType
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace('\n  ')
    MatchStatement
      ReferenceExpression: tag
        PsiElement(identifier)('tag')
      PsiWhiteSpace(' ')
      PsiElement(match)('match')
      PsiWhiteSpace('\n    ')
      CaseClauses
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          StableElementPattern
            ReferenceExpression: MyTag.MyDataTag
              ReferenceExpression: MyTag
                PsiElement(identifier)('MyTag')
              PsiElement(.)('.')
              PsiElement(identifier)('MyDataTag')
          PsiWhiteSpace('  ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            MethodCall
              ReferenceExpression: a.printIt
                ReferenceExpression: a
                  PsiElement(identifier)('a')
                PsiElement(.)('.')
                PsiElement(identifier)('printIt')
              ArgumentList
                PsiElement(()('(')
                PsiElement())(')')
        PsiWhiteSpace('\n    ')
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          StableElementPattern
            ReferenceExpression: MyTag.MyClassTag
              ReferenceExpression: MyTag
                PsiElement(identifier)('MyTag')
              PsiElement(.)('.')
              PsiElement(identifier)('MyClassTag')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            MethodCall
              ReferenceExpression: a.sel
                ReferenceExpression: a
                  PsiElement(identifier)('a')
                PsiElement(.)('.')
                PsiElement(identifier)('sel')
              ArgumentList
                PsiElement(()('(')
                StringLiteral
                  PsiElement(string content)('"hi"')
                PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: callExtensionDirectly
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('callExtensionDirectly')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: m
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('m')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: MyData
              CodeReferenceElement: MyData
                PsiElement(identifier)('MyData')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace('\n  ')
    MethodCall
      ReferenceExpression: m.printIt
        ReferenceExpression: m
          PsiElement(identifier)('m')
        PsiElement(.)('.')
        PsiElement(identifier)('printIt')
      ArgumentList
        PsiElement(()('(')
        PsiElement())(')')
