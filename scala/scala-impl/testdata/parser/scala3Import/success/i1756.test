class A { { val x = this } }
class B(x: Int) {
  class C(x: Int)
      extends B({
        val test = this
        x
      }) {
    def this() = {
      this({
        1
      })
    }
  }
}

// Minimized version
class D(x: Int) {
  class E(x: Int) extends D({val test = D.this; x})
}

-----
ScalaFile
  ScClass: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        BlockExpression
          PsiElement({)('{')
          PsiWhiteSpace(' ')
          ScPatternDefinition: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: x
                PsiElement(identifier)('x')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ThisReference
              PsiElement(this)('this')
          PsiWhiteSpace(' ')
          PsiElement(})('}')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: B
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('B')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: C
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                PsiElement())(')')
          PsiWhiteSpace('\n      ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: B
                  CodeReferenceElement: B
                    PsiElement(identifier)('B')
                ArgumentList
                  PsiElement(()('(')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace('\n        ')
                    ScPatternDefinition: test
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: test
                          PsiElement(identifier)('test')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ThisReference
                        PsiElement(this)('this')
                    PsiWhiteSpace('\n        ')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiWhiteSpace('\n      ')
                    PsiElement(})('}')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: this
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(this)('this')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ConstructorBlock
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  SelfInvocation
                    PsiElement(this)('this')
                    ArgumentList
                      PsiElement(()('(')
                      BlockExpression
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        IntegerLiteral
                          PsiElement(integer)('1')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                      PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: D
    PsiComment(comment)('// Minimized version')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('D')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: E
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('E')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: D
                  CodeReferenceElement: D
                    PsiElement(identifier)('D')
                ArgumentList
                  PsiElement(()('(')
                  BlockExpression
                    PsiElement({)('{')
                    ScPatternDefinition: test
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: test
                          PsiElement(identifier)('test')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ThisReference
                        CodeReferenceElement: D
                          PsiElement(identifier)('D')
                        PsiElement(.)('.')
                        PsiElement(this)('this')
                    PsiElement(;)(';')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement(})('}')
                  PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
