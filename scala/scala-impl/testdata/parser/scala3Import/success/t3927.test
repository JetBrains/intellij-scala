object A {
  def x: Unit = {
    implicit lazy val e: Equiv[Int] = sys.error("")
    implicitly[Equiv[Int]]
  }
}
-----
ScalaFile
  ScObject: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('x')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: e
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(implicit)('implicit')
                PsiWhiteSpace(' ')
                PsiElement(lazy)('lazy')
              PsiWhiteSpace(' ')
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: e
                  PsiElement(identifier)('e')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: Equiv[Int]
                SimpleType: Equiv
                  CodeReferenceElement: Equiv
                    PsiElement(identifier)('Equiv')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: sys.error
                  ReferenceExpression: sys
                    PsiElement(identifier)('sys')
                  PsiElement(.)('.')
                  PsiElement(identifier)('error')
                ArgumentList
                  PsiElement(()('(')
                  StringLiteral
                    PsiElement(string content)('""')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            GenericCall
              ReferenceExpression: implicitly
                PsiElement(identifier)('implicitly')
              TypeArgumentsList
                PsiElement([)('[')
                ParametrizedType: Equiv[Int]
                  SimpleType: Equiv
                    CodeReferenceElement: Equiv
                      PsiElement(identifier)('Equiv')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
