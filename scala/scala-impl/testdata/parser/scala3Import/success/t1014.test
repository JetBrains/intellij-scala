class NodeSeq
class Elem extends NodeSeq

class EO extends App with Moo {
  // return type is Flog, inherited from overridden method.
  // implicit conversions are applied because expected type `pt` is `Flog` when `computeType(rhs, pt)`.
  def cat = (??? : Elem)

  implicit def nodeSeqToFlog(in: Elem): Flog = new Flog(in)
}

trait Moo {
  def cat: Flog
}

class Flog(val in: NodeSeq)
-----
ScalaFile
  ScClass: NodeSeq
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('NodeSeq')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScClass: Elem
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Elem')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: NodeSeq
            CodeReferenceElement: NodeSeq
              PsiElement(identifier)('NodeSeq')
  PsiWhiteSpace('\n\n')
  ScClass: EO
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('EO')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: App
            CodeReferenceElement: App
              PsiElement(identifier)('App')
        PsiWhiteSpace(' ')
        PsiElement(with)('with')
        PsiWhiteSpace(' ')
        ConstructorInvocation
          SimpleType: Moo
            CodeReferenceElement: Moo
              PsiElement(identifier)('Moo')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: cat
          PsiComment(comment)('// return type is Flog, inherited from overridden method.')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('// implicit conversions are applied because expected type `pt` is `Flog` when `computeType(rhs, pt)`.')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('cat')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ExpressionInParenthesis
            PsiElement(()('(')
            TypedExpression
              ReferenceExpression: ???
                PsiElement(identifier)('???')
              PsiWhiteSpace(' ')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Elem
                CodeReferenceElement: Elem
                  PsiElement(identifier)('Elem')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: nodeSeqToFlog
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('nodeSeqToFlog')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: in
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('in')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Elem
                    CodeReferenceElement: Elem
                      PsiElement(identifier)('Elem')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Flog
            CodeReferenceElement: Flog
              PsiElement(identifier)('Flog')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: Flog
                    CodeReferenceElement: Flog
                      PsiElement(identifier)('Flog')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: in
                      PsiElement(identifier)('in')
                    PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: Moo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Moo')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: cat
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('cat')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Flog
            CodeReferenceElement: Flog
              PsiElement(identifier)('Flog')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Flog
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Flog')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: in
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('in')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: NodeSeq
                CodeReferenceElement: NodeSeq
                  PsiElement(identifier)('NodeSeq')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
