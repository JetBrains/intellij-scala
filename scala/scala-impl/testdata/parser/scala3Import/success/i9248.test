class C(var a: Int)

extension (c: C)
  def foo: Int = c.a
  def foo_=(a: Int): Unit = c.a = a

val c = C(10)
val c1 = c.foo = 11

given C = C(0)

// Harder case: extensions defined in local scope, with type parameters and implicits
def test =
  class D[T](var a: T)

  extension [T](d: D[T])(using C)
    def foo: T = d.a
    def foo_=(a: T): Unit =
      val c = summon[C]
      d.a = a

  val d = D(10)
  d.foo
  d.foo = 11
-----
ScalaFile
  ScClass: C
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('C')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: a
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(var)('var')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('a')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  Extension on C
    PsiElement(extension)('extension')
    PsiWhiteSpace(' ')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: c
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('c')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
        PsiElement())(')')
    PsiWhiteSpace('\n  ')
    ScExtensionBody
      ScFunctionDefinition: foo
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('foo')
        Parameters
          <empty list>
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        SimpleType: Int
          CodeReferenceElement: Int
            PsiElement(identifier)('Int')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ReferenceExpression: c.a
          ReferenceExpression: c
            PsiElement(identifier)('c')
          PsiElement(.)('.')
          PsiElement(identifier)('a')
      PsiWhiteSpace('\n  ')
      ScFunctionDefinition: foo_=
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('foo_=')
        Parameters
          ParametersClause
            PsiElement(()('(')
            Parameter: a
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('a')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
            PsiElement())(')')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        SimpleType: Unit
          CodeReferenceElement: Unit
            PsiElement(identifier)('Unit')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        AssignStatement
          ReferenceExpression: c.a
            ReferenceExpression: c
              PsiElement(identifier)('c')
            PsiElement(.)('.')
            PsiElement(identifier)('a')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: a
            PsiElement(identifier)('a')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: c
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: c
        PsiElement(identifier)('c')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: C
        PsiElement(identifier)('C')
      ArgumentList
        PsiElement(()('(')
        IntegerLiteral
          PsiElement(integer)('10')
        PsiElement())(')')
  PsiWhiteSpace('\n')
  ScPatternDefinition: c1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: c1
        PsiElement(identifier)('c1')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    AssignStatement
      ReferenceExpression: c.foo
        ReferenceExpression: c
          PsiElement(identifier)('c')
        PsiElement(.)('.')
        PsiElement(identifier)('foo')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      IntegerLiteral
        PsiElement(integer)('11')
  PsiWhiteSpace('\n\n')
  ScGivenAliasDefinition: given_C
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    SimpleType: C
      CodeReferenceElement: C
        PsiElement(identifier)('C')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: C
        PsiElement(identifier)('C')
      ArgumentList
        PsiElement(()('(')
        IntegerLiteral
          PsiElement(integer)('0')
        PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test
    PsiComment(comment)('// Harder case: extensions defined in local scope, with type parameters and implicits')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    BlockExpression
      PsiWhiteSpace('\n  ')
      ScClass: D
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(class)('class')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('D')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: T
            PsiElement(identifier)('T')
          PsiElement(])(']')
        PrimaryConstructor
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          Parameters
            ParametersClause
              PsiElement(()('(')
              ClassParameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(var)('var')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
        ExtendsBlock
          <empty list>
      PsiWhiteSpace('\n\n  ')
      Extension on D[T]
        PsiElement(extension)('extension')
        PsiWhiteSpace(' ')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: T
            PsiElement(identifier)('T')
          PsiElement(])(']')
        Parameters
          ParametersClause
            PsiElement(()('(')
            Parameter: d
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('d')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                ParametrizedType: D[T]
                  SimpleType: D
                    CodeReferenceElement: D
                      PsiElement(identifier)('D')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
            PsiElement())(')')
          ParametersClause
            PsiElement(()('(')
            PsiElement(using)('using')
            PsiWhiteSpace(' ')
            Parameter: <anonymous>
              ParameterType
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
            PsiElement())(')')
        PsiWhiteSpace('\n    ')
        ScExtensionBody
          ScFunctionDefinition: foo
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('foo')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: d.a
              ReferenceExpression: d
                PsiElement(identifier)('d')
              PsiElement(.)('.')
              PsiElement(identifier)('a')
          PsiWhiteSpace('\n    ')
          ScFunctionDefinition: foo_=
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('foo_=')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: a
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('a')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            BlockExpression
              PsiWhiteSpace('\n      ')
              ScPatternDefinition: c
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: c
                    PsiElement(identifier)('c')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                GenericCall
                  ReferenceExpression: summon
                    PsiElement(identifier)('summon')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: C
                      CodeReferenceElement: C
                        PsiElement(identifier)('C')
                    PsiElement(])(']')
              PsiWhiteSpace('\n      ')
              AssignStatement
                ReferenceExpression: d.a
                  ReferenceExpression: d
                    PsiElement(identifier)('d')
                  PsiElement(.)('.')
                  PsiElement(identifier)('a')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: a
                  PsiElement(identifier)('a')
      PsiWhiteSpace('\n\n  ')
      ScPatternDefinition: d
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: d
            PsiElement(identifier)('d')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: D
            PsiElement(identifier)('D')
          ArgumentList
            PsiElement(()('(')
            IntegerLiteral
              PsiElement(integer)('10')
            PsiElement())(')')
      PsiWhiteSpace('\n  ')
      ReferenceExpression: d.foo
        ReferenceExpression: d
          PsiElement(identifier)('d')
        PsiElement(.)('.')
        PsiElement(identifier)('foo')
      PsiWhiteSpace('\n  ')
      AssignStatement
        ReferenceExpression: d.foo
          ReferenceExpression: d
            PsiElement(identifier)('d')
          PsiElement(.)('.')
          PsiElement(identifier)('foo')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('11')
