trait RType
trait TypeEntry{
  def typeAdapter: TypeAdapter[_] = ???
}

trait TypeAdapter[E]
case class OptionTypeAdapter[E](nullIsNone: Boolean, valueTypeAdapter: TypeAdapter[E]) extends TypeAdapter[E]
case class JavaOptionalTypeAdapter[E](nullIsNone: Boolean, valueTypeAdapter: TypeAdapter[E]) extends TypeAdapter[E]

def typeAdapterOf(concreteType: RType): TypeAdapter[_] = ???

@main def test() = {
  // https://github.com/gzoller/scalajack/blob/4a29366e28fbd594d7c21b4eb969ca14626ac0d1/core/src/main/scala/co.blocke.scalajack/typeadapter/TupleTypeAdapter.scala#L21-L30
  val seq = List.empty[RType]
  seq map { f =>
    typeAdapterOf(f) match {
      case ota: OptionTypeAdapter[_] => ota.copy(nullIsNone = true)
      case jota: JavaOptionalTypeAdapter[_] => jota.copy(nullIsNone = true)
      case other => other
    }
  }
}

// 15154
-----
ScalaFile
  ScTrait: RType
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('RType')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScTrait: TypeEntry
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TypeEntry')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: typeAdapter
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('typeAdapter')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: TypeAdapter[_]
            SimpleType: TypeAdapter
              CodeReferenceElement: TypeAdapter
                PsiElement(identifier)('TypeAdapter')
            TypeArgumentsList
              PsiElement([)('[')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: TypeAdapter
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TypeAdapter')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: E
        PsiElement(identifier)('E')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScClass: OptionTypeAdapter
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('OptionTypeAdapter')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: E
        PsiElement(identifier)('E')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: nullIsNone
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('nullIsNone')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Boolean
                CodeReferenceElement: Boolean
                  PsiElement(identifier)('Boolean')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: valueTypeAdapter
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('valueTypeAdapter')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: TypeAdapter[E]
                SimpleType: TypeAdapter
                  CodeReferenceElement: TypeAdapter
                    PsiElement(identifier)('TypeAdapter')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: E
                    CodeReferenceElement: E
                      PsiElement(identifier)('E')
                  PsiElement(])(']')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: TypeAdapter[E]
            SimpleType: TypeAdapter
              CodeReferenceElement: TypeAdapter
                PsiElement(identifier)('TypeAdapter')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: E
                CodeReferenceElement: E
                  PsiElement(identifier)('E')
              PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScClass: JavaOptionalTypeAdapter
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('JavaOptionalTypeAdapter')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: E
        PsiElement(identifier)('E')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: nullIsNone
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('nullIsNone')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Boolean
                CodeReferenceElement: Boolean
                  PsiElement(identifier)('Boolean')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: valueTypeAdapter
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('valueTypeAdapter')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: TypeAdapter[E]
                SimpleType: TypeAdapter
                  CodeReferenceElement: TypeAdapter
                    PsiElement(identifier)('TypeAdapter')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: E
                    CodeReferenceElement: E
                      PsiElement(identifier)('E')
                  PsiElement(])(']')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: TypeAdapter[E]
            SimpleType: TypeAdapter
              CodeReferenceElement: TypeAdapter
                PsiElement(identifier)('TypeAdapter')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: E
                CodeReferenceElement: E
                  PsiElement(identifier)('E')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: typeAdapterOf
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('typeAdapterOf')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: concreteType
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('concreteType')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: RType
              CodeReferenceElement: RType
                PsiElement(identifier)('RType')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: TypeAdapter[_]
      SimpleType: TypeAdapter
        CodeReferenceElement: TypeAdapter
          PsiElement(identifier)('TypeAdapter')
      TypeArgumentsList
        PsiElement([)('[')
        WildcardType: _
          PsiElement(_)('_')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: ???
      PsiElement(identifier)('???')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test
    AnnotationsList
      Annotation
        PsiElement(@)('@')
        AnnotationExpression
          ConstructorInvocation
            SimpleType: main
              CodeReferenceElement: main
                PsiElement(identifier)('main')
    Modifiers
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      ParametersClause
        PsiElement(()('(')
        PsiElement())(')')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: seq
        PsiComment(comment)('// https://github.com/gzoller/scalajack/blob/4a29366e28fbd594d7c21b4eb969ca14626ac0d1/core/src/main/scala/co.blocke.scalajack/typeadapter/TupleTypeAdapter.scala#L21-L30')
        PsiWhiteSpace('\n  ')
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: seq
            PsiElement(identifier)('seq')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        GenericCall
          ReferenceExpression: List.empty
            ReferenceExpression: List
              PsiElement(identifier)('List')
            PsiElement(.)('.')
            PsiElement(identifier)('empty')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: RType
              CodeReferenceElement: RType
                PsiElement(identifier)('RType')
            PsiElement(])(']')
      PsiWhiteSpace('\n  ')
      InfixExpression
        ReferenceExpression: seq
          PsiElement(identifier)('seq')
        PsiWhiteSpace(' ')
        ReferenceExpression: map
          PsiElement(identifier)('map')
        PsiWhiteSpace(' ')
        BlockExpression
          PsiElement({)('{')
          PsiWhiteSpace(' ')
          FunctionExpression
            Parameters
              ParametersClause
                Parameter: f
                  PsiElement(identifier)('f')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace('\n    ')
            BlockOfExpressions
              MatchStatement
                MethodCall
                  ReferenceExpression: typeAdapterOf
                    PsiElement(identifier)('typeAdapterOf')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: f
                      PsiElement(identifier)('f')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(match)('match')
                PsiWhiteSpace(' ')
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                CaseClauses
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    Scala3 TypedPattern
                      ReferencePattern: ota
                        PsiElement(identifier)('ota')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      TypePattern
                        ParametrizedType: OptionTypeAdapter[_]
                          SimpleType: OptionTypeAdapter
                            CodeReferenceElement: OptionTypeAdapter
                              PsiElement(identifier)('OptionTypeAdapter')
                          TypeArgumentsList
                            PsiElement([)('[')
                            TypeVariable: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      MethodCall
                        ReferenceExpression: ota.copy
                          ReferenceExpression: ota
                            PsiElement(identifier)('ota')
                          PsiElement(.)('.')
                          PsiElement(identifier)('copy')
                        ArgumentList
                          PsiElement(()('(')
                          AssignStatement
                            ReferenceExpression: nullIsNone
                              PsiElement(identifier)('nullIsNone')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            BooleanLiteral
                              PsiElement(true)('true')
                          PsiElement())(')')
                  PsiWhiteSpace('\n      ')
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    Scala3 TypedPattern
                      ReferencePattern: jota
                        PsiElement(identifier)('jota')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      TypePattern
                        ParametrizedType: JavaOptionalTypeAdapter[_]
                          SimpleType: JavaOptionalTypeAdapter
                            CodeReferenceElement: JavaOptionalTypeAdapter
                              PsiElement(identifier)('JavaOptionalTypeAdapter')
                          TypeArgumentsList
                            PsiElement([)('[')
                            TypeVariable: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      MethodCall
                        ReferenceExpression: jota.copy
                          ReferenceExpression: jota
                            PsiElement(identifier)('jota')
                          PsiElement(.)('.')
                          PsiElement(identifier)('copy')
                        ArgumentList
                          PsiElement(()('(')
                          AssignStatement
                            ReferenceExpression: nullIsNone
                              PsiElement(identifier)('nullIsNone')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            BooleanLiteral
                              PsiElement(true)('true')
                          PsiElement())(')')
                  PsiWhiteSpace('\n      ')
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    ReferencePattern: other
                      PsiElement(identifier)('other')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ReferenceExpression: other
                        PsiElement(identifier)('other')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  PsiComment(comment)('// 15154')
