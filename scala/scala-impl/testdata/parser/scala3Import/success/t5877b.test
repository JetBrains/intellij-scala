package foo

class Foo

object Test {
  new Foo().huzzah
}

object `package` {
  implicit class EnrichedFoo2(value: Foo) {
    def huzzah = ""
  }
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: foo
      PsiElement(identifier)('foo')
    PsiWhiteSpace('\n\n')
    ScClass: Foo
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Foo')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      ExtendsBlock
        <empty list>
    PsiWhiteSpace('\n\n')
    ScObject: Test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ReferenceExpression: new Foo().huzzah
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: Foo
                      CodeReferenceElement: Foo
                        PsiElement(identifier)('Foo')
                    ArgumentList
                      PsiElement(()('(')
                      PsiElement())(')')
            PsiElement(.)('.')
            PsiElement(identifier)('huzzah')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScObject: `package`
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('`package`')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScClass: EnrichedFoo2
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(implicit)('implicit')
            PsiWhiteSpace(' ')
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('EnrichedFoo2')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: value
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('value')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: Foo
                        CodeReferenceElement: Foo
                          PsiElement(identifier)('Foo')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: huzzah
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('huzzah')
                  Parameters
                    <empty list>
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('""')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
