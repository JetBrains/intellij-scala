package foo {
  trait Abstract1[C <: Abstract2[C]]
  trait Abstract2[C <: Abstract2[C]] extends Abstract1[C]
  class Parametrized1[T] extends Abstract1[Parametrized2[T]] {
    def bar(a: AnyRef): Unit = { a match { case d: Parametrized1[_] => println("ok") } }
  }
  class Parametrized2[T] extends Parametrized1[T] with Abstract2[Parametrized2[T]]
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: foo
      PsiElement(identifier)('foo')
    PsiWhiteSpace(' ')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    ScTrait: Abstract1
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Abstract1')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: C
          PsiElement(identifier)('C')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          ParametrizedType: Abstract2[C]
            SimpleType: Abstract2
              CodeReferenceElement: Abstract2
                PsiElement(identifier)('Abstract2')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: C
                CodeReferenceElement: C
                  PsiElement(identifier)('C')
              PsiElement(])(']')
        PsiElement(])(']')
      ExtendsBlock
        <empty list>
    PsiWhiteSpace('\n  ')
    ScTrait: Abstract2
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Abstract2')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: C
          PsiElement(identifier)('C')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          ParametrizedType: Abstract2[C]
            SimpleType: Abstract2
              CodeReferenceElement: Abstract2
                PsiElement(identifier)('Abstract2')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: C
                CodeReferenceElement: C
                  PsiElement(identifier)('C')
              PsiElement(])(']')
        PsiElement(])(']')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            ParametrizedType: Abstract1[C]
              SimpleType: Abstract1
                CodeReferenceElement: Abstract1
                  PsiElement(identifier)('Abstract1')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                PsiElement(])(']')
    PsiWhiteSpace('\n  ')
    ScClass: Parametrized1
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Parametrized1')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: T
          PsiElement(identifier)('T')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            ParametrizedType: Abstract1[Parametrized2[T]]
              SimpleType: Abstract1
                CodeReferenceElement: Abstract1
                  PsiElement(identifier)('Abstract1')
              TypeArgumentsList
                PsiElement([)('[')
                ParametrizedType: Parametrized2[T]
                  SimpleType: Parametrized2
                    CodeReferenceElement: Parametrized2
                      PsiElement(identifier)('Parametrized2')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                PsiElement(])(']')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          ScFunctionDefinition: bar
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('bar')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: a
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('a')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: AnyRef
                      CodeReferenceElement: AnyRef
                        PsiElement(identifier)('AnyRef')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              MatchStatement
                ReferenceExpression: a
                  PsiElement(identifier)('a')
                PsiWhiteSpace(' ')
                PsiElement(match)('match')
                PsiWhiteSpace(' ')
                PsiElement({)('{')
                PsiWhiteSpace(' ')
                CaseClauses
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    Scala3 TypedPattern
                      ReferencePattern: d
                        PsiElement(identifier)('d')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      TypePattern
                        ParametrizedType: Parametrized1[_]
                          SimpleType: Parametrized1
                            CodeReferenceElement: Parametrized1
                              PsiElement(identifier)('Parametrized1')
                          TypeArgumentsList
                            PsiElement([)('[')
                            TypeVariable: _
                              PsiElement(_)('_')
                            PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      MethodCall
                        ReferenceExpression: println
                          PsiElement(identifier)('println')
                        ArgumentList
                          PsiElement(()('(')
                          StringLiteral
                            PsiElement(string content)('"ok"')
                          PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(})('}')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
    PsiWhiteSpace('\n  ')
    ScClass: Parametrized2
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Parametrized2')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: T
          PsiElement(identifier)('T')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            ParametrizedType: Parametrized1[T]
              SimpleType: Parametrized1
                CodeReferenceElement: Parametrized1
                  PsiElement(identifier)('Parametrized1')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
                PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(with)('with')
          PsiWhiteSpace(' ')
          ConstructorInvocation
            ParametrizedType: Abstract2[Parametrized2[T]]
              SimpleType: Abstract2
                CodeReferenceElement: Abstract2
                  PsiElement(identifier)('Abstract2')
              TypeArgumentsList
                PsiElement([)('[')
                ParametrizedType: Parametrized2[T]
                  SimpleType: Parametrized2
                    CodeReferenceElement: Parametrized2
                      PsiElement(identifier)('Parametrized2')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                PsiElement(])(']')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
