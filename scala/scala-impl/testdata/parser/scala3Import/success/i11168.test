trait Foo
given foo: Foo()

extension (using Foo)(x: Any)
  def foo1[A] = ???

extension (x: Any)(using Foo)
  def foo2[A] = ???

implicit class LeadingFooOps(using Foo)(x: Any) {
  def foo3[A] = ???
}

implicit class TrailingFooOps(x: Any)(using Foo) {
  def foo4[A] = ???
}

def a1 = "".foo1[Any]
def a2: Any = "".foo2[Any]
def a3 = "".foo3[Any]
def a4 = "".foo4[Any]

def b2 = "".foo2(using foo)[Any]

def c1 = foo1("")[Any]
def c2 = foo2("")[Any]

def d1 = foo1(using foo)("")[Any]
def d2 = foo2("")(using foo)[Any]
-----
ScalaFile
  ScTrait: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScGivenDefinition: foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('foo')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ExtendsBlock
      TemplateParents
        ConstructorInvocation
          SimpleType: Foo
            CodeReferenceElement: Foo
              PsiElement(identifier)('Foo')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
  PsiWhiteSpace('\n\n')
  Extension on Any
    PsiElement(extension)('extension')
    PsiWhiteSpace(' ')
    Parameters
      ParametersClause
        PsiElement(()('(')
        PsiElement(using)('using')
        PsiWhiteSpace(' ')
        Parameter: <anonymous>
          ParameterType
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
        PsiElement())(')')
      ParametersClause
        PsiElement(()('(')
        Parameter: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: Any
              CodeReferenceElement: Any
                PsiElement(identifier)('Any')
        PsiElement())(')')
    PsiWhiteSpace('\n  ')
    ScExtensionBody
      ScFunctionDefinition: foo1
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('foo1')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: A
            PsiElement(identifier)('A')
          PsiElement(])(']')
        Parameters
          <empty list>
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ReferenceExpression: ???
          PsiElement(identifier)('???')
  PsiWhiteSpace('\n\n')
  Extension on Any
    PsiElement(extension)('extension')
    PsiWhiteSpace(' ')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: Any
              CodeReferenceElement: Any
                PsiElement(identifier)('Any')
        PsiElement())(')')
      ParametersClause
        PsiElement(()('(')
        PsiElement(using)('using')
        PsiWhiteSpace(' ')
        Parameter: <anonymous>
          ParameterType
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
        PsiElement())(')')
    PsiWhiteSpace('\n  ')
    ScExtensionBody
      ScFunctionDefinition: foo2
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('foo2')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: A
            PsiElement(identifier)('A')
          PsiElement(])(']')
        Parameters
          <empty list>
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ReferenceExpression: ???
          PsiElement(identifier)('???')
  PsiWhiteSpace('\n\n')
  ScClass: LeadingFooOps
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(implicit)('implicit')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('LeadingFooOps')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          PsiElement(using)('using')
          PsiWhiteSpace(' ')
          ClassParameter: x$1
            ParameterType
              SimpleType: Foo
                CodeReferenceElement: Foo
                  PsiElement(identifier)('Foo')
          PsiElement())(')')
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo3')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: TrailingFooOps
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(implicit)('implicit')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TrailingFooOps')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
          PsiElement())(')')
        ParametersClause
          PsiElement(()('(')
          PsiElement(using)('using')
          PsiWhiteSpace(' ')
          ClassParameter: x$2
            ParameterType
              SimpleType: Foo
                CodeReferenceElement: Foo
                  PsiElement(identifier)('Foo')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo4
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo4')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: a1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('a1')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: "".foo1
        StringLiteral
          PsiElement(string content)('""')
        PsiElement(.)('.')
        PsiElement(identifier)('foo1')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Any
          CodeReferenceElement: Any
            PsiElement(identifier)('Any')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: a2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('a2')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Any
      CodeReferenceElement: Any
        PsiElement(identifier)('Any')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: "".foo2
        StringLiteral
          PsiElement(string content)('""')
        PsiElement(.)('.')
        PsiElement(identifier)('foo2')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Any
          CodeReferenceElement: Any
            PsiElement(identifier)('Any')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: a3
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('a3')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: "".foo3
        StringLiteral
          PsiElement(string content)('""')
        PsiElement(.)('.')
        PsiElement(identifier)('foo3')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Any
          CodeReferenceElement: Any
            PsiElement(identifier)('Any')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: a4
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('a4')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: "".foo4
        StringLiteral
          PsiElement(string content)('""')
        PsiElement(.)('.')
        PsiElement(identifier)('foo4')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Any
          CodeReferenceElement: Any
            PsiElement(identifier)('Any')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: b2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('b2')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      MethodCall
        ReferenceExpression: "".foo2
          StringLiteral
            PsiElement(string content)('""')
          PsiElement(.)('.')
          PsiElement(identifier)('foo2')
        ArgumentList
          PsiElement(()('(')
          PsiElement(using)('using')
          PsiWhiteSpace(' ')
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          PsiElement())(')')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Any
          CodeReferenceElement: Any
            PsiElement(identifier)('Any')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: c1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('c1')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      MethodCall
        ReferenceExpression: foo1
          PsiElement(identifier)('foo1')
        ArgumentList
          PsiElement(()('(')
          StringLiteral
            PsiElement(string content)('""')
          PsiElement())(')')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Any
          CodeReferenceElement: Any
            PsiElement(identifier)('Any')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: c2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('c2')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      MethodCall
        ReferenceExpression: foo2
          PsiElement(identifier)('foo2')
        ArgumentList
          PsiElement(()('(')
          StringLiteral
            PsiElement(string content)('""')
          PsiElement())(')')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Any
          CodeReferenceElement: Any
            PsiElement(identifier)('Any')
        PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: d1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('d1')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      MethodCall
        MethodCall
          ReferenceExpression: foo1
            PsiElement(identifier)('foo1')
          ArgumentList
            PsiElement(()('(')
            PsiElement(using)('using')
            PsiWhiteSpace(' ')
            ReferenceExpression: foo
              PsiElement(identifier)('foo')
            PsiElement())(')')
        ArgumentList
          PsiElement(()('(')
          StringLiteral
            PsiElement(string content)('""')
          PsiElement())(')')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Any
          CodeReferenceElement: Any
            PsiElement(identifier)('Any')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: d2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('d2')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      MethodCall
        MethodCall
          ReferenceExpression: foo2
            PsiElement(identifier)('foo2')
          ArgumentList
            PsiElement(()('(')
            StringLiteral
              PsiElement(string content)('""')
            PsiElement())(')')
        ArgumentList
          PsiElement(()('(')
          PsiElement(using)('using')
          PsiWhiteSpace(' ')
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          PsiElement())(')')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Any
          CodeReferenceElement: Any
            PsiElement(identifier)('Any')
        PsiElement(])(']')
