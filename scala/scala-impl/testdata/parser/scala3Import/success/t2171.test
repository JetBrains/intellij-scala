final object test {
  def logIgnoredException(msg: => String) =
    try 0 catch { case ex => println(msg) }

  def main (args: Array[String]): Unit =
    while (true) logIgnoredException ("...")
}
-----
ScalaFile
  ScObject: test
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
    PsiWhiteSpace(' ')
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: logIgnoredException
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('logIgnoredException')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: msg
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('msg')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          TryStatement
            PsiElement(try)('try')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('0')
            PsiWhiteSpace(' ')
            CatchBlock
              PsiElement(catch)('catch')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace(' ')
                CaseClauses
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    ReferencePattern: ex
                      PsiElement(identifier)('ex')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      MethodCall
                        ReferenceExpression: println
                          PsiElement(identifier)('println')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: msg
                            PsiElement(identifier)('msg')
                          PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          PsiWhiteSpace(' ')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[String]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          WhileStatement
            PsiElement(while)('while')
            PsiWhiteSpace(' ')
            PsiElement(()('(')
            BooleanLiteral
              PsiElement(true)('true')
            PsiElement())(')')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: logIgnoredException
                PsiElement(identifier)('logIgnoredException')
              PsiWhiteSpace(' ')
              ArgumentList
                PsiElement(()('(')
                StringLiteral
                  PsiElement(string content)('"..."')
                PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
