trait Tr
enum Foo[T](x: T) {
  case Bar[T](y: T) extends Foo(y)
  case Bas[T](y: Int) extends Foo(y)
  case Bam[T](y: String) extends Foo(y) with Tr
  case Baz[S, T](y: String) extends Foo(y) with Tr
}
object Test {
  import Foo.*
  val bar: Foo[Boolean] = Bar(true)
  val bas: Foo[Int] = Bas(1)
  val bam: Foo[String] & Tr = Bam("")
  val baz: Foo[String] & Tr = Baz("")
}

enum Foo2[S <: T, T](x1: S, x2: T) {
  case Bar[T](y: T) extends Foo2(y, y)
  case Bas[T](y: Int) extends Foo2(y, y)
  case Bam[T](y: String) extends Foo2(y, y) with Tr
  case Baz[S, T](y: String) extends Foo2(y, y) with Tr
}
object Test2 {
  import Foo2.*
  val bar: Foo2[Boolean, Boolean] = Bar(true)
  val bas: Foo2[Int, Int] = Bas(1)
  val bam: Foo2[String, String] & Tr = Bam("")
  val baz: Foo2[String, String] & Tr = Baz("")
}


-----
ScalaFile
  ScTrait: Tr
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Tr')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScEnum: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Bar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Bar
            PsiElement(identifier)('Bar')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: y
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('y')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Bas
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Bas
            PsiElement(identifier)('Bas')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: y
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('y')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Bam
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Bam
            PsiElement(identifier)('Bam')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: y
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('y')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(with)('with')
                PsiWhiteSpace(' ')
                ConstructorInvocation
                  SimpleType: Tr
                    CodeReferenceElement: Tr
                      PsiElement(identifier)('Tr')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Baz
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Baz
            PsiElement(identifier)('Baz')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: S
                PsiElement(identifier)('S')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: y
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('y')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(with)('with')
                PsiWhiteSpace(' ')
                ConstructorInvocation
                  SimpleType: Tr
                    CodeReferenceElement: Tr
                      PsiElement(identifier)('Tr')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: Foo
              PsiElement(identifier)('Foo')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: bar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: bar
              PsiElement(identifier)('bar')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Foo[Boolean]
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Boolean
                CodeReferenceElement: Boolean
                  PsiElement(identifier)('Boolean')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Bar
              PsiElement(identifier)('Bar')
            ArgumentList
              PsiElement(()('(')
              BooleanLiteral
                PsiElement(true)('true')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: bas
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: bas
              PsiElement(identifier)('bas')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Foo[Int]
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Bas
              PsiElement(identifier)('Bas')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: bam
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: bam
              PsiElement(identifier)('bam')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          InfixType: Foo[String] & Tr
            ParametrizedType: Foo[String]
              SimpleType: Foo
                CodeReferenceElement: Foo
                  PsiElement(identifier)('Foo')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            CodeReferenceElement: &
              PsiElement(identifier)('&')
            PsiWhiteSpace(' ')
            SimpleType: Tr
              CodeReferenceElement: Tr
                PsiElement(identifier)('Tr')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Bam
              PsiElement(identifier)('Bam')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('""')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: baz
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: baz
              PsiElement(identifier)('baz')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          InfixType: Foo[String] & Tr
            ParametrizedType: Foo[String]
              SimpleType: Foo
                CodeReferenceElement: Foo
                  PsiElement(identifier)('Foo')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            CodeReferenceElement: &
              PsiElement(identifier)('&')
            PsiWhiteSpace(' ')
            SimpleType: Tr
              CodeReferenceElement: Tr
                PsiElement(identifier)('Tr')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Baz
              PsiElement(identifier)('Baz')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('""')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScEnum: Foo2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo2')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: S
        PsiElement(identifier)('S')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: T
          CodeReferenceElement: T
            PsiElement(identifier)('T')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x1
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x1')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: S
                CodeReferenceElement: S
                  PsiElement(identifier)('S')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: x2
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x2')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Bar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Bar
            PsiElement(identifier)('Bar')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: y
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('y')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo2
                    CodeReferenceElement: Foo2
                      PsiElement(identifier)('Foo2')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Bas
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Bas
            PsiElement(identifier)('Bas')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: y
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('y')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo2
                    CodeReferenceElement: Foo2
                      PsiElement(identifier)('Foo2')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Bam
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Bam
            PsiElement(identifier)('Bam')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: y
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('y')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo2
                    CodeReferenceElement: Foo2
                      PsiElement(identifier)('Foo2')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(with)('with')
                PsiWhiteSpace(' ')
                ConstructorInvocation
                  SimpleType: Tr
                    CodeReferenceElement: Tr
                      PsiElement(identifier)('Tr')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Baz
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Baz
            PsiElement(identifier)('Baz')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: S
                PsiElement(identifier)('S')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: y
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('y')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo2
                    CodeReferenceElement: Foo2
                      PsiElement(identifier)('Foo2')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(with)('with')
                PsiWhiteSpace(' ')
                ConstructorInvocation
                  SimpleType: Tr
                    CodeReferenceElement: Tr
                      PsiElement(identifier)('Tr')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: Test2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: Foo2
              PsiElement(identifier)('Foo2')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: bar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: bar
              PsiElement(identifier)('bar')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Foo2[Boolean, Boolean]
            SimpleType: Foo2
              CodeReferenceElement: Foo2
                PsiElement(identifier)('Foo2')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Boolean
                CodeReferenceElement: Boolean
                  PsiElement(identifier)('Boolean')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Boolean
                CodeReferenceElement: Boolean
                  PsiElement(identifier)('Boolean')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Bar
              PsiElement(identifier)('Bar')
            ArgumentList
              PsiElement(()('(')
              BooleanLiteral
                PsiElement(true)('true')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: bas
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: bas
              PsiElement(identifier)('bas')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Foo2[Int, Int]
            SimpleType: Foo2
              CodeReferenceElement: Foo2
                PsiElement(identifier)('Foo2')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Bas
              PsiElement(identifier)('Bas')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: bam
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: bam
              PsiElement(identifier)('bam')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          InfixType: Foo2[String, String] & Tr
            ParametrizedType: Foo2[String, String]
              SimpleType: Foo2
                CodeReferenceElement: Foo2
                  PsiElement(identifier)('Foo2')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            CodeReferenceElement: &
              PsiElement(identifier)('&')
            PsiWhiteSpace(' ')
            SimpleType: Tr
              CodeReferenceElement: Tr
                PsiElement(identifier)('Tr')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Bam
              PsiElement(identifier)('Bam')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('""')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: baz
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: baz
              PsiElement(identifier)('baz')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          InfixType: Foo2[String, String] & Tr
            ParametrizedType: Foo2[String, String]
              SimpleType: Foo2
                CodeReferenceElement: Foo2
                  PsiElement(identifier)('Foo2')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            CodeReferenceElement: &
              PsiElement(identifier)('&')
            PsiWhiteSpace(' ')
            SimpleType: Tr
              CodeReferenceElement: Tr
                PsiElement(identifier)('Tr')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Baz
              PsiElement(identifier)('Baz')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('""')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
