object variance {
	enum SUB[-A, +B]:
		case Refl[S]() extends SUB[S, S]
	// Covariant
	class C1[+T](v: T){
		def foo(ev: T SUB Int): Int =
			ev match {
				case SUB.Refl() => v
			}
	}

	// Contravariant
	class B2[-T](v: T){}

	class C2[-T](v: T){
		def foo(ev: Int SUB T): B2[T] =
			ev match {
				case SUB.Refl() => new B2(v)
			}
	}

	// Variance with inheritance

	// superclass covariant and subclass covariant

	class A3[+T](v: T) {
		val value = v
	}

	class C3[+T](v: T) extends A3[T](v){
		def foo(ev: T SUB Int): Int =
			ev match {
				case SUB.Refl() => value
			}
	}


	// superclass covariant and subclass invariant
	class A4[+T](v: T) {
		val value = v
	}

	class C4[T](v: T) extends A4[T](v){
		def foo(ev: T SUB Int): Int =
			ev match {
				case SUB.Refl() => value
			}
	}

	// superclass contravariant and subclass contravariant
	class B5[-T](v: T){}

	class A5[-T](v: T) {
		val value = new B5(v)
	}

	class C5[-T](v: T) extends A5[T](v){
		def foo(ev: Int SUB T): B5[T] =
			ev match {
				case SUB.Refl() => value
			}
	}

	// superclass contravariant and subclass invariant
	class B6[-T](v: T){}

	class A6[-T](v: T) {
		val value = new B6(v)
	}

	class C6[-T](v: T) extends A6[T](v){
		def foo(ev: Int SUB T): B6[T] =
			ev match {
				case SUB.Refl() => value
			}
	}
}
-----
ScalaFile
  ScObject: variance
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('variance')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\t')
        ScEnum: SUB
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(enum)('enum')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('SUB')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('-')
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('+')
              PsiElement(identifier)('B')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n\t\t')
              ScEnumCases: Refl
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ScEnumClassCase: Refl
                  PsiElement(identifier)('Refl')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: S
                      PsiElement(identifier)('S')
                    PsiElement(])(']')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    PsiElement(extends)('extends')
                    PsiWhiteSpace(' ')
                    TemplateParents
                      ConstructorInvocation
                        ParametrizedType: SUB[S, S]
                          SimpleType: SUB
                            CodeReferenceElement: SUB
                              PsiElement(identifier)('SUB')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: S
                              CodeReferenceElement: S
                                PsiElement(identifier)('S')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: S
                              CodeReferenceElement: S
                                PsiElement(identifier)('S')
                            PsiElement(])(']')
        PsiWhiteSpace('\n\t')
        ScClass: C1
          PsiComment(comment)('// Covariant')
          PsiWhiteSpace('\n\t')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('+')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\t\t')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: ev
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ev')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        InfixType: T SUB Int
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiWhiteSpace(' ')
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n\t\t\t')
                MatchStatement
                  ReferenceExpression: ev
                    PsiElement(identifier)('ev')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n\t\t\t\t')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: SUB.Refl
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiElement(.)('.')
                          PsiElement(identifier)('Refl')
                        Pattern Argument List
                          PsiElement(()('(')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ReferenceExpression: v
                          PsiElement(identifier)('v')
                  PsiWhiteSpace('\n\t\t\t')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\t')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        ScClass: B2
          PsiComment(comment)('// Contravariant')
          PsiWhiteSpace('\n\t')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('B2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('-')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        ScClass: C2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('-')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\t\t')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: ev
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ev')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        InfixType: Int SUB T
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiWhiteSpace(' ')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: B2[T]
                  SimpleType: B2
                    CodeReferenceElement: B2
                      PsiElement(identifier)('B2')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n\t\t\t')
                MatchStatement
                  ReferenceExpression: ev
                    PsiElement(identifier)('ev')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n\t\t\t\t')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: SUB.Refl
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiElement(.)('.')
                          PsiElement(identifier)('Refl')
                        Pattern Argument List
                          PsiElement(()('(')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                SimpleType: B2
                                  CodeReferenceElement: B2
                                    PsiElement(identifier)('B2')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: v
                                    PsiElement(identifier)('v')
                                  PsiElement())(')')
                  PsiWhiteSpace('\n\t\t\t')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\t')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        PsiComment(comment)('// Variance with inheritance')
        PsiWhiteSpace('\n\n\t')
        PsiComment(comment)('// superclass covariant and subclass covariant')
        PsiWhiteSpace('\n\n\t')
        ScClass: A3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A3')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('+')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\t\t')
              ScPatternDefinition: value
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: value
                    PsiElement(identifier)('value')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: v
                  PsiElement(identifier)('v')
              PsiWhiteSpace('\n\t')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        ScClass: C3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C3')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('+')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: A3[T]
                  SimpleType: A3
                    CodeReferenceElement: A3
                      PsiElement(identifier)('A3')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: v
                    PsiElement(identifier)('v')
                  PsiElement())(')')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\t\t')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: ev
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ev')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        InfixType: T SUB Int
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiWhiteSpace(' ')
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n\t\t\t')
                MatchStatement
                  ReferenceExpression: ev
                    PsiElement(identifier)('ev')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n\t\t\t\t')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: SUB.Refl
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiElement(.)('.')
                          PsiElement(identifier)('Refl')
                        Pattern Argument List
                          PsiElement(()('(')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ReferenceExpression: value
                          PsiElement(identifier)('value')
                  PsiWhiteSpace('\n\t\t\t')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\t')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\n\t')
        ScClass: A4
          PsiComment(comment)('// superclass covariant and subclass invariant')
          PsiWhiteSpace('\n\t')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A4')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('+')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\t\t')
              ScPatternDefinition: value
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: value
                    PsiElement(identifier)('value')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: v
                  PsiElement(identifier)('v')
              PsiWhiteSpace('\n\t')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        ScClass: C4
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C4')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: A4[T]
                  SimpleType: A4
                    CodeReferenceElement: A4
                      PsiElement(identifier)('A4')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: v
                    PsiElement(identifier)('v')
                  PsiElement())(')')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\t\t')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: ev
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ev')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        InfixType: T SUB Int
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiWhiteSpace(' ')
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n\t\t\t')
                MatchStatement
                  ReferenceExpression: ev
                    PsiElement(identifier)('ev')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n\t\t\t\t')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: SUB.Refl
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiElement(.)('.')
                          PsiElement(identifier)('Refl')
                        Pattern Argument List
                          PsiElement(()('(')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ReferenceExpression: value
                          PsiElement(identifier)('value')
                  PsiWhiteSpace('\n\t\t\t')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\t')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        ScClass: B5
          PsiComment(comment)('// superclass contravariant and subclass contravariant')
          PsiWhiteSpace('\n\t')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('B5')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('-')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        ScClass: A5
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A5')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('-')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\t\t')
              ScPatternDefinition: value
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: value
                    PsiElement(identifier)('value')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: B5
                          CodeReferenceElement: B5
                            PsiElement(identifier)('B5')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: v
                            PsiElement(identifier)('v')
                          PsiElement())(')')
              PsiWhiteSpace('\n\t')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        ScClass: C5
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C5')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('-')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: A5[T]
                  SimpleType: A5
                    CodeReferenceElement: A5
                      PsiElement(identifier)('A5')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: v
                    PsiElement(identifier)('v')
                  PsiElement())(')')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\t\t')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: ev
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ev')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        InfixType: Int SUB T
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiWhiteSpace(' ')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: B5[T]
                  SimpleType: B5
                    CodeReferenceElement: B5
                      PsiElement(identifier)('B5')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n\t\t\t')
                MatchStatement
                  ReferenceExpression: ev
                    PsiElement(identifier)('ev')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n\t\t\t\t')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: SUB.Refl
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiElement(.)('.')
                          PsiElement(identifier)('Refl')
                        Pattern Argument List
                          PsiElement(()('(')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ReferenceExpression: value
                          PsiElement(identifier)('value')
                  PsiWhiteSpace('\n\t\t\t')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\t')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        ScClass: B6
          PsiComment(comment)('// superclass contravariant and subclass invariant')
          PsiWhiteSpace('\n\t')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('B6')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('-')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        ScClass: A6
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A6')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('-')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\t\t')
              ScPatternDefinition: value
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: value
                    PsiElement(identifier)('value')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: B6
                          CodeReferenceElement: B6
                            PsiElement(identifier)('B6')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: v
                            PsiElement(identifier)('v')
                          PsiElement())(')')
              PsiWhiteSpace('\n\t')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\t')
        ScClass: C6
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C6')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('-')
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: v
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('v')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: A6[T]
                  SimpleType: A6
                    CodeReferenceElement: A6
                      PsiElement(identifier)('A6')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: v
                    PsiElement(identifier)('v')
                  PsiElement())(')')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\t\t')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: ev
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ev')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        InfixType: Int SUB T
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiWhiteSpace(' ')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: B6[T]
                  SimpleType: B6
                    CodeReferenceElement: B6
                      PsiElement(identifier)('B6')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n\t\t\t')
                MatchStatement
                  ReferenceExpression: ev
                    PsiElement(identifier)('ev')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n\t\t\t\t')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: SUB.Refl
                          CodeReferenceElement: SUB
                            PsiElement(identifier)('SUB')
                          PsiElement(.)('.')
                          PsiElement(identifier)('Refl')
                        Pattern Argument List
                          PsiElement(()('(')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ReferenceExpression: value
                          PsiElement(identifier)('value')
                  PsiWhiteSpace('\n\t\t\t')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\t')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
