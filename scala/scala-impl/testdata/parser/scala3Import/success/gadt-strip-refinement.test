trait Tag[T] { type X }
class IntTag extends Tag[Int]

def foo[T](x: Tag[T]): T = x match {
  case _: IntTag { type X = String } => 0
}
-----
ScalaFile
  ScTrait: Tag
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Tag')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ScTypeAliasDeclaration: X
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('X')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: IntTag
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('IntTag')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Tag[Int]
            SimpleType: Tag
              CodeReferenceElement: Tag
                PsiElement(identifier)('Tag')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('foo')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: Tag[T]
              SimpleType: Tag
                CodeReferenceElement: Tag
                  PsiElement(identifier)('Tag')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
                PsiElement(])(']')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: T
      CodeReferenceElement: T
        PsiElement(identifier)('T')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MatchStatement
      ReferenceExpression: x
        PsiElement(identifier)('x')
      PsiWhiteSpace(' ')
      PsiElement(match)('match')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      CaseClauses
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Scala3 TypedPattern
            WildcardPattern
              PsiElement(_)('_')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            TypePattern
              CompoundType: IntTag { type X = String }
                SimpleType: IntTag
                  CodeReferenceElement: IntTag
                    PsiElement(identifier)('IntTag')
                PsiWhiteSpace(' ')
                Refinement
                  PsiElement({)('{')
                  PsiWhiteSpace(' ')
                  ScTypeAliasDefinition: X
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(type)('type')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('X')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                  PsiWhiteSpace(' ')
                  PsiElement(})('}')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            IntegerLiteral
              PsiElement(integer)('0')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
