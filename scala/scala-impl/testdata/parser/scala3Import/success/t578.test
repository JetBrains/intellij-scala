object Test {
  val x = Nil
  val x2: Nil.type = x
  val y = None
  val y2: None.type = y
  Console.println("Okay")
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: Nil
            PsiElement(identifier)('Nil')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x2
              PsiElement(identifier)('x2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Nil.type
            CodeReferenceElement: Nil
              PsiElement(identifier)('Nil')
            PsiElement(.)('.')
            PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y
              PsiElement(identifier)('y')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: None
            PsiElement(identifier)('None')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: y2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y2
              PsiElement(identifier)('y2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: None.type
            CodeReferenceElement: None
              PsiElement(identifier)('None')
            PsiElement(.)('.')
            PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: y
            PsiElement(identifier)('y')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: Console.println
            ReferenceExpression: Console
              PsiElement(identifier)('Console')
            PsiElement(.)('.')
            PsiElement(identifier)('println')
          ArgumentList
            PsiElement(()('(')
            StringLiteral
              PsiElement(string content)('"Okay"')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
