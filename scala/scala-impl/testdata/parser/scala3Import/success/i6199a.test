class Encoder[T] { def encode(v: T): String = v.toString }
case class ValueWithEncoder[T](value: T, encoder: Encoder[T])

object Test {
  val a: Seq[ValueWithEncoder[_]] = Seq.empty
  val b = a.map(ve => ve.encoder.encode(ve.value))
  val c: Seq[String] = b
}
-----
ScalaFile
  ScClass: Encoder
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Encoder')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ScFunctionDefinition: encode
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('encode')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: v
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('v')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: v.toString
            ReferenceExpression: v
              PsiElement(identifier)('v')
            PsiElement(.)('.')
            PsiElement(identifier)('toString')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: ValueWithEncoder
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ValueWithEncoder')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: value
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('value')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: encoder
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('encoder')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: Encoder[T]
                SimpleType: Encoder
                  CodeReferenceElement: Encoder
                    PsiElement(identifier)('Encoder')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiElement(])(']')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: a
              PsiElement(identifier)('a')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Seq[ValueWithEncoder[_]]
            SimpleType: Seq
              CodeReferenceElement: Seq
                PsiElement(identifier)('Seq')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: ValueWithEncoder[_]
                SimpleType: ValueWithEncoder
                  CodeReferenceElement: ValueWithEncoder
                    PsiElement(identifier)('ValueWithEncoder')
                TypeArgumentsList
                  PsiElement([)('[')
                  WildcardType: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: Seq.empty
            ReferenceExpression: Seq
              PsiElement(identifier)('Seq')
            PsiElement(.)('.')
            PsiElement(identifier)('empty')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: b
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: b
              PsiElement(identifier)('b')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: a.map
              ReferenceExpression: a
                PsiElement(identifier)('a')
              PsiElement(.)('.')
              PsiElement(identifier)('map')
            ArgumentList
              PsiElement(()('(')
              FunctionExpression
                Parameters
                  ParametersClause
                    Parameter: ve
                      PsiElement(identifier)('ve')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: ve.encoder.encode
                    ReferenceExpression: ve.encoder
                      ReferenceExpression: ve
                        PsiElement(identifier)('ve')
                      PsiElement(.)('.')
                      PsiElement(identifier)('encoder')
                    PsiElement(.)('.')
                    PsiElement(identifier)('encode')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: ve.value
                      ReferenceExpression: ve
                        PsiElement(identifier)('ve')
                      PsiElement(.)('.')
                      PsiElement(identifier)('value')
                    PsiElement())(')')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: c
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: c
              PsiElement(identifier)('c')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Seq[String]
            SimpleType: Seq
              CodeReferenceElement: Seq
                PsiElement(identifier)('Seq')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: b
            PsiElement(identifier)('b')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
