class Foo {
  implicit class NN[T](x:T|Null) {
    def nn: T = x.asInstanceOf[T]
  }

  val x1: String|Null = null
  x1.nn.length
  val x2: String = x1.nn
  x1.nn.length
}
-----
ScalaFile
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: NN
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('NN')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  ParameterType
                    InfixType: T|Null
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      CodeReferenceElement: |
                        PsiElement(identifier)('|')
                      SimpleType: Null
                        CodeReferenceElement: Null
                          PsiElement(identifier)('Null')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: nn
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('nn')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                GenericCall
                  ReferenceExpression: x.asInstanceOf
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement(.)('.')
                    PsiElement(identifier)('asInstanceOf')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: x1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x1
              PsiElement(identifier)('x1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          InfixType: String|Null
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
            CodeReferenceElement: |
              PsiElement(identifier)('|')
            SimpleType: Null
              CodeReferenceElement: Null
                PsiElement(identifier)('Null')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          NullLiteral
            PsiElement(null)('null')
        PsiWhiteSpace('\n  ')
        ReferenceExpression: x1.nn.length
          ReferenceExpression: x1.nn
            ReferenceExpression: x1
              PsiElement(identifier)('x1')
            PsiElement(.)('.')
            PsiElement(identifier)('nn')
          PsiElement(.)('.')
          PsiElement(identifier)('length')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x2
              PsiElement(identifier)('x2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x1.nn
            ReferenceExpression: x1
              PsiElement(identifier)('x1')
            PsiElement(.)('.')
            PsiElement(identifier)('nn')
        PsiWhiteSpace('\n  ')
        ReferenceExpression: x1.nn.length
          ReferenceExpression: x1.nn
            ReferenceExpression: x1
              PsiElement(identifier)('x1')
            PsiElement(.)('.')
            PsiElement(identifier)('nn')
          PsiElement(.)('.')
          PsiElement(identifier)('length')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
