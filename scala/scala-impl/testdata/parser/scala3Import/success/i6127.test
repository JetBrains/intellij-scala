import reflect.ClassTag
class Co[+S]
object Co {
  def empty[X: ClassTag]: Co[X] = ???
}
class Contra[-S]
object Contra {
  def empty[X: ClassTag]: Contra[X] = ???
}
class Foo[+FT](x: FT) {
  def fooArray: Foo[Array[String]] = new Foo(Array.empty)
  val y1: Array[String] = Array.empty
  def fooCo: Foo[Co[String]] = new Foo(Co.empty)
  val y2: Co[String] = Co.empty
  def fooContra: Foo[Contra[String]] = new Foo(Contra.empty)
  val y3: Contra[String] = Contra.empty
}

-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: reflect.ClassTag
        CodeReferenceElement: reflect
          PsiElement(identifier)('reflect')
        PsiElement(.)('.')
        PsiElement(identifier)('ClassTag')
  PsiWhiteSpace('\n')
  ScClass: Co
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Co')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: S
        PsiElement(identifier)('+')
        PsiElement(identifier)('S')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScObject: Co
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Co')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: empty
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('empty')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: ClassTag
                CodeReferenceElement: ClassTag
                  PsiElement(identifier)('ClassTag')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Co[X]
            SimpleType: Co
              CodeReferenceElement: Co
                PsiElement(identifier)('Co')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: X
                CodeReferenceElement: X
                  PsiElement(identifier)('X')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: Contra
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Contra')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: S
        PsiElement(identifier)('-')
        PsiElement(identifier)('S')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScObject: Contra
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Contra')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: empty
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('empty')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: ClassTag
                CodeReferenceElement: ClassTag
                  PsiElement(identifier)('ClassTag')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Contra[X]
            SimpleType: Contra
              CodeReferenceElement: Contra
                PsiElement(identifier)('Contra')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: X
                CodeReferenceElement: X
                  PsiElement(identifier)('X')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: FT
        PsiElement(identifier)('+')
        PsiElement(identifier)('FT')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: FT
                CodeReferenceElement: FT
                  PsiElement(identifier)('FT')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: fooArray
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('fooArray')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Foo[Array[String]]
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Array[String]
                SimpleType: Array
                  CodeReferenceElement: Array
                    PsiElement(identifier)('Array')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: Array.empty
                      ReferenceExpression: Array
                        PsiElement(identifier)('Array')
                      PsiElement(.)('.')
                      PsiElement(identifier)('empty')
                    PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: y1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y1
              PsiElement(identifier)('y1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Array[String]
            SimpleType: Array
              CodeReferenceElement: Array
                PsiElement(identifier)('Array')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: Array.empty
            ReferenceExpression: Array
              PsiElement(identifier)('Array')
            PsiElement(.)('.')
            PsiElement(identifier)('empty')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: fooCo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('fooCo')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Foo[Co[String]]
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Co[String]
                SimpleType: Co
                  CodeReferenceElement: Co
                    PsiElement(identifier)('Co')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: Co.empty
                      ReferenceExpression: Co
                        PsiElement(identifier)('Co')
                      PsiElement(.)('.')
                      PsiElement(identifier)('empty')
                    PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: y2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y2
              PsiElement(identifier)('y2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Co[String]
            SimpleType: Co
              CodeReferenceElement: Co
                PsiElement(identifier)('Co')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: Co.empty
            ReferenceExpression: Co
              PsiElement(identifier)('Co')
            PsiElement(.)('.')
            PsiElement(identifier)('empty')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: fooContra
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('fooContra')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Foo[Contra[String]]
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Contra[String]
                SimpleType: Contra
                  CodeReferenceElement: Contra
                    PsiElement(identifier)('Contra')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: Foo
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: Contra.empty
                      ReferenceExpression: Contra
                        PsiElement(identifier)('Contra')
                      PsiElement(.)('.')
                      PsiElement(identifier)('empty')
                    PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: y3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y3
              PsiElement(identifier)('y3')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Contra[String]
            SimpleType: Contra
              CodeReferenceElement: Contra
                PsiElement(identifier)('Contra')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: Contra.empty
            ReferenceExpression: Contra
              PsiElement(identifier)('Contra')
            PsiElement(.)('.')
            PsiElement(identifier)('empty')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
