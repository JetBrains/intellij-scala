object sigs {

  type Lst[A] = List[A]

  type Twin[B] = (B, B)

  var x = 7 * 9

  class Base {

    def foo(x: Int): Any = 33
    def foo: Object = "x"

  }

  class Sub extends Base {

   override def foo = "abc"

   override def foo(x: Int) = "abc"
  }

  trait A { self: B =>
    type AA
    val a: AA & BB

  }

  trait B { this: A =>
    type BB
    val b: AA & BB
  }

  class C extends A with B {
    type AA = String
    type BB = AnyRef
    val a = ""
    val b = ""
  }


}
-----
ScalaFile
  ScObject: sigs
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('sigs')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: Lst
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Lst')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: List[A]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: Twin
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Twin')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          TupleType: (B, B)
            PsiElement(()('(')
            TypesList
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScVariableDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(var)('var')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            IntegerLiteral
              PsiElement(integer)('7')
            PsiWhiteSpace(' ')
            ReferenceExpression: *
              PsiElement(identifier)('*')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('9')
        PsiWhiteSpace('\n\n  ')
        ScClass: Base
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Base')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Any
                  CodeReferenceElement: Any
                    PsiElement(identifier)('Any')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IntegerLiteral
                  PsiElement(integer)('33')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Object
                  CodeReferenceElement: Object
                    PsiElement(identifier)('Object')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('"x"')
              PsiWhiteSpace('\n\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: Sub
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Sub')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Base
                  CodeReferenceElement: Base
                    PsiElement(identifier)('Base')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\n   ')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  <empty list>
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('"abc"')
              PsiWhiteSpace('\n\n   ')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('"abc"')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScTrait: A
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              SelfType: self
                PsiElement(identifier)('self')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: B
                  CodeReferenceElement: B
                    PsiElement(identifier)('B')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDeclaration: AA
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('AA')
              PsiWhiteSpace('\n    ')
              ScValueDeclaration: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfIdentifiers
                  Field identifier: a
                    PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                InfixType: AA & BB
                  SimpleType: AA
                    CodeReferenceElement: AA
                      PsiElement(identifier)('AA')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: &
                    PsiElement(identifier)('&')
                  PsiWhiteSpace(' ')
                  SimpleType: BB
                    CodeReferenceElement: BB
                      PsiElement(identifier)('BB')
              PsiWhiteSpace('\n\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScTrait: B
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('B')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              SelfType: this
                PsiElement(this)('this')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDeclaration: BB
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('BB')
              PsiWhiteSpace('\n    ')
              ScValueDeclaration: b
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfIdentifiers
                  Field identifier: b
                    PsiElement(identifier)('b')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                InfixType: AA & BB
                  SimpleType: AA
                    CodeReferenceElement: AA
                      PsiElement(identifier)('AA')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: &
                    PsiElement(identifier)('&')
                  PsiWhiteSpace(' ')
                  SimpleType: BB
                    CodeReferenceElement: BB
                      PsiElement(identifier)('BB')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: C
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              PsiElement(with)('with')
              PsiWhiteSpace(' ')
              ConstructorInvocation
                SimpleType: B
                  CodeReferenceElement: B
                    PsiElement(identifier)('B')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: AA
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('AA')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: BB
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('BB')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: AnyRef
                  CodeReferenceElement: AnyRef
                    PsiElement(identifier)('AnyRef')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: a
                    PsiElement(identifier)('a')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('""')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: b
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: b
                    PsiElement(identifier)('b')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('""')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n\n')
        PsiElement(})('}')
