inline def meth =
  val x1 = inline ("a": Any) match
    case _: String => "ok"
  val x2 = inline { "a": Any } match
    case _: String => "ok"
  inline s match
    case _: String => "ok"

inline def s = "a": Any

def test = meth
-----
ScalaFile
  ScFunctionDefinition: meth
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('meth')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    BlockExpression
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: x1
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: x1
            PsiElement(identifier)('x1')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MatchStatement
          PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          ExpressionInParenthesis
            PsiElement(()('(')
            TypedExpression
              StringLiteral
                PsiElement(string content)('"a"')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
            PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              Scala3 TypedPattern
                WildcardPattern
                  PsiElement(_)('_')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                TypePattern
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                StringLiteral
                  PsiElement(string content)('"ok"')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: x2
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: x2
            PsiElement(identifier)('x2')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MatchStatement
          PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            TypedExpression
              StringLiteral
                PsiElement(string content)('"a"')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              Scala3 TypedPattern
                WildcardPattern
                  PsiElement(_)('_')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                TypePattern
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                StringLiteral
                  PsiElement(string content)('"ok"')
      PsiWhiteSpace('\n  ')
      MatchStatement
        PsiElement(inline)('inline')
        PsiWhiteSpace(' ')
        ReferenceExpression: s
          PsiElement(identifier)('s')
        PsiWhiteSpace(' ')
        PsiElement(match)('match')
        PsiWhiteSpace('\n    ')
        CaseClauses
          CaseClause
            PsiElement(case)('case')
            PsiWhiteSpace(' ')
            Scala3 TypedPattern
              WildcardPattern
                PsiElement(_)('_')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              TypePattern
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            BlockOfExpressions
              StringLiteral
                PsiElement(string content)('"ok"')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: s
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('s')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    TypedExpression
      StringLiteral
        PsiElement(string content)('"a"')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      SimpleType: Any
        CodeReferenceElement: Any
          PsiElement(identifier)('Any')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: meth
      PsiElement(identifier)('meth')
