object Opaque {
  opaque type FieldType[K, +V] <: V = V
}
-----
ScalaFile
  ScObject: Opaque
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Opaque')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: FieldType
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(opaque)('opaque')
          PsiWhiteSpace(' ')
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('FieldType')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: K
              PsiElement(identifier)('K')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: V
              PsiElement(identifier)('+')
              PsiElement(identifier)('V')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: V
            CodeReferenceElement: V
              PsiElement(identifier)('V')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: V
            CodeReferenceElement: V
              PsiElement(identifier)('V')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
