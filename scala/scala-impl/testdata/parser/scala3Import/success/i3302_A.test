package test
//case class A(x: Int)
private object A { def apply(x: Int) = () }
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: test
      PsiElement(identifier)('test')
    PsiWhiteSpace('\n')
    ScObject: A
      PsiComment(comment)('//case class A(x: Int)')
      PsiWhiteSpace('\n')
      AnnotationsList
        <empty list>
      Modifiers
        AccessModifier
          PsiElement(private)('private')
      PsiWhiteSpace(' ')
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('A')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace(' ')
          ScFunctionDefinition: apply
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('apply')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            UnitExpression
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(})('}')
