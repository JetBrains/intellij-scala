case class CC2[A, B](_1: A, _2: B)

object Test {
  def main(args: Array[String]): Unit = {
    val CC2(_, CC2(a, _)) = CC2(0, CC2(1, 2))
    assert(a == 1)
  }
}
-----
ScalaFile
  ScClass: CC2
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('CC2')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: _1
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('_1')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: _2
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('_2')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[String]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: a
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ConstructorPattern
                  CodeReferenceElement: CC2
                    PsiElement(identifier)('CC2')
                  Pattern Argument List
                    PsiElement(()('(')
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ConstructorPattern
                      CodeReferenceElement: CC2
                        PsiElement(identifier)('CC2')
                      Pattern Argument List
                        PsiElement(()('(')
                        ReferencePattern: a
                          PsiElement(identifier)('a')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: CC2
                  PsiElement(identifier)('CC2')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('0')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: CC2
                      PsiElement(identifier)('CC2')
                    ArgumentList
                      PsiElement(()('(')
                      IntegerLiteral
                        PsiElement(integer)('1')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('2')
                      PsiElement())(')')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: assert
                PsiElement(identifier)('assert')
              ArgumentList
                PsiElement(()('(')
                InfixExpression
                  ReferenceExpression: a
                    PsiElement(identifier)('a')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: ==
                    PsiElement(identifier)('==')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('1')
                PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
