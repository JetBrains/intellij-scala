opaque type ProductK[F[_], T <: Tuple] = Tuple.Map[T, F]
object ProductK:
  def of[F[_], T <: Tuple](t: Tuple.Map[T, F]): ProductK[F, T] = t
-----
ScalaFile
  ScTypeAliasDefinition: ProductK
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(opaque)('opaque')
    PsiWhiteSpace(' ')
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ProductK')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: F
        PsiElement(identifier)('F')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: T
        PsiElement(identifier)('T')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: Tuple
          CodeReferenceElement: Tuple
            PsiElement(identifier)('Tuple')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ParametrizedType: Tuple.Map[T, F]
      SimpleType: Tuple.Map
        CodeReferenceElement: Tuple.Map
          CodeReferenceElement: Tuple
            PsiElement(identifier)('Tuple')
          PsiElement(.)('.')
          PsiElement(identifier)('Map')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: T
          CodeReferenceElement: T
            PsiElement(identifier)('T')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        SimpleType: F
          CodeReferenceElement: F
            PsiElement(identifier)('F')
        PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScObject: ProductK
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ProductK')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: of
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('of')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: Tuple
                CodeReferenceElement: Tuple
                  PsiElement(identifier)('Tuple')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: t
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('t')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Tuple.Map[T, F]
                    SimpleType: Tuple.Map
                      CodeReferenceElement: Tuple.Map
                        CodeReferenceElement: Tuple
                          PsiElement(identifier)('Tuple')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Map')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: ProductK[F, T]
            SimpleType: ProductK
              CodeReferenceElement: ProductK
                PsiElement(identifier)('ProductK')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: F
                CodeReferenceElement: F
                  PsiElement(identifier)('F')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: t
            PsiElement(identifier)('t')
