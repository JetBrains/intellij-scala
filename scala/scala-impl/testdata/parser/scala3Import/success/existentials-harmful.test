// a.scala
// Mon Jul 11 14:18:26 PDT 2011

object ExistentialsConsideredHarmful {
  class Animal(val name: String)
  object Dog extends Animal("Dog")
  object Sheep extends Animal("Sheep")

  trait Tools[A] {
    def shave(a: A): A
  }
  def tools[A](a: A): Tools[A] = null // dummy

  case class TransportBox[A <: Animal](animal: A, tools: Tools[A]) {
    def label: String = animal.name
  }

  // 1.
  def carry[A <: Animal](box: TransportBox[A]): Unit = {
    println(box.animal.name +" got carried away")
  }

  val aBox =
    if (math.random < 0.5)
      TransportBox(Dog, tools(Dog))
    else
      TransportBox(Sheep, tools(Sheep))

  // 2.
  //aBox.tools.shave(aBox.animal)

  // Use pattern match to avoid opening the existential twice
  aBox match {
    case TransportBox(animal, tools) => tools.shave(animal)
  }

  abstract class BoxCarrier[R <: Animal](box: TransportBox[R]) {
    def speed: Int

    def talkToAnimal: Unit = println("The carrier says hello to" + box.animal.name)
  }

  // 3.
  //val bc = new BoxCarrier(aBox) {

  // Use pattern match to avoid opening the existential twice
  // Type annotation on bc is required ... possible compiler bug?
  // val bc : BoxCarrier[_ <: Animal] = aBox match {
  val bc = aBox match {
    case tb : TransportBox[a] => new BoxCarrier(tb) {
      def speed: Int = 12
    }
  }
}
-----
ScalaFile
  PsiComment(comment)('// a.scala')
  PsiWhiteSpace('\n')
  PsiComment(comment)('// Mon Jul 11 14:18:26 PDT 2011')
  PsiWhiteSpace('\n\n')
  ScObject: ExistentialsConsideredHarmful
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ExistentialsConsideredHarmful')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: Animal
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Animal')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: name
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('name')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                PsiElement())(')')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScObject: Dog
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Dog')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Animal
                  CodeReferenceElement: Animal
                    PsiElement(identifier)('Animal')
                ArgumentList
                  PsiElement(()('(')
                  StringLiteral
                    PsiElement(string content)('"Dog"')
                  PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScObject: Sheep
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Sheep')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Animal
                  CodeReferenceElement: Animal
                    PsiElement(identifier)('Animal')
                ArgumentList
                  PsiElement(()('(')
                  StringLiteral
                    PsiElement(string content)('"Sheep"')
                  PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Tools
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Tools')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: shave
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('shave')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: a
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('a')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: tools
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('tools')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Tools[A]
            SimpleType: Tools
              CodeReferenceElement: Tools
                PsiElement(identifier)('Tools')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          NullLiteral
            PsiElement(null)('null')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// dummy')
        PsiWhiteSpace('\n\n  ')
        ScClass: TransportBox
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TransportBox')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: Animal
                CodeReferenceElement: Animal
                  PsiElement(identifier)('Animal')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: animal
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('animal')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ClassParameter: tools
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('tools')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: Tools[A]
                      SimpleType: Tools
                        CodeReferenceElement: Tools
                          PsiElement(identifier)('Tools')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: label
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('label')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: animal.name
                  ReferenceExpression: animal
                    PsiElement(identifier)('animal')
                  PsiElement(.)('.')
                  PsiElement(identifier)('name')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: carry
          PsiComment(comment)('// 1.')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('carry')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: Animal
                CodeReferenceElement: Animal
                  PsiElement(identifier)('Animal')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: box
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('box')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: TransportBox[A]
                    SimpleType: TransportBox
                      CodeReferenceElement: TransportBox
                        PsiElement(identifier)('TransportBox')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                InfixExpression
                  ReferenceExpression: box.animal.name
                    ReferenceExpression: box.animal
                      ReferenceExpression: box
                        PsiElement(identifier)('box')
                      PsiElement(.)('.')
                      PsiElement(identifier)('animal')
                    PsiElement(.)('.')
                    PsiElement(identifier)('name')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: +
                    PsiElement(identifier)('+')
                  StringLiteral
                    PsiElement(string content)('" got carried away"')
                PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: aBox
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: aBox
              PsiElement(identifier)('aBox')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          IfStatement
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            PsiElement(()('(')
            InfixExpression
              ReferenceExpression: math.random
                ReferenceExpression: math
                  PsiElement(identifier)('math')
                PsiElement(.)('.')
                PsiElement(identifier)('random')
              PsiWhiteSpace(' ')
              ReferenceExpression: <
                PsiElement(identifier)('<')
              PsiWhiteSpace(' ')
              DoubleLiteral
                PsiElement(double)('0.5')
            PsiElement())(')')
            PsiWhiteSpace('\n      ')
            MethodCall
              ReferenceExpression: TransportBox
                PsiElement(identifier)('TransportBox')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: Dog
                  PsiElement(identifier)('Dog')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: tools
                    PsiElement(identifier)('tools')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: Dog
                      PsiElement(identifier)('Dog')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            PsiElement(else)('else')
            PsiWhiteSpace('\n      ')
            MethodCall
              ReferenceExpression: TransportBox
                PsiElement(identifier)('TransportBox')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: Sheep
                  PsiElement(identifier)('Sheep')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: tools
                    PsiElement(identifier)('tools')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: Sheep
                      PsiElement(identifier)('Sheep')
                    PsiElement())(')')
                PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// 2.')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('//aBox.tools.shave(aBox.animal)')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// Use pattern match to avoid opening the existential twice')
        PsiWhiteSpace('\n  ')
        MatchStatement
          ReferenceExpression: aBox
            PsiElement(identifier)('aBox')
          PsiWhiteSpace(' ')
          PsiElement(match)('match')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          CaseClauses
            CaseClause
              PsiElement(case)('case')
              PsiWhiteSpace(' ')
              ConstructorPattern
                CodeReferenceElement: TransportBox
                  PsiElement(identifier)('TransportBox')
                Pattern Argument List
                  PsiElement(()('(')
                  ReferencePattern: animal
                    PsiElement(identifier)('animal')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ReferencePattern: tools
                    PsiElement(identifier)('tools')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockOfExpressions
                MethodCall
                  ReferenceExpression: tools.shave
                    ReferenceExpression: tools
                      PsiElement(identifier)('tools')
                    PsiElement(.)('.')
                    PsiElement(identifier)('shave')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: animal
                      PsiElement(identifier)('animal')
                    PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: BoxCarrier
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(abstract)('abstract')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('BoxCarrier')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: R
              PsiElement(identifier)('R')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: Animal
                CodeReferenceElement: Animal
                  PsiElement(identifier)('Animal')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: box
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('box')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: TransportBox[R]
                      SimpleType: TransportBox
                        CodeReferenceElement: TransportBox
                          PsiElement(identifier)('TransportBox')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: R
                          CodeReferenceElement: R
                            PsiElement(identifier)('R')
                        PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: speed
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('speed')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: talkToAnimal
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('talkToAnimal')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: println
                    PsiElement(identifier)('println')
                  ArgumentList
                    PsiElement(()('(')
                    InfixExpression
                      StringLiteral
                        PsiElement(string content)('"The carrier says hello to"')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: +
                        PsiElement(identifier)('+')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: box.animal.name
                        ReferenceExpression: box.animal
                          ReferenceExpression: box
                            PsiElement(identifier)('box')
                          PsiElement(.)('.')
                          PsiElement(identifier)('animal')
                        PsiElement(.)('.')
                        PsiElement(identifier)('name')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// 3.')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('//val bc = new BoxCarrier(aBox) {')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: bc
          PsiComment(comment)('// Use pattern match to avoid opening the existential twice')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('// Type annotation on bc is required ... possible compiler bug?')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('// val bc : BoxCarrier[_ <: Animal] = aBox match {')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: bc
              PsiElement(identifier)('bc')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: aBox
              PsiElement(identifier)('aBox')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                Scala3 TypedPattern
                  ReferencePattern: tb
                    PsiElement(identifier)('tb')
                  PsiWhiteSpace(' ')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TypePattern
                    ParametrizedType: TransportBox[a]
                      SimpleType: TransportBox
                        CodeReferenceElement: TransportBox
                          PsiElement(identifier)('TransportBox')
                      TypeArgumentsList
                        PsiElement([)('[')
                        TypeVariable: a
                          PsiElement(identifier)('a')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: BoxCarrier
                            CodeReferenceElement: BoxCarrier
                              PsiElement(identifier)('BoxCarrier')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: tb
                              PsiElement(identifier)('tb')
                            PsiElement())(')')
                      PsiWhiteSpace(' ')
                      ScTemplateBody
                        PsiElement({)('{')
                        PsiWhiteSpace('\n      ')
                        ScFunctionDefinition: speed
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(def)('def')
                          PsiWhiteSpace(' ')
                          PsiElement(identifier)('speed')
                          Parameters
                            <empty list>
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('12')
                        PsiWhiteSpace('\n    ')
                        PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
