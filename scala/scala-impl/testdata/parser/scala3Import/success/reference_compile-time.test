package compiletime

class Test:
  import scala.compiletime.{constValue, erasedValue}
  import scala.compiletime.ops.int.S

  trait Nat
  case object Zero extends Nat
  case class Succ[N <: Nat](n: N) extends Nat

  transparent inline def toIntC[N]: Int =
    inline constValue[N] match
      case 0 => 0
      case _: S[n1] => 1 + toIntC[n1]

  final val ctwo = toIntC[2]

  transparent inline def defaultValue[T]: Option[Any] = inline erasedValue[T] match
    case _: Byte => Some(0: Byte)
    case _: Char => Some(0: Char)
    case _: Short => Some(0: Short)
    case _: Int => Some(0)
    case _: Long => Some(0L)
    case _: Float => Some(0.0f)
    case _: Double => Some(0.0d)
    case _: Boolean => Some(false)
    case _: Unit => Some(())
    case _ => None

  val dInt: Some[Int] = defaultValue[Int]
  val dDouble: Some[Double] = defaultValue[Double]
  val dBoolean: Some[Boolean] = defaultValue[Boolean]
  val dAny: None.type = defaultValue[Any]

  transparent inline def toIntT[N <: Nat]: Int = inline scala.compiletime.erasedValue[N] match
    case _: Zero.type => 0
    case _: Succ[n] => toIntT[n] + 1

  transparent inline def summonFrom(f: Nothing => Any): Any = ???

  final val two = toIntT[Succ[Succ[Zero.type]]]
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: compiletime
      PsiElement(identifier)('compiletime')
    PsiWhiteSpace('\n\n')
    ScClass: Test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      ExtendsBlock
        ScTemplateBody
          PsiElement(:)(':')
          PsiWhiteSpace('\n  ')
          ScImportStatement
            PsiElement(import)('import')
            PsiWhiteSpace(' ')
            ImportExpression
              CodeReferenceElement: scala.compiletime
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('compiletime')
              PsiElement(.)('.')
              ImportSelectors
                PsiElement({)('{')
                ImportSelector
                  CodeReferenceElement: constValue
                    PsiElement(identifier)('constValue')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ImportSelector
                  CodeReferenceElement: erasedValue
                    PsiElement(identifier)('erasedValue')
                PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          ScImportStatement
            PsiElement(import)('import')
            PsiWhiteSpace(' ')
            ImportExpression
              CodeReferenceElement: scala.compiletime.ops.int.S
                CodeReferenceElement: scala.compiletime.ops.int
                  CodeReferenceElement: scala.compiletime.ops
                    CodeReferenceElement: scala.compiletime
                      CodeReferenceElement: scala
                        PsiElement(identifier)('scala')
                      PsiElement(.)('.')
                      PsiElement(identifier)('compiletime')
                    PsiElement(.)('.')
                    PsiElement(identifier)('ops')
                  PsiElement(.)('.')
                  PsiElement(identifier)('int')
                PsiElement(.)('.')
                PsiElement(identifier)('S')
          PsiWhiteSpace('\n\n  ')
          ScTrait: Nat
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(trait)('trait')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('Nat')
            ExtendsBlock
              <empty list>
          PsiWhiteSpace('\n  ')
          ScObject: Zero
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(case)('case')
            PsiWhiteSpace(' ')
            PsiElement(object)('object')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('Zero')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Nat
                    CodeReferenceElement: Nat
                      PsiElement(identifier)('Nat')
          PsiWhiteSpace('\n  ')
          ScClass: Succ
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(case)('case')
            PsiWhiteSpace(' ')
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('Succ')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: N
                PsiElement(identifier)('N')
                PsiWhiteSpace(' ')
                PsiElement(<:)('<:')
                PsiWhiteSpace(' ')
                SimpleType: Nat
                  CodeReferenceElement: Nat
                    PsiElement(identifier)('Nat')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: n
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('n')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: N
                        CodeReferenceElement: N
                          PsiElement(identifier)('N')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Nat
                    CodeReferenceElement: Nat
                      PsiElement(identifier)('Nat')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: toIntC
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(transparent)('transparent')
              PsiWhiteSpace(' ')
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('toIntC')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: N
                PsiElement(identifier)('N')
              PsiElement(])(']')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace('\n    ')
            MatchStatement
              PsiElement(inline)('inline')
              PsiWhiteSpace(' ')
              GenericCall
                ReferenceExpression: constValue
                  PsiElement(identifier)('constValue')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: N
                    CodeReferenceElement: N
                      PsiElement(identifier)('N')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(match)('match')
              PsiWhiteSpace('\n      ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  LiteralPattern
                    IntegerLiteral
                      PsiElement(integer)('0')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    IntegerLiteral
                      PsiElement(integer)('0')
                PsiWhiteSpace('\n      ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      ParametrizedType: S[n1]
                        SimpleType: S
                          CodeReferenceElement: S
                            PsiElement(identifier)('S')
                        TypeArgumentsList
                          PsiElement([)('[')
                          TypeVariable: n1
                            PsiElement(identifier)('n1')
                          PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    InfixExpression
                      IntegerLiteral
                        PsiElement(integer)('1')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: +
                        PsiElement(identifier)('+')
                      PsiWhiteSpace(' ')
                      GenericCall
                        ReferenceExpression: toIntC
                          PsiElement(identifier)('toIntC')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: n1
                            CodeReferenceElement: n1
                              PsiElement(identifier)('n1')
                          PsiElement(])(']')
          PsiWhiteSpace('\n\n  ')
          ScPatternDefinition: ctwo
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(final)('final')
            PsiWhiteSpace(' ')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: ctwo
                PsiElement(identifier)('ctwo')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            GenericCall
              ReferenceExpression: toIntC
                PsiElement(identifier)('toIntC')
              TypeArgumentsList
                PsiElement([)('[')
                LiteralType: 2
                  IntegerLiteral
                    PsiElement(integer)('2')
                PsiElement(])(']')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: defaultValue
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(transparent)('transparent')
              PsiWhiteSpace(' ')
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('defaultValue')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Option[Any]
              SimpleType: Option
                CodeReferenceElement: Option
                  PsiElement(identifier)('Option')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Any
                  CodeReferenceElement: Any
                    PsiElement(identifier)('Any')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            MatchStatement
              PsiElement(inline)('inline')
              PsiWhiteSpace(' ')
              GenericCall
                ReferenceExpression: erasedValue
                  PsiElement(identifier)('erasedValue')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(match)('match')
              PsiWhiteSpace('\n    ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Byte
                        CodeReferenceElement: Byte
                          PsiElement(identifier)('Byte')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: Some
                        PsiElement(identifier)('Some')
                      ArgumentList
                        PsiElement(()('(')
                        TypedExpression
                          IntegerLiteral
                            PsiElement(integer)('0')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          SimpleType: Byte
                            CodeReferenceElement: Byte
                              PsiElement(identifier)('Byte')
                        PsiElement())(')')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Char
                        CodeReferenceElement: Char
                          PsiElement(identifier)('Char')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: Some
                        PsiElement(identifier)('Some')
                      ArgumentList
                        PsiElement(()('(')
                        TypedExpression
                          IntegerLiteral
                            PsiElement(integer)('0')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          SimpleType: Char
                            CodeReferenceElement: Char
                              PsiElement(identifier)('Char')
                        PsiElement())(')')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Short
                        CodeReferenceElement: Short
                          PsiElement(identifier)('Short')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: Some
                        PsiElement(identifier)('Some')
                      ArgumentList
                        PsiElement(()('(')
                        TypedExpression
                          IntegerLiteral
                            PsiElement(integer)('0')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          SimpleType: Short
                            CodeReferenceElement: Short
                              PsiElement(identifier)('Short')
                        PsiElement())(')')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: Some
                        PsiElement(identifier)('Some')
                      ArgumentList
                        PsiElement(()('(')
                        IntegerLiteral
                          PsiElement(integer)('0')
                        PsiElement())(')')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Long
                        CodeReferenceElement: Long
                          PsiElement(identifier)('Long')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: Some
                        PsiElement(identifier)('Some')
                      ArgumentList
                        PsiElement(()('(')
                        LongLiteral
                          PsiElement(long)('0L')
                        PsiElement())(')')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Float
                        CodeReferenceElement: Float
                          PsiElement(identifier)('Float')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: Some
                        PsiElement(identifier)('Some')
                      ArgumentList
                        PsiElement(()('(')
                        FloatLiteral
                          PsiElement(float)('0.0f')
                        PsiElement())(')')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Double
                        CodeReferenceElement: Double
                          PsiElement(identifier)('Double')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: Some
                        PsiElement(identifier)('Some')
                      ArgumentList
                        PsiElement(()('(')
                        DoubleLiteral
                          PsiElement(double)('0.0d')
                        PsiElement())(')')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Boolean
                        CodeReferenceElement: Boolean
                          PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: Some
                        PsiElement(identifier)('Some')
                      ArgumentList
                        PsiElement(()('(')
                        BooleanLiteral
                          PsiElement(false)('false')
                        PsiElement())(')')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Unit
                        CodeReferenceElement: Unit
                          PsiElement(identifier)('Unit')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: Some
                        PsiElement(identifier)('Some')
                      ArgumentList
                        PsiElement(()('(')
                        UnitExpression
                          PsiElement(()('(')
                          PsiElement())(')')
                        PsiElement())(')')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  WildcardPattern
                    PsiElement(_)('_')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    ReferenceExpression: None
                      PsiElement(identifier)('None')
          PsiWhiteSpace('\n\n  ')
          ScPatternDefinition: dInt
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: dInt
                PsiElement(identifier)('dInt')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Some[Int]
              SimpleType: Some
                CodeReferenceElement: Some
                  PsiElement(identifier)('Some')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            GenericCall
              ReferenceExpression: defaultValue
                PsiElement(identifier)('defaultValue')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(])(']')
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: dDouble
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: dDouble
                PsiElement(identifier)('dDouble')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Some[Double]
              SimpleType: Some
                CodeReferenceElement: Some
                  PsiElement(identifier)('Some')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Double
                  CodeReferenceElement: Double
                    PsiElement(identifier)('Double')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            GenericCall
              ReferenceExpression: defaultValue
                PsiElement(identifier)('defaultValue')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Double
                  CodeReferenceElement: Double
                    PsiElement(identifier)('Double')
                PsiElement(])(']')
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: dBoolean
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: dBoolean
                PsiElement(identifier)('dBoolean')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Some[Boolean]
              SimpleType: Some
                CodeReferenceElement: Some
                  PsiElement(identifier)('Some')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Boolean
                  CodeReferenceElement: Boolean
                    PsiElement(identifier)('Boolean')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            GenericCall
              ReferenceExpression: defaultValue
                PsiElement(identifier)('defaultValue')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Boolean
                  CodeReferenceElement: Boolean
                    PsiElement(identifier)('Boolean')
                PsiElement(])(']')
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: dAny
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: dAny
                PsiElement(identifier)('dAny')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: None.type
              CodeReferenceElement: None
                PsiElement(identifier)('None')
              PsiElement(.)('.')
              PsiElement(type)('type')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            GenericCall
              ReferenceExpression: defaultValue
                PsiElement(identifier)('defaultValue')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Any
                  CodeReferenceElement: Any
                    PsiElement(identifier)('Any')
                PsiElement(])(']')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: toIntT
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(transparent)('transparent')
              PsiWhiteSpace(' ')
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('toIntT')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: N
                PsiElement(identifier)('N')
                PsiWhiteSpace(' ')
                PsiElement(<:)('<:')
                PsiWhiteSpace(' ')
                SimpleType: Nat
                  CodeReferenceElement: Nat
                    PsiElement(identifier)('Nat')
              PsiElement(])(']')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            MatchStatement
              PsiElement(inline)('inline')
              PsiWhiteSpace(' ')
              GenericCall
                ReferenceExpression: scala.compiletime.erasedValue
                  ReferenceExpression: scala.compiletime
                    ReferenceExpression: scala
                      PsiElement(identifier)('scala')
                    PsiElement(.)('.')
                    PsiElement(identifier)('compiletime')
                  PsiElement(.)('.')
                  PsiElement(identifier)('erasedValue')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: N
                    CodeReferenceElement: N
                      PsiElement(identifier)('N')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(match)('match')
              PsiWhiteSpace('\n    ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Zero.type
                        CodeReferenceElement: Zero
                          PsiElement(identifier)('Zero')
                        PsiElement(.)('.')
                        PsiElement(type)('type')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    IntegerLiteral
                      PsiElement(integer)('0')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      ParametrizedType: Succ[n]
                        SimpleType: Succ
                          CodeReferenceElement: Succ
                            PsiElement(identifier)('Succ')
                        TypeArgumentsList
                          PsiElement([)('[')
                          TypeVariable: n
                            PsiElement(identifier)('n')
                          PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    InfixExpression
                      GenericCall
                        ReferenceExpression: toIntT
                          PsiElement(identifier)('toIntT')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: n
                            CodeReferenceElement: n
                              PsiElement(identifier)('n')
                          PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: +
                        PsiElement(identifier)('+')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('1')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: summonFrom
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(transparent)('transparent')
              PsiWhiteSpace(' ')
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('summonFrom')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: f
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('f')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    FunctionalType: Nothing => Any
                      SimpleType: Nothing
                        CodeReferenceElement: Nothing
                          PsiElement(identifier)('Nothing')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      SimpleType: Any
                        CodeReferenceElement: Any
                          PsiElement(identifier)('Any')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Any
              CodeReferenceElement: Any
                PsiElement(identifier)('Any')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: ???
              PsiElement(identifier)('???')
          PsiWhiteSpace('\n\n  ')
          ScPatternDefinition: two
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(final)('final')
            PsiWhiteSpace(' ')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: two
                PsiElement(identifier)('two')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            GenericCall
              ReferenceExpression: toIntT
                PsiElement(identifier)('toIntT')
              TypeArgumentsList
                PsiElement([)('[')
                ParametrizedType: Succ[Succ[Zero.type]]
                  SimpleType: Succ
                    CodeReferenceElement: Succ
                      PsiElement(identifier)('Succ')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: Succ[Zero.type]
                      SimpleType: Succ
                        CodeReferenceElement: Succ
                          PsiElement(identifier)('Succ')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: Zero.type
                          CodeReferenceElement: Zero
                            PsiElement(identifier)('Zero')
                          PsiElement(.)('.')
                          PsiElement(type)('type')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiElement(])(']')
