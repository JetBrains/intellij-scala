package optmatch

// final case class NonZeroLong(value: Long) extends AnyVal {
//   def get: Long = value
//   def isEmpty: Boolean = get == 0l
// }

class NonZeroLong(val value: Long) extends AnyVal {
  def get: Long = value
  def isEmpty: Boolean = get == 0l
}
object NonZeroLong {
  def unapply(value: Long): NonZeroLong = new NonZeroLong(value)
}


object Foo {
  def unapply(x: Int): NonZeroLong = new NonZeroLong(1L << x)
  // public long unapply(int);
  //        0: lconst_1
  //        1: iload_1
  //        2: lshl
  //        3: lreturn
}

object Test {
  def f(x: Int): Int = x match {
    case Foo(1024l) => 1
    case _          => 2
  }
  def main(args: Array[String]): Unit = {
    println(f(10))
    println(f(11))
  }
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: optmatch
      PsiElement(identifier)('optmatch')
    PsiWhiteSpace('\n\n')
    PsiComment(comment)('// final case class NonZeroLong(value: Long) extends AnyVal {')
    PsiWhiteSpace('\n')
    PsiComment(comment)('//   def get: Long = value')
    PsiWhiteSpace('\n')
    PsiComment(comment)('//   def isEmpty: Boolean = get == 0l')
    PsiWhiteSpace('\n')
    PsiComment(comment)('// }')
    PsiWhiteSpace('\n\n')
    ScClass: NonZeroLong
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('NonZeroLong')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          ParametersClause
            PsiElement(()('(')
            ClassParameter: value
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('value')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Long
                  CodeReferenceElement: Long
                    PsiElement(identifier)('Long')
            PsiElement())(')')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: AnyVal
              CodeReferenceElement: AnyVal
                PsiElement(identifier)('AnyVal')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: get
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('get')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Long
              CodeReferenceElement: Long
                PsiElement(identifier)('Long')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: value
              PsiElement(identifier)('value')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: isEmpty
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('isEmpty')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Boolean
              CodeReferenceElement: Boolean
                PsiElement(identifier)('Boolean')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            InfixExpression
              ReferenceExpression: get
                PsiElement(identifier)('get')
              PsiWhiteSpace(' ')
              ReferenceExpression: ==
                PsiElement(identifier)('==')
              PsiWhiteSpace(' ')
              LongLiteral
                PsiElement(long)('0l')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    ScObject: NonZeroLong
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('NonZeroLong')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: unapply
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('unapply')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: value
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('value')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Long
                      CodeReferenceElement: Long
                        PsiElement(identifier)('Long')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: NonZeroLong
              CodeReferenceElement: NonZeroLong
                PsiElement(identifier)('NonZeroLong')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: NonZeroLong
                      CodeReferenceElement: NonZeroLong
                        PsiElement(identifier)('NonZeroLong')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: value
                        PsiElement(identifier)('value')
                      PsiElement())(')')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n\n')
    ScObject: Foo
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Foo')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: unapply
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('unapply')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: NonZeroLong
              CodeReferenceElement: NonZeroLong
                PsiElement(identifier)('NonZeroLong')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: NonZeroLong
                      CodeReferenceElement: NonZeroLong
                        PsiElement(identifier)('NonZeroLong')
                    ArgumentList
                      PsiElement(()('(')
                      InfixExpression
                        LongLiteral
                          PsiElement(long)('1L')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: <<
                          PsiElement(identifier)('<<')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: x
                          PsiElement(identifier)('x')
                      PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('// public long unapply(int);')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('//        0: lconst_1')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('//        1: iload_1')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('//        2: lshl')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('//        3: lreturn')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScObject: Test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: f
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('f')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            MatchStatement
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiWhiteSpace(' ')
              PsiElement(match)('match')
              PsiWhiteSpace(' ')
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  ConstructorPattern
                    CodeReferenceElement: Foo
                      PsiElement(identifier)('Foo')
                    Pattern Argument List
                      PsiElement(()('(')
                      LiteralPattern
                        LongLiteral
                          PsiElement(long)('1024l')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    IntegerLiteral
                      PsiElement(integer)('1')
                PsiWhiteSpace('\n    ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  WildcardPattern
                    PsiElement(_)('_')
                  PsiWhiteSpace('          ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    IntegerLiteral
                      PsiElement(integer)('2')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: main
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('main')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: args
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('args')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: Array[String]
                      SimpleType: Array
                        CodeReferenceElement: Array
                          PsiElement(identifier)('Array')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: String
                          CodeReferenceElement: String
                            PsiElement(identifier)('String')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              MethodCall
                ReferenceExpression: println
                  PsiElement(identifier)('println')
                ArgumentList
                  PsiElement(()('(')
                  MethodCall
                    ReferenceExpression: f
                      PsiElement(identifier)('f')
                    ArgumentList
                      PsiElement(()('(')
                      IntegerLiteral
                        PsiElement(integer)('10')
                      PsiElement())(')')
                  PsiElement())(')')
              PsiWhiteSpace('\n    ')
              MethodCall
                ReferenceExpression: println
                  PsiElement(identifier)('println')
                ArgumentList
                  PsiElement(()('(')
                  MethodCall
                    ReferenceExpression: f
                      PsiElement(identifier)('f')
                    ArgumentList
                      PsiElement(()('(')
                      IntegerLiteral
                        PsiElement(integer)('11')
                      PsiElement())(')')
                  PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
