inline def aToB[T,A,B](t:T,b:B): T|B = t match {
  case _:A => b
  case _:T => t
}

@main def main() = aToB[Int, Double, String](1,"x")
-----
ScalaFile
  ScFunctionDefinition: aToB
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('aToB')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(,)(',')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      TypeParameter: B
        PsiElement(identifier)('B')
      PsiElement(])(']')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: t
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('t')
          PsiElement(:)(':')
          ParameterType
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
        PsiElement(,)(',')
        Parameter: b
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('b')
          PsiElement(:)(':')
          ParameterType
            SimpleType: B
              CodeReferenceElement: B
                PsiElement(identifier)('B')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    InfixType: T|B
      SimpleType: T
        CodeReferenceElement: T
          PsiElement(identifier)('T')
      CodeReferenceElement: |
        PsiElement(identifier)('|')
      SimpleType: B
        CodeReferenceElement: B
          PsiElement(identifier)('B')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MatchStatement
      ReferenceExpression: t
        PsiElement(identifier)('t')
      PsiWhiteSpace(' ')
      PsiElement(match)('match')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      CaseClauses
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Scala3 TypedPattern
            WildcardPattern
              PsiElement(_)('_')
            PsiElement(:)(':')
            TypePattern
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            ReferenceExpression: b
              PsiElement(identifier)('b')
        PsiWhiteSpace('\n  ')
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Scala3 TypedPattern
            WildcardPattern
              PsiElement(_)('_')
            PsiElement(:)(':')
            TypePattern
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            ReferenceExpression: t
              PsiElement(identifier)('t')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: main
    AnnotationsList
      Annotation
        PsiElement(@)('@')
        AnnotationExpression
          ConstructorInvocation
            SimpleType: main
              CodeReferenceElement: main
                PsiElement(identifier)('main')
    Modifiers
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('main')
    Parameters
      ParametersClause
        PsiElement(()('(')
        PsiElement())(')')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      GenericCall
        ReferenceExpression: aToB
          PsiElement(identifier)('aToB')
        TypeArgumentsList
          PsiElement([)('[')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          SimpleType: Double
            CodeReferenceElement: Double
              PsiElement(identifier)('Double')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiElement(])(']')
      ArgumentList
        PsiElement(()('(')
        IntegerLiteral
          PsiElement(integer)('1')
        PsiElement(,)(',')
        StringLiteral
          PsiElement(string content)('"x"')
        PsiElement())(')')
