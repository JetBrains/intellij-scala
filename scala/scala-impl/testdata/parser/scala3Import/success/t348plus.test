// bug #348

trait Foo {
  type bar <: Bar;
  abstract class Bar;
  case class Baz(r:bar) extends Bar;
  case object NoBar extends Bar;
}
object Test extends App {
  object ConcreteFooBar extends Foo { // if moved to toplevel, it works
    type bar = Bar;
  }
  def foo = {
    import ConcreteFooBar._ ;
    Baz( NoBar )
  }
}

// bug #367

object Bla {
  def foo(): Unit = (return null).equals(null);
}

-----
ScalaFile
  PsiComment(comment)('// bug #348')
  PsiWhiteSpace('\n\n')
  ScTrait: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: bar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('bar')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: Bar
            CodeReferenceElement: Bar
              PsiElement(identifier)('Bar')
        PsiElement(;)(';')
        PsiWhiteSpace('\n  ')
        ScClass: Bar
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(abstract)('abstract')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Bar')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiElement(;)(';')
        PsiWhiteSpace('\n  ')
        ScClass: Baz
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Baz')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: r
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('r')
                  PsiElement(:)(':')
                  ParameterType
                    SimpleType: bar
                      CodeReferenceElement: bar
                        PsiElement(identifier)('bar')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Bar
                  CodeReferenceElement: Bar
                    PsiElement(identifier)('Bar')
        PsiElement(;)(';')
        PsiWhiteSpace('\n  ')
        ScObject: NoBar
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('NoBar')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Bar
                  CodeReferenceElement: Bar
                    PsiElement(identifier)('Bar')
        PsiElement(;)(';')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: App
            CodeReferenceElement: App
              PsiElement(identifier)('App')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScObject: ConcreteFooBar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ConcreteFooBar')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Foo
                  CodeReferenceElement: Foo
                    PsiElement(identifier)('Foo')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// if moved to toplevel, it works')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: bar
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('bar')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: Bar
                  CodeReferenceElement: Bar
                    PsiElement(identifier)('Bar')
              PsiElement(;)(';')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScImportStatement
              PsiElement(import)('import')
              PsiWhiteSpace(' ')
              ImportExpression
                CodeReferenceElement: ConcreteFooBar
                  PsiElement(identifier)('ConcreteFooBar')
                PsiElement(.)('.')
                PsiElement(_)('_')
            PsiWhiteSpace(' ')
            PsiElement(;)(';')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: Baz
                PsiElement(identifier)('Baz')
              ArgumentList
                PsiElement(()('(')
                PsiWhiteSpace(' ')
                ReferenceExpression: NoBar
                  PsiElement(identifier)('NoBar')
                PsiWhiteSpace(' ')
                PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  PsiComment(comment)('// bug #367')
  PsiWhiteSpace('\n\n')
  ScObject: Bla
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bla')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: (return null).equals
              ExpressionInParenthesis
                PsiElement(()('(')
                ReturnStatement
                  PsiElement(return)('return')
                  PsiWhiteSpace(' ')
                  NullLiteral
                    PsiElement(null)('null')
                PsiElement())(')')
              PsiElement(.)('.')
              PsiElement(identifier)('equals')
            ArgumentList
              PsiElement(()('(')
              NullLiteral
                PsiElement(null)('null')
              PsiElement())(')')
        PsiElement(;)(';')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
