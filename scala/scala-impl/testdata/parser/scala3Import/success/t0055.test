class X(x : Any)
class W {
  new X(new Z() with Y) {}
  trait Y { def y = () }
}
class Z(r : Any) { def this() = this(null) }
-----
ScalaFile
  ScClass: X
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('X')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiWhiteSpace(' ')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScClass: W
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('W')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: X
                  CodeReferenceElement: X
                    PsiElement(identifier)('X')
                ArgumentList
                  PsiElement(()('(')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: Z
                            CodeReferenceElement: Z
                              PsiElement(identifier)('Z')
                          ArgumentList
                            PsiElement(()('(')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(with)('with')
                        PsiWhiteSpace(' ')
                        ConstructorInvocation
                          SimpleType: Y
                            CodeReferenceElement: Y
                              PsiElement(identifier)('Y')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScTrait: Y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Y')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScFunctionDefinition: y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('y')
                Parameters
                  <empty list>
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                UnitExpression
                  PsiElement(()('(')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: Z
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Z')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: r
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('r')
            PsiWhiteSpace(' ')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ScFunctionDefinition: this
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(this)('this')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SelfInvocation
            PsiElement(this)('this')
            ArgumentList
              PsiElement(()('(')
              NullLiteral
                PsiElement(null)('null')
              PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
