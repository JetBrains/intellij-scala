// Context.scala
trait Context:
  type Symbol

trait SymOps[C <: Context](val c: C):
  extension (sym: c.Symbol)
    def getVisibility(): Int = 0

-----
ScalaFile
  ScTrait: Context
    PsiComment(comment)('// Context.scala')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Context')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Symbol
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Symbol')
  PsiWhiteSpace('\n\n')
  ScTrait: SymOps
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('SymOps')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: C
        PsiElement(identifier)('C')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: Context
          CodeReferenceElement: Context
            PsiElement(identifier)('Context')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: c
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('c')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: C
                CodeReferenceElement: C
                  PsiElement(identifier)('C')
          PsiElement())(')')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        Extension on c.Symbol
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: sym
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('sym')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: c.Symbol
                    CodeReferenceElement: c.Symbol
                      CodeReferenceElement: c
                        PsiElement(identifier)('c')
                      PsiElement(.)('.')
                      PsiElement(identifier)('Symbol')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDefinition: getVisibility
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('getVisibility')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('0')
