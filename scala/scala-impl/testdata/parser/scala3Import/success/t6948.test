object t6948 {
  val rand = new scala.util.Random()
  def a1 = rand.shuffle(0 to 5)
  // Tis not to be
  // def a2 = rand.shuffle(0 until 5)
  def a3 = rand.shuffle(Vector(1, 2, 3))
  def a4 = rand.shuffle(scala.collection.Seq(1, 2, 3))
  def a5 = rand.shuffle(scala.collection.immutable.Seq(1, 2, 3))
  def a6 = rand.shuffle(scala.collection.mutable.Seq(1, 2, 3))
}
-----
ScalaFile
  ScObject: t6948
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('t6948')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: rand
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: rand
              PsiElement(identifier)('rand')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: scala.util.Random
                    CodeReferenceElement: scala.util.Random
                      CodeReferenceElement: scala.util
                        CodeReferenceElement: scala
                          PsiElement(identifier)('scala')
                        PsiElement(.)('.')
                        PsiElement(identifier)('util')
                      PsiElement(.)('.')
                      PsiElement(identifier)('Random')
                  ArgumentList
                    PsiElement(()('(')
                    PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: a1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('a1')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: rand.shuffle
              ReferenceExpression: rand
                PsiElement(identifier)('rand')
              PsiElement(.)('.')
              PsiElement(identifier)('shuffle')
            ArgumentList
              PsiElement(()('(')
              InfixExpression
                IntegerLiteral
                  PsiElement(integer)('0')
                PsiWhiteSpace(' ')
                ReferenceExpression: to
                  PsiElement(identifier)('to')
                PsiWhiteSpace(' ')
                IntegerLiteral
                  PsiElement(integer)('5')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: a3
          PsiComment(comment)('// Tis not to be')
          PsiWhiteSpace('\n  ')
          PsiComment(comment)('// def a2 = rand.shuffle(0 until 5)')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('a3')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: rand.shuffle
              ReferenceExpression: rand
                PsiElement(identifier)('rand')
              PsiElement(.)('.')
              PsiElement(identifier)('shuffle')
            ArgumentList
              PsiElement(()('(')
              MethodCall
                ReferenceExpression: Vector
                  PsiElement(identifier)('Vector')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: a4
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('a4')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: rand.shuffle
              ReferenceExpression: rand
                PsiElement(identifier)('rand')
              PsiElement(.)('.')
              PsiElement(identifier)('shuffle')
            ArgumentList
              PsiElement(()('(')
              MethodCall
                ReferenceExpression: scala.collection.Seq
                  ReferenceExpression: scala.collection
                    ReferenceExpression: scala
                      PsiElement(identifier)('scala')
                    PsiElement(.)('.')
                    PsiElement(identifier)('collection')
                  PsiElement(.)('.')
                  PsiElement(identifier)('Seq')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: a5
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('a5')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: rand.shuffle
              ReferenceExpression: rand
                PsiElement(identifier)('rand')
              PsiElement(.)('.')
              PsiElement(identifier)('shuffle')
            ArgumentList
              PsiElement(()('(')
              MethodCall
                ReferenceExpression: scala.collection.immutable.Seq
                  ReferenceExpression: scala.collection.immutable
                    ReferenceExpression: scala.collection
                      ReferenceExpression: scala
                        PsiElement(identifier)('scala')
                      PsiElement(.)('.')
                      PsiElement(identifier)('collection')
                    PsiElement(.)('.')
                    PsiElement(identifier)('immutable')
                  PsiElement(.)('.')
                  PsiElement(identifier)('Seq')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: a6
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('a6')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: rand.shuffle
              ReferenceExpression: rand
                PsiElement(identifier)('rand')
              PsiElement(.)('.')
              PsiElement(identifier)('shuffle')
            ArgumentList
              PsiElement(()('(')
              MethodCall
                ReferenceExpression: scala.collection.mutable.Seq
                  ReferenceExpression: scala.collection.mutable
                    ReferenceExpression: scala.collection
                      ReferenceExpression: scala
                        PsiElement(identifier)('scala')
                      PsiElement(.)('.')
                      PsiElement(identifier)('collection')
                    PsiElement(.)('.')
                    PsiElement(identifier)('mutable')
                  PsiElement(.)('.')
                  PsiElement(identifier)('Seq')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
