sealed trait Bool
case object True extends Bool
case object False extends Bool

sealed trait SBool[B <: Bool]
case object STrue extends SBool[True.type]
case object SFalse extends SBool[False.type]

type Not[B <: Bool] <: Bool = B match {
  case True.type => False.type
  case False.type => True.type
}

def not[B <: Bool](b: SBool[B]): SBool[Not[B]] = b match {
  case STrue => SFalse
  case SFalse => STrue
}
-----
ScalaFile
  ScTrait: Bool
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(sealed)('sealed')
    PsiWhiteSpace(' ')
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bool')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScObject: True
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('True')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Bool
            CodeReferenceElement: Bool
              PsiElement(identifier)('Bool')
  PsiWhiteSpace('\n')
  ScObject: False
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('False')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Bool
            CodeReferenceElement: Bool
              PsiElement(identifier)('Bool')
  PsiWhiteSpace('\n\n')
  ScTrait: SBool
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(sealed)('sealed')
    PsiWhiteSpace(' ')
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('SBool')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: B
        PsiElement(identifier)('B')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: Bool
          CodeReferenceElement: Bool
            PsiElement(identifier)('Bool')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScObject: STrue
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('STrue')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: SBool[True.type]
            SimpleType: SBool
              CodeReferenceElement: SBool
                PsiElement(identifier)('SBool')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: True.type
                CodeReferenceElement: True
                  PsiElement(identifier)('True')
                PsiElement(.)('.')
                PsiElement(type)('type')
              PsiElement(])(']')
  PsiWhiteSpace('\n')
  ScObject: SFalse
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('SFalse')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: SBool[False.type]
            SimpleType: SBool
              CodeReferenceElement: SBool
                PsiElement(identifier)('SBool')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: False.type
                CodeReferenceElement: False
                  PsiElement(identifier)('False')
                PsiElement(.)('.')
                PsiElement(type)('type')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScTypeAliasDefinition: Not
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Not')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: B
        PsiElement(identifier)('B')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: Bool
          CodeReferenceElement: Bool
            PsiElement(identifier)('Bool')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(<:)('<:')
    PsiWhiteSpace(' ')
    SimpleType: Bool
      CodeReferenceElement: Bool
        PsiElement(identifier)('Bool')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MatchType: B match {
  case True.type => False.type
  case False.type => True.type
}
      SimpleType: B
        CodeReferenceElement: B
          PsiElement(identifier)('B')
      PsiWhiteSpace(' ')
      PsiElement(match)('match')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      ScMatchTypeCasesImpl(match type cases)
        ScMatchTypeCaseImpl(match type case)
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          SimpleType: True.type
            CodeReferenceElement: True
              PsiElement(identifier)('True')
            PsiElement(.)('.')
            PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          SimpleType: False.type
            CodeReferenceElement: False
              PsiElement(identifier)('False')
            PsiElement(.)('.')
            PsiElement(type)('type')
        PsiWhiteSpace('\n  ')
        ScMatchTypeCaseImpl(match type case)
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          SimpleType: False.type
            CodeReferenceElement: False
              PsiElement(identifier)('False')
            PsiElement(.)('.')
            PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          SimpleType: True.type
            CodeReferenceElement: True
              PsiElement(identifier)('True')
            PsiElement(.)('.')
            PsiElement(type)('type')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: not
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('not')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: B
        PsiElement(identifier)('B')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: Bool
          CodeReferenceElement: Bool
            PsiElement(identifier)('Bool')
      PsiElement(])(']')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: b
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('b')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: SBool[B]
              SimpleType: SBool
                CodeReferenceElement: SBool
                  PsiElement(identifier)('SBool')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: B
                  CodeReferenceElement: B
                    PsiElement(identifier)('B')
                PsiElement(])(']')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: SBool[Not[B]]
      SimpleType: SBool
        CodeReferenceElement: SBool
          PsiElement(identifier)('SBool')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: Not[B]
          SimpleType: Not
            CodeReferenceElement: Not
              PsiElement(identifier)('Not')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: B
              CodeReferenceElement: B
                PsiElement(identifier)('B')
            PsiElement(])(']')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MatchStatement
      ReferenceExpression: b
        PsiElement(identifier)('b')
      PsiWhiteSpace(' ')
      PsiElement(match)('match')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      CaseClauses
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          StableElementPattern
            ReferenceExpression: STrue
              PsiElement(identifier)('STrue')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            ReferenceExpression: SFalse
              PsiElement(identifier)('SFalse')
        PsiWhiteSpace('\n  ')
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          StableElementPattern
            ReferenceExpression: SFalse
              PsiElement(identifier)('SFalse')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          BlockOfExpressions
            ReferenceExpression: STrue
              PsiElement(identifier)('STrue')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
