trait Eq[A] {
  extension (x: A)
    def === (y: A): Boolean
    def /== (y: A): Boolean = !(x === y)
}

case class Id[T](id: T)

given idEq[A](using eqA: Eq[A]): Eq[Id[A]] = new {
  extension (i1: Id[A]) def === (i2: Id[A]) = !(i1.id /== i2.id)
}
-----
ScalaFile
  ScTrait: Eq
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Eq')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        Extension on A
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDeclaration: ===
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('===')
              PsiWhiteSpace(' ')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: y
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('y')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Boolean
                CodeReferenceElement: Boolean
                  PsiElement(identifier)('Boolean')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: /==
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('/==')
              PsiWhiteSpace(' ')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: y
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('y')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Boolean
                CodeReferenceElement: Boolean
                  PsiElement(identifier)('Boolean')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              PrefixExpression
                ReferenceExpression: !
                  PsiElement(identifier)('!')
                ExpressionInParenthesis
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ===
                      PsiElement(identifier)('===')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                  PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Id
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Id')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: id
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('id')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScGivenAliasDefinition: idEq
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('idEq')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    Parameters
      ParametersClause
        PsiElement(()('(')
        PsiElement(using)('using')
        PsiWhiteSpace(' ')
        Parameter: eqA
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('eqA')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: Eq[A]
              SimpleType: Eq
                CodeReferenceElement: Eq
                  PsiElement(identifier)('Eq')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiElement(])(']')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: Eq[Id[A]]
      SimpleType: Eq
        CodeReferenceElement: Eq
          PsiElement(identifier)('Eq')
      TypeArgumentsList
        PsiElement([)('[')
        ParametrizedType: Id[A]
          SimpleType: Id
            CodeReferenceElement: Id
              PsiElement(identifier)('Id')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
            PsiElement(])(']')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ScNewTemplateDefinition: <anonymous>
      PsiElement(new)('new')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          Extension on Id[A]
            PsiElement(extension)('extension')
            PsiWhiteSpace(' ')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: i1
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('i1')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: Id[A]
                      SimpleType: Id
                        CodeReferenceElement: Id
                          PsiElement(identifier)('Id')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            ScExtensionBody
              ScFunctionDefinition: ===
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('===')
                PsiWhiteSpace(' ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: i2
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('i2')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Id[A]
                          SimpleType: Id
                            CodeReferenceElement: Id
                              PsiElement(identifier)('Id')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                PrefixExpression
                  ReferenceExpression: !
                    PsiElement(identifier)('!')
                  ExpressionInParenthesis
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: i1.id
                        ReferenceExpression: i1
                          PsiElement(identifier)('i1')
                        PsiElement(.)('.')
                        PsiElement(identifier)('id')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: /==
                        PsiElement(identifier)('/==')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: i2.id
                        ReferenceExpression: i2
                          PsiElement(identifier)('i2')
                        PsiElement(.)('.')
                        PsiElement(identifier)('id')
                    PsiElement())(')')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
