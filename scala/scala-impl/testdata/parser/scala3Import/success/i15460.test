type C = (() => Int) | (() => String)

def foo(c: C): Unit = ()

val _ = foo(() => 1)
-----
ScalaFile
  ScTypeAliasDefinition: C
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('C')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    InfixType: (() => Int) | (() => String)
      TypeInParenthesis: (() => Int)
        PsiElement(()('(')
        FunctionalType: () => Int
          TypeInParenthesis: ()
            PsiElement(()('(')
            PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
        PsiElement())(')')
      PsiWhiteSpace(' ')
      CodeReferenceElement: |
        PsiElement(identifier)('|')
      PsiWhiteSpace(' ')
      TypeInParenthesis: (() => String)
        PsiElement(()('(')
        FunctionalType: () => String
          TypeInParenthesis: ()
            PsiElement(()('(')
            PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
        PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('foo')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: c
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('c')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    UnitExpression
      PsiElement(()('(')
      PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: foo
        PsiElement(identifier)('foo')
      ArgumentList
        PsiElement(()('(')
        FunctionExpression
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('1')
        PsiElement())(')')
