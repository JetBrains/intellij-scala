object Syms:
  import SymDs.*
  opaque type Symbol <: AnyRef
    = SymDenotation
  opaque type ClassSymbol <: Symbol
    = ClassDenotation

object SymDs:
  import Syms.*
  class SymDenotation(sym: Symbol)
  class ClassDenotation(sym: Symbol) extends SymDenotation(sym)

-----
ScalaFile
  ScObject: Syms
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Syms')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: SymDs
              PsiElement(identifier)('SymDs')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: Symbol
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(opaque)('opaque')
          PsiWhiteSpace(' ')
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Symbol')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: AnyRef
            CodeReferenceElement: AnyRef
              PsiElement(identifier)('AnyRef')
          PsiWhiteSpace('\n    ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: SymDenotation
            CodeReferenceElement: SymDenotation
              PsiElement(identifier)('SymDenotation')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: ClassSymbol
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(opaque)('opaque')
          PsiWhiteSpace(' ')
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ClassSymbol')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: Symbol
            CodeReferenceElement: Symbol
              PsiElement(identifier)('Symbol')
          PsiWhiteSpace('\n    ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: ClassDenotation
            CodeReferenceElement: ClassDenotation
              PsiElement(identifier)('ClassDenotation')
  PsiWhiteSpace('\n\n')
  ScObject: SymDs
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('SymDs')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: Syms
              PsiElement(identifier)('Syms')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        ScClass: SymDenotation
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('SymDenotation')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: sym
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('sym')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Symbol
                      CodeReferenceElement: Symbol
                        PsiElement(identifier)('Symbol')
                PsiElement())(')')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScClass: ClassDenotation
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ClassDenotation')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: sym
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('sym')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Symbol
                      CodeReferenceElement: Symbol
                        PsiElement(identifier)('Symbol')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: SymDenotation
                  CodeReferenceElement: SymDenotation
                    PsiElement(identifier)('SymDenotation')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: sym
                    PsiElement(identifier)('sym')
                  PsiElement())(')')
