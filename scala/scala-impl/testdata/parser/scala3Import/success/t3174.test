object test {
  def method(): Unit = {
    class Foo extends AnyRef {
      object Color {
        object Blue {
          //val b = new Board
        }
      }

      class Board {
        val grid = Color.Blue
      }
    }
    new Foo
  }
 }
-----
ScalaFile
  ScObject: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: method
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('method')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScClass: Foo
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Foo')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  <empty list>
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    SimpleType: AnyRef
                      CodeReferenceElement: AnyRef
                        PsiElement(identifier)('AnyRef')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  ScObject: Color
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(object)('object')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('Color')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      ScTemplateBody
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        ScObject: Blue
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(object)('object')
                          PsiWhiteSpace(' ')
                          PsiElement(identifier)('Blue')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            ScTemplateBody
                              PsiElement({)('{')
                              PsiWhiteSpace('\n          ')
                              PsiComment(comment)('//val b = new Board')
                              PsiWhiteSpace('\n        ')
                              PsiElement(})('}')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                  PsiWhiteSpace('\n\n      ')
                  ScClass: Board
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(class)('class')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('Board')
                    PrimaryConstructor
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      Parameters
                        <empty list>
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      ScTemplateBody
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        ScPatternDefinition: grid
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(val)('val')
                          PsiWhiteSpace(' ')
                          ListOfPatterns
                            ReferencePattern: grid
                              PsiElement(identifier)('grid')
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: Color.Blue
                            ReferenceExpression: Color
                              PsiElement(identifier)('Color')
                            PsiElement(.)('.')
                            PsiElement(identifier)('Blue')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n    ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: Foo
                      CodeReferenceElement: Foo
                        PsiElement(identifier)('Foo')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n ')
        PsiElement(})('}')
