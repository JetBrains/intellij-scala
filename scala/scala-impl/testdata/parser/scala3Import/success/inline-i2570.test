object Test {
  inline def sum2(ys: List[Int]): Int = (1 /: ys)(_ + _)
  val h1 = (xs:  List[Int]) => sum2(xs)
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: sum2
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('sum2')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: ys
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('ys')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[Int]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ExpressionInParenthesis
              PsiElement(()('(')
              InfixExpression
                IntegerLiteral
                  PsiElement(integer)('1')
                PsiWhiteSpace(' ')
                ReferenceExpression: /:
                  PsiElement(identifier)('/:')
                PsiWhiteSpace(' ')
                ReferenceExpression: ys
                  PsiElement(identifier)('ys')
              PsiElement())(')')
            ArgumentList
              PsiElement(()('(')
              InfixExpression
                UnderscoreSection
                  PsiElement(_)('_')
                PsiWhiteSpace(' ')
                ReferenceExpression: +
                  PsiElement(identifier)('+')
                PsiWhiteSpace(' ')
                UnderscoreSection
                  PsiElement(_)('_')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: h1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: h1
              PsiElement(identifier)('h1')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          FunctionExpression
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: xs
                  AnnotationsList
                    <empty list>
                  PsiElement(identifier)('xs')
                  PsiElement(:)(':')
                  PsiWhiteSpace('  ')
                  ParameterType
                    ParametrizedType: List[Int]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: sum2
                PsiElement(identifier)('sum2')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: xs
                  PsiElement(identifier)('xs')
                PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
