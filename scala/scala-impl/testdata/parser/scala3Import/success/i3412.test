class Test {
  val A @ List() = List()
}
-----
ScalaFile
  ScClass: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: A
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            NamingPattern: A
              PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              PsiElement(@)('@')
              PsiWhiteSpace(' ')
              ConstructorPattern
                CodeReferenceElement: List
                  PsiElement(identifier)('List')
                Pattern Argument List
                  PsiElement(()('(')
                  PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: List
              PsiElement(identifier)('List')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
