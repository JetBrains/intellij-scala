package implicitmatch

class Test extends App:
  import scala.collection.immutable.{TreeSet, HashSet}
  import scala.compiletime.summonFrom

  transparent inline def setFor[T]: Set[T] = summonFrom {
    case ord @ given Ordering[T] => new TreeSet[T]
    case _                       => new HashSet[T]
  }

  summon[Ordering[String]]

  val sf = setFor[String]

  println(sf.getClass) // prints class scala.collection.immutable.TreeSet

  class A(val x: String)
  implicit val a1: A = new A("a1")
  implicit val a2: A = new A("a2")

  inline def f: Any = summonFrom {
    case ev: A => println(ev.x)  // error: ambiguous implicits
  }

-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: implicitmatch
      PsiElement(identifier)('implicitmatch')
    PsiWhiteSpace('\n\n')
    ScClass: Test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: App
              CodeReferenceElement: App
                PsiElement(identifier)('App')
        ScTemplateBody
          PsiElement(:)(':')
          PsiWhiteSpace('\n  ')
          ScImportStatement
            PsiElement(import)('import')
            PsiWhiteSpace(' ')
            ImportExpression
              CodeReferenceElement: scala.collection.immutable
                CodeReferenceElement: scala.collection
                  CodeReferenceElement: scala
                    PsiElement(identifier)('scala')
                  PsiElement(.)('.')
                  PsiElement(identifier)('collection')
                PsiElement(.)('.')
                PsiElement(identifier)('immutable')
              PsiElement(.)('.')
              ImportSelectors
                PsiElement({)('{')
                ImportSelector
                  CodeReferenceElement: TreeSet
                    PsiElement(identifier)('TreeSet')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ImportSelector
                  CodeReferenceElement: HashSet
                    PsiElement(identifier)('HashSet')
                PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          ScImportStatement
            PsiElement(import)('import')
            PsiWhiteSpace(' ')
            ImportExpression
              CodeReferenceElement: scala.compiletime.summonFrom
                CodeReferenceElement: scala.compiletime
                  CodeReferenceElement: scala
                    PsiElement(identifier)('scala')
                  PsiElement(.)('.')
                  PsiElement(identifier)('compiletime')
                PsiElement(.)('.')
                PsiElement(identifier)('summonFrom')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: setFor
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(transparent)('transparent')
              PsiWhiteSpace(' ')
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('setFor')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Set[T]
              SimpleType: Set
                CodeReferenceElement: Set
                  PsiElement(identifier)('Set')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: summonFrom
                PsiElement(identifier)('summonFrom')
              PsiWhiteSpace(' ')
              ArgumentList
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      NamingPattern: ord
                        PsiElement(identifier)('ord')
                        PsiWhiteSpace(' ')
                        PsiElement(@)('@')
                        PsiWhiteSpace(' ')
                        ScGivenPatternImpl(given pattern)
                          PsiElement(given)('given')
                          PsiWhiteSpace(' ')
                          ParametrizedType: Ordering[T]
                            SimpleType: Ordering
                              CodeReferenceElement: Ordering
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: T
                                CodeReferenceElement: T
                                  PsiElement(identifier)('T')
                              PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                ParametrizedType: TreeSet[T]
                                  SimpleType: TreeSet
                                    CodeReferenceElement: TreeSet
                                      PsiElement(identifier)('TreeSet')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: T
                                      CodeReferenceElement: T
                                        PsiElement(identifier)('T')
                                    PsiElement(])(']')
                    PsiWhiteSpace('\n    ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      WildcardPattern
                        PsiElement(_)('_')
                      PsiWhiteSpace('                       ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                ParametrizedType: HashSet[T]
                                  SimpleType: HashSet
                                    CodeReferenceElement: HashSet
                                      PsiElement(identifier)('HashSet')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: T
                                      CodeReferenceElement: T
                                        PsiElement(identifier)('T')
                                    PsiElement(])(']')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
          PsiWhiteSpace('\n\n  ')
          GenericCall
            ReferenceExpression: summon
              PsiElement(identifier)('summon')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Ordering[String]
                SimpleType: Ordering
                  CodeReferenceElement: Ordering
                    PsiElement(identifier)('Ordering')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace('\n\n  ')
          ScPatternDefinition: sf
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: sf
                PsiElement(identifier)('sf')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            GenericCall
              ReferenceExpression: setFor
                PsiElement(identifier)('setFor')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(])(']')
          PsiWhiteSpace('\n\n  ')
          MethodCall
            ReferenceExpression: println
              PsiElement(identifier)('println')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: sf.getClass
                ReferenceExpression: sf
                  PsiElement(identifier)('sf')
                PsiElement(.)('.')
                PsiElement(identifier)('getClass')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiComment(comment)('// prints class scala.collection.immutable.TreeSet')
          PsiWhiteSpace('\n\n  ')
          ScClass: A
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('A')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: x
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('x')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                  PsiElement())(')')
            ExtendsBlock
              <empty list>
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: a1
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(implicit)('implicit')
            PsiWhiteSpace(' ')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: a1
                PsiElement(identifier)('a1')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    ArgumentList
                      PsiElement(()('(')
                      StringLiteral
                        PsiElement(string content)('"a1"')
                      PsiElement())(')')
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: a2
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(implicit)('implicit')
            PsiWhiteSpace(' ')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: a2
                PsiElement(identifier)('a2')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    ArgumentList
                      PsiElement(()('(')
                      StringLiteral
                        PsiElement(string content)('"a2"')
                      PsiElement())(')')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: f
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('f')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Any
              CodeReferenceElement: Any
                PsiElement(identifier)('Any')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: summonFrom
                PsiElement(identifier)('summonFrom')
              PsiWhiteSpace(' ')
              ArgumentList
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n    ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      Scala3 TypedPattern
                        ReferencePattern: ev
                          PsiElement(identifier)('ev')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        TypePattern
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: println
                            PsiElement(identifier)('println')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: ev.x
                              ReferenceExpression: ev
                                PsiElement(identifier)('ev')
                              PsiElement(.)('.')
                              PsiElement(identifier)('x')
                            PsiElement())(')')
                  PsiWhiteSpace('  ')
                  PsiComment(comment)('// error: ambiguous implicits')
                  PsiWhiteSpace('\n  ')
                  PsiElement(})('}')
