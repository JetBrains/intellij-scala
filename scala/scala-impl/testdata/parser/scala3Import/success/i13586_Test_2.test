class Foo {
 inline def test(): Unit = {
   ${ Position.withPosition[Unit]('{ _ => this }) }
 }
}

class Bar extends Foo {
  def test(s: String) =
    super.test()
}
-----
ScalaFile
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n   ')
            SplicedBlock
              PsiElement($)('$')
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              MethodCall
                GenericCall
                  ReferenceExpression: Position.withPosition
                    ReferenceExpression: Position
                      PsiElement(identifier)('Position')
                    PsiElement(.)('.')
                    PsiElement(identifier)('withPosition')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Unit
                      CodeReferenceElement: Unit
                        PsiElement(identifier)('Unit')
                    PsiElement(])(']')
                ArgumentList
                  PsiElement(()('(')
                  QuotedBlock
                    PsiElement(')(''')
                    PsiElement({)('{')
                    PsiWhiteSpace(' ')
                    FunctionExpression
                      Parameters
                        ParametersClause
                          Parameter: _
                            PsiElement(_)('_')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ThisReference
                          PsiElement(this)('this')
                    PsiWhiteSpace(' ')
                    PsiElement(})('}')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
            PsiWhiteSpace('\n ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Bar
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bar')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Foo
            CodeReferenceElement: Foo
              PsiElement(identifier)('Foo')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: s
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('s')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            ReferenceExpression: super.test
              SuperReference
                PsiElement(super)('super')
              PsiElement(.)('.')
              PsiElement(identifier)('test')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
