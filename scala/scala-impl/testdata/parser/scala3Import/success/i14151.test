class BoundedPair[A, B <: A]:
  type Second[A, T <: BoundedPair[A, _ <: A]] <: A = T match { case BoundedPair[A, b] => b }
-----
ScalaFile
  ScClass: BoundedPair
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('BoundedPair')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: A
          CodeReferenceElement: A
            PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: Second
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Second')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: BoundedPair[A, _ <: A]
                SimpleType: BoundedPair
                  CodeReferenceElement: BoundedPair
                    PsiElement(identifier)('BoundedPair')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  WildcardType: _ <: A
                    PsiElement(_)('_')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                  PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchType: T match { case BoundedPair[A, b] => b }
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            ScMatchTypeCasesImpl(match type cases)
              ScMatchTypeCaseImpl(match type case)
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ParametrizedType: BoundedPair[A, b]
                  SimpleType: BoundedPair
                    CodeReferenceElement: BoundedPair
                      PsiElement(identifier)('BoundedPair')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeVariable: b
                      PsiElement(identifier)('b')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                SimpleType: b
                  CodeReferenceElement: b
                    PsiElement(identifier)('b')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
