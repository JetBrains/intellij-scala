transparent inline def f: Null = null

inline def g: Unit =
  inline if f == "V" then 1 else 2
  inline if f != "V" then 3 else 4
  inline if "v" == f then 5 else 6
  inline if "v" != f then 7 else 8

def test = g
-----
ScalaFile
  ScFunctionDefinition: f
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(transparent)('transparent')
      PsiWhiteSpace(' ')
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('f')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Null
      CodeReferenceElement: Null
        PsiElement(identifier)('Null')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    NullLiteral
      PsiElement(null)('null')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: g
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('g')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    BlockExpression
      PsiWhiteSpace('\n  ')
      IfStatement
        PsiElement(inline)('inline')
        PsiWhiteSpace(' ')
        PsiElement(if)('if')
        PsiWhiteSpace(' ')
        InfixExpression
          ReferenceExpression: f
            PsiElement(identifier)('f')
          PsiWhiteSpace(' ')
          ReferenceExpression: ==
            PsiElement(identifier)('==')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"V"')
        PsiWhiteSpace(' ')
        PsiElement(then)('then')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('1')
        PsiWhiteSpace(' ')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('2')
      PsiWhiteSpace('\n  ')
      IfStatement
        PsiElement(inline)('inline')
        PsiWhiteSpace(' ')
        PsiElement(if)('if')
        PsiWhiteSpace(' ')
        InfixExpression
          ReferenceExpression: f
            PsiElement(identifier)('f')
          PsiWhiteSpace(' ')
          ReferenceExpression: !=
            PsiElement(identifier)('!=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"V"')
        PsiWhiteSpace(' ')
        PsiElement(then)('then')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('3')
        PsiWhiteSpace(' ')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('4')
      PsiWhiteSpace('\n  ')
      IfStatement
        PsiElement(inline)('inline')
        PsiWhiteSpace(' ')
        PsiElement(if)('if')
        PsiWhiteSpace(' ')
        InfixExpression
          StringLiteral
            PsiElement(string content)('"v"')
          PsiWhiteSpace(' ')
          ReferenceExpression: ==
            PsiElement(identifier)('==')
          PsiWhiteSpace(' ')
          ReferenceExpression: f
            PsiElement(identifier)('f')
        PsiWhiteSpace(' ')
        PsiElement(then)('then')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('5')
        PsiWhiteSpace(' ')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('6')
      PsiWhiteSpace('\n  ')
      IfStatement
        PsiElement(inline)('inline')
        PsiWhiteSpace(' ')
        PsiElement(if)('if')
        PsiWhiteSpace(' ')
        InfixExpression
          StringLiteral
            PsiElement(string content)('"v"')
          PsiWhiteSpace(' ')
          ReferenceExpression: !=
            PsiElement(identifier)('!=')
          PsiWhiteSpace(' ')
          ReferenceExpression: f
            PsiElement(identifier)('f')
        PsiWhiteSpace(' ')
        PsiElement(then)('then')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('7')
        PsiWhiteSpace(' ')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('8')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: g
      PsiElement(identifier)('g')
