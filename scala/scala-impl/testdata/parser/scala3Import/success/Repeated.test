package scala.collection
package immutable

import scala.collection.Stepper.EfficientSplit
import scala.collection.immutable.Range
import scala.collection.mutable.Buffer
import scala.collection.IterableOps.SizeCompareOps
import scala.collection.Searching.SearchResult
import scala.math.Ordering
import scala.reflect.ClassTag
import scala.util.Sorting
import annotation.targetName

opaque type Repeated[+A] = Seq[A]
object Repeated:

  extension [A](xs: Repeated[A])
    def length: Int = xs.length
    def apply(n: Int) = xs.apply(n)
    def iterator: Iterator[A] = xs.iterator

    def ++[B >: A](suffix: IterableOnce[B]): Repeated[B] = xs ++ suffix
    def :+ [B >: A](x: B): Repeated[B] = xs :+ x
    def :++ [B >: A](suffix: IterableOnce[B]): Repeated[B] = xs :++ suffix

    def addString(b: mutable.StringBuilder): mutable.StringBuilder = xs.addString(b)
    def addString(b: mutable.StringBuilder, sep: String): mutable.StringBuilder = xs.addString(b, sep)
    def addString(b: mutable.StringBuilder, start: String, sep: String, end: String): mutable.StringBuilder = xs.addString(b, start, sep, end)
    def appended[B >: A](x: B): Repeated[B] = xs.appended(x)
    def appendedAll[B >: A](suffix: IterableOnce[B]): Repeated[B] = xs.appendedAll(suffix)
    def collect[B](pf: PartialFunction[A, B]): Repeated[B] = xs.collect(pf)
    def collectFirst[B](f: PartialFunction[A, B]): Option[B] = xs.collectFirst(f)
    def combinations(n: Int): Iterator[Repeated[A]] = xs.combinations(n)
    def concat[B >: A](suffix: IterableOnce[B]): Repeated[B] = xs.concat(suffix)
    def contains(elem: A): Boolean = xs.contains(elem)
    def containsSlice[B](that: Seq[B]): Boolean = xs.containsSlice(that)
    def copyToArray[B >: A](ys: Array[B]): Int = xs.copyToArray(ys)
    def copyToArray[B >: A](ys: Array[B], start: Int): Int = xs.copyToArray(ys, start)
    def copyToArray[B >: A](ys: Array[B], start: Int, len: Int): Int = xs.copyToArray(ys, start, len)
    def corresponds[B](that: IterableOnce[B])(p: (A, B) => Boolean): Boolean = xs.corresponds(that)(p)
    def count(p: A => Boolean): Int = xs.count(p)
    def diff[B >: A](that: Seq[B]): Repeated[A] = xs.diff(that)
    def distinct: Repeated[A] = xs.distinct
    def distinctBy[B](f: A => B): Repeated[A] = xs.distinctBy(f)
    def drop(n: Int): Repeated[A] = xs.drop(n)
    def dropRight(n: Int): Repeated[A] = xs.dropRight(n)
    def dropWhile(p: A => Boolean): Repeated[A] = xs.dropWhile(p)
    def empty: Repeated[A] = xs.empty
    def endsWith[B >: A](that: Iterable[B]): Boolean = xs.endsWith(that)
    def exists(p: A => Boolean): Boolean = xs.exists(p)
    def filter(p: A => Boolean): Repeated[A] = xs.filter(p)
    def filterNot(p: A => Boolean): Repeated[A] = xs.filterNot(p)
    def find(p: A => Boolean): Option[A] = xs.find(p)
    def findLast(p: A => Boolean): Option[A] = xs.findLast(p)
    def flatMap[B](f: A => IterableOnce[B]): Repeated[B] = xs.flatMap(f)
    def fold[A1 >: A](z: A1)(op: (A1, A1) => A1): A1 = xs.fold(z)(op)
    def foldLeft[B](z: B)(op: (B, A) => B): B = xs.foldLeft(z)(op)
    def foldRight[B](z: B)(op: (A, B) => B): B = xs.foldRight(z)(op)
    def forall(p: A => Boolean): Boolean = xs.forall(p)
    def foreach[U](f: A => U): Unit = xs.foreach(f)
    def groupBy[K](f: A => K): immutable.Map[K, Repeated[A]] = xs.groupBy(f)
    def groupMap[K, B](key: A => K)(f: A => B): immutable.Map[K, Repeated[B]] = xs.groupMap(key)(f)
    def groupMapReduce[K, B](key: (A) => K)(f: (A) => B)(reduce: (B, B) => B): immutable.Map[K, B] = xs.groupMapReduce(key)(f)(reduce)
    def grouped(size: Int): Iterator[Repeated[A]] = xs.grouped(size)
    def head: A = xs.head
    def headOption: Option[A] = xs.headOption
    def indexOf(elem: A, from: Int = 0): Int = xs.indexOf(elem, from)
    def indexOfSlice[B >: A](that: Seq[B]): Int = xs.indexOfSlice(that)
    def indexOfSlice[B >: A](that: Seq[B], from: Int): Int = xs.indexOfSlice(that, from)
    def indexWhere(p: A => Boolean, from: Int = 0): Int = xs.indexWhere(p, from)
    def indices: Range = xs.indices
    def init: Repeated[A] = xs.init
    def inits: Iterator[Repeated[A]] = xs.inits
    def intersect[B >: A](that: Seq[B]): Repeated[A] = xs.intersect(that)
    def isEmpty: Boolean = xs.isEmpty
    def isTraversableAgain: Boolean = xs.isTraversableAgain
    def knownSize: Int = xs.length
    def last: A = xs.last
    def lastIndexOf(elem: A, end: Int = xs.length - 1): Int = xs.lastIndexOf(elem, end)
    def lastIndexOfSlice[B >: A](that: Seq[B]): Int = xs.lastIndexOfSlice(that)
    def lastIndexOfSlice[B >: A](that: Seq[B], end: Int): Int = xs.lastIndexOfSlice(that, end)
    def lastIndexWhere(p: A => Boolean, end: Int = xs.length - 1): Int = xs.lastIndexWhere(p, end)
    def lastOption: Option[A] = xs.lastOption
    def lazyZip[B](that: Iterable[B]): LazyZip2[A, B, Repeated[A]] = xs.lazyZip[B](that).asInstanceOf[LazyZip2[A, B, Repeated[A]]]
    def lengthCompare(len: Int): Int = xs.lengthCompare(len)
    def lengthIs: SizeCompareOps = xs.lengthIs
    def map[B](f: A => B): Repeated[B] = xs.map(f)
    def max[B >: A](using math.Ordering[B]): A = xs.max[B]
    def maxBy[B](f: A => B)(using math.Ordering[B]): A = xs.maxBy(f)
    def maxByOption[B](f: A => B)(using math.Ordering[B]): Option[A] = xs.maxByOption(f)
    def maxOption[B >: A](using math.Ordering[B]): Option[B] = xs.maxOption[B]
    def min[B >: A](using math.Ordering[B]): A = xs.min[B]
    def minBy[B](f: A => B)(using math.Ordering[B]): A = xs.minBy(f)
    def minByOption[B](f: A => B)(using math.Ordering[B]): Option[A] = xs.minByOption(f)
    def minOption[B >: A](using math.Ordering[B]): Option[B] = xs.minOption[B]
    def mkString: String = xs.mkString
    def mkString(sep: String): String = xs.mkString(sep)
    def mkString(start: String, sep: String, end: String): String = xs.mkString(start, sep, end)
    def nonEmpty: Boolean = xs.nonEmpty
    def padTo[B >: A](len: Int, elem: B): Repeated[B] = xs.padTo(len, elem)
    def partition(p: A => Boolean): (Repeated[A], Repeated[A]) = xs.partition(p)
    def partitionMap[A1, A2](f: A => Either[A1, A2]): (Repeated[A1], Repeated[A2]) = xs.partitionMap(f)
    def patch[B >: A](from: Int, other: IterableOnce[B], replaced: Int): Repeated[B] = xs.patch(from, other, replaced)
    def permutations: Iterator[Repeated[A]] = xs.permutations
    def prepended[B >: A](x: B): Repeated[B] = xs.prepended(x)
    def prependedAll[B >: A](prefix: IterableOnce[B]): Repeated[B] = xs.prependedAll(prefix)
    def product[B >: A](using math.Numeric[B]): B = xs.product[B]
    def reduce[B >: A](op: (B, B) => B): B = xs.reduce(op)
    def reduceLeft[B >: A](op: (B, A) => B): B = xs.reduceLeft(op)
    def reduceRight[B >: A](op: (A, B) => B): B = xs.reduceRight(op)
    def reverse: Repeated[A] = xs.reverse
    def reverseIterator: Iterator[A] = xs.reverseIterator
    def sameElements[B >: A](that: IterableOnce[B]): Boolean = xs.sameElements(that)
    def scan[B >: A](z: B)(op: (B, B) => B): Repeated[B] = xs.scan(z)(op)
    def scanLeft[B](z: B)(op: (B, A) => B): Repeated[B] = xs.scanLeft(z)(op)
    def scanRight[B](z: B)(op: (A, B) => B): Repeated[B] = xs.scanRight(z)(op)
    def search[B >: A](elem: B)(using Ordering[B]): SearchResult = xs.search(elem)
    def search[B >: A](elem: B, from: Int, to: Int)(using Ordering[B]): SearchResult = xs.search(elem, from, to)
    def segmentLength(p: (A) => Boolean, from: Int): Int = xs.segmentLength(p, from)
    def segmentLength(p: (A) => Boolean): Int = xs.segmentLength(p)
    def size: Int = xs.size
    def sizeCompare(that: Iterable[_]): Int = xs.sizeCompare(that)
    def sizeCompare(otherSize: Int): Int = xs.sizeCompare(otherSize)
    def sizeIs: SizeCompareOps = xs.sizeIs
    def slice(from: Int, until: Int): Repeated[A] = xs.slice(from, until)
    def sliding(size: Int, step: Int = 1): Iterator[Repeated[A]] = xs.sliding(size, step)
    def sortBy[B](f: A => B)(implicit ord: Ordering[B]): Repeated[A] = xs.sortBy(f)
    def sortWith(lt: (A, A) => Boolean): Repeated[A] = xs.sortWith(lt)
    def sorted[B >: A](implicit ord: Ordering[B]): Repeated[A] = xs.sorted[B]
    def span(p: A => Boolean): (Repeated[A], Repeated[A]) = xs.span(p)
    def splitAt(n: Int): (Repeated[A], Repeated[A]) = xs.splitAt(n)
    def startsWith[B >: A](that: IterableOnce[B], offset: Int): Boolean = xs.startsWith(that, offset)
    def stepper[S <: Stepper[_]](using StepperShape[A, S]): S = xs.stepper[S]
    def sum[B >: A](using math.Numeric[B]): B = xs.sum[B]
    def tail: Repeated[A] = xs.tail
    def tails: Iterator[Repeated[A]] = xs.tails
    def take(n: Int): Repeated[A] = xs.take(n)
    def takeRight(n: Int): Repeated[A] = xs.takeRight(n)
    def takeWhile(p: A => Boolean): Repeated[A] = xs.takeWhile(p)
    def tapEach[U](f: (A) => U): Repeated[A] = xs.tapEach(f)
    def to[C1](factory: Factory[A, C1]): C1 = xs.to(factory)
    def toArray[B >: A: ClassTag]: Array[B] = xs.toArray[B]
    def toBuffer[B >: A]: Buffer[B] = xs.toBuffer[B]
    def toIndexedSeq: immutable.IndexedSeq[A] = xs.toIndexedSeq
    def toIterable: Iterable[A] = xs.toIterable
    def toList: List[A] = xs.toList
    def toSeq: Seq[A] = xs.toSeq
    def toSet: Set[A] = xs.toSet
    def toVector: Vector[A] = xs.toVector
    def updated[B >: A](index: Int, elem: B): Repeated[B] = xs.updated(index, elem)
    def view: SeqView[A] = xs.view
    def withFilter(p: A => Boolean): WithFilter[A, Repeated] = xs.withFilter(p)
    def zip[B](that: IterableOnce[B]): Repeated[(A, B)] = xs.zip(that)
    def zipAll[A1 >: A, B](that: Iterable[B], thisElem: A1, thatElem: B): Repeated[(A1, B)] = xs.zipAll(that, thisElem, thatElem)
    def zipWithIndex: Repeated[(A, Int)] = xs.zipWithIndex

  extension [A](xs: Repeated[IterableOnce[A]])
    def flatten: Repeated[A] = xs.flatten

  extension [A](prefix: IterableOnce[A])
    def ++: (xs: Repeated[A]): Repeated[A] = xs.prependedAll(prefix)

  extension [A](x: A)
    def +: (xs: Repeated[A]): Repeated[A] = xs.prepended(x)

  extension [A1, A2](xs: Repeated[(A1, A2)])
    def unzip: (Repeated[A1], Repeated[A2]) = xs.unzip
    def toMap: Map[A1, A2] = xs.toMap

  extension [A1, A2, A3](xs: Repeated[(A1, A2, A3)])
    def unzip3: (Repeated[A1], Repeated[A2], Repeated[A3]) = xs.unzip3

  extension [A](xs: Repeated[Repeated[A]])
    def transpose: Repeated[Repeated[A]] = xs.transpose

  implicit def repeatedToSeq[A](xs: Repeated[A]): Seq[A] = xs.toSeq
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: scala.collection
      CodeReferenceElement: scala
        PsiElement(identifier)('scala')
      PsiElement(.)('.')
      PsiElement(identifier)('collection')
    PsiWhiteSpace('\n')
    ScPackaging
      PsiElement(package)('package')
      PsiWhiteSpace(' ')
      CodeReferenceElement: immutable
        PsiElement(identifier)('immutable')
      PsiWhiteSpace('\n\n')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: scala.collection.Stepper.EfficientSplit
            CodeReferenceElement: scala.collection.Stepper
              CodeReferenceElement: scala.collection
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('collection')
              PsiElement(.)('.')
              PsiElement(identifier)('Stepper')
            PsiElement(.)('.')
            PsiElement(identifier)('EfficientSplit')
      PsiWhiteSpace('\n')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: scala.collection.immutable.Range
            CodeReferenceElement: scala.collection.immutable
              CodeReferenceElement: scala.collection
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('collection')
              PsiElement(.)('.')
              PsiElement(identifier)('immutable')
            PsiElement(.)('.')
            PsiElement(identifier)('Range')
      PsiWhiteSpace('\n')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: scala.collection.mutable.Buffer
            CodeReferenceElement: scala.collection.mutable
              CodeReferenceElement: scala.collection
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('collection')
              PsiElement(.)('.')
              PsiElement(identifier)('mutable')
            PsiElement(.)('.')
            PsiElement(identifier)('Buffer')
      PsiWhiteSpace('\n')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: scala.collection.IterableOps.SizeCompareOps
            CodeReferenceElement: scala.collection.IterableOps
              CodeReferenceElement: scala.collection
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('collection')
              PsiElement(.)('.')
              PsiElement(identifier)('IterableOps')
            PsiElement(.)('.')
            PsiElement(identifier)('SizeCompareOps')
      PsiWhiteSpace('\n')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: scala.collection.Searching.SearchResult
            CodeReferenceElement: scala.collection.Searching
              CodeReferenceElement: scala.collection
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('collection')
              PsiElement(.)('.')
              PsiElement(identifier)('Searching')
            PsiElement(.)('.')
            PsiElement(identifier)('SearchResult')
      PsiWhiteSpace('\n')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: scala.math.Ordering
            CodeReferenceElement: scala.math
              CodeReferenceElement: scala
                PsiElement(identifier)('scala')
              PsiElement(.)('.')
              PsiElement(identifier)('math')
            PsiElement(.)('.')
            PsiElement(identifier)('Ordering')
      PsiWhiteSpace('\n')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: scala.reflect.ClassTag
            CodeReferenceElement: scala.reflect
              CodeReferenceElement: scala
                PsiElement(identifier)('scala')
              PsiElement(.)('.')
              PsiElement(identifier)('reflect')
            PsiElement(.)('.')
            PsiElement(identifier)('ClassTag')
      PsiWhiteSpace('\n')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: scala.util.Sorting
            CodeReferenceElement: scala.util
              CodeReferenceElement: scala
                PsiElement(identifier)('scala')
              PsiElement(.)('.')
              PsiElement(identifier)('util')
            PsiElement(.)('.')
            PsiElement(identifier)('Sorting')
      PsiWhiteSpace('\n')
      ScImportStatement
        PsiElement(import)('import')
        PsiWhiteSpace(' ')
        ImportExpression
          CodeReferenceElement: annotation.targetName
            CodeReferenceElement: annotation
              PsiElement(identifier)('annotation')
            PsiElement(.)('.')
            PsiElement(identifier)('targetName')
      PsiWhiteSpace('\n\n')
      ScTypeAliasDefinition: Repeated
        AnnotationsList
          <empty list>
        Modifiers
          PsiElement(opaque)('opaque')
        PsiWhiteSpace(' ')
        PsiElement(type)('type')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('Repeated')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: A
            PsiElement(identifier)('+')
            PsiElement(identifier)('A')
          PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ParametrizedType: Seq[A]
          SimpleType: Seq
            CodeReferenceElement: Seq
              PsiElement(identifier)('Seq')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
            PsiElement(])(']')
      PsiWhiteSpace('\n')
      ScObject: Repeated
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(object)('object')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('Repeated')
        ExtendsBlock
          ScTemplateBody
            PsiElement(:)(':')
            PsiWhiteSpace('\n\n  ')
            Extension on Repeated[A]
              PsiElement(extension)('extension')
              PsiWhiteSpace(' ')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: xs
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('xs')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScExtensionBody
                ScFunctionDefinition: length
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('length')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.length
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('length')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: apply
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('apply')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: n
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('n')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.apply
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('apply')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: iterator
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('iterator')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterator[A]
                    SimpleType: Iterator
                      CodeReferenceElement: Iterator
                        PsiElement(identifier)('Iterator')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.iterator
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('iterator')
                PsiWhiteSpace('\n\n    ')
                ScFunctionDefinition: ++
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('++')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: suffix
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('suffix')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: IterableOnce[B]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ++
                      PsiElement(identifier)('++')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: suffix
                      PsiElement(identifier)('suffix')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: :+
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)(':+')
                  PsiWhiteSpace(' ')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: x
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('x')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: :+
                      PsiElement(identifier)(':+')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: :++
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)(':++')
                  PsiWhiteSpace(' ')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: suffix
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('suffix')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: IterableOnce[B]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: :++
                      PsiElement(identifier)(':++')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: suffix
                      PsiElement(identifier)('suffix')
                PsiWhiteSpace('\n\n    ')
                ScFunctionDefinition: addString
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('addString')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: b
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('b')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: mutable.StringBuilder
                            CodeReferenceElement: mutable.StringBuilder
                              CodeReferenceElement: mutable
                                PsiElement(identifier)('mutable')
                              PsiElement(.)('.')
                              PsiElement(identifier)('StringBuilder')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: mutable.StringBuilder
                    CodeReferenceElement: mutable.StringBuilder
                      CodeReferenceElement: mutable
                        PsiElement(identifier)('mutable')
                      PsiElement(.)('.')
                      PsiElement(identifier)('StringBuilder')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.addString
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('addString')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: b
                        PsiElement(identifier)('b')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: addString
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('addString')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: b
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('b')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: mutable.StringBuilder
                            CodeReferenceElement: mutable.StringBuilder
                              CodeReferenceElement: mutable
                                PsiElement(identifier)('mutable')
                              PsiElement(.)('.')
                              PsiElement(identifier)('StringBuilder')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: sep
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('sep')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: mutable.StringBuilder
                    CodeReferenceElement: mutable.StringBuilder
                      CodeReferenceElement: mutable
                        PsiElement(identifier)('mutable')
                      PsiElement(.)('.')
                      PsiElement(identifier)('StringBuilder')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.addString
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('addString')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: b
                        PsiElement(identifier)('b')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: sep
                        PsiElement(identifier)('sep')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: addString
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('addString')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: b
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('b')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: mutable.StringBuilder
                            CodeReferenceElement: mutable.StringBuilder
                              CodeReferenceElement: mutable
                                PsiElement(identifier)('mutable')
                              PsiElement(.)('.')
                              PsiElement(identifier)('StringBuilder')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: start
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('start')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: sep
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('sep')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: end
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('end')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: mutable.StringBuilder
                    CodeReferenceElement: mutable.StringBuilder
                      CodeReferenceElement: mutable
                        PsiElement(identifier)('mutable')
                      PsiElement(.)('.')
                      PsiElement(identifier)('StringBuilder')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.addString
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('addString')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: b
                        PsiElement(identifier)('b')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: start
                        PsiElement(identifier)('start')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: sep
                        PsiElement(identifier)('sep')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: end
                        PsiElement(identifier)('end')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: appended
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('appended')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: x
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('x')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.appended
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('appended')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: appendedAll
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('appendedAll')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: suffix
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('suffix')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: IterableOnce[B]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.appendedAll
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('appendedAll')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: suffix
                        PsiElement(identifier)('suffix')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: collect
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('collect')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: pf
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('pf')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: PartialFunction[A, B]
                            SimpleType: PartialFunction
                              CodeReferenceElement: PartialFunction
                                PsiElement(identifier)('PartialFunction')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.collect
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('collect')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: pf
                        PsiElement(identifier)('pf')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: collectFirst
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('collectFirst')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: PartialFunction[A, B]
                            SimpleType: PartialFunction
                              CodeReferenceElement: PartialFunction
                                PsiElement(identifier)('PartialFunction')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Option[B]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.collectFirst
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('collectFirst')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: combinations
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('combinations')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: n
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('n')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterator[Repeated[A]]
                    SimpleType: Iterator
                      CodeReferenceElement: Iterator
                        PsiElement(identifier)('Iterator')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.combinations
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('combinations')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: concat
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('concat')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: suffix
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('suffix')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: IterableOnce[B]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.concat
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('concat')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: suffix
                        PsiElement(identifier)('suffix')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: contains
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('contains')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: elem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('elem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.contains
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('contains')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: elem
                        PsiElement(identifier)('elem')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: containsSlice
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('containsSlice')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Seq[B]
                            SimpleType: Seq
                              CodeReferenceElement: Seq
                                PsiElement(identifier)('Seq')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.containsSlice
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('containsSlice')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: copyToArray
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('copyToArray')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: ys
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('ys')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Array[B]
                            SimpleType: Array
                              CodeReferenceElement: Array
                                PsiElement(identifier)('Array')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.copyToArray
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('copyToArray')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: ys
                        PsiElement(identifier)('ys')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: copyToArray
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('copyToArray')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: ys
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('ys')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Array[B]
                            SimpleType: Array
                              CodeReferenceElement: Array
                                PsiElement(identifier)('Array')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: start
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('start')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.copyToArray
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('copyToArray')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: ys
                        PsiElement(identifier)('ys')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: start
                        PsiElement(identifier)('start')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: copyToArray
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('copyToArray')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: ys
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('ys')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Array[B]
                            SimpleType: Array
                              CodeReferenceElement: Array
                                PsiElement(identifier)('Array')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: start
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('start')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: len
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('len')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.copyToArray
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('copyToArray')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: ys
                        PsiElement(identifier)('ys')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: start
                        PsiElement(identifier)('start')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: len
                        PsiElement(identifier)('len')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: corresponds
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('corresponds')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: IterableOnce[B]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A, B) => Boolean
                            TupleType: (A, B)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    MethodCall
                      ReferenceExpression: xs.corresponds
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('corresponds')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: that
                          PsiElement(identifier)('that')
                        PsiElement())(')')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: count
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('count')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.count
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('count')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: diff
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('diff')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Seq[B]
                            SimpleType: Seq
                              CodeReferenceElement: Seq
                                PsiElement(identifier)('Seq')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.diff
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('diff')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: distinct
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('distinct')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.distinct
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('distinct')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: distinctBy
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('distinctBy')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => B
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.distinctBy
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('distinctBy')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: drop
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('drop')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: n
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('n')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.drop
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('drop')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: dropRight
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('dropRight')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: n
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('n')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.dropRight
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('dropRight')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: dropWhile
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('dropWhile')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.dropWhile
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('dropWhile')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: empty
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('empty')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.empty
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('empty')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: endsWith
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('endsWith')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Iterable[B]
                            SimpleType: Iterable
                              CodeReferenceElement: Iterable
                                PsiElement(identifier)('Iterable')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.endsWith
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('endsWith')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: exists
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('exists')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.exists
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('exists')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: filter
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('filter')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.filter
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('filter')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: filterNot
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('filterNot')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.filterNot
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('filterNot')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: find
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('find')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Option[A]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.find
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('find')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: findLast
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('findLast')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Option[A]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.findLast
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('findLast')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: flatMap
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('flatMap')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => IterableOnce[B]
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            ParametrizedType: IterableOnce[B]
                              SimpleType: IterableOnce
                                CodeReferenceElement: IterableOnce
                                  PsiElement(identifier)('IterableOnce')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.flatMap
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('flatMap')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: fold
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('fold')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: A1
                      PsiElement(identifier)('A1')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: z
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('z')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: A1
                            CodeReferenceElement: A1
                              PsiElement(identifier)('A1')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: op
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('op')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A1, A1) => A1
                            TupleType: (A1, A1)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: A1
                                  CodeReferenceElement: A1
                                    PsiElement(identifier)('A1')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: A1
                                  CodeReferenceElement: A1
                                    PsiElement(identifier)('A1')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: A1
                              CodeReferenceElement: A1
                                PsiElement(identifier)('A1')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: A1
                    CodeReferenceElement: A1
                      PsiElement(identifier)('A1')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    MethodCall
                      ReferenceExpression: xs.fold
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('fold')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: z
                          PsiElement(identifier)('z')
                        PsiElement())(')')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: op
                        PsiElement(identifier)('op')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: foldLeft
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('foldLeft')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: z
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('z')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: op
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('op')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (B, A) => B
                            TupleType: (B, A)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    MethodCall
                      ReferenceExpression: xs.foldLeft
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('foldLeft')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: z
                          PsiElement(identifier)('z')
                        PsiElement())(')')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: op
                        PsiElement(identifier)('op')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: foldRight
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('foldRight')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: z
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('z')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: op
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('op')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A, B) => B
                            TupleType: (A, B)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    MethodCall
                      ReferenceExpression: xs.foldRight
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('foldRight')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: z
                          PsiElement(identifier)('z')
                        PsiElement())(')')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: op
                        PsiElement(identifier)('op')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: forall
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('forall')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.forall
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('forall')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: foreach
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('foreach')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: U
                      PsiElement(identifier)('U')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => U
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: U
                              CodeReferenceElement: U
                                PsiElement(identifier)('U')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Unit
                    CodeReferenceElement: Unit
                      PsiElement(identifier)('Unit')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.foreach
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('foreach')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: groupBy
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('groupBy')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: K
                      PsiElement(identifier)('K')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => K
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: K
                              CodeReferenceElement: K
                                PsiElement(identifier)('K')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: immutable.Map[K, Repeated[A]]
                    SimpleType: immutable.Map
                      CodeReferenceElement: immutable.Map
                        CodeReferenceElement: immutable
                          PsiElement(identifier)('immutable')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Map')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: K
                        CodeReferenceElement: K
                          PsiElement(identifier)('K')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.groupBy
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('groupBy')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: groupMap
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('groupMap')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: K
                      PsiElement(identifier)('K')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: key
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('key')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => K
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: K
                              CodeReferenceElement: K
                                PsiElement(identifier)('K')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => B
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: immutable.Map[K, Repeated[B]]
                    SimpleType: immutable.Map
                      CodeReferenceElement: immutable.Map
                        CodeReferenceElement: immutable
                          PsiElement(identifier)('immutable')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Map')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: K
                        CodeReferenceElement: K
                          PsiElement(identifier)('K')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Repeated[B]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    MethodCall
                      ReferenceExpression: xs.groupMap
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('groupMap')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: key
                          PsiElement(identifier)('key')
                        PsiElement())(')')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: groupMapReduce
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('groupMapReduce')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: K
                      PsiElement(identifier)('K')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: key
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('key')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A) => K
                            TypeInParenthesis: (A)
                              PsiElement(()('(')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: K
                              CodeReferenceElement: K
                                PsiElement(identifier)('K')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A) => B
                            TypeInParenthesis: (A)
                              PsiElement(()('(')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: reduce
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('reduce')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (B, B) => B
                            TupleType: (B, B)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: immutable.Map[K, B]
                    SimpleType: immutable.Map
                      CodeReferenceElement: immutable.Map
                        CodeReferenceElement: immutable
                          PsiElement(identifier)('immutable')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Map')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: K
                        CodeReferenceElement: K
                          PsiElement(identifier)('K')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    MethodCall
                      MethodCall
                        ReferenceExpression: xs.groupMapReduce
                          ReferenceExpression: xs
                            PsiElement(identifier)('xs')
                          PsiElement(.)('.')
                          PsiElement(identifier)('groupMapReduce')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: key
                            PsiElement(identifier)('key')
                          PsiElement())(')')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: f
                          PsiElement(identifier)('f')
                        PsiElement())(')')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: reduce
                        PsiElement(identifier)('reduce')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: grouped
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('grouped')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: size
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('size')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterator[Repeated[A]]
                    SimpleType: Iterator
                      CodeReferenceElement: Iterator
                        PsiElement(identifier)('Iterator')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.grouped
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('grouped')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: size
                        PsiElement(identifier)('size')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: head
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('head')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.head
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('head')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: headOption
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('headOption')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Option[A]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.headOption
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('headOption')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: indexOf
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('indexOf')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: elem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('elem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: from
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('from')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.indexOf
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('indexOf')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: elem
                        PsiElement(identifier)('elem')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: from
                        PsiElement(identifier)('from')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: indexOfSlice
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('indexOfSlice')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Seq[B]
                            SimpleType: Seq
                              CodeReferenceElement: Seq
                                PsiElement(identifier)('Seq')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.indexOfSlice
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('indexOfSlice')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: indexOfSlice
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('indexOfSlice')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Seq[B]
                            SimpleType: Seq
                              CodeReferenceElement: Seq
                                PsiElement(identifier)('Seq')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: from
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('from')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.indexOfSlice
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('indexOfSlice')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: from
                        PsiElement(identifier)('from')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: indexWhere
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('indexWhere')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: from
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('from')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('0')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.indexWhere
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('indexWhere')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: from
                        PsiElement(identifier)('from')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: indices
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('indices')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Range
                    CodeReferenceElement: Range
                      PsiElement(identifier)('Range')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.indices
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('indices')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: init
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('init')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.init
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('init')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: inits
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('inits')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterator[Repeated[A]]
                    SimpleType: Iterator
                      CodeReferenceElement: Iterator
                        PsiElement(identifier)('Iterator')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.inits
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('inits')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: intersect
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('intersect')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Seq[B]
                            SimpleType: Seq
                              CodeReferenceElement: Seq
                                PsiElement(identifier)('Seq')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.intersect
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('intersect')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: isEmpty
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('isEmpty')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.isEmpty
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('isEmpty')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: isTraversableAgain
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('isTraversableAgain')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.isTraversableAgain
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('isTraversableAgain')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: knownSize
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('knownSize')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.length
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('length')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: last
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('last')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.last
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('last')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: lastIndexOf
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('lastIndexOf')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: elem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('elem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: end
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('end')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        InfixExpression
                          ReferenceExpression: xs.length
                            ReferenceExpression: xs
                              PsiElement(identifier)('xs')
                            PsiElement(.)('.')
                            PsiElement(identifier)('length')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: -
                            PsiElement(identifier)('-')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('1')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.lastIndexOf
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('lastIndexOf')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: elem
                        PsiElement(identifier)('elem')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: end
                        PsiElement(identifier)('end')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: lastIndexOfSlice
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('lastIndexOfSlice')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Seq[B]
                            SimpleType: Seq
                              CodeReferenceElement: Seq
                                PsiElement(identifier)('Seq')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.lastIndexOfSlice
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('lastIndexOfSlice')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: lastIndexOfSlice
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('lastIndexOfSlice')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Seq[B]
                            SimpleType: Seq
                              CodeReferenceElement: Seq
                                PsiElement(identifier)('Seq')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: end
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('end')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.lastIndexOfSlice
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('lastIndexOfSlice')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: end
                        PsiElement(identifier)('end')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: lastIndexWhere
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('lastIndexWhere')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: end
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('end')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        InfixExpression
                          ReferenceExpression: xs.length
                            ReferenceExpression: xs
                              PsiElement(identifier)('xs')
                            PsiElement(.)('.')
                            PsiElement(identifier)('length')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: -
                            PsiElement(identifier)('-')
                          PsiWhiteSpace(' ')
                          IntegerLiteral
                            PsiElement(integer)('1')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.lastIndexWhere
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('lastIndexWhere')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: end
                        PsiElement(identifier)('end')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: lastOption
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('lastOption')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Option[A]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.lastOption
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('lastOption')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: lazyZip
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('lazyZip')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Iterable[B]
                            SimpleType: Iterable
                              CodeReferenceElement: Iterable
                                PsiElement(identifier)('Iterable')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: LazyZip2[A, B, Repeated[A]]
                    SimpleType: LazyZip2
                      CodeReferenceElement: LazyZip2
                        PsiElement(identifier)('LazyZip2')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.lazyZip[B](that).asInstanceOf
                      MethodCall
                        GenericCall
                          ReferenceExpression: xs.lazyZip
                            ReferenceExpression: xs
                              PsiElement(identifier)('xs')
                            PsiElement(.)('.')
                            PsiElement(identifier)('lazyZip')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(])(']')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: that
                            PsiElement(identifier)('that')
                          PsiElement())(')')
                      PsiElement(.)('.')
                      PsiElement(identifier)('asInstanceOf')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: LazyZip2[A, B, Repeated[A]]
                        SimpleType: LazyZip2
                          CodeReferenceElement: LazyZip2
                            PsiElement(identifier)('LazyZip2')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ParametrizedType: Repeated[A]
                            SimpleType: Repeated
                              CodeReferenceElement: Repeated
                                PsiElement(identifier)('Repeated')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                          PsiElement(])(']')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: lengthCompare
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('lengthCompare')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: len
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('len')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.lengthCompare
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('lengthCompare')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: len
                        PsiElement(identifier)('len')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: lengthIs
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('lengthIs')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: SizeCompareOps
                    CodeReferenceElement: SizeCompareOps
                      PsiElement(identifier)('SizeCompareOps')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.lengthIs
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('lengthIs')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: map
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('map')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => B
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.map
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('map')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: max
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('max')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: math.Ordering[B]
                            SimpleType: math.Ordering
                              CodeReferenceElement: math.Ordering
                                CodeReferenceElement: math
                                  PsiElement(identifier)('math')
                                PsiElement(.)('.')
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.max
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('max')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: maxBy
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('maxBy')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => B
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: math.Ordering[B]
                            SimpleType: math.Ordering
                              CodeReferenceElement: math.Ordering
                                CodeReferenceElement: math
                                  PsiElement(identifier)('math')
                                PsiElement(.)('.')
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.maxBy
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('maxBy')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: maxByOption
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('maxByOption')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => B
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: math.Ordering[B]
                            SimpleType: math.Ordering
                              CodeReferenceElement: math.Ordering
                                CodeReferenceElement: math
                                  PsiElement(identifier)('math')
                                PsiElement(.)('.')
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Option[A]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.maxByOption
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('maxByOption')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: maxOption
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('maxOption')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: math.Ordering[B]
                            SimpleType: math.Ordering
                              CodeReferenceElement: math.Ordering
                                CodeReferenceElement: math
                                  PsiElement(identifier)('math')
                                PsiElement(.)('.')
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Option[B]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.maxOption
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('maxOption')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: min
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('min')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: math.Ordering[B]
                            SimpleType: math.Ordering
                              CodeReferenceElement: math.Ordering
                                CodeReferenceElement: math
                                  PsiElement(identifier)('math')
                                PsiElement(.)('.')
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.min
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('min')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: minBy
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('minBy')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => B
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: math.Ordering[B]
                            SimpleType: math.Ordering
                              CodeReferenceElement: math.Ordering
                                CodeReferenceElement: math
                                  PsiElement(identifier)('math')
                                PsiElement(.)('.')
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.minBy
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('minBy')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: minByOption
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('minByOption')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => B
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: math.Ordering[B]
                            SimpleType: math.Ordering
                              CodeReferenceElement: math.Ordering
                                CodeReferenceElement: math
                                  PsiElement(identifier)('math')
                                PsiElement(.)('.')
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Option[A]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.minByOption
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('minByOption')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: minOption
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('minOption')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: math.Ordering[B]
                            SimpleType: math.Ordering
                              CodeReferenceElement: math.Ordering
                                CodeReferenceElement: math
                                  PsiElement(identifier)('math')
                                PsiElement(.)('.')
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Option[B]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.minOption
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('minOption')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: mkString
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('mkString')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.mkString
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('mkString')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: mkString
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('mkString')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: sep
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('sep')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.mkString
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('mkString')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: sep
                        PsiElement(identifier)('sep')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: mkString
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('mkString')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: start
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('start')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: sep
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('sep')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: end
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('end')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.mkString
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('mkString')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: start
                        PsiElement(identifier)('start')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: sep
                        PsiElement(identifier)('sep')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: end
                        PsiElement(identifier)('end')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: nonEmpty
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('nonEmpty')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.nonEmpty
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('nonEmpty')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: padTo
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('padTo')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: len
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('len')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: elem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('elem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.padTo
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('padTo')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: len
                        PsiElement(identifier)('len')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: elem
                        PsiElement(identifier)('elem')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: partition
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('partition')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TupleType: (Repeated[A], Repeated[A])
                    PsiElement(()('(')
                    TypesList
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.partition
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('partition')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: partitionMap
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('partitionMap')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: A1
                      PsiElement(identifier)('A1')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: A2
                      PsiElement(identifier)('A2')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Either[A1, A2]
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            ParametrizedType: Either[A1, A2]
                              SimpleType: Either
                                CodeReferenceElement: Either
                                  PsiElement(identifier)('Either')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A1
                                  CodeReferenceElement: A1
                                    PsiElement(identifier)('A1')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: A2
                                  CodeReferenceElement: A2
                                    PsiElement(identifier)('A2')
                                PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TupleType: (Repeated[A1], Repeated[A2])
                    PsiElement(()('(')
                    TypesList
                      ParametrizedType: Repeated[A1]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A1
                            CodeReferenceElement: A1
                              PsiElement(identifier)('A1')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Repeated[A2]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A2
                            CodeReferenceElement: A2
                              PsiElement(identifier)('A2')
                          PsiElement(])(']')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.partitionMap
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('partitionMap')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: patch
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('patch')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: from
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('from')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: other
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('other')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: IterableOnce[B]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: replaced
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('replaced')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.patch
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('patch')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: from
                        PsiElement(identifier)('from')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: other
                        PsiElement(identifier)('other')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: replaced
                        PsiElement(identifier)('replaced')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: permutations
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('permutations')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterator[Repeated[A]]
                    SimpleType: Iterator
                      CodeReferenceElement: Iterator
                        PsiElement(identifier)('Iterator')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.permutations
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('permutations')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: prepended
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('prepended')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: x
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('x')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.prepended
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('prepended')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: prependedAll
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('prependedAll')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: prefix
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('prefix')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: IterableOnce[B]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.prependedAll
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('prependedAll')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: prefix
                        PsiElement(identifier)('prefix')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: product
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('product')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: math.Numeric[B]
                            SimpleType: math.Numeric
                              CodeReferenceElement: math.Numeric
                                CodeReferenceElement: math
                                  PsiElement(identifier)('math')
                                PsiElement(.)('.')
                                PsiElement(identifier)('Numeric')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.product
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('product')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: reduce
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('reduce')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: op
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('op')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (B, B) => B
                            TupleType: (B, B)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.reduce
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('reduce')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: op
                        PsiElement(identifier)('op')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: reduceLeft
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('reduceLeft')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: op
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('op')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (B, A) => B
                            TupleType: (B, A)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.reduceLeft
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('reduceLeft')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: op
                        PsiElement(identifier)('op')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: reduceRight
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('reduceRight')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: op
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('op')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A, B) => B
                            TupleType: (A, B)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.reduceRight
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('reduceRight')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: op
                        PsiElement(identifier)('op')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: reverse
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('reverse')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.reverse
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('reverse')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: reverseIterator
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('reverseIterator')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterator[A]
                    SimpleType: Iterator
                      CodeReferenceElement: Iterator
                        PsiElement(identifier)('Iterator')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.reverseIterator
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('reverseIterator')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: sameElements
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('sameElements')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: IterableOnce[B]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.sameElements
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('sameElements')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: scan
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('scan')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: z
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('z')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: op
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('op')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (B, B) => B
                            TupleType: (B, B)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    MethodCall
                      ReferenceExpression: xs.scan
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('scan')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: z
                          PsiElement(identifier)('z')
                        PsiElement())(')')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: op
                        PsiElement(identifier)('op')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: scanLeft
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('scanLeft')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: z
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('z')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: op
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('op')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (B, A) => B
                            TupleType: (B, A)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    MethodCall
                      ReferenceExpression: xs.scanLeft
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('scanLeft')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: z
                          PsiElement(identifier)('z')
                        PsiElement())(')')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: op
                        PsiElement(identifier)('op')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: scanRight
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('scanRight')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: z
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('z')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: op
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('op')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A, B) => B
                            TupleType: (A, B)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    MethodCall
                      ReferenceExpression: xs.scanRight
                        ReferenceExpression: xs
                          PsiElement(identifier)('xs')
                        PsiElement(.)('.')
                        PsiElement(identifier)('scanRight')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: z
                          PsiElement(identifier)('z')
                        PsiElement())(')')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: op
                        PsiElement(identifier)('op')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: search
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('search')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: elem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('elem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: Ordering[B]
                            SimpleType: Ordering
                              CodeReferenceElement: Ordering
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: SearchResult
                    CodeReferenceElement: SearchResult
                      PsiElement(identifier)('SearchResult')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.search
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('search')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: elem
                        PsiElement(identifier)('elem')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: search
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('search')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: elem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('elem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: from
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('from')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: to
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('to')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: Ordering[B]
                            SimpleType: Ordering
                              CodeReferenceElement: Ordering
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: SearchResult
                    CodeReferenceElement: SearchResult
                      PsiElement(identifier)('SearchResult')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.search
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('search')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: elem
                        PsiElement(identifier)('elem')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: from
                        PsiElement(identifier)('from')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: to
                        PsiElement(identifier)('to')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: segmentLength
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('segmentLength')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A) => Boolean
                            TypeInParenthesis: (A)
                              PsiElement(()('(')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: from
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('from')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.segmentLength
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('segmentLength')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: from
                        PsiElement(identifier)('from')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: segmentLength
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('segmentLength')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A) => Boolean
                            TypeInParenthesis: (A)
                              PsiElement(()('(')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.segmentLength
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('segmentLength')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: size
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('size')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.size
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('size')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: sizeCompare
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('sizeCompare')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Iterable[_]
                            SimpleType: Iterable
                              CodeReferenceElement: Iterable
                                PsiElement(identifier)('Iterable')
                            TypeArgumentsList
                              PsiElement([)('[')
                              WildcardType: _
                                PsiElement(_)('_')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.sizeCompare
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('sizeCompare')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: sizeCompare
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('sizeCompare')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: otherSize
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('otherSize')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.sizeCompare
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('sizeCompare')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: otherSize
                        PsiElement(identifier)('otherSize')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: sizeIs
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('sizeIs')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: SizeCompareOps
                    CodeReferenceElement: SizeCompareOps
                      PsiElement(identifier)('SizeCompareOps')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.sizeIs
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('sizeIs')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: slice
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('slice')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: from
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('from')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: until
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('until')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.slice
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('slice')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: from
                        PsiElement(identifier)('from')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: until
                        PsiElement(identifier)('until')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: sliding
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('sliding')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: size
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('size')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: step
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('step')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        IntegerLiteral
                          PsiElement(integer)('1')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterator[Repeated[A]]
                    SimpleType: Iterator
                      CodeReferenceElement: Iterator
                        PsiElement(identifier)('Iterator')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.sliding
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('sliding')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: size
                        PsiElement(identifier)('size')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: step
                        PsiElement(identifier)('step')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: sortBy
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('sortBy')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => B
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement())(')')
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(implicit)('implicit')
                      PsiWhiteSpace(' ')
                      Parameter: ord
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('ord')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Ordering[B]
                            SimpleType: Ordering
                              CodeReferenceElement: Ordering
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.sortBy
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('sortBy')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: sortWith
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('sortWith')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: lt
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('lt')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A, A) => Boolean
                            TupleType: (A, A)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.sortWith
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('sortWith')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: lt
                        PsiElement(identifier)('lt')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: sorted
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('sorted')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(implicit)('implicit')
                      PsiWhiteSpace(' ')
                      Parameter: ord
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('ord')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Ordering[B]
                            SimpleType: Ordering
                              CodeReferenceElement: Ordering
                                PsiElement(identifier)('Ordering')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.sorted
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('sorted')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: span
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('span')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TupleType: (Repeated[A], Repeated[A])
                    PsiElement(()('(')
                    TypesList
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.span
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('span')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: splitAt
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('splitAt')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: n
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('n')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TupleType: (Repeated[A], Repeated[A])
                    PsiElement(()('(')
                    TypesList
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.splitAt
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('splitAt')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: startsWith
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('startsWith')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: IterableOnce[B]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: offset
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('offset')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.startsWith
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('startsWith')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: offset
                        PsiElement(identifier)('offset')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: stepper
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('stepper')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: S
                      PsiElement(identifier)('S')
                      PsiWhiteSpace(' ')
                      PsiElement(<:)('<:')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Stepper[_]
                        SimpleType: Stepper
                          CodeReferenceElement: Stepper
                            PsiElement(identifier)('Stepper')
                        TypeArgumentsList
                          PsiElement([)('[')
                          WildcardType: _
                            PsiElement(_)('_')
                          PsiElement(])(']')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: StepperShape[A, S]
                            SimpleType: StepperShape
                              CodeReferenceElement: StepperShape
                                PsiElement(identifier)('StepperShape')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: S
                                CodeReferenceElement: S
                                  PsiElement(identifier)('S')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: S
                    CodeReferenceElement: S
                      PsiElement(identifier)('S')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.stepper
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('stepper')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: S
                        CodeReferenceElement: S
                          PsiElement(identifier)('S')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: sum
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('sum')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      PsiElement(using)('using')
                      PsiWhiteSpace(' ')
                      Parameter: <anonymous>
                        ParameterType
                          ParametrizedType: math.Numeric[B]
                            SimpleType: math.Numeric
                              CodeReferenceElement: math.Numeric
                                CodeReferenceElement: math
                                  PsiElement(identifier)('math')
                                PsiElement(.)('.')
                                PsiElement(identifier)('Numeric')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.sum
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('sum')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: tail
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('tail')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.tail
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('tail')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: tails
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('tails')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterator[Repeated[A]]
                    SimpleType: Iterator
                      CodeReferenceElement: Iterator
                        PsiElement(identifier)('Iterator')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.tails
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('tails')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: take
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('take')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: n
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('n')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.take
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('take')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: takeRight
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('takeRight')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: n
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('n')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.takeRight
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('takeRight')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: n
                        PsiElement(identifier)('n')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: takeWhile
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('takeWhile')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.takeWhile
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('takeWhile')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: tapEach
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('tapEach')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: U
                      PsiElement(identifier)('U')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: f
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('f')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: (A) => U
                            TypeInParenthesis: (A)
                              PsiElement(()('(')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: U
                              CodeReferenceElement: U
                                PsiElement(identifier)('U')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.tapEach
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('tapEach')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: to
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('to')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: C1
                      PsiElement(identifier)('C1')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: factory
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('factory')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Factory[A, C1]
                            SimpleType: Factory
                              CodeReferenceElement: Factory
                                PsiElement(identifier)('Factory')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: C1
                                CodeReferenceElement: C1
                                  PsiElement(identifier)('C1')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: C1
                    CodeReferenceElement: C1
                      PsiElement(identifier)('C1')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.to
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('to')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: factory
                        PsiElement(identifier)('factory')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: toArray
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('toArray')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: ClassTag
                        CodeReferenceElement: ClassTag
                          PsiElement(identifier)('ClassTag')
                    PsiElement(])(']')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Array[B]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.toArray
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('toArray')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: toBuffer
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('toBuffer')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Buffer[B]
                    SimpleType: Buffer
                      CodeReferenceElement: Buffer
                        PsiElement(identifier)('Buffer')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: xs.toBuffer
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('toBuffer')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: toIndexedSeq
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('toIndexedSeq')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: immutable.IndexedSeq[A]
                    SimpleType: immutable.IndexedSeq
                      CodeReferenceElement: immutable.IndexedSeq
                        CodeReferenceElement: immutable
                          PsiElement(identifier)('immutable')
                        PsiElement(.)('.')
                        PsiElement(identifier)('IndexedSeq')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.toIndexedSeq
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toIndexedSeq')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: toIterable
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('toIterable')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Iterable[A]
                    SimpleType: Iterable
                      CodeReferenceElement: Iterable
                        PsiElement(identifier)('Iterable')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.toIterable
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toIterable')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: toList
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('toList')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: List[A]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.toList
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toList')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: toSeq
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('toSeq')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Seq[A]
                    SimpleType: Seq
                      CodeReferenceElement: Seq
                        PsiElement(identifier)('Seq')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.toSeq
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toSeq')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: toSet
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('toSet')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Set[A]
                    SimpleType: Set
                      CodeReferenceElement: Set
                        PsiElement(identifier)('Set')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.toSet
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toSet')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: toVector
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('toVector')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Vector[A]
                    SimpleType: Vector
                      CodeReferenceElement: Vector
                        PsiElement(identifier)('Vector')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.toVector
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toVector')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: updated
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('updated')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: index
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('index')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: elem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('elem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[B]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.updated
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('updated')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: index
                        PsiElement(identifier)('index')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: elem
                        PsiElement(identifier)('elem')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: view
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('view')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: SeqView[A]
                    SimpleType: SeqView
                      CodeReferenceElement: SeqView
                        PsiElement(identifier)('SeqView')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.view
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('view')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: withFilter
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('withFilter')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: p
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('p')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          FunctionalType: A => Boolean
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Boolean
                              CodeReferenceElement: Boolean
                                PsiElement(identifier)('Boolean')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: WithFilter[A, Repeated]
                    SimpleType: WithFilter
                      CodeReferenceElement: WithFilter
                        PsiElement(identifier)('WithFilter')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Repeated
                        CodeReferenceElement: Repeated
                          PsiElement(identifier)('Repeated')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.withFilter
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('withFilter')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: p
                        PsiElement(identifier)('p')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: zip
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('zip')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: IterableOnce[B]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[(A, B)]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      TupleType: (A, B)
                        PsiElement(()('(')
                        TypesList
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                        PsiElement())(')')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.zip
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('zip')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: zipAll
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('zipAll')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: A1
                      PsiElement(identifier)('A1')
                      PsiWhiteSpace(' ')
                      PsiElement(>:)('>:')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: that
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('that')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Iterable[B]
                            SimpleType: Iterable
                              CodeReferenceElement: Iterable
                                PsiElement(identifier)('Iterable')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: thisElem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('thisElem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: A1
                            CodeReferenceElement: A1
                              PsiElement(identifier)('A1')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: thatElem
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('thatElem')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[(A1, B)]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      TupleType: (A1, B)
                        PsiElement(()('(')
                        TypesList
                          SimpleType: A1
                            CodeReferenceElement: A1
                              PsiElement(identifier)('A1')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                        PsiElement())(')')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.zipAll
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('zipAll')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: that
                        PsiElement(identifier)('that')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: thisElem
                        PsiElement(identifier)('thisElem')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: thatElem
                        PsiElement(identifier)('thatElem')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: zipWithIndex
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('zipWithIndex')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[(A, Int)]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      TupleType: (A, Int)
                        PsiElement(()('(')
                        TypesList
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                        PsiElement())(')')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.zipWithIndex
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('zipWithIndex')
            PsiWhiteSpace('\n\n  ')
            Extension on Repeated[IterableOnce[A]]
              PsiElement(extension)('extension')
              PsiWhiteSpace(' ')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: xs
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('xs')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Repeated[IterableOnce[A]]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          ParametrizedType: IterableOnce[A]
                            SimpleType: IterableOnce
                              CodeReferenceElement: IterableOnce
                                PsiElement(identifier)('IterableOnce')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScExtensionBody
                ScFunctionDefinition: flatten
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('flatten')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.flatten
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('flatten')
            PsiWhiteSpace('\n\n  ')
            Extension on IterableOnce[A]
              PsiElement(extension)('extension')
              PsiWhiteSpace(' ')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: prefix
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('prefix')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: IterableOnce[A]
                        SimpleType: IterableOnce
                          CodeReferenceElement: IterableOnce
                            PsiElement(identifier)('IterableOnce')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScExtensionBody
                ScFunctionDefinition: ++:
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('++:')
                  PsiWhiteSpace(' ')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: xs
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('xs')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Repeated[A]
                            SimpleType: Repeated
                              CodeReferenceElement: Repeated
                                PsiElement(identifier)('Repeated')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.prependedAll
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('prependedAll')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: prefix
                        PsiElement(identifier)('prefix')
                      PsiElement())(')')
            PsiWhiteSpace('\n\n  ')
            Extension on A
              PsiElement(extension)('extension')
              PsiWhiteSpace(' ')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: x
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('x')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                  PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScExtensionBody
                ScFunctionDefinition: +:
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('+:')
                  PsiWhiteSpace(' ')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: xs
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('xs')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          ParametrizedType: Repeated[A]
                            SimpleType: Repeated
                              CodeReferenceElement: Repeated
                                PsiElement(identifier)('Repeated')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[A]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: xs.prepended
                      ReferenceExpression: xs
                        PsiElement(identifier)('xs')
                      PsiElement(.)('.')
                      PsiElement(identifier)('prepended')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                      PsiElement())(')')
            PsiWhiteSpace('\n\n  ')
            Extension on Repeated[(A1, A2)]
              PsiElement(extension)('extension')
              PsiWhiteSpace(' ')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A1
                  PsiElement(identifier)('A1')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                TypeParameter: A2
                  PsiElement(identifier)('A2')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: xs
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('xs')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Repeated[(A1, A2)]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          TupleType: (A1, A2)
                            PsiElement(()('(')
                            TypesList
                              SimpleType: A1
                                CodeReferenceElement: A1
                                  PsiElement(identifier)('A1')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: A2
                                CodeReferenceElement: A2
                                  PsiElement(identifier)('A2')
                            PsiElement())(')')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScExtensionBody
                ScFunctionDefinition: unzip
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('unzip')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TupleType: (Repeated[A1], Repeated[A2])
                    PsiElement(()('(')
                    TypesList
                      ParametrizedType: Repeated[A1]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A1
                            CodeReferenceElement: A1
                              PsiElement(identifier)('A1')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Repeated[A2]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A2
                            CodeReferenceElement: A2
                              PsiElement(identifier)('A2')
                          PsiElement(])(']')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.unzip
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('unzip')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: toMap
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('toMap')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Map[A1, A2]
                    SimpleType: Map
                      CodeReferenceElement: Map
                        PsiElement(identifier)('Map')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A1
                        CodeReferenceElement: A1
                          PsiElement(identifier)('A1')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: A2
                        CodeReferenceElement: A2
                          PsiElement(identifier)('A2')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.toMap
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toMap')
            PsiWhiteSpace('\n\n  ')
            Extension on Repeated[(A1, A2, A3)]
              PsiElement(extension)('extension')
              PsiWhiteSpace(' ')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A1
                  PsiElement(identifier)('A1')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                TypeParameter: A2
                  PsiElement(identifier)('A2')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                TypeParameter: A3
                  PsiElement(identifier)('A3')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: xs
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('xs')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Repeated[(A1, A2, A3)]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          TupleType: (A1, A2, A3)
                            PsiElement(()('(')
                            TypesList
                              SimpleType: A1
                                CodeReferenceElement: A1
                                  PsiElement(identifier)('A1')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: A2
                                CodeReferenceElement: A2
                                  PsiElement(identifier)('A2')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: A3
                                CodeReferenceElement: A3
                                  PsiElement(identifier)('A3')
                            PsiElement())(')')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScExtensionBody
                ScFunctionDefinition: unzip3
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('unzip3')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TupleType: (Repeated[A1], Repeated[A2], Repeated[A3])
                    PsiElement(()('(')
                    TypesList
                      ParametrizedType: Repeated[A1]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A1
                            CodeReferenceElement: A1
                              PsiElement(identifier)('A1')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Repeated[A2]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A2
                            CodeReferenceElement: A2
                              PsiElement(identifier)('A2')
                          PsiElement(])(']')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Repeated[A3]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A3
                            CodeReferenceElement: A3
                              PsiElement(identifier)('A3')
                          PsiElement(])(']')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.unzip3
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('unzip3')
            PsiWhiteSpace('\n\n  ')
            Extension on Repeated[Repeated[A]]
              PsiElement(extension)('extension')
              PsiWhiteSpace(' ')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: xs
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('xs')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Repeated[Repeated[A]]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          ParametrizedType: Repeated[A]
                            SimpleType: Repeated
                              CodeReferenceElement: Repeated
                                PsiElement(identifier)('Repeated')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScExtensionBody
                ScFunctionDefinition: transpose
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('transpose')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Repeated[Repeated[A]]
                    SimpleType: Repeated
                      CodeReferenceElement: Repeated
                        PsiElement(identifier)('Repeated')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: xs.transpose
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement(.)('.')
                    PsiElement(identifier)('transpose')
            PsiWhiteSpace('\n\n  ')
            ScFunctionDefinition: repeatedToSeq
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('repeatedToSeq')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: A
                  PsiElement(identifier)('A')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: xs
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('xs')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Repeated[A]
                        SimpleType: Repeated
                          CodeReferenceElement: Repeated
                            PsiElement(identifier)('Repeated')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: Seq[A]
                SimpleType: Seq
                  CodeReferenceElement: Seq
                    PsiElement(identifier)('Seq')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: xs.toSeq
                ReferenceExpression: xs
                  PsiElement(identifier)('xs')
                PsiElement(.)('.')
                PsiElement(identifier)('toSeq')
