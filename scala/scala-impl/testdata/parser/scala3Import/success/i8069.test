class A {
  class B
}

class C(val a: A, val b: a.B)

@main def Test =
  val a = A()
  val b = a.B()
  val c = C(a, b)
  val d = c.b
  val d1: c.a.B = d
-----
ScalaFile
  ScClass: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: B
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('B')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: C
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('C')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: a
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('a')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: b
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('b')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: a.B
                CodeReferenceElement: a.B
                  CodeReferenceElement: a
                    PsiElement(identifier)('a')
                  PsiElement(.)('.')
                  PsiElement(identifier)('B')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: Test
    AnnotationsList
      Annotation
        PsiElement(@)('@')
        AnnotationExpression
          ConstructorInvocation
            SimpleType: main
              CodeReferenceElement: main
                PsiElement(identifier)('main')
    Modifiers
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    BlockExpression
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: a
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: a
            PsiElement(identifier)('a')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: A
            PsiElement(identifier)('A')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: b
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: b
            PsiElement(identifier)('b')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: a.B
            ReferenceExpression: a
              PsiElement(identifier)('a')
            PsiElement(.)('.')
            PsiElement(identifier)('B')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: c
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: c
            PsiElement(identifier)('c')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: C
            PsiElement(identifier)('C')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: a
              PsiElement(identifier)('a')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            ReferenceExpression: b
              PsiElement(identifier)('b')
            PsiElement())(')')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: d
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: d
            PsiElement(identifier)('d')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ReferenceExpression: c.b
          ReferenceExpression: c
            PsiElement(identifier)('c')
          PsiElement(.)('.')
          PsiElement(identifier)('b')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: d1
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: d1
            PsiElement(identifier)('d1')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        SimpleType: c.a.B
          CodeReferenceElement: c.a.B
            CodeReferenceElement: c.a
              CodeReferenceElement: c
                PsiElement(identifier)('c')
              PsiElement(.)('.')
              PsiElement(identifier)('a')
            PsiElement(.)('.')
            PsiElement(identifier)('B')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ReferenceExpression: d
          PsiElement(identifier)('d')
