class Impl

extension (impl: Impl) def prop(using Int) = ???//summon[Int]


def main(args: Array[String]): Unit = {
  given Int = 3
  println(new Impl().prop(using 3))
}
-----
ScalaFile
  ScClass: Impl
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Impl')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  Extension on Impl
    PsiElement(extension)('extension')
    PsiWhiteSpace(' ')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: impl
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('impl')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: Impl
              CodeReferenceElement: Impl
                PsiElement(identifier)('Impl')
        PsiElement())(')')
    PsiWhiteSpace(' ')
    ScExtensionBody
      ScFunctionDefinition: prop
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('prop')
        Parameters
          ParametersClause
            PsiElement(()('(')
            PsiElement(using)('using')
            PsiWhiteSpace(' ')
            Parameter: <anonymous>
              ParameterType
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ReferenceExpression: ???
          PsiElement(identifier)('???')
  PsiComment(comment)('//summon[Int]')
  PsiWhiteSpace('\n\n\n')
  ScFunctionDefinition: main
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('main')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: args
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('args')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: Array[String]
              SimpleType: Array
                CodeReferenceElement: Array
                  PsiElement(identifier)('Array')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(])(']')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      ScGivenAliasDefinition: given_Int
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(given)('given')
        PsiWhiteSpace(' ')
        SimpleType: Int
          CodeReferenceElement: Int
            PsiElement(identifier)('Int')
        Parameters
          <empty list>
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('3')
      PsiWhiteSpace('\n  ')
      MethodCall
        ReferenceExpression: println
          PsiElement(identifier)('println')
        ArgumentList
          PsiElement(()('(')
          MethodCall
            ReferenceExpression: new Impl().prop
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      SimpleType: Impl
                        CodeReferenceElement: Impl
                          PsiElement(identifier)('Impl')
                      ArgumentList
                        PsiElement(()('(')
                        PsiElement())(')')
              PsiElement(.)('.')
              PsiElement(identifier)('prop')
            ArgumentList
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('3')
              PsiElement())(')')
          PsiElement())(')')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
