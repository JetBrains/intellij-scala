object T {

  transparent inline def f(inline s: String): String | Null =
    null

  inline val V = "V"
  inline def D = "D"

  trait Trait { def s: String }

  // ===========================================================================
  // inline {if,match} over inline {val,def}

  transparent inline def if_v: String =
    inline if V == "V" then "o" else "x"

  transparent inline def if_d: String =
    inline if D == "D" then "o" else "x"

  transparent inline def match_v: String =
    inline V match { case "V" => "o"; case _   => "x" }

  transparent inline def match_d: String =
    inline D match { case "D" => "o"; case _   => "x" }

  // ===========================================================================
  // inline {if,match} over inline f(inline {val,def})

  transparent inline def if_fv: String =
    inline if f(V) == "V" then "o" else "x"

  transparent inline def if_fd: String =
    inline if f(D) == "D" then "o" else "x"

  transparent inline def match_fv: String =
    inline f(V) match { case "V" => "o"; case _   => "x" }

  transparent inline def match_fd: String =
    inline f(D) match { case "D" => "o"; case _   => "x" }

  // ===========================================================================
  // inline {if,match} over inline {val,def} in overridden method

  object IfV extends Trait {
    override transparent inline def s: String =
      inline if V == "V" then "o" else "x"
  }

  object IfD extends Trait {
    override transparent inline def s: String =
      inline if D == "D" then "o" else "x" // <+ error
  }

  object MatchV extends Trait {
    override transparent inline def s: String =
      inline V match { case "V" => "o"; case _   => "x" }
  }

  object MatchD extends Trait {
    override transparent inline def s: String =
      inline D match { case "D" => "o"; case _   => "x" }
  }

  // ===========================================================================
  // inline {if,match} over inline f(inline {val,def}) in overridden method

  object IfFV extends Trait {
    override transparent inline def s: String =
      inline if f(V) == "V" then "o" else "x" // <+ error
  }

  object IfFD extends Trait {
    override transparent inline def s: String =
      inline if f(D) == "D" then "o" else "x" // <+ error
  }

  object MatchFV extends Trait {
    override transparent inline def s: String =
      inline f(V) match { case "V" => "o"; case _   => "x" }
  }

  object MatchFD extends Trait {
    override transparent inline def s: String =
      inline f(D) match { case "D" => "o"; case _   => "x" }
  }
}
-----
ScalaFile
  ScObject: T
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('T')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          InfixType: String | Null
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
            PsiWhiteSpace(' ')
            CodeReferenceElement: |
              PsiElement(identifier)('|')
            PsiWhiteSpace(' ')
            SimpleType: Null
              CodeReferenceElement: Null
                PsiElement(identifier)('Null')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          NullLiteral
            PsiElement(null)('null')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: V
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: V
              PsiElement(identifier)('V')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"V"')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: D
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('D')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"D"')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Trait
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Trait')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScFunctionDeclaration: s
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// ===========================================================================')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// inline {if,match} over inline {val,def}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: if_v
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('if_v')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          IfStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            InfixExpression
              ReferenceExpression: V
                PsiElement(identifier)('V')
              PsiWhiteSpace(' ')
              ReferenceExpression: ==
                PsiElement(identifier)('==')
              PsiWhiteSpace(' ')
              StringLiteral
                PsiElement(string content)('"V"')
            PsiWhiteSpace(' ')
            PsiElement(then)('then')
            PsiWhiteSpace(' ')
            StringLiteral
              PsiElement(string content)('"o"')
            PsiWhiteSpace(' ')
            PsiElement(else)('else')
            PsiWhiteSpace(' ')
            StringLiteral
              PsiElement(string content)('"x"')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: if_d
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('if_d')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          IfStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            InfixExpression
              ReferenceExpression: D
                PsiElement(identifier)('D')
              PsiWhiteSpace(' ')
              ReferenceExpression: ==
                PsiElement(identifier)('==')
              PsiWhiteSpace(' ')
              StringLiteral
                PsiElement(string content)('"D"')
            PsiWhiteSpace(' ')
            PsiElement(then)('then')
            PsiWhiteSpace(' ')
            StringLiteral
              PsiElement(string content)('"o"')
            PsiWhiteSpace(' ')
            PsiElement(else)('else')
            PsiWhiteSpace(' ')
            StringLiteral
              PsiElement(string content)('"x"')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: match_v
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('match_v')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            ReferenceExpression: V
              PsiElement(identifier)('V')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                LiteralPattern
                  StringLiteral
                    PsiElement(string content)('"V"')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"o"')
                  PsiElement(;)(';')
              PsiWhiteSpace(' ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                WildcardPattern
                  PsiElement(_)('_')
                PsiWhiteSpace('   ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"x"')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: match_d
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('match_d')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            ReferenceExpression: D
              PsiElement(identifier)('D')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                LiteralPattern
                  StringLiteral
                    PsiElement(string content)('"D"')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"o"')
                  PsiElement(;)(';')
              PsiWhiteSpace(' ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                WildcardPattern
                  PsiElement(_)('_')
                PsiWhiteSpace('   ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"x"')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// ===========================================================================')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// inline {if,match} over inline f(inline {val,def})')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: if_fv
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('if_fv')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          IfStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            InfixExpression
              MethodCall
                ReferenceExpression: f
                  PsiElement(identifier)('f')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: V
                    PsiElement(identifier)('V')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              ReferenceExpression: ==
                PsiElement(identifier)('==')
              PsiWhiteSpace(' ')
              StringLiteral
                PsiElement(string content)('"V"')
            PsiWhiteSpace(' ')
            PsiElement(then)('then')
            PsiWhiteSpace(' ')
            StringLiteral
              PsiElement(string content)('"o"')
            PsiWhiteSpace(' ')
            PsiElement(else)('else')
            PsiWhiteSpace(' ')
            StringLiteral
              PsiElement(string content)('"x"')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: if_fd
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('if_fd')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          IfStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            InfixExpression
              MethodCall
                ReferenceExpression: f
                  PsiElement(identifier)('f')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: D
                    PsiElement(identifier)('D')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              ReferenceExpression: ==
                PsiElement(identifier)('==')
              PsiWhiteSpace(' ')
              StringLiteral
                PsiElement(string content)('"D"')
            PsiWhiteSpace(' ')
            PsiElement(then)('then')
            PsiWhiteSpace(' ')
            StringLiteral
              PsiElement(string content)('"o"')
            PsiWhiteSpace(' ')
            PsiElement(else)('else')
            PsiWhiteSpace(' ')
            StringLiteral
              PsiElement(string content)('"x"')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: match_fv
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('match_fv')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: f
                PsiElement(identifier)('f')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: V
                  PsiElement(identifier)('V')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                LiteralPattern
                  StringLiteral
                    PsiElement(string content)('"V"')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"o"')
                  PsiElement(;)(';')
              PsiWhiteSpace(' ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                WildcardPattern
                  PsiElement(_)('_')
                PsiWhiteSpace('   ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"x"')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: match_fd
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('match_fd')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: f
                PsiElement(identifier)('f')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: D
                  PsiElement(identifier)('D')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                LiteralPattern
                  StringLiteral
                    PsiElement(string content)('"D"')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"o"')
                  PsiElement(;)(';')
              PsiWhiteSpace(' ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                WildcardPattern
                  PsiElement(_)('_')
                PsiWhiteSpace('   ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"x"')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// ===========================================================================')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// inline {if,match} over inline {val,def} in overridden method')
        PsiWhiteSpace('\n\n  ')
        ScObject: IfV
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('IfV')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                IfStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    ReferenceExpression: V
                      PsiElement(identifier)('V')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ==
                      PsiElement(identifier)('==')
                    PsiWhiteSpace(' ')
                    StringLiteral
                      PsiElement(string content)('"V"')
                  PsiWhiteSpace(' ')
                  PsiElement(then)('then')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('"o"')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('"x"')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: IfD
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('IfD')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                IfStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    ReferenceExpression: D
                      PsiElement(identifier)('D')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ==
                      PsiElement(identifier)('==')
                    PsiWhiteSpace(' ')
                    StringLiteral
                      PsiElement(string content)('"D"')
                  PsiWhiteSpace(' ')
                  PsiElement(then)('then')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('"o"')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('"x"')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// <+ error')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: MatchV
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('MatchV')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                MatchStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: V
                    PsiElement(identifier)('V')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace(' ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      LiteralPattern
                        StringLiteral
                          PsiElement(string content)('"V"')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"o"')
                        PsiElement(;)(';')
                    PsiWhiteSpace(' ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      WildcardPattern
                        PsiElement(_)('_')
                      PsiWhiteSpace('   ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"x"')
                  PsiWhiteSpace(' ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: MatchD
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('MatchD')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                MatchStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: D
                    PsiElement(identifier)('D')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace(' ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      LiteralPattern
                        StringLiteral
                          PsiElement(string content)('"D"')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"o"')
                        PsiElement(;)(';')
                    PsiWhiteSpace(' ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      WildcardPattern
                        PsiElement(_)('_')
                      PsiWhiteSpace('   ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"x"')
                  PsiWhiteSpace(' ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// ===========================================================================')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// inline {if,match} over inline f(inline {val,def}) in overridden method')
        PsiWhiteSpace('\n\n  ')
        ScObject: IfFV
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('IfFV')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                IfStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    MethodCall
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: V
                          PsiElement(identifier)('V')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ==
                      PsiElement(identifier)('==')
                    PsiWhiteSpace(' ')
                    StringLiteral
                      PsiElement(string content)('"V"')
                  PsiWhiteSpace(' ')
                  PsiElement(then)('then')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('"o"')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('"x"')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// <+ error')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: IfFD
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('IfFD')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                IfStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  InfixExpression
                    MethodCall
                      ReferenceExpression: f
                        PsiElement(identifier)('f')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: D
                          PsiElement(identifier)('D')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ==
                      PsiElement(identifier)('==')
                    PsiWhiteSpace(' ')
                    StringLiteral
                      PsiElement(string content)('"D"')
                  PsiWhiteSpace(' ')
                  PsiElement(then)('then')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('"o"')
                  PsiWhiteSpace(' ')
                  PsiElement(else)('else')
                  PsiWhiteSpace(' ')
                  StringLiteral
                    PsiElement(string content)('"x"')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// <+ error')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: MatchFV
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('MatchFV')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                MatchStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: f
                      PsiElement(identifier)('f')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: V
                        PsiElement(identifier)('V')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace(' ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      LiteralPattern
                        StringLiteral
                          PsiElement(string content)('"V"')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"o"')
                        PsiElement(;)(';')
                    PsiWhiteSpace(' ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      WildcardPattern
                        PsiElement(_)('_')
                      PsiWhiteSpace('   ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"x"')
                  PsiWhiteSpace(' ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: MatchFD
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('MatchFD')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                MatchStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: f
                      PsiElement(identifier)('f')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: D
                        PsiElement(identifier)('D')
                      PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace(' ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      LiteralPattern
                        StringLiteral
                          PsiElement(string content)('"D"')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"o"')
                        PsiElement(;)(';')
                    PsiWhiteSpace(' ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      WildcardPattern
                        PsiElement(_)('_')
                      PsiWhiteSpace('   ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"x"')
                  PsiWhiteSpace(' ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
