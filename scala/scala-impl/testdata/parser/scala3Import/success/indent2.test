object testindent:

  class C:
    val x = 0

  val c = new C
  if 1 > c.x then
    println
    println
  else
    println
    println
-----
ScalaFile
  ScObject: testindent
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('testindent')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n\n  ')
        ScClass: C
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('C')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: x
                    PsiElement(identifier)('x')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                IntegerLiteral
                  PsiElement(integer)('0')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: c
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: c
              PsiElement(identifier)('c')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: C
                    CodeReferenceElement: C
                      PsiElement(identifier)('C')
        PsiWhiteSpace('\n  ')
        IfStatement
          PsiElement(if)('if')
          PsiWhiteSpace(' ')
          InfixExpression
            IntegerLiteral
              PsiElement(integer)('1')
            PsiWhiteSpace(' ')
            ReferenceExpression: >
              PsiElement(identifier)('>')
            PsiWhiteSpace(' ')
            ReferenceExpression: c.x
              ReferenceExpression: c
                PsiElement(identifier)('c')
              PsiElement(.)('.')
              PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          PsiElement(then)('then')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ReferenceExpression: println
              PsiElement(identifier)('println')
            PsiWhiteSpace('\n    ')
            ReferenceExpression: println
              PsiElement(identifier)('println')
          PsiWhiteSpace('\n  ')
          PsiElement(else)('else')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ReferenceExpression: println
              PsiElement(identifier)('println')
            PsiWhiteSpace('\n    ')
            ReferenceExpression: println
              PsiElement(identifier)('println')
