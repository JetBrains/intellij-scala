inline def ff: Unit =
  inline 1 match
    case 1 | 2 =>

def test = ff

transparent inline def f: Option[String] =
  None

object Override {

  trait Trait { def s: String }

  object OK extends Trait {
    override transparent inline def s: String =
      inline f match {
        case Some("x") => "x"
        case Some("y") => "y"
        case None      => "-"
      }
  }

  object KO_1 extends Trait {
    override transparent inline def s: String =
      inline f match {
        case Some("x") => "x"
        case Some("y")
           | None      => "0"
      }
  }

  object KO_2 extends Trait {
    override transparent inline def s: String =
      inline f match {
        case Some("x") => "x"
        case Some("y") => "y"
        case Some(z)   => "z"
        case None      => "0"
      }
  }
}

object NonOverride {

  transparent inline def ok_1: String =
    inline f match {
      case Some("x") => "x"
      case Some("y") => "y"
      case None      => "-"
    }

  // ok: Some("y") | None
  transparent inline def ok_2: String =
    inline f match {
      case Some("x") => "x"
      case Some("y")
         | None      => "0"
    }

  // ok: no None
  transparent inline def ok_3: String =
    inline f match {
      case Some("x") => "x"
      case Some("y") => "y"
      case Some(z)   => "z"
      case None      => "0"
    }

  ok_1 + ok_2 ++ ok_3
}
-----
ScalaFile
  ScFunctionDefinition: ff
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ff')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace('\n  ')
    MatchStatement
      PsiElement(inline)('inline')
      PsiWhiteSpace(' ')
      IntegerLiteral
        PsiElement(integer)('1')
      PsiWhiteSpace(' ')
      PsiElement(match)('match')
      PsiWhiteSpace('\n    ')
      CaseClauses
        CaseClause
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          CompositePattern
            LiteralPattern
              IntegerLiteral
                PsiElement(integer)('1')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('|')
            PsiWhiteSpace(' ')
            LiteralPattern
              IntegerLiteral
                PsiElement(integer)('2')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
          BlockOfExpressions
            <empty list>
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: ff
      PsiElement(identifier)('ff')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: f
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(transparent)('transparent')
      PsiWhiteSpace(' ')
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('f')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: Option[String]
      SimpleType: Option
        CodeReferenceElement: Option
          PsiElement(identifier)('Option')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: String
          CodeReferenceElement: String
            PsiElement(identifier)('String')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace('\n  ')
    ReferenceExpression: None
      PsiElement(identifier)('None')
  PsiWhiteSpace('\n\n')
  ScObject: Override
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Override')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Trait
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Trait')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScFunctionDeclaration: s
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: OK
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('OK')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                MatchStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: f
                    PsiElement(identifier)('f')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n        ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Some
                          PsiElement(identifier)('Some')
                        Pattern Argument List
                          PsiElement(()('(')
                          LiteralPattern
                            StringLiteral
                              PsiElement(string content)('"x"')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"x"')
                    PsiWhiteSpace('\n        ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Some
                          PsiElement(identifier)('Some')
                        Pattern Argument List
                          PsiElement(()('(')
                          LiteralPattern
                            StringLiteral
                              PsiElement(string content)('"y"')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"y"')
                    PsiWhiteSpace('\n        ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      StableElementPattern
                        ReferenceExpression: None
                          PsiElement(identifier)('None')
                      PsiWhiteSpace('      ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"-"')
                  PsiWhiteSpace('\n      ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: KO_1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('KO_1')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                MatchStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: f
                    PsiElement(identifier)('f')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n        ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Some
                          PsiElement(identifier)('Some')
                        Pattern Argument List
                          PsiElement(()('(')
                          LiteralPattern
                            StringLiteral
                              PsiElement(string content)('"x"')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"x"')
                    PsiWhiteSpace('\n        ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      CompositePattern
                        ConstructorPattern
                          CodeReferenceElement: Some
                            PsiElement(identifier)('Some')
                          Pattern Argument List
                            PsiElement(()('(')
                            LiteralPattern
                              StringLiteral
                                PsiElement(string content)('"y"')
                            PsiElement())(')')
                        PsiWhiteSpace('\n           ')
                        PsiElement(identifier)('|')
                        PsiWhiteSpace(' ')
                        StableElementPattern
                          ReferenceExpression: None
                            PsiElement(identifier)('None')
                      PsiWhiteSpace('      ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"0"')
                  PsiWhiteSpace('\n      ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: KO_2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('KO_2')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Trait
                  CodeReferenceElement: Trait
                    PsiElement(identifier)('Trait')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: s
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(transparent)('transparent')
                  PsiWhiteSpace(' ')
                  PsiElement(inline)('inline')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('s')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                MatchStatement
                  PsiElement(inline)('inline')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: f
                    PsiElement(identifier)('f')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n        ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Some
                          PsiElement(identifier)('Some')
                        Pattern Argument List
                          PsiElement(()('(')
                          LiteralPattern
                            StringLiteral
                              PsiElement(string content)('"x"')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"x"')
                    PsiWhiteSpace('\n        ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Some
                          PsiElement(identifier)('Some')
                        Pattern Argument List
                          PsiElement(()('(')
                          LiteralPattern
                            StringLiteral
                              PsiElement(string content)('"y"')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"y"')
                    PsiWhiteSpace('\n        ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Some
                          PsiElement(identifier)('Some')
                        Pattern Argument List
                          PsiElement(()('(')
                          ReferencePattern: z
                            PsiElement(identifier)('z')
                          PsiElement())(')')
                      PsiWhiteSpace('   ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"z"')
                    PsiWhiteSpace('\n        ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      StableElementPattern
                        ReferenceExpression: None
                          PsiElement(identifier)('None')
                      PsiWhiteSpace('      ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        StringLiteral
                          PsiElement(string content)('"0"')
                  PsiWhiteSpace('\n      ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: NonOverride
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('NonOverride')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: ok_1
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ok_1')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            ReferenceExpression: f
              PsiElement(identifier)('f')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n      ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Some
                    PsiElement(identifier)('Some')
                  Pattern Argument List
                    PsiElement(()('(')
                    LiteralPattern
                      StringLiteral
                        PsiElement(string content)('"x"')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"x"')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Some
                    PsiElement(identifier)('Some')
                  Pattern Argument List
                    PsiElement(()('(')
                    LiteralPattern
                      StringLiteral
                        PsiElement(string content)('"y"')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"y"')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: None
                    PsiElement(identifier)('None')
                PsiWhiteSpace('      ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"-"')
            PsiWhiteSpace('\n    ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: ok_2
          PsiComment(comment)('// ok: Some("y") | None')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ok_2')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            ReferenceExpression: f
              PsiElement(identifier)('f')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n      ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Some
                    PsiElement(identifier)('Some')
                  Pattern Argument List
                    PsiElement(()('(')
                    LiteralPattern
                      StringLiteral
                        PsiElement(string content)('"x"')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"x"')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                CompositePattern
                  ConstructorPattern
                    CodeReferenceElement: Some
                      PsiElement(identifier)('Some')
                    Pattern Argument List
                      PsiElement(()('(')
                      LiteralPattern
                        StringLiteral
                          PsiElement(string content)('"y"')
                      PsiElement())(')')
                  PsiWhiteSpace('\n         ')
                  PsiElement(identifier)('|')
                  PsiWhiteSpace(' ')
                  StableElementPattern
                    ReferenceExpression: None
                      PsiElement(identifier)('None')
                PsiWhiteSpace('      ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"0"')
            PsiWhiteSpace('\n    ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: ok_3
          PsiComment(comment)('// ok: no None')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(transparent)('transparent')
            PsiWhiteSpace(' ')
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ok_3')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            ReferenceExpression: f
              PsiElement(identifier)('f')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n      ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Some
                    PsiElement(identifier)('Some')
                  Pattern Argument List
                    PsiElement(()('(')
                    LiteralPattern
                      StringLiteral
                        PsiElement(string content)('"x"')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"x"')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Some
                    PsiElement(identifier)('Some')
                  Pattern Argument List
                    PsiElement(()('(')
                    LiteralPattern
                      StringLiteral
                        PsiElement(string content)('"y"')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"y"')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Some
                    PsiElement(identifier)('Some')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: z
                      PsiElement(identifier)('z')
                    PsiElement())(')')
                PsiWhiteSpace('   ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"z"')
              PsiWhiteSpace('\n      ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: None
                    PsiElement(identifier)('None')
                PsiWhiteSpace('      ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"0"')
            PsiWhiteSpace('\n    ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        InfixExpression
          InfixExpression
            ReferenceExpression: ok_1
              PsiElement(identifier)('ok_1')
            PsiWhiteSpace(' ')
            ReferenceExpression: +
              PsiElement(identifier)('+')
            PsiWhiteSpace(' ')
            ReferenceExpression: ok_2
              PsiElement(identifier)('ok_2')
          PsiWhiteSpace(' ')
          ReferenceExpression: ++
            PsiElement(identifier)('++')
          PsiWhiteSpace(' ')
          ReferenceExpression: ok_3
            PsiElement(identifier)('ok_3')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
