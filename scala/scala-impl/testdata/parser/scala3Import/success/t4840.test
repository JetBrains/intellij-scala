class Crashy {
  def g(): Option[Any] = None

  def crashy() = {
    for (_ <- g()) {
      (null: Any) match {
        case Some(_) => 5
        case None    => sys.error("")
      }
    }
  }
}

-----
ScalaFile
  ScClass: Crashy
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Crashy')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: g
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('g')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Option[Any]
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: None
            PsiElement(identifier)('None')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: crashy
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('crashy')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ForStatement
              PsiElement(for)('for')
              PsiWhiteSpace(' ')
              PsiElement(()('(')
              Enumerators
                Generator
                  WildcardPattern
                    PsiElement(_)('_')
                  PsiWhiteSpace(' ')
                  PsiElement(<-)('<-')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: g
                      PsiElement(identifier)('g')
                    ArgumentList
                      PsiElement(()('(')
                      PsiElement())(')')
              PsiElement())(')')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                MatchStatement
                  ExpressionInParenthesis
                    PsiElement(()('(')
                    TypedExpression
                      NullLiteral
                        PsiElement(null)('null')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: Any
                        CodeReferenceElement: Any
                          PsiElement(identifier)('Any')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n        ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Some
                          PsiElement(identifier)('Some')
                        Pattern Argument List
                          PsiElement(()('(')
                          WildcardPattern
                            PsiElement(_)('_')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        IntegerLiteral
                          PsiElement(integer)('5')
                    PsiWhiteSpace('\n        ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      StableElementPattern
                        ReferenceExpression: None
                          PsiElement(identifier)('None')
                      PsiWhiteSpace('    ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: sys.error
                            ReferenceExpression: sys
                              PsiElement(identifier)('sys')
                            PsiElement(.)('.')
                            PsiElement(identifier)('error')
                          ArgumentList
                            PsiElement(()('(')
                            StringLiteral
                              PsiElement(string content)('""')
                            PsiElement())(')')
                  PsiWhiteSpace('\n      ')
                  PsiElement(})('}')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
