object Test {
  trait Leaf[T] {
    def collect[U](f: PartialFunction[Leaf[_], U]): List[U]
    def leaves: List[Leaf[T]] = collect { case l: Leaf[T] => l }
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: Leaf
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Leaf')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: collect
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('collect')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: U
                    PsiElement(identifier)('U')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: PartialFunction[Leaf[_], U]
                          SimpleType: PartialFunction
                            CodeReferenceElement: PartialFunction
                              PsiElement(identifier)('PartialFunction')
                          TypeArgumentsList
                            PsiElement([)('[')
                            ParametrizedType: Leaf[_]
                              SimpleType: Leaf
                                CodeReferenceElement: Leaf
                                  PsiElement(identifier)('Leaf')
                              TypeArgumentsList
                                PsiElement([)('[')
                                WildcardType: _
                                  PsiElement(_)('_')
                                PsiElement(])(']')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: U
                              CodeReferenceElement: U
                                PsiElement(identifier)('U')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: List[U]
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: U
                      CodeReferenceElement: U
                        PsiElement(identifier)('U')
                    PsiElement(])(']')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: leaves
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('leaves')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: List[Leaf[T]]
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: Leaf[T]
                      SimpleType: Leaf
                        CodeReferenceElement: Leaf
                          PsiElement(identifier)('Leaf')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: collect
                    PsiElement(identifier)('collect')
                  PsiWhiteSpace(' ')
                  ArgumentList
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace(' ')
                      CaseClauses
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          Scala3 TypedPattern
                            ReferencePattern: l
                              PsiElement(identifier)('l')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            TypePattern
                              ParametrizedType: Leaf[T]
                                SimpleType: Leaf
                                  CodeReferenceElement: Leaf
                                    PsiElement(identifier)('Leaf')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: T
                                    CodeReferenceElement: T
                                      PsiElement(identifier)('T')
                                  PsiElement(])(']')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          BlockOfExpressions
                            ReferenceExpression: l
                              PsiElement(identifier)('l')
                      PsiWhiteSpace(' ')
                      PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
