object test {
  class annot extends scala.annotation.Annotation
  def foo = {
    def bar(i: Int): Int = i
    @annot class Silly {} // used to be: not found, but now ok after backing out of 2b12868070be50fb70
    bar(5)
  }
}
-----
ScalaFile
  ScObject: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: annot
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('annot')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: scala.annotation.Annotation
                  CodeReferenceElement: scala.annotation.Annotation
                    CodeReferenceElement: scala.annotation
                      CodeReferenceElement: scala
                        PsiElement(identifier)('scala')
                      PsiElement(.)('.')
                      PsiElement(identifier)('annotation')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Annotation')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: bar
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('bar')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: i
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('i')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: i
                PsiElement(identifier)('i')
            PsiWhiteSpace('\n    ')
            ScClass: Silly
              AnnotationsList
                Annotation
                  PsiElement(@)('@')
                  AnnotationExpression
                    ConstructorInvocation
                      SimpleType: annot
                        CodeReferenceElement: annot
                          PsiElement(identifier)('annot')
              Modifiers
                <empty list>
              PsiWhiteSpace(' ')
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Silly')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  <empty list>
              PsiWhiteSpace(' ')
              ExtendsBlock
                ScTemplateBody
                  PsiElement({)('{')
                  PsiElement(})('}')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// used to be: not found, but now ok after backing out of 2b12868070be50fb70')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: bar
                PsiElement(identifier)('bar')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('5')
                PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
