enum Tree[+A]:
  case Branch(left: Tree[A], right: Tree[A])
  case Leaf(value: A)

enum Context[+A]:
  case Empty
  case InLeft(right: Tree[A], parent: Context[A])
  case InRight(left: Tree[A], parent: Context[A])

import Tree.*, Context.*

class Zipper[+A](val focus: Tree[A], val context: Context[A]):
  def unfocus: Tree[A] = context match
    case Empty => focus
    case _ => moveUp.unfocus
  def moveUp: Zipper[A] = context match
    case Empty => this
    case InLeft(right, parent) => Zipper(Branch(focus, right), parent)
    case InRight(left, parent) => Zipper(Branch(left, focus), parent)
  def moveLeft: Zipper[A] = focus match
    case Leaf(_) => this
    case Branch(left, right) => Zipper(left, InLeft(right, context))
  def moveRight: Zipper[A] = focus match
    case Leaf(_) => this
    case Branch(left, right) => Zipper(right, InRight(left, context))
  def replaceFocus[B >: A](newFocus: Tree[B]): Zipper[B] =
    Zipper(newFocus, context)

extension[A](tree: Tree[A]) def focus: Zipper[A] = Zipper(tree, Empty)
-----
ScalaFile
  ScEnum: Tree
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Tree')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('+')
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Branch
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Branch
            PsiElement(identifier)('Branch')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: left
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('left')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Tree[A]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ClassParameter: right
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('right')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Tree[A]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement())(')')
            ExtendsBlock
              <empty list>
        PsiWhiteSpace('\n  ')
        ScEnumCases: Leaf
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Leaf
            PsiElement(identifier)('Leaf')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: value
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('value')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                  PsiElement())(')')
            ExtendsBlock
              <empty list>
  PsiWhiteSpace('\n\n')
  ScEnum: Context
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Context')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('+')
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Empty
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: Empty
            PsiElement(identifier)('Empty')
            ExtendsBlock
              <empty list>
        PsiWhiteSpace('\n  ')
        ScEnumCases: InLeft
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: InLeft
            PsiElement(identifier)('InLeft')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: right
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('right')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Tree[A]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ClassParameter: parent
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('parent')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Context[A]
                        SimpleType: Context
                          CodeReferenceElement: Context
                            PsiElement(identifier)('Context')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement())(')')
            ExtendsBlock
              <empty list>
        PsiWhiteSpace('\n  ')
        ScEnumCases: InRight
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: InRight
            PsiElement(identifier)('InRight')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: left
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('left')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Tree[A]
                        SimpleType: Tree
                          CodeReferenceElement: Tree
                            PsiElement(identifier)('Tree')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ClassParameter: parent
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('parent')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Context[A]
                        SimpleType: Context
                          CodeReferenceElement: Context
                            PsiElement(identifier)('Context')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement())(')')
            ExtendsBlock
              <empty list>
  PsiWhiteSpace('\n\n')
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: Tree
        PsiElement(identifier)('Tree')
      PsiElement(.)('.')
      PsiElement(*)('*')
    PsiElement(,)(',')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: Context
        PsiElement(identifier)('Context')
      PsiElement(.)('.')
      PsiElement(*)('*')
  PsiWhiteSpace('\n\n')
  ScClass: Zipper
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Zipper')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('+')
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: focus
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('focus')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: Tree[A]
                SimpleType: Tree
                  CodeReferenceElement: Tree
                    PsiElement(identifier)('Tree')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: context
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('context')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: Context[A]
                SimpleType: Context
                  CodeReferenceElement: Context
                    PsiElement(identifier)('Context')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
          PsiElement())(')')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: unfocus
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('unfocus')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Tree[A]
            SimpleType: Tree
              CodeReferenceElement: Tree
                PsiElement(identifier)('Tree')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: context
              PsiElement(identifier)('context')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: Empty
                    PsiElement(identifier)('Empty')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: focus
                    PsiElement(identifier)('focus')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                WildcardPattern
                  PsiElement(_)('_')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: moveUp.unfocus
                    ReferenceExpression: moveUp
                      PsiElement(identifier)('moveUp')
                    PsiElement(.)('.')
                    PsiElement(identifier)('unfocus')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: moveUp
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('moveUp')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Zipper[A]
            SimpleType: Zipper
              CodeReferenceElement: Zipper
                PsiElement(identifier)('Zipper')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: context
              PsiElement(identifier)('context')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: Empty
                    PsiElement(identifier)('Empty')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ThisReference
                    PsiElement(this)('this')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: InLeft
                    PsiElement(identifier)('InLeft')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: right
                      PsiElement(identifier)('right')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferencePattern: parent
                      PsiElement(identifier)('parent')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: Zipper
                      PsiElement(identifier)('Zipper')
                    ArgumentList
                      PsiElement(()('(')
                      MethodCall
                        ReferenceExpression: Branch
                          PsiElement(identifier)('Branch')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: focus
                            PsiElement(identifier)('focus')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: right
                            PsiElement(identifier)('right')
                          PsiElement())(')')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: parent
                        PsiElement(identifier)('parent')
                      PsiElement())(')')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: InRight
                    PsiElement(identifier)('InRight')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: left
                      PsiElement(identifier)('left')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferencePattern: parent
                      PsiElement(identifier)('parent')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: Zipper
                      PsiElement(identifier)('Zipper')
                    ArgumentList
                      PsiElement(()('(')
                      MethodCall
                        ReferenceExpression: Branch
                          PsiElement(identifier)('Branch')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: left
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: focus
                            PsiElement(identifier)('focus')
                          PsiElement())(')')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: parent
                        PsiElement(identifier)('parent')
                      PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: moveLeft
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('moveLeft')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Zipper[A]
            SimpleType: Zipper
              CodeReferenceElement: Zipper
                PsiElement(identifier)('Zipper')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: focus
              PsiElement(identifier)('focus')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Leaf
                    PsiElement(identifier)('Leaf')
                  Pattern Argument List
                    PsiElement(()('(')
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ThisReference
                    PsiElement(this)('this')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Branch
                    PsiElement(identifier)('Branch')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: left
                      PsiElement(identifier)('left')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferencePattern: right
                      PsiElement(identifier)('right')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: Zipper
                      PsiElement(identifier)('Zipper')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: left
                        PsiElement(identifier)('left')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: InLeft
                          PsiElement(identifier)('InLeft')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: right
                            PsiElement(identifier)('right')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: context
                            PsiElement(identifier)('context')
                          PsiElement())(')')
                      PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: moveRight
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('moveRight')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Zipper[A]
            SimpleType: Zipper
              CodeReferenceElement: Zipper
                PsiElement(identifier)('Zipper')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: focus
              PsiElement(identifier)('focus')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Leaf
                    PsiElement(identifier)('Leaf')
                  Pattern Argument List
                    PsiElement(()('(')
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ThisReference
                    PsiElement(this)('this')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Branch
                    PsiElement(identifier)('Branch')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: left
                      PsiElement(identifier)('left')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferencePattern: right
                      PsiElement(identifier)('right')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: Zipper
                      PsiElement(identifier)('Zipper')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: right
                        PsiElement(identifier)('right')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: InRight
                          PsiElement(identifier)('InRight')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: left
                            PsiElement(identifier)('left')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: context
                            PsiElement(identifier)('context')
                          PsiElement())(')')
                      PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: replaceFocus
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('replaceFocus')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: B
              PsiElement(identifier)('B')
              PsiWhiteSpace(' ')
              PsiElement(>:)('>:')
              PsiWhiteSpace(' ')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: newFocus
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('newFocus')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Tree[B]
                    SimpleType: Tree
                      CodeReferenceElement: Tree
                        PsiElement(identifier)('Tree')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Zipper[B]
            SimpleType: Zipper
              CodeReferenceElement: Zipper
                PsiElement(identifier)('Zipper')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MethodCall
            ReferenceExpression: Zipper
              PsiElement(identifier)('Zipper')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: newFocus
                PsiElement(identifier)('newFocus')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ReferenceExpression: context
                PsiElement(identifier)('context')
              PsiElement())(')')
  PsiWhiteSpace('\n\n')
  Extension on Tree[A]
    PsiElement(extension)('extension')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: tree
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('tree')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            ParametrizedType: Tree[A]
              SimpleType: Tree
                CodeReferenceElement: Tree
                  PsiElement(identifier)('Tree')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiElement(])(']')
        PsiElement())(')')
    PsiWhiteSpace(' ')
    ScExtensionBody
      ScFunctionDefinition: focus
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('focus')
        Parameters
          <empty list>
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        ParametrizedType: Zipper[A]
          SimpleType: Zipper
            CodeReferenceElement: Zipper
              PsiElement(identifier)('Zipper')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
            PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: Zipper
            PsiElement(identifier)('Zipper')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: tree
              PsiElement(identifier)('tree')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            ReferenceExpression: Empty
              PsiElement(identifier)('Empty')
            PsiElement())(')')
