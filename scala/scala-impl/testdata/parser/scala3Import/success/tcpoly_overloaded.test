trait Monad[T <: Bound[T], MyType[x <: Bound[x]], Bound[_]] {
  def flatMap[S <: RBound[S], RContainer[x <: RBound[x]], RBound[_],
              Result[x <: RBound[x]] <: Monad[x, RContainer, RBound]]
              (f: T => Result[S]): Result[S]
  def flatMap[S <: RBound[S], RContainer[x <: RBound[x]], RBound[_],
              Result[x <: RBound[x]] <: Monad[x, RContainer, RBound]]
              (f: T => Result[S], foo: String): Result[S]
  def flatMap[S <: Bound[S]]
              (f: T => MyType[S], foo: Int): MyType[S]
}

trait Test {
  def moo: MList[Int]
  class MList[T](el: T) extends Monad[T, List, [X] =>> Any] {
    def flatMap[S <: RBound[S], RContainer[x <: RBound[x]], RBound[_],
            Result[x <: RBound[x]] <: Monad[x, RContainer, RBound]]
            (f: T => Result[S]): Result[S] = sys.error("foo")
    def flatMap[S <: RBound[S], RContainer[x <: RBound[x]], RBound[_],
            Result[x <: RBound[x]] <: Monad[x, RContainer, RBound]]
            (f: T => Result[S], foo: String): Result[S]  = sys.error("foo")
    def flatMap[S]
            (f: T => List[S], foo: Int): List[S]  = sys.error("foo")
  }
  val l: MList[String] = moo.flatMap[String, List, [X] =>> Any, MList]((x: Int) => new MList("String"))
}
-----
ScalaFile
  ScTrait: Monad
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Monad')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        ParametrizedType: Bound[T]
          SimpleType: Bound
            CodeReferenceElement: Bound
              PsiElement(identifier)('Bound')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
            PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: MyType
        PsiElement(identifier)('MyType')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: x
            PsiElement(identifier)('x')
            PsiWhiteSpace(' ')
            PsiElement(<:)('<:')
            PsiWhiteSpace(' ')
            ParametrizedType: Bound[x]
              SimpleType: Bound
                CodeReferenceElement: Bound
                  PsiElement(identifier)('Bound')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: x
                  CodeReferenceElement: x
                    PsiElement(identifier)('x')
                PsiElement(])(']')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: Bound
        PsiElement(identifier)('Bound')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: flatMap
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('flatMap')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: S
              PsiElement(identifier)('S')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: RBound[S]
                SimpleType: RBound
                  CodeReferenceElement: RBound
                    PsiElement(identifier)('RBound')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: S
                    CodeReferenceElement: S
                      PsiElement(identifier)('S')
                  PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: RContainer
              PsiElement(identifier)('RContainer')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: x
                  PsiElement(identifier)('x')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  ParametrizedType: RBound[x]
                    SimpleType: RBound
                      CodeReferenceElement: RBound
                        PsiElement(identifier)('RBound')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: x
                        CodeReferenceElement: x
                          PsiElement(identifier)('x')
                      PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: RBound
              PsiElement(identifier)('RBound')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace('\n              ')
            TypeParameter: Result
              PsiElement(identifier)('Result')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: x
                  PsiElement(identifier)('x')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  ParametrizedType: RBound[x]
                    SimpleType: RBound
                      CodeReferenceElement: RBound
                        PsiElement(identifier)('RBound')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: x
                        CodeReferenceElement: x
                          PsiElement(identifier)('x')
                      PsiElement(])(']')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: Monad[x, RContainer, RBound]
                SimpleType: Monad
                  CodeReferenceElement: Monad
                    PsiElement(identifier)('Monad')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: x
                    CodeReferenceElement: x
                      PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: RContainer
                    CodeReferenceElement: RContainer
                      PsiElement(identifier)('RContainer')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: RBound
                    CodeReferenceElement: RBound
                      PsiElement(identifier)('RBound')
                  PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace('\n              ')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: T => Result[S]
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Result[S]
                      SimpleType: Result
                        CodeReferenceElement: Result
                          PsiElement(identifier)('Result')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: S
                          CodeReferenceElement: S
                            PsiElement(identifier)('S')
                        PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Result[S]
            SimpleType: Result
              CodeReferenceElement: Result
                PsiElement(identifier)('Result')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: S
                CodeReferenceElement: S
                  PsiElement(identifier)('S')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: flatMap
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('flatMap')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: S
              PsiElement(identifier)('S')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: RBound[S]
                SimpleType: RBound
                  CodeReferenceElement: RBound
                    PsiElement(identifier)('RBound')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: S
                    CodeReferenceElement: S
                      PsiElement(identifier)('S')
                  PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: RContainer
              PsiElement(identifier)('RContainer')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: x
                  PsiElement(identifier)('x')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  ParametrizedType: RBound[x]
                    SimpleType: RBound
                      CodeReferenceElement: RBound
                        PsiElement(identifier)('RBound')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: x
                        CodeReferenceElement: x
                          PsiElement(identifier)('x')
                      PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: RBound
              PsiElement(identifier)('RBound')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace('\n              ')
            TypeParameter: Result
              PsiElement(identifier)('Result')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: x
                  PsiElement(identifier)('x')
                  PsiWhiteSpace(' ')
                  PsiElement(<:)('<:')
                  PsiWhiteSpace(' ')
                  ParametrizedType: RBound[x]
                    SimpleType: RBound
                      CodeReferenceElement: RBound
                        PsiElement(identifier)('RBound')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: x
                        CodeReferenceElement: x
                          PsiElement(identifier)('x')
                      PsiElement(])(']')
                PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: Monad[x, RContainer, RBound]
                SimpleType: Monad
                  CodeReferenceElement: Monad
                    PsiElement(identifier)('Monad')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: x
                    CodeReferenceElement: x
                      PsiElement(identifier)('x')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: RContainer
                    CodeReferenceElement: RContainer
                      PsiElement(identifier)('RContainer')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: RBound
                    CodeReferenceElement: RBound
                      PsiElement(identifier)('RBound')
                  PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace('\n              ')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: T => Result[S]
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Result[S]
                      SimpleType: Result
                        CodeReferenceElement: Result
                          PsiElement(identifier)('Result')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: S
                          CodeReferenceElement: S
                            PsiElement(identifier)('S')
                        PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('foo')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Result[S]
            SimpleType: Result
              CodeReferenceElement: Result
                PsiElement(identifier)('Result')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: S
                CodeReferenceElement: S
                  PsiElement(identifier)('S')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: flatMap
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('flatMap')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: S
              PsiElement(identifier)('S')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: Bound[S]
                SimpleType: Bound
                  CodeReferenceElement: Bound
                    PsiElement(identifier)('Bound')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: S
                    CodeReferenceElement: S
                      PsiElement(identifier)('S')
                  PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace('\n              ')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: T => MyType[S]
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    ParametrizedType: MyType[S]
                      SimpleType: MyType
                        CodeReferenceElement: MyType
                          PsiElement(identifier)('MyType')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: S
                          CodeReferenceElement: S
                            PsiElement(identifier)('S')
                        PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('foo')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: MyType[S]
            SimpleType: MyType
              CodeReferenceElement: MyType
                PsiElement(identifier)('MyType')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: S
                CodeReferenceElement: S
                  PsiElement(identifier)('S')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: moo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('moo')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: MList[Int]
            SimpleType: MList
              CodeReferenceElement: MList
                PsiElement(identifier)('MList')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScClass: MList
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('MList')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: el
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('el')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Monad[T, List, [X] =>> Any]
                  SimpleType: Monad
                    CodeReferenceElement: Monad
                      PsiElement(identifier)('Monad')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeLambda: [X] =>> Any
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: X
                          PsiElement(identifier)('X')
                        PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=>>)('=>>')
                      PsiWhiteSpace(' ')
                      SimpleType: Any
                        CodeReferenceElement: Any
                          PsiElement(identifier)('Any')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: flatMap
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('flatMap')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: S
                    PsiElement(identifier)('S')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    ParametrizedType: RBound[S]
                      SimpleType: RBound
                        CodeReferenceElement: RBound
                          PsiElement(identifier)('RBound')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: S
                          CodeReferenceElement: S
                            PsiElement(identifier)('S')
                        PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: RContainer
                    PsiElement(identifier)('RContainer')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: x
                        PsiElement(identifier)('x')
                        PsiWhiteSpace(' ')
                        PsiElement(<:)('<:')
                        PsiWhiteSpace(' ')
                        ParametrizedType: RBound[x]
                          SimpleType: RBound
                            CodeReferenceElement: RBound
                              PsiElement(identifier)('RBound')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: x
                              CodeReferenceElement: x
                                PsiElement(identifier)('x')
                            PsiElement(])(']')
                      PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: RBound
                    PsiElement(identifier)('RBound')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace('\n            ')
                  TypeParameter: Result
                    PsiElement(identifier)('Result')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: x
                        PsiElement(identifier)('x')
                        PsiWhiteSpace(' ')
                        PsiElement(<:)('<:')
                        PsiWhiteSpace(' ')
                        ParametrizedType: RBound[x]
                          SimpleType: RBound
                            CodeReferenceElement: RBound
                              PsiElement(identifier)('RBound')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: x
                              CodeReferenceElement: x
                                PsiElement(identifier)('x')
                            PsiElement(])(']')
                      PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Monad[x, RContainer, RBound]
                      SimpleType: Monad
                        CodeReferenceElement: Monad
                          PsiElement(identifier)('Monad')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: x
                          CodeReferenceElement: x
                            PsiElement(identifier)('x')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: RContainer
                          CodeReferenceElement: RContainer
                            PsiElement(identifier)('RContainer')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: RBound
                          CodeReferenceElement: RBound
                            PsiElement(identifier)('RBound')
                        PsiElement(])(']')
                  PsiElement(])(']')
                PsiWhiteSpace('\n            ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: T => Result[S]
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          ParametrizedType: Result[S]
                            SimpleType: Result
                              CodeReferenceElement: Result
                                PsiElement(identifier)('Result')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: S
                                CodeReferenceElement: S
                                  PsiElement(identifier)('S')
                              PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Result[S]
                  SimpleType: Result
                    CodeReferenceElement: Result
                      PsiElement(identifier)('Result')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: S
                      CodeReferenceElement: S
                        PsiElement(identifier)('S')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: sys.error
                    ReferenceExpression: sys
                      PsiElement(identifier)('sys')
                    PsiElement(.)('.')
                    PsiElement(identifier)('error')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"foo"')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: flatMap
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('flatMap')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: S
                    PsiElement(identifier)('S')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    ParametrizedType: RBound[S]
                      SimpleType: RBound
                        CodeReferenceElement: RBound
                          PsiElement(identifier)('RBound')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: S
                          CodeReferenceElement: S
                            PsiElement(identifier)('S')
                        PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: RContainer
                    PsiElement(identifier)('RContainer')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: x
                        PsiElement(identifier)('x')
                        PsiWhiteSpace(' ')
                        PsiElement(<:)('<:')
                        PsiWhiteSpace(' ')
                        ParametrizedType: RBound[x]
                          SimpleType: RBound
                            CodeReferenceElement: RBound
                              PsiElement(identifier)('RBound')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: x
                              CodeReferenceElement: x
                                PsiElement(identifier)('x')
                            PsiElement(])(']')
                      PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: RBound
                    PsiElement(identifier)('RBound')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace('\n            ')
                  TypeParameter: Result
                    PsiElement(identifier)('Result')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: x
                        PsiElement(identifier)('x')
                        PsiWhiteSpace(' ')
                        PsiElement(<:)('<:')
                        PsiWhiteSpace(' ')
                        ParametrizedType: RBound[x]
                          SimpleType: RBound
                            CodeReferenceElement: RBound
                              PsiElement(identifier)('RBound')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: x
                              CodeReferenceElement: x
                                PsiElement(identifier)('x')
                            PsiElement(])(']')
                      PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Monad[x, RContainer, RBound]
                      SimpleType: Monad
                        CodeReferenceElement: Monad
                          PsiElement(identifier)('Monad')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: x
                          CodeReferenceElement: x
                            PsiElement(identifier)('x')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: RContainer
                          CodeReferenceElement: RContainer
                            PsiElement(identifier)('RContainer')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: RBound
                          CodeReferenceElement: RBound
                            PsiElement(identifier)('RBound')
                        PsiElement(])(']')
                  PsiElement(])(']')
                PsiWhiteSpace('\n            ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: T => Result[S]
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          ParametrizedType: Result[S]
                            SimpleType: Result
                              CodeReferenceElement: Result
                                PsiElement(identifier)('Result')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: S
                                CodeReferenceElement: S
                                  PsiElement(identifier)('S')
                              PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: foo
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('foo')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: String
                          CodeReferenceElement: String
                            PsiElement(identifier)('String')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Result[S]
                  SimpleType: Result
                    CodeReferenceElement: Result
                      PsiElement(identifier)('Result')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: S
                      CodeReferenceElement: S
                        PsiElement(identifier)('S')
                    PsiElement(])(']')
                PsiWhiteSpace('  ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: sys.error
                    ReferenceExpression: sys
                      PsiElement(identifier)('sys')
                    PsiElement(.)('.')
                    PsiElement(identifier)('error')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"foo"')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: flatMap
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('flatMap')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: S
                    PsiElement(identifier)('S')
                  PsiElement(])(']')
                PsiWhiteSpace('\n            ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: T => List[S]
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          ParametrizedType: List[S]
                            SimpleType: List
                              CodeReferenceElement: List
                                PsiElement(identifier)('List')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: S
                                CodeReferenceElement: S
                                  PsiElement(identifier)('S')
                              PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: foo
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('foo')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: List[S]
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: S
                      CodeReferenceElement: S
                        PsiElement(identifier)('S')
                    PsiElement(])(']')
                PsiWhiteSpace('  ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: sys.error
                    ReferenceExpression: sys
                      PsiElement(identifier)('sys')
                    PsiElement(.)('.')
                    PsiElement(identifier)('error')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"foo"')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: l
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: l
              PsiElement(identifier)('l')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: MList[String]
            SimpleType: MList
              CodeReferenceElement: MList
                PsiElement(identifier)('MList')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            GenericCall
              ReferenceExpression: moo.flatMap
                ReferenceExpression: moo
                  PsiElement(identifier)('moo')
                PsiElement(.)('.')
                PsiElement(identifier)('flatMap')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                TypeLambda: [X] =>> Any
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: X
                      PsiElement(identifier)('X')
                    PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=>>)('=>>')
                  PsiWhiteSpace(' ')
                  SimpleType: Any
                    CodeReferenceElement: Any
                      PsiElement(identifier)('Any')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: MList
                  CodeReferenceElement: MList
                    PsiElement(identifier)('MList')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              FunctionExpression
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: MList
                          CodeReferenceElement: MList
                            PsiElement(identifier)('MList')
                        ArgumentList
                          PsiElement(()('(')
                          StringLiteral
                            PsiElement(string content)('"String"')
                          PsiElement())(')')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
