import scala.collection.mutable

abstract class Whatever[A] extends mutable.Set[A] {
  private[this] var count = 0
  count = 0
}
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.collection.mutable
        CodeReferenceElement: scala.collection
          CodeReferenceElement: scala
            PsiElement(identifier)('scala')
          PsiElement(.)('.')
          PsiElement(identifier)('collection')
        PsiElement(.)('.')
        PsiElement(identifier)('mutable')
  PsiWhiteSpace('\n\n')
  ScClass: Whatever
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(abstract)('abstract')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Whatever')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: mutable.Set[A]
            SimpleType: mutable.Set
              CodeReferenceElement: mutable.Set
                CodeReferenceElement: mutable
                  PsiElement(identifier)('mutable')
                PsiElement(.)('.')
                PsiElement(identifier)('Set')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScVariableDefinition: count
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
              PsiElement([)('[')
              PsiElement(this)('this')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(var)('var')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: count
              PsiElement(identifier)('count')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('0')
        PsiWhiteSpace('\n  ')
        AssignStatement
          ReferenceExpression: count
            PsiElement(identifier)('count')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('0')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
