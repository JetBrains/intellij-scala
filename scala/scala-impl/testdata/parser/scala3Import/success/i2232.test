object Cats {
  trait Trivial[A]
  implicit def trivial[A]: Trivial[A] = new Trivial[A] { }

  type Obj[C[_[_[_], _[_, _]]]] =
    [A]    =>> C[({type l[c0[_], c1[_, _]] = c0[A]   })#l]
  type Cat[C[_[_[_], _[_, _]]]] =
    [A, B] =>> C[({type l[c0[_], c1[_, _]] = c1[A, B]})#l]

  trait Category[C[_[_[_], _[_, _]]]] {
    type -> [X, Y] = Cats.Cat[C][X, Y]
    type Obj[X] = Cats.Obj[C][X]

    def id[A: Obj]: A -> A
    def andThen[A, B, C](ab: A -> B, bc: B -> C): A -> C
  }

  object Category {
    type ByF[F[_, _]] = Category[_] { type -> [X, Y] = F[X, Y] }
  }

  type Scal[f[_[_], _[_, _]]] = f[Trivial, Function1]

  implicit val scal: Category[Scal] = new Category[Scal] {
    def id[A: this.Obj]: A -> A = a => a
    def andThen[A, B, C](ab: A -> B, bc: B -> C): A -> C = ab.andThen(bc)
  }

  implicit class CategoryOps[F[_, _], A, B](ab: F[A, B]) {
    def >>>[C](bc: F[B, C])(implicit F: Category.ByF[F]): F[A, C] =
      ??? // F.andThen(ab, bc)  -- disabled since it does not typecheck
  }

  val f: Int => Int = _ + 1
  val g: Int => String = _.toString
  f >>> g
}
-----
ScalaFile
  ScObject: Cats
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Cats')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: Trivial
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Trivial')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: trivial
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('trivial')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Trivial[A]
            SimpleType: Trivial
              CodeReferenceElement: Trivial
                PsiElement(identifier)('Trivial')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Trivial[A]
                    SimpleType: Trivial
                      CodeReferenceElement: Trivial
                        PsiElement(identifier)('Trivial')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace(' ')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: Obj
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Obj')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: C
              PsiElement(identifier)('C')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: _
                      PsiElement(_)('_')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: _
                      PsiElement(_)('_')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          TypeLambda: [A]    =>> C[({type l[c0[_], c1[_, _]] = c0[A]   })#l]
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: A
                PsiElement(identifier)('A')
              PsiElement(])(']')
            PsiWhiteSpace('    ')
            PsiElement(=>>)('=>>')
            PsiWhiteSpace(' ')
            ParametrizedType: C[({type l[c0[_], c1[_, _]] = c0[A]   })#l]
              SimpleType: C
                CodeReferenceElement: C
                  PsiElement(identifier)('C')
              TypeArgumentsList
                PsiElement([)('[')
                TypeProjection: ({type l[c0[_], c1[_, _]] = c0[A]   })#l
                  TypeInParenthesis: ({type l[c0[_], c1[_, _]] = c0[A]   })
                    PsiElement(()('(')
                    CompoundType: {type l[c0[_], c1[_, _]] = c0[A]   }
                      Refinement
                        PsiElement({)('{')
                        ScTypeAliasDefinition: l
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(type)('type')
                          PsiWhiteSpace(' ')
                          PsiElement(identifier)('l')
                          TypeParameterClause
                            PsiElement([)('[')
                            TypeParameter: c0
                              PsiElement(identifier)('c0')
                              TypeParameterClause
                                PsiElement([)('[')
                                TypeParameter: _
                                  PsiElement(_)('_')
                                PsiElement(])(']')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            TypeParameter: c1
                              PsiElement(identifier)('c1')
                              TypeParameterClause
                                PsiElement([)('[')
                                TypeParameter: _
                                  PsiElement(_)('_')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                TypeParameter: _
                                  PsiElement(_)('_')
                                PsiElement(])(']')
                            PsiElement(])(']')
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          ParametrizedType: c0[A]
                            SimpleType: c0
                              CodeReferenceElement: c0
                                PsiElement(identifier)('c0')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                        PsiWhiteSpace('   ')
                        PsiElement(})('}')
                    PsiElement())(')')
                  PsiElement(#)('#')
                  PsiElement(identifier)('l')
                PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: Cat
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Cat')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: C
              PsiElement(identifier)('C')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: _
                      PsiElement(_)('_')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: _
                      PsiElement(_)('_')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          TypeLambda: [A, B] =>> C[({type l[c0[_], c1[_, _]] = c1[A, B]})#l]
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: A
                PsiElement(identifier)('A')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypeParameter: B
                PsiElement(identifier)('B')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>>)('=>>')
            PsiWhiteSpace(' ')
            ParametrizedType: C[({type l[c0[_], c1[_, _]] = c1[A, B]})#l]
              SimpleType: C
                CodeReferenceElement: C
                  PsiElement(identifier)('C')
              TypeArgumentsList
                PsiElement([)('[')
                TypeProjection: ({type l[c0[_], c1[_, _]] = c1[A, B]})#l
                  TypeInParenthesis: ({type l[c0[_], c1[_, _]] = c1[A, B]})
                    PsiElement(()('(')
                    CompoundType: {type l[c0[_], c1[_, _]] = c1[A, B]}
                      Refinement
                        PsiElement({)('{')
                        ScTypeAliasDefinition: l
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(type)('type')
                          PsiWhiteSpace(' ')
                          PsiElement(identifier)('l')
                          TypeParameterClause
                            PsiElement([)('[')
                            TypeParameter: c0
                              PsiElement(identifier)('c0')
                              TypeParameterClause
                                PsiElement([)('[')
                                TypeParameter: _
                                  PsiElement(_)('_')
                                PsiElement(])(']')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            TypeParameter: c1
                              PsiElement(identifier)('c1')
                              TypeParameterClause
                                PsiElement([)('[')
                                TypeParameter: _
                                  PsiElement(_)('_')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                TypeParameter: _
                                  PsiElement(_)('_')
                                PsiElement(])(']')
                            PsiElement(])(']')
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          ParametrizedType: c1[A, B]
                            SimpleType: c1
                              CodeReferenceElement: c1
                                PsiElement(identifier)('c1')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                        PsiElement(})('}')
                    PsiElement())(')')
                  PsiElement(#)('#')
                  PsiElement(identifier)('l')
                PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Category
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Category')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: C
              PsiElement(identifier)('C')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: _
                      PsiElement(_)('_')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: _
                      PsiElement(_)('_')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeParameter: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: ->
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('->')
                PsiWhiteSpace(' ')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: Y
                    PsiElement(identifier)('Y')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ParametrizedType: Cats.Cat[C][X, Y]
                  ParametrizedType: Cats.Cat[C]
                    SimpleType: Cats.Cat
                      CodeReferenceElement: Cats.Cat
                        CodeReferenceElement: Cats
                          PsiElement(identifier)('Cats')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Cat')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      PsiElement(])(']')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: Y
                      CodeReferenceElement: Y
                        PsiElement(identifier)('Y')
                    PsiElement(])(']')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: Obj
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Obj')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: X
                    PsiElement(identifier)('X')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ParametrizedType: Cats.Obj[C][X]
                  ParametrizedType: Cats.Obj[C]
                    SimpleType: Cats.Obj
                      CodeReferenceElement: Cats.Obj
                        CodeReferenceElement: Cats
                          PsiElement(identifier)('Cats')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Obj')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      PsiElement(])(']')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: X
                      CodeReferenceElement: X
                        PsiElement(identifier)('X')
                    PsiElement(])(']')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDeclaration: id
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('id')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: Obj
                      CodeReferenceElement: Obj
                        PsiElement(identifier)('Obj')
                  PsiElement(])(']')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                InfixType: A -> A
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: ->
                    PsiElement(identifier)('->')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: andThen
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('andThen')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: C
                    PsiElement(identifier)('C')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: ab
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ab')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        InfixType: A -> B
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: ->
                            PsiElement(identifier)('->')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: bc
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('bc')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        InfixType: B -> C
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: ->
                            PsiElement(identifier)('->')
                          PsiWhiteSpace(' ')
                          SimpleType: C
                            CodeReferenceElement: C
                              PsiElement(identifier)('C')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                InfixType: A -> C
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: ->
                    PsiElement(identifier)('->')
                  PsiWhiteSpace(' ')
                  SimpleType: C
                    CodeReferenceElement: C
                      PsiElement(identifier)('C')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: Category
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Category')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: ByF
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('ByF')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: F
                    PsiElement(identifier)('F')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                CompoundType: Category[_] { type -> [X, Y] = F[X, Y] }
                  ParametrizedType: Category[_]
                    SimpleType: Category
                      CodeReferenceElement: Category
                        PsiElement(identifier)('Category')
                    TypeArgumentsList
                      PsiElement([)('[')
                      WildcardType: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  Refinement
                    PsiElement({)('{')
                    PsiWhiteSpace(' ')
                    ScTypeAliasDefinition: ->
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(type)('type')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('->')
                      PsiWhiteSpace(' ')
                      TypeParameterClause
                        PsiElement([)('[')
                        TypeParameter: X
                          PsiElement(identifier)('X')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeParameter: Y
                          PsiElement(identifier)('Y')
                        PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      ParametrizedType: F[X, Y]
                        SimpleType: F
                          CodeReferenceElement: F
                            PsiElement(identifier)('F')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: X
                            CodeReferenceElement: X
                              PsiElement(identifier)('X')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: Y
                            CodeReferenceElement: Y
                              PsiElement(identifier)('Y')
                          PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: Scal
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Scal')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: f
              PsiElement(identifier)('f')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: _
                      PsiElement(_)('_')
                    PsiElement(])(']')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                TypeParameter: _
                  PsiElement(_)('_')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: _
                      PsiElement(_)('_')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: _
                      PsiElement(_)('_')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: f[Trivial, Function1]
            SimpleType: f
              CodeReferenceElement: f
                PsiElement(identifier)('f')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Trivial
                CodeReferenceElement: Trivial
                  PsiElement(identifier)('Trivial')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Function1
                CodeReferenceElement: Function1
                  PsiElement(identifier)('Function1')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: scal
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: scal
              PsiElement(identifier)('scal')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Category[Scal]
            SimpleType: Category
              CodeReferenceElement: Category
                PsiElement(identifier)('Category')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Scal
                CodeReferenceElement: Scal
                  PsiElement(identifier)('Scal')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Category[Scal]
                    SimpleType: Category
                      CodeReferenceElement: Category
                        PsiElement(identifier)('Category')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Scal
                        CodeReferenceElement: Scal
                          PsiElement(identifier)('Scal')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: id
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('id')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: A
                      PsiElement(identifier)('A')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      SimpleType: this.Obj
                        CodeReferenceElement: this.Obj
                          ThisReference
                            PsiElement(this)('this')
                          PsiElement(.)('.')
                          PsiElement(identifier)('Obj')
                    PsiElement(])(']')
                  Parameters
                    <empty list>
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  InfixType: A -> A
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiWhiteSpace(' ')
                    CodeReferenceElement: ->
                      PsiElement(identifier)('->')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  FunctionExpression
                    Parameters
                      ParametersClause
                        Parameter: a
                          PsiElement(identifier)('a')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: a
                      PsiElement(identifier)('a')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: andThen
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('andThen')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: A
                      PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: C
                      PsiElement(identifier)('C')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: ab
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('ab')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          InfixType: A -> B
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiWhiteSpace(' ')
                            CodeReferenceElement: ->
                              PsiElement(identifier)('->')
                            PsiWhiteSpace(' ')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      Parameter: bc
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('bc')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          InfixType: B -> C
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiWhiteSpace(' ')
                            CodeReferenceElement: ->
                              PsiElement(identifier)('->')
                            PsiWhiteSpace(' ')
                            SimpleType: C
                              CodeReferenceElement: C
                                PsiElement(identifier)('C')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  InfixType: A -> C
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiWhiteSpace(' ')
                    CodeReferenceElement: ->
                      PsiElement(identifier)('->')
                    PsiWhiteSpace(' ')
                    SimpleType: C
                      CodeReferenceElement: C
                        PsiElement(identifier)('C')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: ab.andThen
                      ReferenceExpression: ab
                        PsiElement(identifier)('ab')
                      PsiElement(.)('.')
                      PsiElement(identifier)('andThen')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: bc
                        PsiElement(identifier)('bc')
                      PsiElement())(')')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: CategoryOps
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('CategoryOps')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: ab
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('ab')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: F[A, B]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                        PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: >>>
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('>>>')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: C
                    PsiElement(identifier)('C')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: bc
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('bc')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: F[B, C]
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: B
                              CodeReferenceElement: B
                                PsiElement(identifier)('B')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: C
                              CodeReferenceElement: C
                                PsiElement(identifier)('C')
                            PsiElement(])(']')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: F
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('F')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Category.ByF[F]
                          SimpleType: Category.ByF
                            CodeReferenceElement: Category.ByF
                              CodeReferenceElement: Category
                                PsiElement(identifier)('Category')
                              PsiElement(.)('.')
                              PsiElement(identifier)('ByF')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: F
                              CodeReferenceElement: F
                                PsiElement(identifier)('F')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: F[A, C]
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: C
                      CodeReferenceElement: C
                        PsiElement(identifier)('C')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// F.andThen(ab, bc)  -- disabled since it does not typecheck')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: f
              PsiElement(identifier)('f')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          FunctionalType: Int => Int
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            UnderscoreSection
              PsiElement(_)('_')
            PsiWhiteSpace(' ')
            ReferenceExpression: +
              PsiElement(identifier)('+')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('1')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: g
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: g
              PsiElement(identifier)('g')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          FunctionalType: Int => String
            SimpleType: Int
              CodeReferenceElement: Int
                PsiElement(identifier)('Int')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: _.toString
            UnderscoreSection
              PsiElement(_)('_')
            PsiElement(.)('.')
            PsiElement(identifier)('toString')
        PsiWhiteSpace('\n  ')
        InfixExpression
          ReferenceExpression: f
            PsiElement(identifier)('f')
          PsiWhiteSpace(' ')
          ReferenceExpression: >>>
            PsiElement(identifier)('>>>')
          PsiWhiteSpace(' ')
          ReferenceExpression: g
            PsiElement(identifier)('g')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
