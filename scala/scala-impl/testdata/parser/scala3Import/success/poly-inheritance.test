// A strawman collection design study in a nutshell
import reflect.ClassTag
import Predef.???

class It[+A] extends Ops[A, It, It[A]]

trait Ops[+A, +CC[_], +C] extends Any {
  def filter(f: A => Boolean): C = ???
  def map[B](f: A => B): CC[B] = ???
  def toSeq: It[A] = ???
}

class ArraySeq[A] extends It[A] with Ops[A, ArraySeq, ArraySeq[A]]


class LP {
  implicit def arrayToSeq[A](xs: Array[A]): ArraySeq[A] = ???
}
object Test extends LP {

  implicit class ArrOps[A](val xs: Array[A]) extends AnyVal with Ops[A, ArraySeq, Array[A]] {
    def map[B: ClassTag](f: A => B): Array[B] = ???
    override def toSeq: ArraySeq[A] = arrayToSeq(xs)
  }

  val xs1 = Array(1, 2, 3)
  val xs2 = xs1.filter(_ % 2 == 0)
  val xs2a: Array[Int] = xs2
  val xs3 = xs1.map(_ + "!")
  val xs3a: Array[String] = xs3

  def f[T](f: Int => T) = {
    val xs1 = Array(1, 2, 3)
    val xs2 = xs1.filter(_ % 2 == 0)
    val xs2a: Array[Int] = xs2
    val xs3 = xs1.toSeq.map(f)
    val xs3a: ArraySeq[T] = xs3
  }
}





-----
ScalaFile
  PsiComment(comment)('// A strawman collection design study in a nutshell')
  PsiWhiteSpace('\n')
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: reflect.ClassTag
        CodeReferenceElement: reflect
          PsiElement(identifier)('reflect')
        PsiElement(.)('.')
        PsiElement(identifier)('ClassTag')
  PsiWhiteSpace('\n')
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: Predef.???
        CodeReferenceElement: Predef
          PsiElement(identifier)('Predef')
        PsiElement(.)('.')
        PsiElement(identifier)('???')
  PsiWhiteSpace('\n\n')
  ScClass: It
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('It')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('+')
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Ops[A, It, It[A]]
            SimpleType: Ops
              CodeReferenceElement: Ops
                PsiElement(identifier)('Ops')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: It
                CodeReferenceElement: It
                  PsiElement(identifier)('It')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ParametrizedType: It[A]
                SimpleType: It
                  CodeReferenceElement: It
                    PsiElement(identifier)('It')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScTrait: Ops
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Ops')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('+')
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: CC
        PsiElement(identifier)('+')
        PsiElement(identifier)('CC')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: C
        PsiElement(identifier)('+')
        PsiElement(identifier)('C')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Any
            CodeReferenceElement: Any
              PsiElement(identifier)('Any')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: filter
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('filter')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: A => Boolean
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: Boolean
                      CodeReferenceElement: Boolean
                        PsiElement(identifier)('Boolean')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: C
            CodeReferenceElement: C
              PsiElement(identifier)('C')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: map
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('map')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: A => B
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: CC[B]
            SimpleType: CC
              CodeReferenceElement: CC
                PsiElement(identifier)('CC')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: toSeq
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('toSeq')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: It[A]
            SimpleType: It
              CodeReferenceElement: It
                PsiElement(identifier)('It')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: ArraySeq
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ArraySeq')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: It[A]
            SimpleType: It
              CodeReferenceElement: It
                PsiElement(identifier)('It')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(with)('with')
        PsiWhiteSpace(' ')
        ConstructorInvocation
          ParametrizedType: Ops[A, ArraySeq, ArraySeq[A]]
            SimpleType: Ops
              CodeReferenceElement: Ops
                PsiElement(identifier)('Ops')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: ArraySeq
                CodeReferenceElement: ArraySeq
                  PsiElement(identifier)('ArraySeq')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              ParametrizedType: ArraySeq[A]
                SimpleType: ArraySeq
                  CodeReferenceElement: ArraySeq
                    PsiElement(identifier)('ArraySeq')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n\n')
  ScClass: LP
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('LP')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: arrayToSeq
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('arrayToSeq')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[A]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: ArraySeq[A]
            SimpleType: ArraySeq
              CodeReferenceElement: ArraySeq
                PsiElement(identifier)('ArraySeq')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: LP
            CodeReferenceElement: LP
              PsiElement(identifier)('LP')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScClass: ArrOps
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ArrOps')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: xs
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('xs')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: Array[A]
                      SimpleType: Array
                        CodeReferenceElement: Array
                          PsiElement(identifier)('Array')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: AnyVal
                  CodeReferenceElement: AnyVal
                    PsiElement(identifier)('AnyVal')
              PsiWhiteSpace(' ')
              PsiElement(with)('with')
              PsiWhiteSpace(' ')
              ConstructorInvocation
                ParametrizedType: Ops[A, ArraySeq, Array[A]]
                  SimpleType: Ops
                    CodeReferenceElement: Ops
                      PsiElement(identifier)('Ops')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: ArraySeq
                      CodeReferenceElement: ArraySeq
                        PsiElement(identifier)('ArraySeq')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ParametrizedType: Array[A]
                      SimpleType: Array
                        CodeReferenceElement: Array
                          PsiElement(identifier)('Array')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: map
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('map')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: ClassTag
                      CodeReferenceElement: ClassTag
                        PsiElement(identifier)('ClassTag')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: A => B
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Array[B]
                  SimpleType: Array
                    CodeReferenceElement: Array
                      PsiElement(identifier)('Array')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: toSeq
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('toSeq')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: ArraySeq[A]
                  SimpleType: ArraySeq
                    CodeReferenceElement: ArraySeq
                      PsiElement(identifier)('ArraySeq')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: arrayToSeq
                    PsiElement(identifier)('arrayToSeq')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: xs
                      PsiElement(identifier)('xs')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: xs1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xs1
              PsiElement(identifier)('xs1')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Array
              PsiElement(identifier)('Array')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('2')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('3')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: xs2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xs2
              PsiElement(identifier)('xs2')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: xs1.filter
              ReferenceExpression: xs1
                PsiElement(identifier)('xs1')
              PsiElement(.)('.')
              PsiElement(identifier)('filter')
            ArgumentList
              PsiElement(()('(')
              InfixExpression
                InfixExpression
                  UnderscoreSection
                    PsiElement(_)('_')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: %
                    PsiElement(identifier)('%')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                PsiWhiteSpace(' ')
                ReferenceExpression: ==
                  PsiElement(identifier)('==')
                PsiWhiteSpace(' ')
                IntegerLiteral
                  PsiElement(integer)('0')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: xs2a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xs2a
              PsiElement(identifier)('xs2a')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Array[Int]
            SimpleType: Array
              CodeReferenceElement: Array
                PsiElement(identifier)('Array')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: xs2
            PsiElement(identifier)('xs2')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: xs3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xs3
              PsiElement(identifier)('xs3')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: xs1.map
              ReferenceExpression: xs1
                PsiElement(identifier)('xs1')
              PsiElement(.)('.')
              PsiElement(identifier)('map')
            ArgumentList
              PsiElement(()('(')
              InfixExpression
                UnderscoreSection
                  PsiElement(_)('_')
                PsiWhiteSpace(' ')
                ReferenceExpression: +
                  PsiElement(identifier)('+')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('"!"')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: xs3a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xs3a
              PsiElement(identifier)('xs3a')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Array[String]
            SimpleType: Array
              CodeReferenceElement: Array
                PsiElement(identifier)('Array')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: xs3
            PsiElement(identifier)('xs3')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: Int => T
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: xs1
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: xs1
                  PsiElement(identifier)('xs1')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: Array
                  PsiElement(identifier)('Array')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: xs2
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: xs2
                  PsiElement(identifier)('xs2')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: xs1.filter
                  ReferenceExpression: xs1
                    PsiElement(identifier)('xs1')
                  PsiElement(.)('.')
                  PsiElement(identifier)('filter')
                ArgumentList
                  PsiElement(()('(')
                  InfixExpression
                    InfixExpression
                      UnderscoreSection
                        PsiElement(_)('_')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: %
                        PsiElement(identifier)('%')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('2')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: ==
                      PsiElement(identifier)('==')
                    PsiWhiteSpace(' ')
                    IntegerLiteral
                      PsiElement(integer)('0')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: xs2a
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: xs2a
                  PsiElement(identifier)('xs2a')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: Array[Int]
                SimpleType: Array
                  CodeReferenceElement: Array
                    PsiElement(identifier)('Array')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: xs2
                PsiElement(identifier)('xs2')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: xs3
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: xs3
                  PsiElement(identifier)('xs3')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: xs1.toSeq.map
                  ReferenceExpression: xs1.toSeq
                    ReferenceExpression: xs1
                      PsiElement(identifier)('xs1')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toSeq')
                  PsiElement(.)('.')
                  PsiElement(identifier)('map')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: f
                    PsiElement(identifier)('f')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: xs3a
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: xs3a
                  PsiElement(identifier)('xs3a')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: ArraySeq[T]
                SimpleType: ArraySeq
                  CodeReferenceElement: ArraySeq
                    PsiElement(identifier)('ArraySeq')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: xs3
                PsiElement(identifier)('xs3')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
