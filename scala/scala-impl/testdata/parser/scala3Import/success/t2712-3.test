package test

object Test1 {
  class Foo[T, F[_]]
  def meh[M[_[_]], F[_]](x: M[F]): M[F] = x
  meh(new Foo[Int, List]) // solves ?M = [X[_]]Foo[Int, X[_]] ?A = List ...
}

object Test2 {
  trait TC[T]
  class Foo[F[_], G[_]]
  def meh[GG[_[_]]](g: GG[TC]) = ???
  meh(new Foo[TC, TC]) // solves ?G = [X[_]]Foo[TC, X]
}

object Test3 {
  trait TC[F[_]]
  trait TC2[F[_]]
  class Foo[F[_[_]], G[_[_]]]
  new Foo[TC, TC2]

  def meh[G[_[_[_]]]](g: G[TC2]) = ???
  meh(new Foo[TC, TC2]) // solves ?G = [X[_[_]]]Foo[TC, X]
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: test
      PsiElement(identifier)('test')
    PsiWhiteSpace('\n\n')
    ScObject: Test1
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test1')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScClass: Foo
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('Foo')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypeParameter: F
                PsiElement(identifier)('F')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                <empty list>
            ExtendsBlock
              <empty list>
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: meh
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('meh')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: M
                PsiElement(identifier)('M')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypeParameter: F
                PsiElement(identifier)('F')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: M[F]
                      SimpleType: M
                        CodeReferenceElement: M
                          PsiElement(identifier)('M')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: F
                          CodeReferenceElement: F
                            PsiElement(identifier)('F')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: M[F]
              SimpleType: M
                CodeReferenceElement: M
                  PsiElement(identifier)('M')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: F
                  CodeReferenceElement: F
                    PsiElement(identifier)('F')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: x
              PsiElement(identifier)('x')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: meh
              PsiElement(identifier)('meh')
            ArgumentList
              PsiElement(()('(')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Foo[Int, List]
                        SimpleType: Foo
                          CodeReferenceElement: Foo
                            PsiElement(identifier)('Foo')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: List
                            CodeReferenceElement: List
                              PsiElement(identifier)('List')
                          PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiComment(comment)('// solves ?M = [X[_]]Foo[Int, X[_]] ?A = List ...')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScObject: Test2
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test2')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScTrait: TC
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(trait)('trait')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('TC')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: T
                PsiElement(identifier)('T')
              PsiElement(])(']')
            ExtendsBlock
              <empty list>
          PsiWhiteSpace('\n  ')
          ScClass: Foo
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('Foo')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: F
                PsiElement(identifier)('F')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypeParameter: G
                PsiElement(identifier)('G')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                <empty list>
            ExtendsBlock
              <empty list>
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: meh
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('meh')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: GG
                PsiElement(identifier)('GG')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: g
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('g')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: GG[TC]
                      SimpleType: GG
                        CodeReferenceElement: GG
                          PsiElement(identifier)('GG')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: TC
                          CodeReferenceElement: TC
                            PsiElement(identifier)('TC')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: ???
              PsiElement(identifier)('???')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: meh
              PsiElement(identifier)('meh')
            ArgumentList
              PsiElement(()('(')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Foo[TC, TC]
                        SimpleType: Foo
                          CodeReferenceElement: Foo
                            PsiElement(identifier)('Foo')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: TC
                            CodeReferenceElement: TC
                              PsiElement(identifier)('TC')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: TC
                            CodeReferenceElement: TC
                              PsiElement(identifier)('TC')
                          PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiComment(comment)('// solves ?G = [X[_]]Foo[TC, X]')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScObject: Test3
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test3')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScTrait: TC
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(trait)('trait')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('TC')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: F
                PsiElement(identifier)('F')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiElement(])(']')
            ExtendsBlock
              <empty list>
          PsiWhiteSpace('\n  ')
          ScTrait: TC2
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(trait)('trait')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('TC2')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: F
                PsiElement(identifier)('F')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiElement(])(']')
            ExtendsBlock
              <empty list>
          PsiWhiteSpace('\n  ')
          ScClass: Foo
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('Foo')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: F
                PsiElement(identifier)('F')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              TypeParameter: G
                PsiElement(identifier)('G')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(])(']')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                <empty list>
            ExtendsBlock
              <empty list>
          PsiWhiteSpace('\n  ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Foo[TC, TC2]
                    SimpleType: Foo
                      CodeReferenceElement: Foo
                        PsiElement(identifier)('Foo')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: TC
                        CodeReferenceElement: TC
                          PsiElement(identifier)('TC')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: TC2
                        CodeReferenceElement: TC2
                          PsiElement(identifier)('TC2')
                      PsiElement(])(']')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: meh
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('meh')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: G
                PsiElement(identifier)('G')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                        TypeParameterClause
                          PsiElement([)('[')
                          TypeParameter: _
                            PsiElement(_)('_')
                          PsiElement(])(']')
                      PsiElement(])(']')
                  PsiElement(])(']')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: g
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('g')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: G[TC2]
                      SimpleType: G
                        CodeReferenceElement: G
                          PsiElement(identifier)('G')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: TC2
                          CodeReferenceElement: TC2
                            PsiElement(identifier)('TC2')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: ???
              PsiElement(identifier)('???')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: meh
              PsiElement(identifier)('meh')
            ArgumentList
              PsiElement(()('(')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: Foo[TC, TC2]
                        SimpleType: Foo
                          CodeReferenceElement: Foo
                            PsiElement(identifier)('Foo')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: TC
                            CodeReferenceElement: TC
                              PsiElement(identifier)('TC')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: TC2
                            CodeReferenceElement: TC2
                              PsiElement(identifier)('TC2')
                          PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiComment(comment)('// solves ?G = [X[_[_]]]Foo[TC, X]')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
