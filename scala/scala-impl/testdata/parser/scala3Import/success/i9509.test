enum AList[+A] {
  case Cons[X](head: X, tail: AList[X]) extends AList[X]
  case Nil
}

object AList {
  extension [A](l: AList[A]) def sum(using numeric: Numeric[A]): A = l match {
    case Cons(x, xs) => numeric.plus(x, xs.sum(using numeric))
    case Nil         => numeric.zero
  }
}
-----
ScalaFile
  ScEnum: AList
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('AList')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('+')
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Cons
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumClassCase: Cons
            PsiElement(identifier)('Cons')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: X
                PsiElement(identifier)('X')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: head
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('head')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: X
                        CodeReferenceElement: X
                          PsiElement(identifier)('X')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ClassParameter: tail
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('tail')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: AList[X]
                        SimpleType: AList
                          CodeReferenceElement: AList
                            PsiElement(identifier)('AList')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: X
                            CodeReferenceElement: X
                              PsiElement(identifier)('X')
                          PsiElement(])(']')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: AList[X]
                    SimpleType: AList
                      CodeReferenceElement: AList
                        PsiElement(identifier)('AList')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: X
                        CodeReferenceElement: X
                          PsiElement(identifier)('X')
                      PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScEnumCases: Nil
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: Nil
            PsiElement(identifier)('Nil')
            ExtendsBlock
              <empty list>
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: AList
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('AList')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        Extension on AList[A]
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: l
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('l')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: AList[A]
                    SimpleType: AList
                      CodeReferenceElement: AList
                        PsiElement(identifier)('AList')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          ScExtensionBody
            ScFunctionDefinition: sum
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('sum')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  PsiElement(using)('using')
                  PsiWhiteSpace(' ')
                  Parameter: numeric
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('numeric')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: Numeric[A]
                        SimpleType: Numeric
                          CodeReferenceElement: Numeric
                            PsiElement(identifier)('Numeric')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MatchStatement
                ReferenceExpression: l
                  PsiElement(identifier)('l')
                PsiWhiteSpace(' ')
                PsiElement(match)('match')
                PsiWhiteSpace(' ')
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                CaseClauses
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    ConstructorPattern
                      CodeReferenceElement: Cons
                        PsiElement(identifier)('Cons')
                      Pattern Argument List
                        PsiElement(()('(')
                        ReferencePattern: x
                          PsiElement(identifier)('x')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        ReferencePattern: xs
                          PsiElement(identifier)('xs')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      MethodCall
                        ReferenceExpression: numeric.plus
                          ReferenceExpression: numeric
                            PsiElement(identifier)('numeric')
                          PsiElement(.)('.')
                          PsiElement(identifier)('plus')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          MethodCall
                            ReferenceExpression: xs.sum
                              ReferenceExpression: xs
                                PsiElement(identifier)('xs')
                              PsiElement(.)('.')
                              PsiElement(identifier)('sum')
                            ArgumentList
                              PsiElement(()('(')
                              PsiElement(using)('using')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: numeric
                                PsiElement(identifier)('numeric')
                              PsiElement())(')')
                          PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    StableElementPattern
                      ReferenceExpression: Nil
                        PsiElement(identifier)('Nil')
                    PsiWhiteSpace('         ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ReferenceExpression: numeric.zero
                        ReferenceExpression: numeric
                          PsiElement(identifier)('numeric')
                        PsiElement(.)('.')
                        PsiElement(identifier)('zero')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
