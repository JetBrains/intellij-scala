// both styles of abstraction should behave the same
// related to 1210 because that bug broke the OO version below
trait OO {
  abstract class Test { self =>
    type T

    val v: Test {type T = self.T} = self.v.v
  }
}

trait FP {
  abstract class Test[T] {
    val v: Test[T] = v.v
  }
}
-----
ScalaFile
  ScTrait: OO
    PsiComment(comment)('// both styles of abstraction should behave the same')
    PsiWhiteSpace('\n')
    PsiComment(comment)('// related to 1210 because that bug broke the OO version below')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('OO')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: Test
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(abstract)('abstract')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Test')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              SelfType: self
                PsiElement(identifier)('self')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDeclaration: T
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('T')
              PsiWhiteSpace('\n\n    ')
              ScPatternDefinition: v
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: v
                    PsiElement(identifier)('v')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                CompoundType: Test {type T = self.T}
                  SimpleType: Test
                    CodeReferenceElement: Test
                      PsiElement(identifier)('Test')
                  PsiWhiteSpace(' ')
                  Refinement
                    PsiElement({)('{')
                    ScTypeAliasDefinition: T
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(type)('type')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('T')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      SimpleType: self.T
                        CodeReferenceElement: self.T
                          CodeReferenceElement: self
                            PsiElement(identifier)('self')
                          PsiElement(.)('.')
                          PsiElement(identifier)('T')
                    PsiElement(})('}')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: self.v.v
                  ReferenceExpression: self.v
                    ReferenceExpression: self
                      PsiElement(identifier)('self')
                    PsiElement(.)('.')
                    PsiElement(identifier)('v')
                  PsiElement(.)('.')
                  PsiElement(identifier)('v')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: FP
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('FP')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: Test
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(abstract)('abstract')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Test')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: v
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: v
                    PsiElement(identifier)('v')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Test[T]
                  SimpleType: Test
                    CodeReferenceElement: Test
                      PsiElement(identifier)('Test')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: v.v
                  ReferenceExpression: v
                    PsiElement(identifier)('v')
                  PsiElement(.)('.')
                  PsiElement(identifier)('v')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
