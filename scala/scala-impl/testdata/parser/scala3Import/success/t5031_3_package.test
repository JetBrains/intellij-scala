package foo

package object bar {
  type Foo = Int => String
}

-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: foo
      PsiElement(identifier)('foo')
    PsiWhiteSpace('\n\n')
    ScObject: bar
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(package)('package')
      PsiWhiteSpace(' ')
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('bar')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScTypeAliasDefinition: Foo
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(type)('type')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('Foo')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            FunctionalType: Int => String
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
