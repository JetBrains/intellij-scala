package hello

import scala.annotation.tailrec

class Enclosing {
  class SomeData(val x: Int)

  def localDef(): Unit = {
    def foo(data: SomeData): Int = data.x

    @tailrec
    def test(i: Int, data: SomeData): Unit = {
      if (i != 0) {
        println(foo(data))
        test(i - 1, data)
      }
    }

    test(3, new SomeData(42))
  }
}

object world extends App {
  println("hello dotty!")
  new Enclosing().localDef()
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: hello
      PsiElement(identifier)('hello')
    PsiWhiteSpace('\n\n')
    ScImportStatement
      PsiElement(import)('import')
      PsiWhiteSpace(' ')
      ImportExpression
        CodeReferenceElement: scala.annotation.tailrec
          CodeReferenceElement: scala.annotation
            CodeReferenceElement: scala
              PsiElement(identifier)('scala')
            PsiElement(.)('.')
            PsiElement(identifier)('annotation')
          PsiElement(.)('.')
          PsiElement(identifier)('tailrec')
    PsiWhiteSpace('\n\n')
    ScClass: Enclosing
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Enclosing')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScClass: SomeData
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('SomeData')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: x
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('x')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                  PsiElement())(')')
            ExtendsBlock
              <empty list>
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: localDef
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('localDef')
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: data
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('data')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: SomeData
                          CodeReferenceElement: SomeData
                            PsiElement(identifier)('SomeData')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: data.x
                  ReferenceExpression: data
                    PsiElement(identifier)('data')
                  PsiElement(.)('.')
                  PsiElement(identifier)('x')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: test
                AnnotationsList
                  Annotation
                    PsiElement(@)('@')
                    AnnotationExpression
                      ConstructorInvocation
                        SimpleType: tailrec
                          CodeReferenceElement: tailrec
                            PsiElement(identifier)('tailrec')
                Modifiers
                  <empty list>
                PsiWhiteSpace('\n    ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('test')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: i
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('i')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: data
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('data')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: SomeData
                          CodeReferenceElement: SomeData
                            PsiElement(identifier)('SomeData')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  IfStatement
                    PsiElement(if)('if')
                    PsiWhiteSpace(' ')
                    PsiElement(()('(')
                    InfixExpression
                      ReferenceExpression: i
                        PsiElement(identifier)('i')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: !=
                        PsiElement(identifier)('!=')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('0')
                    PsiElement())(')')
                    PsiWhiteSpace(' ')
                    BlockExpression
                      PsiElement({)('{')
                      PsiWhiteSpace('\n        ')
                      MethodCall
                        ReferenceExpression: println
                          PsiElement(identifier)('println')
                        ArgumentList
                          PsiElement(()('(')
                          MethodCall
                            ReferenceExpression: foo
                              PsiElement(identifier)('foo')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: data
                                PsiElement(identifier)('data')
                              PsiElement())(')')
                          PsiElement())(')')
                      PsiWhiteSpace('\n        ')
                      MethodCall
                        ReferenceExpression: test
                          PsiElement(identifier)('test')
                        ArgumentList
                          PsiElement(()('(')
                          InfixExpression
                            ReferenceExpression: i
                              PsiElement(identifier)('i')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: -
                              PsiElement(identifier)('-')
                            PsiWhiteSpace(' ')
                            IntegerLiteral
                              PsiElement(integer)('1')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: data
                            PsiElement(identifier)('data')
                          PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n    ')
              MethodCall
                ReferenceExpression: test
                  PsiElement(identifier)('test')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: SomeData
                            CodeReferenceElement: SomeData
                              PsiElement(identifier)('SomeData')
                          ArgumentList
                            PsiElement(()('(')
                            IntegerLiteral
                              PsiElement(integer)('42')
                            PsiElement())(')')
                  PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScObject: world
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('world')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: App
              CodeReferenceElement: App
                PsiElement(identifier)('App')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: println
              PsiElement(identifier)('println')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"hello dotty!"')
              PsiElement())(')')
          PsiWhiteSpace('\n  ')
          MethodCall
            ReferenceExpression: new Enclosing().localDef
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      SimpleType: Enclosing
                        CodeReferenceElement: Enclosing
                          PsiElement(identifier)('Enclosing')
                      ArgumentList
                        PsiElement(()('(')
                        PsiElement())(')')
              PsiElement(.)('.')
              PsiElement(identifier)('localDef')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
