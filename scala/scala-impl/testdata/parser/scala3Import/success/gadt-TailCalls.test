// package scala.util.control
object TailCalls {

  abstract class TailRec[+A] {

    final def flatMap[B](f: A => TailRec[B]): TailRec[B] =
      this match {
        case Done(a) => Call(() => f(a))
        case c@Call(_) => Cont(c, f)
        case c: Cont[a1, b1] => Cont(c.a, (x: a1) => c.f(x) flatMap f)
      }

    @annotation.tailrec final def resume: Either[() => TailRec[A], A] = this match {
      case Done(a) => Right(a)
      case Call(k) => Left(k)
      case Cont(a, f) => a match {
        case Done(v) => f(v).resume
        case Call(k) => Left(() => k().flatMap(f))
        case Cont(b, g) => b.flatMap(x => g(x) flatMap f).resume
      }
    }

    @annotation.tailrec final def result: A = this match {
      case Done(a) => a
      case Call(t) => t().result
      case Cont(a, f) => a match {
        case Done(v) => f(v).result
        case Call(t) => t().flatMap(f).result
        case Cont(b, g) => b.flatMap(x => g(x) flatMap f).result
      }
    }
  }

  protected case class Call[A](rest: () => TailRec[A]) extends TailRec[A]

  protected case class Done[A](value: A) extends TailRec[A]

  protected case class Cont[A, B](a: TailRec[A], f: A => TailRec[B]) extends TailRec[B]
}
-----
ScalaFile
  ScObject: TailCalls
    PsiComment(comment)('// package scala.util.control')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TailCalls')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScClass: TailRec
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(abstract)('abstract')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TailRec')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('+')
              PsiElement(identifier)('A')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: flatMap
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('flatMap')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: A => TailRec[B]
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          ParametrizedType: TailRec[B]
                            SimpleType: TailRec
                              CodeReferenceElement: TailRec
                                PsiElement(identifier)('TailRec')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: B
                                CodeReferenceElement: B
                                  PsiElement(identifier)('B')
                              PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: TailRec[B]
                  SimpleType: TailRec
                    CodeReferenceElement: TailRec
                      PsiElement(identifier)('TailRec')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                MatchStatement
                  ThisReference
                    PsiElement(this)('this')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n        ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Done
                          PsiElement(identifier)('Done')
                        Pattern Argument List
                          PsiElement(()('(')
                          ReferencePattern: a
                            PsiElement(identifier)('a')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: Call
                            PsiElement(identifier)('Call')
                          ArgumentList
                            PsiElement(()('(')
                            FunctionExpression
                              Parameters
                                ParametersClause
                                  PsiElement(()('(')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              MethodCall
                                ReferenceExpression: f
                                  PsiElement(identifier)('f')
                                ArgumentList
                                  PsiElement(()('(')
                                  ReferenceExpression: a
                                    PsiElement(identifier)('a')
                                  PsiElement())(')')
                            PsiElement())(')')
                    PsiWhiteSpace('\n        ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      NamingPattern: c
                        PsiElement(identifier)('c')
                        PsiElement(@)('@')
                        ConstructorPattern
                          CodeReferenceElement: Call
                            PsiElement(identifier)('Call')
                          Pattern Argument List
                            PsiElement(()('(')
                            WildcardPattern
                              PsiElement(_)('_')
                            PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: Cont
                            PsiElement(identifier)('Cont')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: c
                              PsiElement(identifier)('c')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: f
                              PsiElement(identifier)('f')
                            PsiElement())(')')
                    PsiWhiteSpace('\n        ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      Scala3 TypedPattern
                        ReferencePattern: c
                          PsiElement(identifier)('c')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        TypePattern
                          ParametrizedType: Cont[a1, b1]
                            SimpleType: Cont
                              CodeReferenceElement: Cont
                                PsiElement(identifier)('Cont')
                            TypeArgumentsList
                              PsiElement([)('[')
                              TypeVariable: a1
                                PsiElement(identifier)('a1')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              TypeVariable: b1
                                PsiElement(identifier)('b1')
                              PsiElement(])(']')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: Cont
                            PsiElement(identifier)('Cont')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: c.a
                              ReferenceExpression: c
                                PsiElement(identifier)('c')
                              PsiElement(.)('.')
                              PsiElement(identifier)('a')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            FunctionExpression
                              Parameters
                                ParametersClause
                                  PsiElement(()('(')
                                  Parameter: x
                                    AnnotationsList
                                      <empty list>
                                    PsiElement(identifier)('x')
                                    PsiElement(:)(':')
                                    PsiWhiteSpace(' ')
                                    ParameterType
                                      SimpleType: a1
                                        CodeReferenceElement: a1
                                          PsiElement(identifier)('a1')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              InfixExpression
                                MethodCall
                                  ReferenceExpression: c.f
                                    ReferenceExpression: c
                                      PsiElement(identifier)('c')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('f')
                                  ArgumentList
                                    PsiElement(()('(')
                                    ReferenceExpression: x
                                      PsiElement(identifier)('x')
                                    PsiElement())(')')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: flatMap
                                  PsiElement(identifier)('flatMap')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: f
                                  PsiElement(identifier)('f')
                            PsiElement())(')')
                  PsiWhiteSpace('\n      ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: resume
                AnnotationsList
                  Annotation
                    PsiElement(@)('@')
                    AnnotationExpression
                      ConstructorInvocation
                        SimpleType: annotation.tailrec
                          CodeReferenceElement: annotation.tailrec
                            CodeReferenceElement: annotation
                              PsiElement(identifier)('annotation')
                            PsiElement(.)('.')
                            PsiElement(identifier)('tailrec')
                PsiWhiteSpace(' ')
                Modifiers
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('resume')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Either[() => TailRec[A], A]
                  SimpleType: Either
                    CodeReferenceElement: Either
                      PsiElement(identifier)('Either')
                  TypeArgumentsList
                    PsiElement([)('[')
                    FunctionalType: () => TailRec[A]
                      TypeInParenthesis: ()
                        PsiElement(()('(')
                        PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      ParametrizedType: TailRec[A]
                        SimpleType: TailRec
                          CodeReferenceElement: TailRec
                            PsiElement(identifier)('TailRec')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MatchStatement
                  ThisReference
                    PsiElement(this)('this')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Done
                          PsiElement(identifier)('Done')
                        Pattern Argument List
                          PsiElement(()('(')
                          ReferencePattern: a
                            PsiElement(identifier)('a')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: Right
                            PsiElement(identifier)('Right')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: a
                              PsiElement(identifier)('a')
                            PsiElement())(')')
                    PsiWhiteSpace('\n      ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Call
                          PsiElement(identifier)('Call')
                        Pattern Argument List
                          PsiElement(()('(')
                          ReferencePattern: k
                            PsiElement(identifier)('k')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MethodCall
                          ReferenceExpression: Left
                            PsiElement(identifier)('Left')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: k
                              PsiElement(identifier)('k')
                            PsiElement())(')')
                    PsiWhiteSpace('\n      ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Cont
                          PsiElement(identifier)('Cont')
                        Pattern Argument List
                          PsiElement(()('(')
                          ReferencePattern: a
                            PsiElement(identifier)('a')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferencePattern: f
                            PsiElement(identifier)('f')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MatchStatement
                          ReferenceExpression: a
                            PsiElement(identifier)('a')
                          PsiWhiteSpace(' ')
                          PsiElement(match)('match')
                          PsiWhiteSpace(' ')
                          PsiElement({)('{')
                          PsiWhiteSpace('\n        ')
                          CaseClauses
                            CaseClause
                              PsiElement(case)('case')
                              PsiWhiteSpace(' ')
                              ConstructorPattern
                                CodeReferenceElement: Done
                                  PsiElement(identifier)('Done')
                                Pattern Argument List
                                  PsiElement(()('(')
                                  ReferencePattern: v
                                    PsiElement(identifier)('v')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              BlockOfExpressions
                                ReferenceExpression: f(v).resume
                                  MethodCall
                                    ReferenceExpression: f
                                      PsiElement(identifier)('f')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: v
                                        PsiElement(identifier)('v')
                                      PsiElement())(')')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('resume')
                            PsiWhiteSpace('\n        ')
                            CaseClause
                              PsiElement(case)('case')
                              PsiWhiteSpace(' ')
                              ConstructorPattern
                                CodeReferenceElement: Call
                                  PsiElement(identifier)('Call')
                                Pattern Argument List
                                  PsiElement(()('(')
                                  ReferencePattern: k
                                    PsiElement(identifier)('k')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              BlockOfExpressions
                                MethodCall
                                  ReferenceExpression: Left
                                    PsiElement(identifier)('Left')
                                  ArgumentList
                                    PsiElement(()('(')
                                    FunctionExpression
                                      Parameters
                                        ParametersClause
                                          PsiElement(()('(')
                                          PsiElement())(')')
                                      PsiWhiteSpace(' ')
                                      PsiElement(=>)('=>')
                                      PsiWhiteSpace(' ')
                                      MethodCall
                                        ReferenceExpression: k().flatMap
                                          MethodCall
                                            ReferenceExpression: k
                                              PsiElement(identifier)('k')
                                            ArgumentList
                                              PsiElement(()('(')
                                              PsiElement())(')')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('flatMap')
                                        ArgumentList
                                          PsiElement(()('(')
                                          ReferenceExpression: f
                                            PsiElement(identifier)('f')
                                          PsiElement())(')')
                                    PsiElement())(')')
                            PsiWhiteSpace('\n        ')
                            CaseClause
                              PsiElement(case)('case')
                              PsiWhiteSpace(' ')
                              ConstructorPattern
                                CodeReferenceElement: Cont
                                  PsiElement(identifier)('Cont')
                                Pattern Argument List
                                  PsiElement(()('(')
                                  ReferencePattern: b
                                    PsiElement(identifier)('b')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferencePattern: g
                                    PsiElement(identifier)('g')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              BlockOfExpressions
                                ReferenceExpression: b.flatMap(x => g(x) flatMap f).resume
                                  MethodCall
                                    ReferenceExpression: b.flatMap
                                      ReferenceExpression: b
                                        PsiElement(identifier)('b')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('flatMap')
                                    ArgumentList
                                      PsiElement(()('(')
                                      FunctionExpression
                                        Parameters
                                          ParametersClause
                                            Parameter: x
                                              PsiElement(identifier)('x')
                                        PsiWhiteSpace(' ')
                                        PsiElement(=>)('=>')
                                        PsiWhiteSpace(' ')
                                        InfixExpression
                                          MethodCall
                                            ReferenceExpression: g
                                              PsiElement(identifier)('g')
                                            ArgumentList
                                              PsiElement(()('(')
                                              ReferenceExpression: x
                                                PsiElement(identifier)('x')
                                              PsiElement())(')')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: flatMap
                                            PsiElement(identifier)('flatMap')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: f
                                            PsiElement(identifier)('f')
                                      PsiElement())(')')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('resume')
                          PsiWhiteSpace('\n      ')
                          PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: result
                AnnotationsList
                  Annotation
                    PsiElement(@)('@')
                    AnnotationExpression
                      ConstructorInvocation
                        SimpleType: annotation.tailrec
                          CodeReferenceElement: annotation.tailrec
                            CodeReferenceElement: annotation
                              PsiElement(identifier)('annotation')
                            PsiElement(.)('.')
                            PsiElement(identifier)('tailrec')
                PsiWhiteSpace(' ')
                Modifiers
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('result')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MatchStatement
                  ThisReference
                    PsiElement(this)('this')
                  PsiWhiteSpace(' ')
                  PsiElement(match)('match')
                  PsiWhiteSpace(' ')
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  CaseClauses
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Done
                          PsiElement(identifier)('Done')
                        Pattern Argument List
                          PsiElement(()('(')
                          ReferencePattern: a
                            PsiElement(identifier)('a')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ReferenceExpression: a
                          PsiElement(identifier)('a')
                    PsiWhiteSpace('\n      ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Call
                          PsiElement(identifier)('Call')
                        Pattern Argument List
                          PsiElement(()('(')
                          ReferencePattern: t
                            PsiElement(identifier)('t')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        ReferenceExpression: t().result
                          MethodCall
                            ReferenceExpression: t
                              PsiElement(identifier)('t')
                            ArgumentList
                              PsiElement(()('(')
                              PsiElement())(')')
                          PsiElement(.)('.')
                          PsiElement(identifier)('result')
                    PsiWhiteSpace('\n      ')
                    CaseClause
                      PsiElement(case)('case')
                      PsiWhiteSpace(' ')
                      ConstructorPattern
                        CodeReferenceElement: Cont
                          PsiElement(identifier)('Cont')
                        Pattern Argument List
                          PsiElement(()('(')
                          ReferencePattern: a
                            PsiElement(identifier)('a')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferencePattern: f
                            PsiElement(identifier)('f')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      BlockOfExpressions
                        MatchStatement
                          ReferenceExpression: a
                            PsiElement(identifier)('a')
                          PsiWhiteSpace(' ')
                          PsiElement(match)('match')
                          PsiWhiteSpace(' ')
                          PsiElement({)('{')
                          PsiWhiteSpace('\n        ')
                          CaseClauses
                            CaseClause
                              PsiElement(case)('case')
                              PsiWhiteSpace(' ')
                              ConstructorPattern
                                CodeReferenceElement: Done
                                  PsiElement(identifier)('Done')
                                Pattern Argument List
                                  PsiElement(()('(')
                                  ReferencePattern: v
                                    PsiElement(identifier)('v')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              BlockOfExpressions
                                ReferenceExpression: f(v).result
                                  MethodCall
                                    ReferenceExpression: f
                                      PsiElement(identifier)('f')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: v
                                        PsiElement(identifier)('v')
                                      PsiElement())(')')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('result')
                            PsiWhiteSpace('\n        ')
                            CaseClause
                              PsiElement(case)('case')
                              PsiWhiteSpace(' ')
                              ConstructorPattern
                                CodeReferenceElement: Call
                                  PsiElement(identifier)('Call')
                                Pattern Argument List
                                  PsiElement(()('(')
                                  ReferencePattern: t
                                    PsiElement(identifier)('t')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              BlockOfExpressions
                                ReferenceExpression: t().flatMap(f).result
                                  MethodCall
                                    ReferenceExpression: t().flatMap
                                      MethodCall
                                        ReferenceExpression: t
                                          PsiElement(identifier)('t')
                                        ArgumentList
                                          PsiElement(()('(')
                                          PsiElement())(')')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('flatMap')
                                    ArgumentList
                                      PsiElement(()('(')
                                      ReferenceExpression: f
                                        PsiElement(identifier)('f')
                                      PsiElement())(')')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('result')
                            PsiWhiteSpace('\n        ')
                            CaseClause
                              PsiElement(case)('case')
                              PsiWhiteSpace(' ')
                              ConstructorPattern
                                CodeReferenceElement: Cont
                                  PsiElement(identifier)('Cont')
                                Pattern Argument List
                                  PsiElement(()('(')
                                  ReferencePattern: b
                                    PsiElement(identifier)('b')
                                  PsiElement(,)(',')
                                  PsiWhiteSpace(' ')
                                  ReferencePattern: g
                                    PsiElement(identifier)('g')
                                  PsiElement())(')')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              BlockOfExpressions
                                ReferenceExpression: b.flatMap(x => g(x) flatMap f).result
                                  MethodCall
                                    ReferenceExpression: b.flatMap
                                      ReferenceExpression: b
                                        PsiElement(identifier)('b')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('flatMap')
                                    ArgumentList
                                      PsiElement(()('(')
                                      FunctionExpression
                                        Parameters
                                          ParametersClause
                                            Parameter: x
                                              PsiElement(identifier)('x')
                                        PsiWhiteSpace(' ')
                                        PsiElement(=>)('=>')
                                        PsiWhiteSpace(' ')
                                        InfixExpression
                                          MethodCall
                                            ReferenceExpression: g
                                              PsiElement(identifier)('g')
                                            ArgumentList
                                              PsiElement(()('(')
                                              ReferenceExpression: x
                                                PsiElement(identifier)('x')
                                              PsiElement())(')')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: flatMap
                                            PsiElement(identifier)('flatMap')
                                          PsiWhiteSpace(' ')
                                          ReferenceExpression: f
                                            PsiElement(identifier)('f')
                                      PsiElement())(')')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('result')
                          PsiWhiteSpace('\n      ')
                          PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: Call
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(protected)('protected')
            PsiWhiteSpace(' ')
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Call')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: rest
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('rest')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    FunctionalType: () => TailRec[A]
                      TypeInParenthesis: ()
                        PsiElement(()('(')
                        PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      ParametrizedType: TailRec[A]
                        SimpleType: TailRec
                          CodeReferenceElement: TailRec
                            PsiElement(identifier)('TailRec')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: TailRec[A]
                  SimpleType: TailRec
                    CodeReferenceElement: TailRec
                      PsiElement(identifier)('TailRec')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScClass: Done
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(protected)('protected')
            PsiWhiteSpace(' ')
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Done')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: value
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('value')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: TailRec[A]
                  SimpleType: TailRec
                    CodeReferenceElement: TailRec
                      PsiElement(identifier)('TailRec')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScClass: Cont
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(protected)('protected')
            PsiWhiteSpace(' ')
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Cont')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: a
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('a')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: TailRec[A]
                      SimpleType: TailRec
                        CodeReferenceElement: TailRec
                          PsiElement(identifier)('TailRec')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ClassParameter: f
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('f')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    FunctionalType: A => TailRec[B]
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      ParametrizedType: TailRec[B]
                        SimpleType: TailRec
                          CodeReferenceElement: TailRec
                            PsiElement(identifier)('TailRec')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: TailRec[B]
                  SimpleType: TailRec
                    CodeReferenceElement: TailRec
                      PsiElement(identifier)('TailRec')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
