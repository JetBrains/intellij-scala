object Foo {
  val x = new Object

  class A(var y: x.type)

  val a = new A(x)

  val y: a.y.type = x
// 1 |val y: a.y.type = x
//   |         ^
//   |         Object(x)(a.y) is not a legal path
//   |         since it refers to nonfinal variable y
}
-----
ScalaFile
  ScObject: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: Object
                    CodeReferenceElement: Object
                      PsiElement(identifier)('Object')
        PsiWhiteSpace('\n\n  ')
        ScClass: A
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: y
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(var)('var')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('y')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: x.type
                      CodeReferenceElement: x
                        PsiElement(identifier)('x')
                      PsiElement(.)('.')
                      PsiElement(type)('type')
                PsiElement())(')')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: a
              PsiElement(identifier)('a')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x
                      PsiElement(identifier)('x')
                    PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y
              PsiElement(identifier)('y')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: a.y.type
            CodeReferenceElement: a.y
              CodeReferenceElement: a
                PsiElement(identifier)('a')
              PsiElement(.)('.')
              PsiElement(identifier)('y')
            PsiElement(.)('.')
            PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n')
        PsiComment(comment)('// 1 |val y: a.y.type = x')
        PsiWhiteSpace('\n')
        PsiComment(comment)('//   |         ^')
        PsiWhiteSpace('\n')
        PsiComment(comment)('//   |         Object(x)(a.y) is not a legal path')
        PsiWhiteSpace('\n')
        PsiComment(comment)('//   |         since it refers to nonfinal variable y')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
