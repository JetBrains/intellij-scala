// This should be run with Scala 2.13
trait TypeHints {
  val hints: List[Class[_]]
  def components: List[TypeHints] = List(this)

  def + (hints: TypeHints): TypeHints = CompositeTypeHints(components ::: hints.components)

  private case class CompositeTypeHints(override val components: List[TypeHints]) extends TypeHints {
    override val hints: List[Class[_]] = components.flatMap(_.hints)
  }
}

case object NoTypeHints extends TypeHints {
  override val hints = Nil
}
-----
ScalaFile
  ScTrait: TypeHints
    PsiComment(comment)('// This should be run with Scala 2.13')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TypeHints')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: hints
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: hints
              PsiElement(identifier)('hints')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[Class[_]]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Class[_]
                SimpleType: Class
                  CodeReferenceElement: Class
                    PsiElement(identifier)('Class')
                TypeArgumentsList
                  PsiElement([)('[')
                  WildcardType: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: components
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('components')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[TypeHints]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: TypeHints
                CodeReferenceElement: TypeHints
                  PsiElement(identifier)('TypeHints')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: List
              PsiElement(identifier)('List')
            ArgumentList
              PsiElement(()('(')
              ThisReference
                PsiElement(this)('this')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: +
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('+')
          PsiWhiteSpace(' ')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: hints
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('hints')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: TypeHints
                    CodeReferenceElement: TypeHints
                      PsiElement(identifier)('TypeHints')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: TypeHints
            CodeReferenceElement: TypeHints
              PsiElement(identifier)('TypeHints')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: CompositeTypeHints
              PsiElement(identifier)('CompositeTypeHints')
            ArgumentList
              PsiElement(()('(')
              InfixExpression
                ReferenceExpression: components
                  PsiElement(identifier)('components')
                PsiWhiteSpace(' ')
                ReferenceExpression: :::
                  PsiElement(identifier)(':::')
                PsiWhiteSpace(' ')
                ReferenceExpression: hints.components
                  ReferenceExpression: hints
                    PsiElement(identifier)('hints')
                  PsiElement(.)('.')
                  PsiElement(identifier)('components')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScClass: CompositeTypeHints
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
            PsiWhiteSpace(' ')
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('CompositeTypeHints')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: components
                  AnnotationsList
                    <empty list>
                  Modifiers
                    PsiElement(override)('override')
                  PsiWhiteSpace(' ')
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('components')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: List[TypeHints]
                      SimpleType: List
                        CodeReferenceElement: List
                          PsiElement(identifier)('List')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: TypeHints
                          CodeReferenceElement: TypeHints
                            PsiElement(identifier)('TypeHints')
                        PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: TypeHints
                  CodeReferenceElement: TypeHints
                    PsiElement(identifier)('TypeHints')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: hints
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(override)('override')
                PsiWhiteSpace(' ')
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: hints
                    PsiElement(identifier)('hints')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: List[Class[_]]
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: Class[_]
                      SimpleType: Class
                        CodeReferenceElement: Class
                          PsiElement(identifier)('Class')
                      TypeArgumentsList
                        PsiElement([)('[')
                        WildcardType: _
                          PsiElement(_)('_')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: components.flatMap
                    ReferenceExpression: components
                      PsiElement(identifier)('components')
                    PsiElement(.)('.')
                    PsiElement(identifier)('flatMap')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: _.hints
                      UnderscoreSection
                        PsiElement(_)('_')
                      PsiElement(.)('.')
                      PsiElement(identifier)('hints')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: NoTypeHints
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('NoTypeHints')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: TypeHints
            CodeReferenceElement: TypeHints
              PsiElement(identifier)('TypeHints')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: hints
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(override)('override')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: hints
              PsiElement(identifier)('hints')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: Nil
            PsiElement(identifier)('Nil')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
