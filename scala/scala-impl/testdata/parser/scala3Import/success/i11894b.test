object CallbackTo {
  extension [A](self: CallbackTo[Option[A]]) {
    inline def asOption: Option[A] =
      self.toScalaFn()
  }
}

final class CallbackTo[A] (val x: List[A]) {

  inline def runNow(): A =
    x.head

  inline def toScalaFn: () => A =
    () => runNow()

  def map[B](f: A => B): CallbackTo[B] =
    ???

  def toOption: Option[A] = {
    val x = map[Option[A]](Some(_))
    val y = x: CallbackTo[Option[A]] // ok: type is what we expect
    y.asOption // error
  }
}
-----
ScalaFile
  ScObject: CallbackTo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('CallbackTo')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        Extension on CallbackTo[Option[A]]
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: self
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('self')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: CallbackTo[Option[A]]
                    SimpleType: CallbackTo
                      CodeReferenceElement: CallbackTo
                        PsiElement(identifier)('CallbackTo')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Option[A]
                        SimpleType: Option
                          CodeReferenceElement: Option
                            PsiElement(identifier)('Option')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: A
                            CodeReferenceElement: A
                              PsiElement(identifier)('A')
                          PsiElement(])(']')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          ScExtensionBody
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScFunctionDefinition: asOption
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(inline)('inline')
              PsiWhiteSpace(' ')
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('asOption')
              Parameters
                <empty list>
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: Option[A]
                SimpleType: Option
                  CodeReferenceElement: Option
                    PsiElement(identifier)('Option')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace('\n      ')
              MethodCall
                ReferenceExpression: self.toScalaFn
                  ReferenceExpression: self
                    PsiElement(identifier)('self')
                  PsiElement(.)('.')
                  PsiElement(identifier)('toScalaFn')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: CallbackTo
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('CallbackTo')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: List[A]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                  PsiElement(])(']')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: runNow
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('runNow')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          ReferenceExpression: x.head
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiElement(.)('.')
            PsiElement(identifier)('head')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: toScalaFn
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('toScalaFn')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          FunctionalType: () => A
            TypeInParenthesis: ()
              PsiElement(()('(')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            SimpleType: A
              CodeReferenceElement: A
                PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          FunctionExpression
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: runNow
                PsiElement(identifier)('runNow')
              ArgumentList
                PsiElement(()('(')
                PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: map
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('map')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: A => B
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: CallbackTo[B]
            SimpleType: CallbackTo
              CodeReferenceElement: CallbackTo
                PsiElement(identifier)('CallbackTo')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: toOption
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('toOption')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Option[A]
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: x
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: x
                  PsiElement(identifier)('x')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                GenericCall
                  ReferenceExpression: map
                    PsiElement(identifier)('map')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: Option[A]
                      SimpleType: Option
                        CodeReferenceElement: Option
                          PsiElement(identifier)('Option')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiElement(])(']')
                ArgumentList
                  PsiElement(()('(')
                  MethodCall
                    ReferenceExpression: Some
                      PsiElement(identifier)('Some')
                    ArgumentList
                      PsiElement(()('(')
                      UnderscoreSection
                        PsiElement(_)('_')
                      PsiElement())(')')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: y
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: y
                  PsiElement(identifier)('y')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              TypedExpression
                ReferenceExpression: x
                  PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: CallbackTo[Option[A]]
                  SimpleType: CallbackTo
                    CodeReferenceElement: CallbackTo
                      PsiElement(identifier)('CallbackTo')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: Option[A]
                      SimpleType: Option
                        CodeReferenceElement: Option
                          PsiElement(identifier)('Option')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiElement(])(']')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// ok: type is what we expect')
            PsiWhiteSpace('\n    ')
            ReferenceExpression: y.asOption
              ReferenceExpression: y
                PsiElement(identifier)('y')
              PsiElement(.)('.')
              PsiElement(identifier)('asOption')
            PsiWhiteSpace(' ')
            PsiComment(comment)('// error')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
