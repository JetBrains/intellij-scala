import scala.util.boundary, boundary.break
def test: Unit =
  boundary: label ?=>
    while true do break()
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.util.boundary
        CodeReferenceElement: scala.util
          CodeReferenceElement: scala
            PsiElement(identifier)('scala')
          PsiElement(.)('.')
          PsiElement(identifier)('util')
        PsiElement(.)('.')
        PsiElement(identifier)('boundary')
    PsiElement(,)(',')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: boundary.break
        CodeReferenceElement: boundary
          PsiElement(identifier)('boundary')
        PsiElement(.)('.')
        PsiElement(identifier)('break')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace('\n  ')
    MethodCall
      ReferenceExpression: boundary
        PsiElement(identifier)('boundary')
      ArgumentList
        BlockExpression
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          FunctionExpression
            Parameters
              ParametersClause
                Parameter: label
                  PsiElement(identifier)('label')
            PsiWhiteSpace(' ')
            PsiElement(?=>)('?=>')
            PsiWhiteSpace('\n    ')
            BlockOfExpressions
              WhileStatement
                PsiElement(while)('while')
                PsiWhiteSpace(' ')
                BooleanLiteral
                  PsiElement(true)('true')
                PsiWhiteSpace(' ')
                PsiElement(do)('do')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: break
                    PsiElement(identifier)('break')
                  ArgumentList
                    PsiElement(()('(')
                    PsiElement())(')')
