object t {
  def f = { object C; case class C(); 1 }
  def g = { case class D(x: Int); object D; 2 }
  def h = { case class E(y: Int = 10); 3 }
}
-----
ScalaFile
  ScObject: t
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('t')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            ScObject: C
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(object)('object')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('C')
              ExtendsBlock
                <empty list>
            PsiElement(;)(';')
            PsiWhiteSpace(' ')
            ScClass: C
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(case)('case')
              PsiWhiteSpace(' ')
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('C')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement())(')')
              ExtendsBlock
                <empty list>
            PsiElement(;)(';')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: g
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('g')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            ScClass: D
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(case)('case')
              PsiWhiteSpace(' ')
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('D')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    ClassParameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
              ExtendsBlock
                <empty list>
            PsiElement(;)(';')
            PsiWhiteSpace(' ')
            ScObject: D
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(object)('object')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('D')
              ExtendsBlock
                <empty list>
            PsiElement(;)(';')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('2')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: h
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('h')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            ScClass: E
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(case)('case')
              PsiWhiteSpace(' ')
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('E')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    ClassParameter: y
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('y')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      IntegerLiteral
                        PsiElement(integer)('10')
                    PsiElement())(')')
              ExtendsBlock
                <empty list>
            PsiElement(;)(';')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('3')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
