trait Builder[C[_], T] {
  def +=(x: T): Unit
  def finalise: C[T]
}

trait Buildable[C[_]] {
  def builder[T]: Builder[C,T]
}

object Test {

  implicit object buildableList extends Buildable[List] {
    def builder[T] = new Builder[List,T] {
      val buf = new scala.collection.mutable.ListBuffer[T]
      def +=(x: T) = buf += x
      def finalise = buf.toList
    }
  }

  def foo[C[_],T](x: T)(implicit b: Buildable[C]): C[T] = {
    val builder = b.builder[T]
    builder += x
    builder.finalise
  }

  val l: List[Int] = foo(8)
}
-----
ScalaFile
  ScTrait: Builder
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Builder')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: C
        PsiElement(identifier)('C')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: +=
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('+=')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: finalise
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('finalise')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: C[T]
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: Buildable
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Buildable')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: C
        PsiElement(identifier)('C')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: builder
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('builder')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Builder[C,T]
            SimpleType: Builder
              CodeReferenceElement: Builder
                PsiElement(identifier)('Builder')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: C
                CodeReferenceElement: C
                  PsiElement(identifier)('C')
              PsiElement(,)(',')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScObject: buildableList
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('buildableList')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: Buildable[List]
                  SimpleType: Buildable
                    CodeReferenceElement: Buildable
                      PsiElement(identifier)('Buildable')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    PsiElement(])(']')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: builder
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('builder')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                  PsiElement(])(']')
                Parameters
                  <empty list>
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        ParametrizedType: Builder[List,T]
                          SimpleType: Builder
                            CodeReferenceElement: Builder
                              PsiElement(identifier)('Builder')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: List
                              CodeReferenceElement: List
                                PsiElement(identifier)('List')
                            PsiElement(,)(',')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    ScTemplateBody
                      PsiElement({)('{')
                      PsiWhiteSpace('\n      ')
                      ScPatternDefinition: buf
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(val)('val')
                        PsiWhiteSpace(' ')
                        ListOfPatterns
                          ReferencePattern: buf
                            PsiElement(identifier)('buf')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                ParametrizedType: scala.collection.mutable.ListBuffer[T]
                                  SimpleType: scala.collection.mutable.ListBuffer
                                    CodeReferenceElement: scala.collection.mutable.ListBuffer
                                      CodeReferenceElement: scala.collection.mutable
                                        CodeReferenceElement: scala.collection
                                          CodeReferenceElement: scala
                                            PsiElement(identifier)('scala')
                                          PsiElement(.)('.')
                                          PsiElement(identifier)('collection')
                                        PsiElement(.)('.')
                                        PsiElement(identifier)('mutable')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('ListBuffer')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: T
                                      CodeReferenceElement: T
                                        PsiElement(identifier)('T')
                                    PsiElement(])(']')
                      PsiWhiteSpace('\n      ')
                      ScFunctionDefinition: +=
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(def)('def')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('+=')
                        Parameters
                          ParametersClause
                            PsiElement(()('(')
                            Parameter: x
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(identifier)('x')
                              PsiElement(:)(':')
                              PsiWhiteSpace(' ')
                              ParameterType
                                SimpleType: T
                                  CodeReferenceElement: T
                                    PsiElement(identifier)('T')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        InfixExpression
                          ReferenceExpression: buf
                            PsiElement(identifier)('buf')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: +=
                            PsiElement(identifier)('+=')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                      PsiWhiteSpace('\n      ')
                      ScFunctionDefinition: finalise
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(def)('def')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('finalise')
                        Parameters
                          <empty list>
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        ReferenceExpression: buf.toList
                          ReferenceExpression: buf
                            PsiElement(identifier)('buf')
                          PsiElement(.)('.')
                          PsiElement(identifier)('toList')
                      PsiWhiteSpace('\n    ')
                      PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: C
              PsiElement(identifier)('C')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: b
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('b')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Buildable[C]
                    SimpleType: Buildable
                      CodeReferenceElement: Buildable
                        PsiElement(identifier)('Buildable')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: C
                        CodeReferenceElement: C
                          PsiElement(identifier)('C')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: C[T]
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: builder
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: builder
                  PsiElement(identifier)('builder')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              GenericCall
                ReferenceExpression: b.builder
                  ReferenceExpression: b
                    PsiElement(identifier)('b')
                  PsiElement(.)('.')
                  PsiElement(identifier)('builder')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                  PsiElement(])(']')
            PsiWhiteSpace('\n    ')
            InfixExpression
              ReferenceExpression: builder
                PsiElement(identifier)('builder')
              PsiWhiteSpace(' ')
              ReferenceExpression: +=
                PsiElement(identifier)('+=')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
            PsiWhiteSpace('\n    ')
            ReferenceExpression: builder.finalise
              ReferenceExpression: builder
                PsiElement(identifier)('builder')
              PsiElement(.)('.')
              PsiElement(identifier)('finalise')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: l
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: l
              PsiElement(identifier)('l')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[Int]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: foo
              PsiElement(identifier)('foo')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('8')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
