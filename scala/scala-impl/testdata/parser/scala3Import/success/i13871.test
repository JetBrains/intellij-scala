import scala.compiletime.{error, codeOf}
import scala.compiletime.testing.*

inline def testError(inline typeName: Any): String = error("Got error " + codeOf(typeName))

transparent inline def compileErrors(inline code: String): List[Error] = typeCheckErrors(code)

def test =
  typeCheckErrors("""testError("string")""")
  compileErrors("""testError("string")""")
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.compiletime
        CodeReferenceElement: scala
          PsiElement(identifier)('scala')
        PsiElement(.)('.')
        PsiElement(identifier)('compiletime')
      PsiElement(.)('.')
      ImportSelectors
        PsiElement({)('{')
        ImportSelector
          CodeReferenceElement: error
            PsiElement(identifier)('error')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        ImportSelector
          CodeReferenceElement: codeOf
            PsiElement(identifier)('codeOf')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.compiletime.testing
        CodeReferenceElement: scala.compiletime
          CodeReferenceElement: scala
            PsiElement(identifier)('scala')
          PsiElement(.)('.')
          PsiElement(identifier)('compiletime')
        PsiElement(.)('.')
        PsiElement(identifier)('testing')
      PsiElement(.)('.')
      PsiElement(*)('*')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: testError
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('testError')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: typeName
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('typeName')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: Any
              CodeReferenceElement: Any
                PsiElement(identifier)('Any')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: String
      CodeReferenceElement: String
        PsiElement(identifier)('String')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: error
        PsiElement(identifier)('error')
      ArgumentList
        PsiElement(()('(')
        InfixExpression
          StringLiteral
            PsiElement(string content)('"Got error "')
          PsiWhiteSpace(' ')
          ReferenceExpression: +
            PsiElement(identifier)('+')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: codeOf
              PsiElement(identifier)('codeOf')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: typeName
                PsiElement(identifier)('typeName')
              PsiElement())(')')
        PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: compileErrors
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(transparent)('transparent')
      PsiWhiteSpace(' ')
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('compileErrors')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: code
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('code')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: String
              CodeReferenceElement: String
                PsiElement(identifier)('String')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    ParametrizedType: List[Error]
      SimpleType: List
        CodeReferenceElement: List
          PsiElement(identifier)('List')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Error
          CodeReferenceElement: Error
            PsiElement(identifier)('Error')
        PsiElement(])(']')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: typeCheckErrors
        PsiElement(identifier)('typeCheckErrors')
      ArgumentList
        PsiElement(()('(')
        ReferenceExpression: code
          PsiElement(identifier)('code')
        PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    BlockExpression
      PsiWhiteSpace('\n  ')
      MethodCall
        ReferenceExpression: typeCheckErrors
          PsiElement(identifier)('typeCheckErrors')
        ArgumentList
          PsiElement(()('(')
          StringLiteral
            PsiElement(multiline string)('"""testError("string")"""')
          PsiElement())(')')
      PsiWhiteSpace('\n  ')
      MethodCall
        ReferenceExpression: compileErrors
          PsiElement(identifier)('compileErrors')
        ArgumentList
          PsiElement(()('(')
          StringLiteral
            PsiElement(multiline string)('"""testError("string")"""')
          PsiElement())(')')
