object Main {
  def g: BigInt = 5 + BigInt(4) // since we're looking for an implicit that converts an int into something that has a + method that takes a BigInt, BigInt should be in the implicit scope
  def g2 = 5 + BigInt(4)
}
-----
ScalaFile
  ScObject: Main
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Main')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: g
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('g')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: BigInt
            CodeReferenceElement: BigInt
              PsiElement(identifier)('BigInt')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            IntegerLiteral
              PsiElement(integer)('5')
            PsiWhiteSpace(' ')
            ReferenceExpression: +
              PsiElement(identifier)('+')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: BigInt
                PsiElement(identifier)('BigInt')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('4')
                PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// since we're looking for an implicit that converts an int into something that has a + method that takes a BigInt, BigInt should be in the implicit scope')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: g2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('g2')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            IntegerLiteral
              PsiElement(integer)('5')
            PsiWhiteSpace(' ')
            ReferenceExpression: +
              PsiElement(identifier)('+')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: BigInt
                PsiElement(identifier)('BigInt')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('4')
                PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
