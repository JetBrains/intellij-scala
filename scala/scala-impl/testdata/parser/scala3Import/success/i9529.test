def f1: Unit = { def g = 0 }
def f2: Unit = { extension (x: Int) def g = 0 }
-----
ScalaFile
  ScFunctionDefinition: f1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('f1')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace(' ')
      ScFunctionDefinition: g
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('g')
        Parameters
          <empty list>
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('0')
      PsiWhiteSpace(' ')
      PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: f2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('f2')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace(' ')
      Extension on Int
        PsiElement(extension)('extension')
        PsiWhiteSpace(' ')
        Parameters
          ParametersClause
            PsiElement(()('(')
            Parameter: x
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('x')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        ScExtensionBody
          ScFunctionDefinition: g
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('g')
            Parameters
              <empty list>
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('0')
      PsiWhiteSpace(' ')
      PsiElement(})('}')
