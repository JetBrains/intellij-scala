object Test {
  def test = {
    val myName: String = ""
    new AnyRef {
      new Exception {
        def name = myName
      }
    }
    new AnyRef {
      new Exception {
        new AnyRef {
          def name = myName
        }
      }
    }
  }
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: myName
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: myName
                  PsiElement(identifier)('myName')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              StringLiteral
                PsiElement(string content)('""')
            PsiWhiteSpace('\n    ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: AnyRef
                      CodeReferenceElement: AnyRef
                        PsiElement(identifier)('AnyRef')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: Exception
                            CodeReferenceElement: Exception
                              PsiElement(identifier)('Exception')
                      PsiWhiteSpace(' ')
                      ScTemplateBody
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        ScFunctionDefinition: name
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(def)('def')
                          PsiWhiteSpace(' ')
                          PsiElement(identifier)('name')
                          Parameters
                            <empty list>
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          ReferenceExpression: myName
                            PsiElement(identifier)('myName')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n    ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: AnyRef
                      CodeReferenceElement: AnyRef
                        PsiElement(identifier)('AnyRef')
                PsiWhiteSpace(' ')
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: Exception
                            CodeReferenceElement: Exception
                              PsiElement(identifier)('Exception')
                      PsiWhiteSpace(' ')
                      ScTemplateBody
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                SimpleType: AnyRef
                                  CodeReferenceElement: AnyRef
                                    PsiElement(identifier)('AnyRef')
                            PsiWhiteSpace(' ')
                            ScTemplateBody
                              PsiElement({)('{')
                              PsiWhiteSpace('\n          ')
                              ScFunctionDefinition: name
                                AnnotationsList
                                  <empty list>
                                Modifiers
                                  <empty list>
                                PsiElement(def)('def')
                                PsiWhiteSpace(' ')
                                PsiElement(identifier)('name')
                                Parameters
                                  <empty list>
                                PsiWhiteSpace(' ')
                                PsiElement(=)('=')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: myName
                                  PsiElement(identifier)('myName')
                              PsiWhiteSpace('\n        ')
                              PsiElement(})('}')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
