// A bunch of ridiculous seeming tests until you realize much
// of this didn't work until the commit which accompanies this.
object Test {
  def f1(x: AnyRef with Singleton): AnyRef with Singleton = x
  def f2[T <: AnyRef with Singleton](x: T): T = x

  val x1: AnyRef with Singleton = "abc"
  val x2 = "def"
  final val x3 = "ghi"
  val x4: String = "jkl"

  // compiles...
  def narrow1(x: AnyRef): AnyRef with Singleton = x

  // compiles, still doesn't help.
  def narrow2(x: AnyRef): AnyRef with Singleton = x.asInstanceOf[x.type]

  // fails, wait, what? This fails and narrow1 compiles?
  def narrow3(x: AnyRef): AnyRef with Singleton = x.asInstanceOf[AnyRef with Singleton]

  // ok
  def narrow4[T <: AnyRef](x: T): AnyRef with Singleton = x

  object imp {
    implicit def narrow4[T <: AnyRef](x: T): AnyRef with Singleton = x
    val x5: String = "mno"
    def imp1 = f1(x5)

    // f2(x5)   // doesn't work but I think it should
    def imp2 = f2(narrow4(x5))
  }

  def main(args: Array[String]): Unit = {
    // compiles
    f1(x1)
    f1(x2)
    f1(x3)
    f1(x4)

    f2(x1)
    // f2(x2)
    // f2(x3)   // maybe this one should work
    // f2(x4)

    f1(narrow1(x4))
    f1(narrow2(x4))
    f1(narrow3(x4))
    f1(narrow4(x4))
    f2(narrow1(x4))
    f2(narrow2(x4))
    f2(narrow3(x4))
    f2(narrow4(x4))
  }
}

-----
ScalaFile
  ScObject: Test
    PsiComment(comment)('// A bunch of ridiculous seeming tests until you realize much')
    PsiWhiteSpace('\n')
    PsiComment(comment)('// of this didn't work until the commit which accompanies this.')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f1')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  CompoundType: AnyRef with Singleton
                    SimpleType: AnyRef
                      CodeReferenceElement: AnyRef
                        PsiElement(identifier)('AnyRef')
                    PsiWhiteSpace(' ')
                    PsiElement(with)('with')
                    PsiWhiteSpace(' ')
                    SimpleType: Singleton
                      CodeReferenceElement: Singleton
                        PsiElement(identifier)('Singleton')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          CompoundType: AnyRef with Singleton
            SimpleType: AnyRef
              CodeReferenceElement: AnyRef
                PsiElement(identifier)('AnyRef')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            SimpleType: Singleton
              CodeReferenceElement: Singleton
                PsiElement(identifier)('Singleton')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              CompoundType: AnyRef with Singleton
                SimpleType: AnyRef
                  CodeReferenceElement: AnyRef
                    PsiElement(identifier)('AnyRef')
                PsiWhiteSpace(' ')
                PsiElement(with)('with')
                PsiWhiteSpace(' ')
                SimpleType: Singleton
                  CodeReferenceElement: Singleton
                    PsiElement(identifier)('Singleton')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: x1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x1
              PsiElement(identifier)('x1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          CompoundType: AnyRef with Singleton
            SimpleType: AnyRef
              CodeReferenceElement: AnyRef
                PsiElement(identifier)('AnyRef')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            SimpleType: Singleton
              CodeReferenceElement: Singleton
                PsiElement(identifier)('Singleton')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"abc"')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x2
              PsiElement(identifier)('x2')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"def"')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x3
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(final)('final')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x3
              PsiElement(identifier)('x3')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"ghi"')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x4
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x4
              PsiElement(identifier)('x4')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"jkl"')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: narrow1
          PsiComment(comment)('// compiles...')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('narrow1')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: AnyRef
                    CodeReferenceElement: AnyRef
                      PsiElement(identifier)('AnyRef')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          CompoundType: AnyRef with Singleton
            SimpleType: AnyRef
              CodeReferenceElement: AnyRef
                PsiElement(identifier)('AnyRef')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            SimpleType: Singleton
              CodeReferenceElement: Singleton
                PsiElement(identifier)('Singleton')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: narrow2
          PsiComment(comment)('// compiles, still doesn't help.')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('narrow2')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: AnyRef
                    CodeReferenceElement: AnyRef
                      PsiElement(identifier)('AnyRef')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          CompoundType: AnyRef with Singleton
            SimpleType: AnyRef
              CodeReferenceElement: AnyRef
                PsiElement(identifier)('AnyRef')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            SimpleType: Singleton
              CodeReferenceElement: Singleton
                PsiElement(identifier)('Singleton')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: x.asInstanceOf
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiElement(.)('.')
              PsiElement(identifier)('asInstanceOf')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: x.type
                CodeReferenceElement: x
                  PsiElement(identifier)('x')
                PsiElement(.)('.')
                PsiElement(type)('type')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: narrow3
          PsiComment(comment)('// fails, wait, what? This fails and narrow1 compiles?')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('narrow3')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: AnyRef
                    CodeReferenceElement: AnyRef
                      PsiElement(identifier)('AnyRef')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          CompoundType: AnyRef with Singleton
            SimpleType: AnyRef
              CodeReferenceElement: AnyRef
                PsiElement(identifier)('AnyRef')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            SimpleType: Singleton
              CodeReferenceElement: Singleton
                PsiElement(identifier)('Singleton')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: x.asInstanceOf
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiElement(.)('.')
              PsiElement(identifier)('asInstanceOf')
            TypeArgumentsList
              PsiElement([)('[')
              CompoundType: AnyRef with Singleton
                SimpleType: AnyRef
                  CodeReferenceElement: AnyRef
                    PsiElement(identifier)('AnyRef')
                PsiWhiteSpace(' ')
                PsiElement(with)('with')
                PsiWhiteSpace(' ')
                SimpleType: Singleton
                  CodeReferenceElement: Singleton
                    PsiElement(identifier)('Singleton')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: narrow4
          PsiComment(comment)('// ok')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('narrow4')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: AnyRef
                CodeReferenceElement: AnyRef
                  PsiElement(identifier)('AnyRef')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          CompoundType: AnyRef with Singleton
            SimpleType: AnyRef
              CodeReferenceElement: AnyRef
                PsiElement(identifier)('AnyRef')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            SimpleType: Singleton
              CodeReferenceElement: Singleton
                PsiElement(identifier)('Singleton')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n\n  ')
        ScObject: imp
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('imp')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: narrow4
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(implicit)('implicit')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('narrow4')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    SimpleType: AnyRef
                      CodeReferenceElement: AnyRef
                        PsiElement(identifier)('AnyRef')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                CompoundType: AnyRef with Singleton
                  SimpleType: AnyRef
                    CodeReferenceElement: AnyRef
                      PsiElement(identifier)('AnyRef')
                  PsiWhiteSpace(' ')
                  PsiElement(with)('with')
                  PsiWhiteSpace(' ')
                  SimpleType: Singleton
                    CodeReferenceElement: Singleton
                      PsiElement(identifier)('Singleton')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: x
                  PsiElement(identifier)('x')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: x5
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: x5
                    PsiElement(identifier)('x5')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('"mno"')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: imp1
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('imp1')
                Parameters
                  <empty list>
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: f1
                    PsiElement(identifier)('f1')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x5
                      PsiElement(identifier)('x5')
                    PsiElement())(')')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: imp2
                PsiComment(comment)('// f2(x5)   // doesn't work but I think it should')
                PsiWhiteSpace('\n    ')
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('imp2')
                Parameters
                  <empty list>
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: f2
                    PsiElement(identifier)('f2')
                  ArgumentList
                    PsiElement(()('(')
                    MethodCall
                      ReferenceExpression: narrow4
                        PsiElement(identifier)('narrow4')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: x5
                          PsiElement(identifier)('x5')
                        PsiElement())(')')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[String]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            PsiComment(comment)('// compiles')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f1
                PsiElement(identifier)('f1')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: x1
                  PsiElement(identifier)('x1')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f1
                PsiElement(identifier)('f1')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: x2
                  PsiElement(identifier)('x2')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f1
                PsiElement(identifier)('f1')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: x3
                  PsiElement(identifier)('x3')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f1
                PsiElement(identifier)('f1')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: x4
                  PsiElement(identifier)('x4')
                PsiElement())(')')
            PsiWhiteSpace('\n\n    ')
            MethodCall
              ReferenceExpression: f2
                PsiElement(identifier)('f2')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: x1
                  PsiElement(identifier)('x1')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            PsiComment(comment)('// f2(x2)')
            PsiWhiteSpace('\n    ')
            PsiComment(comment)('// f2(x3)   // maybe this one should work')
            PsiWhiteSpace('\n    ')
            PsiComment(comment)('// f2(x4)')
            PsiWhiteSpace('\n\n    ')
            MethodCall
              ReferenceExpression: f1
                PsiElement(identifier)('f1')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: narrow1
                    PsiElement(identifier)('narrow1')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x4
                      PsiElement(identifier)('x4')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f1
                PsiElement(identifier)('f1')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: narrow2
                    PsiElement(identifier)('narrow2')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x4
                      PsiElement(identifier)('x4')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f1
                PsiElement(identifier)('f1')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: narrow3
                    PsiElement(identifier)('narrow3')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x4
                      PsiElement(identifier)('x4')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f1
                PsiElement(identifier)('f1')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: narrow4
                    PsiElement(identifier)('narrow4')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x4
                      PsiElement(identifier)('x4')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f2
                PsiElement(identifier)('f2')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: narrow1
                    PsiElement(identifier)('narrow1')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x4
                      PsiElement(identifier)('x4')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f2
                PsiElement(identifier)('f2')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: narrow2
                    PsiElement(identifier)('narrow2')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x4
                      PsiElement(identifier)('x4')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f2
                PsiElement(identifier)('f2')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: narrow3
                    PsiElement(identifier)('narrow3')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x4
                      PsiElement(identifier)('x4')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: f2
                PsiElement(identifier)('f2')
              ArgumentList
                PsiElement(()('(')
                MethodCall
                  ReferenceExpression: narrow4
                    PsiElement(identifier)('narrow4')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: x4
                      PsiElement(identifier)('x4')
                    PsiElement())(')')
                PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
