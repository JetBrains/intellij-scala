case class W[T](seq: Option[Option[T]] = Option.empty)
object W {
  def apply[T] = new W[T]()
}

case class V[T](vv: W[W[T]] = W.apply)
object Test {
  W[Int]()
  // V[Int]()    fails in scalac and dotty: both instantiate the vv-default to W[Nothing]
}
-----
ScalaFile
  ScClass: W
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('W')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: seq
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('seq')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: Option[Option[T]]
                SimpleType: Option
                  CodeReferenceElement: Option
                    PsiElement(identifier)('Option')
                TypeArgumentsList
                  PsiElement([)('[')
                  ParametrizedType: Option[T]
                    SimpleType: Option
                      CodeReferenceElement: Option
                        PsiElement(identifier)('Option')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
                  PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: Option.empty
              ReferenceExpression: Option
                PsiElement(identifier)('Option')
              PsiElement(.)('.')
              PsiElement(identifier)('empty')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScObject: W
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('W')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: apply
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('apply')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: W[T]
                    SimpleType: W
                      CodeReferenceElement: W
                        PsiElement(identifier)('W')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: V
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('V')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: vv
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('vv')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: W[W[T]]
                SimpleType: W
                  CodeReferenceElement: W
                    PsiElement(identifier)('W')
                TypeArgumentsList
                  PsiElement([)('[')
                  ParametrizedType: W[T]
                    SimpleType: W
                      CodeReferenceElement: W
                        PsiElement(identifier)('W')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
                  PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: W.apply
              ReferenceExpression: W
                PsiElement(identifier)('W')
              PsiElement(.)('.')
              PsiElement(identifier)('apply')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        MethodCall
          GenericCall
            ReferenceExpression: W
              PsiElement(identifier)('W')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// V[Int]()    fails in scalac and dotty: both instantiate the vv-default to W[Nothing]')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
