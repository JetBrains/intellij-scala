object Main {
  def f[a]: List[List[a]] = for (l1 <- Nil; l2 <- Nil) yield l1
}
-----
ScalaFile
  ScObject: Main
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Main')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: a
              PsiElement(identifier)('a')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[List[a]]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: List[a]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: a
                    CodeReferenceElement: a
                      PsiElement(identifier)('a')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ForStatement
            PsiElement(for)('for')
            PsiWhiteSpace(' ')
            PsiElement(()('(')
            Enumerators
              Generator
                ReferencePattern: l1
                  PsiElement(identifier)('l1')
                PsiWhiteSpace(' ')
                PsiElement(<-)('<-')
                PsiWhiteSpace(' ')
                ReferenceExpression: Nil
                  PsiElement(identifier)('Nil')
              PsiElement(;)(';')
              PsiWhiteSpace(' ')
              Generator
                ReferencePattern: l2
                  PsiElement(identifier)('l2')
                PsiWhiteSpace(' ')
                PsiElement(<-)('<-')
                PsiWhiteSpace(' ')
                ReferenceExpression: Nil
                  PsiElement(identifier)('Nil')
            PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(yield)('yield')
            PsiWhiteSpace(' ')
            ReferenceExpression: l1
              PsiElement(identifier)('l1')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
