transparent inline given Int = 1
val x: 1 = summon[Int]
-----
ScalaFile
  ScGivenAliasDefinition: given_Int
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(transparent)('transparent')
      PsiWhiteSpace(' ')
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(given)('given')
    PsiWhiteSpace(' ')
    SimpleType: Int
      CodeReferenceElement: Int
        PsiElement(identifier)('Int')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    IntegerLiteral
      PsiElement(integer)('1')
  PsiWhiteSpace('\n')
  ScPatternDefinition: x
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: x
        PsiElement(identifier)('x')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    LiteralType: 1
      IntegerLiteral
        PsiElement(integer)('1')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: summon
        PsiElement(identifier)('summon')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: Int
          CodeReferenceElement: Int
            PsiElement(identifier)('Int')
        PsiElement(])(']')
