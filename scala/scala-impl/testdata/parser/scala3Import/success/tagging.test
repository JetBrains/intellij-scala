import scala.reflect.ClassTag
object tagging {

  // Tagged[S, T] means that S is tagged with T
  opaque type Tagged[X, Y] = X

  object Tagged {
    def tag[S, T](s: S): Tagged[S, T] = (s: S)
    def untag[S, T](st: Tagged[S, T]): S = st

    def tags[F[_], S, T](fs: F[S]): F[Tagged[S, T]] = fs
    def untags[F[_], S, T](fst: F[Tagged[S, T]]): F[S] = fst

    implicit def taggedClassTag[S, T](implicit ct: ClassTag[S]): ClassTag[Tagged[S, T]] =
      ct
  }

  type @@[S, T] = Tagged[S, T]

  implicit class UntagOps[S, T](st: S @@ T) extends AnyVal {
    def untag: S = Tagged.untag(st)
  }

  implicit class UntagsOps[F[_], S, T](fs: F[S @@ T]) extends AnyVal {
    def untags: F[S] = Tagged.untags(fs)
  }

  implicit class TagOps[S](s: S) extends AnyVal {
    def tag[T]: S @@ T = Tagged.tag(s)
  }

  implicit class TagsOps[F[_], S](fs: F[S]) extends AnyVal {
    def tags[T]: F[S @@ T] = Tagged.tags(fs)
  }

  trait Meter
  trait Foot
  trait Fathom

  val x: Double @@ Meter = (1e7).tag[Meter]
  val y: Double @@ Foot = (123.0).tag[Foot]
  val xs: Array[Double @@ Meter] = Array(1.0, 2.0, 3.0).tags[Meter]

  val o: Ordering[Double] = implicitly
  val om: Ordering[Double @@ Meter] = o.tags[Meter]
  om.compare(x, x) // 0
  // om.compare(x, y) // does not compile
  xs.min(om) // 1.0
  // xs.min(o) // does not compile

  // uses ClassTag[Double] via 'Tagged.taggedClassTag'.
  val ys = new Array[Double @@ Foot](20)
  val ys1 = new Array[Double](20)
}
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.reflect.ClassTag
        CodeReferenceElement: scala.reflect
          CodeReferenceElement: scala
            PsiElement(identifier)('scala')
          PsiElement(.)('.')
          PsiElement(identifier)('reflect')
        PsiElement(.)('.')
        PsiElement(identifier)('ClassTag')
  PsiWhiteSpace('\n')
  ScObject: tagging
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('tagging')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: Tagged
          PsiComment(comment)('// Tagged[S, T] means that S is tagged with T')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(opaque)('opaque')
          PsiWhiteSpace(' ')
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Tagged')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: Y
              PsiElement(identifier)('Y')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SimpleType: X
            CodeReferenceElement: X
              PsiElement(identifier)('X')
        PsiWhiteSpace('\n\n  ')
        ScObject: Tagged
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Tagged')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: tag
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('tag')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: S
                    PsiElement(identifier)('S')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: s
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('s')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: S
                          CodeReferenceElement: S
                            PsiElement(identifier)('S')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tagged[S, T]
                  SimpleType: Tagged
                    CodeReferenceElement: Tagged
                      PsiElement(identifier)('Tagged')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: S
                      CodeReferenceElement: S
                        PsiElement(identifier)('S')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ExpressionInParenthesis
                  PsiElement(()('(')
                  TypedExpression
                    ReferenceExpression: s
                      PsiElement(identifier)('s')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    SimpleType: S
                      CodeReferenceElement: S
                        PsiElement(identifier)('S')
                  PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: untag
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('untag')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: S
                    PsiElement(identifier)('S')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: st
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('st')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: Tagged[S, T]
                          SimpleType: Tagged
                            CodeReferenceElement: Tagged
                              PsiElement(identifier)('Tagged')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: S
                              CodeReferenceElement: S
                                PsiElement(identifier)('S')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: T
                              CodeReferenceElement: T
                                PsiElement(identifier)('T')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: S
                  CodeReferenceElement: S
                    PsiElement(identifier)('S')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: st
                  PsiElement(identifier)('st')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: tags
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('tags')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: F
                    PsiElement(identifier)('F')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: S
                    PsiElement(identifier)('S')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: fs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('fs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: F[S]
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: S
                              CodeReferenceElement: S
                                PsiElement(identifier)('S')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: F[Tagged[S, T]]
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: Tagged[S, T]
                      SimpleType: Tagged
                        CodeReferenceElement: Tagged
                          PsiElement(identifier)('Tagged')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: S
                          CodeReferenceElement: S
                            PsiElement(identifier)('S')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: fs
                  PsiElement(identifier)('fs')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: untags
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('untags')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: F
                    PsiElement(identifier)('F')
                    TypeParameterClause
                      PsiElement([)('[')
                      TypeParameter: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: S
                    PsiElement(identifier)('S')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: fst
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('fst')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: F[Tagged[S, T]]
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          TypeArgumentsList
                            PsiElement([)('[')
                            ParametrizedType: Tagged[S, T]
                              SimpleType: Tagged
                                CodeReferenceElement: Tagged
                                  PsiElement(identifier)('Tagged')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: S
                                  CodeReferenceElement: S
                                    PsiElement(identifier)('S')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: T
                                  CodeReferenceElement: T
                                    PsiElement(identifier)('T')
                                PsiElement(])(']')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: F[S]
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: S
                      CodeReferenceElement: S
                        PsiElement(identifier)('S')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: fst
                  PsiElement(identifier)('fst')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: taggedClassTag
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(implicit)('implicit')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('taggedClassTag')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: S
                    PsiElement(identifier)('S')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: ct
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ct')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        ParametrizedType: ClassTag[S]
                          SimpleType: ClassTag
                            CodeReferenceElement: ClassTag
                              PsiElement(identifier)('ClassTag')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: S
                              CodeReferenceElement: S
                                PsiElement(identifier)('S')
                            PsiElement(])(']')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: ClassTag[Tagged[S, T]]
                  SimpleType: ClassTag
                    CodeReferenceElement: ClassTag
                      PsiElement(identifier)('ClassTag')
                  TypeArgumentsList
                    PsiElement([)('[')
                    ParametrizedType: Tagged[S, T]
                      SimpleType: Tagged
                        CodeReferenceElement: Tagged
                          PsiElement(identifier)('Tagged')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: S
                          CodeReferenceElement: S
                            PsiElement(identifier)('S')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        SimpleType: T
                          CodeReferenceElement: T
                            PsiElement(identifier)('T')
                        PsiElement(])(']')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                ReferenceExpression: ct
                  PsiElement(identifier)('ct')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: @@
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('@@')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: S
              PsiElement(identifier)('S')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: Tagged[S, T]
            SimpleType: Tagged
              CodeReferenceElement: Tagged
                PsiElement(identifier)('Tagged')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: S
                CodeReferenceElement: S
                  PsiElement(identifier)('S')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScClass: UntagOps
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('UntagOps')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: S
              PsiElement(identifier)('S')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: st
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('st')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    InfixType: S @@ T
                      SimpleType: S
                        CodeReferenceElement: S
                          PsiElement(identifier)('S')
                      PsiWhiteSpace(' ')
                      CodeReferenceElement: @@
                        PsiElement(identifier)('@@')
                      PsiWhiteSpace(' ')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: AnyVal
                  CodeReferenceElement: AnyVal
                    PsiElement(identifier)('AnyVal')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: untag
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('untag')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: S
                  CodeReferenceElement: S
                    PsiElement(identifier)('S')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Tagged.untag
                    ReferenceExpression: Tagged
                      PsiElement(identifier)('Tagged')
                    PsiElement(.)('.')
                    PsiElement(identifier)('untag')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: st
                      PsiElement(identifier)('st')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: UntagsOps
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('UntagsOps')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: S
              PsiElement(identifier)('S')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: fs
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('fs')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: F[S @@ T]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        InfixType: S @@ T
                          SimpleType: S
                            CodeReferenceElement: S
                              PsiElement(identifier)('S')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: @@
                            PsiElement(identifier)('@@')
                          PsiWhiteSpace(' ')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                        PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: AnyVal
                  CodeReferenceElement: AnyVal
                    PsiElement(identifier)('AnyVal')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: untags
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('untags')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: F[S]
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: S
                      CodeReferenceElement: S
                        PsiElement(identifier)('S')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Tagged.untags
                    ReferenceExpression: Tagged
                      PsiElement(identifier)('Tagged')
                    PsiElement(.)('.')
                    PsiElement(identifier)('untags')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: fs
                      PsiElement(identifier)('fs')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: TagOps
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TagOps')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: S
              PsiElement(identifier)('S')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: s
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('s')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: S
                      CodeReferenceElement: S
                        PsiElement(identifier)('S')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: AnyVal
                  CodeReferenceElement: AnyVal
                    PsiElement(identifier)('AnyVal')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: tag
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('tag')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                  PsiElement(])(']')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                InfixType: S @@ T
                  SimpleType: S
                    CodeReferenceElement: S
                      PsiElement(identifier)('S')
                  PsiWhiteSpace(' ')
                  CodeReferenceElement: @@
                    PsiElement(identifier)('@@')
                  PsiWhiteSpace(' ')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Tagged.tag
                    ReferenceExpression: Tagged
                      PsiElement(identifier)('Tagged')
                    PsiElement(.)('.')
                    PsiElement(identifier)('tag')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: s
                      PsiElement(identifier)('s')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScClass: TagsOps
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TagsOps')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: S
              PsiElement(identifier)('S')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: fs
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('fs')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: F[S]
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: S
                          CodeReferenceElement: S
                            PsiElement(identifier)('S')
                        PsiElement(])(']')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: AnyVal
                  CodeReferenceElement: AnyVal
                    PsiElement(identifier)('AnyVal')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: tags
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('tags')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: T
                    PsiElement(identifier)('T')
                  PsiElement(])(']')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: F[S @@ T]
                  SimpleType: F
                    CodeReferenceElement: F
                      PsiElement(identifier)('F')
                  TypeArgumentsList
                    PsiElement([)('[')
                    InfixType: S @@ T
                      SimpleType: S
                        CodeReferenceElement: S
                          PsiElement(identifier)('S')
                      PsiWhiteSpace(' ')
                      CodeReferenceElement: @@
                        PsiElement(identifier)('@@')
                      PsiWhiteSpace(' ')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Tagged.tags
                    ReferenceExpression: Tagged
                      PsiElement(identifier)('Tagged')
                    PsiElement(.)('.')
                    PsiElement(identifier)('tags')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: fs
                      PsiElement(identifier)('fs')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Meter
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Meter')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScTrait: Foot
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Foot')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScTrait: Fathom
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Fathom')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          InfixType: Double @@ Meter
            SimpleType: Double
              CodeReferenceElement: Double
                PsiElement(identifier)('Double')
            PsiWhiteSpace(' ')
            CodeReferenceElement: @@
              PsiElement(identifier)('@@')
            PsiWhiteSpace(' ')
            SimpleType: Meter
              CodeReferenceElement: Meter
                PsiElement(identifier)('Meter')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: (1e7).tag
              ExpressionInParenthesis
                PsiElement(()('(')
                DoubleLiteral
                  PsiElement(double)('1e7')
                PsiElement())(')')
              PsiElement(.)('.')
              PsiElement(identifier)('tag')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Meter
                CodeReferenceElement: Meter
                  PsiElement(identifier)('Meter')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y
              PsiElement(identifier)('y')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          InfixType: Double @@ Foot
            SimpleType: Double
              CodeReferenceElement: Double
                PsiElement(identifier)('Double')
            PsiWhiteSpace(' ')
            CodeReferenceElement: @@
              PsiElement(identifier)('@@')
            PsiWhiteSpace(' ')
            SimpleType: Foot
              CodeReferenceElement: Foot
                PsiElement(identifier)('Foot')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: (123.0).tag
              ExpressionInParenthesis
                PsiElement(()('(')
                DoubleLiteral
                  PsiElement(double)('123.0')
                PsiElement())(')')
              PsiElement(.)('.')
              PsiElement(identifier)('tag')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Foot
                CodeReferenceElement: Foot
                  PsiElement(identifier)('Foot')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: xs
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xs
              PsiElement(identifier)('xs')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Array[Double @@ Meter]
            SimpleType: Array
              CodeReferenceElement: Array
                PsiElement(identifier)('Array')
            TypeArgumentsList
              PsiElement([)('[')
              InfixType: Double @@ Meter
                SimpleType: Double
                  CodeReferenceElement: Double
                    PsiElement(identifier)('Double')
                PsiWhiteSpace(' ')
                CodeReferenceElement: @@
                  PsiElement(identifier)('@@')
                PsiWhiteSpace(' ')
                SimpleType: Meter
                  CodeReferenceElement: Meter
                    PsiElement(identifier)('Meter')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: Array(1.0, 2.0, 3.0).tags
              MethodCall
                ReferenceExpression: Array
                  PsiElement(identifier)('Array')
                ArgumentList
                  PsiElement(()('(')
                  DoubleLiteral
                    PsiElement(double)('1.0')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  DoubleLiteral
                    PsiElement(double)('2.0')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  DoubleLiteral
                    PsiElement(double)('3.0')
                  PsiElement())(')')
              PsiElement(.)('.')
              PsiElement(identifier)('tags')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Meter
                CodeReferenceElement: Meter
                  PsiElement(identifier)('Meter')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: o
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: o
              PsiElement(identifier)('o')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Ordering[Double]
            SimpleType: Ordering
              CodeReferenceElement: Ordering
                PsiElement(identifier)('Ordering')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Double
                CodeReferenceElement: Double
                  PsiElement(identifier)('Double')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: implicitly
            PsiElement(identifier)('implicitly')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: om
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: om
              PsiElement(identifier)('om')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Ordering[Double @@ Meter]
            SimpleType: Ordering
              CodeReferenceElement: Ordering
                PsiElement(identifier)('Ordering')
            TypeArgumentsList
              PsiElement([)('[')
              InfixType: Double @@ Meter
                SimpleType: Double
                  CodeReferenceElement: Double
                    PsiElement(identifier)('Double')
                PsiWhiteSpace(' ')
                CodeReferenceElement: @@
                  PsiElement(identifier)('@@')
                PsiWhiteSpace(' ')
                SimpleType: Meter
                  CodeReferenceElement: Meter
                    PsiElement(identifier)('Meter')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: o.tags
              ReferenceExpression: o
                PsiElement(identifier)('o')
              PsiElement(.)('.')
              PsiElement(identifier)('tags')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Meter
                CodeReferenceElement: Meter
                  PsiElement(identifier)('Meter')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: om.compare
            ReferenceExpression: om
              PsiElement(identifier)('om')
            PsiElement(.)('.')
            PsiElement(identifier)('compare')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// 0')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// om.compare(x, y) // does not compile')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: xs.min
            ReferenceExpression: xs
              PsiElement(identifier)('xs')
            PsiElement(.)('.')
            PsiElement(identifier)('min')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: om
              PsiElement(identifier)('om')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiComment(comment)('// 1.0')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// xs.min(o) // does not compile')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: ys
          PsiComment(comment)('// uses ClassTag[Double] via 'Tagged.taggedClassTag'.')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: ys
              PsiElement(identifier)('ys')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Array[Double @@ Foot]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      InfixType: Double @@ Foot
                        SimpleType: Double
                          CodeReferenceElement: Double
                            PsiElement(identifier)('Double')
                        PsiWhiteSpace(' ')
                        CodeReferenceElement: @@
                          PsiElement(identifier)('@@')
                        PsiWhiteSpace(' ')
                        SimpleType: Foot
                          CodeReferenceElement: Foot
                            PsiElement(identifier)('Foot')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    IntegerLiteral
                      PsiElement(integer)('20')
                    PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: ys1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: ys1
              PsiElement(identifier)('ys1')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Array[Double]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Double
                        CodeReferenceElement: Double
                          PsiElement(identifier)('Double')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    IntegerLiteral
                      PsiElement(integer)('20')
                    PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
