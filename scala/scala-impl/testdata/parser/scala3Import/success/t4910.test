class A {
  implicit object foo
  // it compiles if we uncomment this
  // implicit val bar = foo
  implicitly[foo.type]
}
-----
ScalaFile
  ScClass: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScObject: foo
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// it compiles if we uncomment this')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// implicit val bar = foo')
        PsiWhiteSpace('\n  ')
        GenericCall
          ReferenceExpression: implicitly
            PsiElement(identifier)('implicitly')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: foo.type
              CodeReferenceElement: foo
                PsiElement(identifier)('foo')
              PsiElement(.)('.')
              PsiElement(type)('type')
            PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
