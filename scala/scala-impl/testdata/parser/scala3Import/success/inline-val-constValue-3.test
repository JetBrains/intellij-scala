
inline def f[N <: Int]: Unit = {
  inline val size = compiletime.constValue[N]
  inline val n = size
  val m: Int = n
  ???
}

type N = 4
def test: Unit = f[N]
-----
ScalaFile
  ScFunctionDefinition: f
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('f')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: N
        PsiElement(identifier)('N')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: Int
          CodeReferenceElement: Int
            PsiElement(identifier)('Int')
      PsiElement(])(']')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: size
        AnnotationsList
          <empty list>
        Modifiers
          PsiElement(inline)('inline')
        PsiWhiteSpace(' ')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: size
            PsiElement(identifier)('size')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        GenericCall
          ReferenceExpression: compiletime.constValue
            ReferenceExpression: compiletime
              PsiElement(identifier)('compiletime')
            PsiElement(.)('.')
            PsiElement(identifier)('constValue')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: N
              CodeReferenceElement: N
                PsiElement(identifier)('N')
            PsiElement(])(']')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: n
        AnnotationsList
          <empty list>
        Modifiers
          PsiElement(inline)('inline')
        PsiWhiteSpace(' ')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: n
            PsiElement(identifier)('n')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ReferenceExpression: size
          PsiElement(identifier)('size')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: m
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: m
            PsiElement(identifier)('m')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        SimpleType: Int
          CodeReferenceElement: Int
            PsiElement(identifier)('Int')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ReferenceExpression: n
          PsiElement(identifier)('n')
      PsiWhiteSpace('\n  ')
      ReferenceExpression: ???
        PsiElement(identifier)('???')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTypeAliasDefinition: N
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('N')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    LiteralType: 4
      IntegerLiteral
        PsiElement(integer)('4')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    GenericCall
      ReferenceExpression: f
        PsiElement(identifier)('f')
      TypeArgumentsList
        PsiElement([)('[')
        SimpleType: N
          CodeReferenceElement: N
            PsiElement(identifier)('N')
        PsiElement(])(']')
