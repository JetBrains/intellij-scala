object Test {

  type Histogram[X] = Map[X, Int]

  type StringlyHistogram[X >: String] = Histogram[X]

  val xs: Histogram[String] = Map[String, Int]()

  val ys: StringlyHistogram[String] = xs

  def e = xs

  val zs: StringlyHistogram[_] = e

  type IntMap[Y] = Map[Int, Y]

  val is = Map[Int, Boolean]()

  val js: IntMap[Boolean] = is

  val ks: IntMap[_] = is

  type RMap[X, Y] = Map[Y, X]

  val rs = Map[Int, Float]()

  val ss: RMap[Float, Int] = rs

}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: Histogram
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Histogram')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: Map[X, Int]
            SimpleType: Map
              CodeReferenceElement: Map
                PsiElement(identifier)('Map')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: X
                CodeReferenceElement: X
                  PsiElement(identifier)('X')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: StringlyHistogram
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('StringlyHistogram')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
              PsiWhiteSpace(' ')
              PsiElement(>:)('>:')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: Histogram[X]
            SimpleType: Histogram
              CodeReferenceElement: Histogram
                PsiElement(identifier)('Histogram')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: X
                CodeReferenceElement: X
                  PsiElement(identifier)('X')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: xs
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xs
              PsiElement(identifier)('xs')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Histogram[String]
            SimpleType: Histogram
              CodeReferenceElement: Histogram
                PsiElement(identifier)('Histogram')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            GenericCall
              ReferenceExpression: Map
                PsiElement(identifier)('Map')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: ys
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: ys
              PsiElement(identifier)('ys')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: StringlyHistogram[String]
            SimpleType: StringlyHistogram
              CodeReferenceElement: StringlyHistogram
                PsiElement(identifier)('StringlyHistogram')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: xs
            PsiElement(identifier)('xs')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: e
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('e')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: xs
            PsiElement(identifier)('xs')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: zs
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: zs
              PsiElement(identifier)('zs')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: StringlyHistogram[_]
            SimpleType: StringlyHistogram
              CodeReferenceElement: StringlyHistogram
                PsiElement(identifier)('StringlyHistogram')
            TypeArgumentsList
              PsiElement([)('[')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: e
            PsiElement(identifier)('e')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: IntMap
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('IntMap')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Y
              PsiElement(identifier)('Y')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: Map[Int, Y]
            SimpleType: Map
              CodeReferenceElement: Map
                PsiElement(identifier)('Map')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Y
                CodeReferenceElement: Y
                  PsiElement(identifier)('Y')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: is
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: is
              PsiElement(identifier)('is')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            GenericCall
              ReferenceExpression: Map
                PsiElement(identifier)('Map')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: Boolean
                  CodeReferenceElement: Boolean
                    PsiElement(identifier)('Boolean')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: js
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: js
              PsiElement(identifier)('js')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: IntMap[Boolean]
            SimpleType: IntMap
              CodeReferenceElement: IntMap
                PsiElement(identifier)('IntMap')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Boolean
                CodeReferenceElement: Boolean
                  PsiElement(identifier)('Boolean')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: is
            PsiElement(identifier)('is')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: ks
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: ks
              PsiElement(identifier)('ks')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: IntMap[_]
            SimpleType: IntMap
              CodeReferenceElement: IntMap
                PsiElement(identifier)('IntMap')
            TypeArgumentsList
              PsiElement([)('[')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: is
            PsiElement(identifier)('is')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: RMap
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('RMap')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: Y
              PsiElement(identifier)('Y')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: Map[Y, X]
            SimpleType: Map
              CodeReferenceElement: Map
                PsiElement(identifier)('Map')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Y
                CodeReferenceElement: Y
                  PsiElement(identifier)('Y')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: X
                CodeReferenceElement: X
                  PsiElement(identifier)('X')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: rs
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: rs
              PsiElement(identifier)('rs')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            GenericCall
              ReferenceExpression: Map
                PsiElement(identifier)('Map')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: Float
                  CodeReferenceElement: Float
                    PsiElement(identifier)('Float')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: ss
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: ss
              PsiElement(identifier)('ss')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: RMap[Float, Int]
            SimpleType: RMap
              CodeReferenceElement: RMap
                PsiElement(identifier)('RMap')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Float
                CodeReferenceElement: Float
                  PsiElement(identifier)('Float')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: rs
            PsiElement(identifier)('rs')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
