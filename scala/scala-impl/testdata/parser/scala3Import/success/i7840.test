object Example extends App {

  trait ZSink[-R, +E, +A0, -A, +B] {
    def flatMap[R1 <: R, E1 >: E, A00 >: A0, A1 <: A, C](
      f: B => ZSink[R1, E1, A00, A1, C]
    )(implicit ev: A00 =:= A1, e2: A1 =:= A00): ZSink[R1, E1, A00, A1, C] =
      ???
  }

  object ZSink {
    def identity[A]: ZSink[Any, Unit, Nothing, A, A] = ???
    def succeed[A, B](b: B): ZSink[Any, Nothing, A, A, B] = ???
  }

  // cannot prove that Int =:= Nothing
  ZSink.identity[Int].flatMap(n => ZSink.succeed[Int, String](n.toString))
}
-----
ScalaFile
  ScObject: Example
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Example')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: App
            CodeReferenceElement: App
              PsiElement(identifier)('App')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTrait: ZSink
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ZSink')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: R
              PsiElement(identifier)('-')
              PsiElement(identifier)('R')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: E
              PsiElement(identifier)('+')
              PsiElement(identifier)('E')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A0
              PsiElement(identifier)('+')
              PsiElement(identifier)('A0')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('-')
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('+')
              PsiElement(identifier)('B')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: flatMap
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('flatMap')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: R1
                    PsiElement(identifier)('R1')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    SimpleType: R
                      CodeReferenceElement: R
                        PsiElement(identifier)('R')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: E1
                    PsiElement(identifier)('E1')
                    PsiWhiteSpace(' ')
                    PsiElement(>:)('>:')
                    PsiWhiteSpace(' ')
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: A00
                    PsiElement(identifier)('A00')
                    PsiWhiteSpace(' ')
                    PsiElement(>:)('>:')
                    PsiWhiteSpace(' ')
                    SimpleType: A0
                      CodeReferenceElement: A0
                        PsiElement(identifier)('A0')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: A1
                    PsiElement(identifier)('A1')
                    PsiWhiteSpace(' ')
                    PsiElement(<:)('<:')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: C
                    PsiElement(identifier)('C')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiWhiteSpace('\n      ')
                    Parameter: f
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('f')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        FunctionalType: B => ZSink[R1, E1, A00, A1, C]
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          ParametrizedType: ZSink[R1, E1, A00, A1, C]
                            SimpleType: ZSink
                              CodeReferenceElement: ZSink
                                PsiElement(identifier)('ZSink')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: R1
                                CodeReferenceElement: R1
                                  PsiElement(identifier)('R1')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: E1
                                CodeReferenceElement: E1
                                  PsiElement(identifier)('E1')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: A00
                                CodeReferenceElement: A00
                                  PsiElement(identifier)('A00')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: A1
                                CodeReferenceElement: A1
                                  PsiElement(identifier)('A1')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: C
                                CodeReferenceElement: C
                                  PsiElement(identifier)('C')
                              PsiElement(])(']')
                    PsiWhiteSpace('\n    ')
                    PsiElement())(')')
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement(implicit)('implicit')
                    PsiWhiteSpace(' ')
                    Parameter: ev
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('ev')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        InfixType: A00 =:= A1
                          SimpleType: A00
                            CodeReferenceElement: A00
                              PsiElement(identifier)('A00')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: =:=
                            PsiElement(identifier)('=:=')
                          PsiWhiteSpace(' ')
                          SimpleType: A1
                            CodeReferenceElement: A1
                              PsiElement(identifier)('A1')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    Parameter: e2
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('e2')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        InfixType: A1 =:= A00
                          SimpleType: A1
                            CodeReferenceElement: A1
                              PsiElement(identifier)('A1')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: =:=
                            PsiElement(identifier)('=:=')
                          PsiWhiteSpace(' ')
                          SimpleType: A00
                            CodeReferenceElement: A00
                              PsiElement(identifier)('A00')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: ZSink[R1, E1, A00, A1, C]
                  SimpleType: ZSink
                    CodeReferenceElement: ZSink
                      PsiElement(identifier)('ZSink')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: R1
                      CodeReferenceElement: R1
                        PsiElement(identifier)('R1')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: E1
                      CodeReferenceElement: E1
                        PsiElement(identifier)('E1')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A00
                      CodeReferenceElement: A00
                        PsiElement(identifier)('A00')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A1
                      CodeReferenceElement: A1
                        PsiElement(identifier)('A1')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: C
                      CodeReferenceElement: C
                        PsiElement(identifier)('C')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace('\n      ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: ZSink
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ZSink')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: identity
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('identity')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: ZSink[Any, Unit, Nothing, A, A]
                  SimpleType: ZSink
                    CodeReferenceElement: ZSink
                      PsiElement(identifier)('ZSink')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Any
                      CodeReferenceElement: Any
                        PsiElement(identifier)('Any')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: Unit
                      CodeReferenceElement: Unit
                        PsiElement(identifier)('Unit')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: Nothing
                      CodeReferenceElement: Nothing
                        PsiElement(identifier)('Nothing')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: succeed
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('succeed')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  TypeParameter: B
                    PsiElement(identifier)('B')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: b
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('b')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: ZSink[Any, Nothing, A, A, B]
                  SimpleType: ZSink
                    CodeReferenceElement: ZSink
                      PsiElement(identifier)('ZSink')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Any
                      CodeReferenceElement: Any
                        PsiElement(identifier)('Any')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: Nothing
                      CodeReferenceElement: Nothing
                        PsiElement(identifier)('Nothing')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: B
                      CodeReferenceElement: B
                        PsiElement(identifier)('B')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// cannot prove that Int =:= Nothing')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: ZSink.identity[Int].flatMap
            GenericCall
              ReferenceExpression: ZSink.identity
                ReferenceExpression: ZSink
                  PsiElement(identifier)('ZSink')
                PsiElement(.)('.')
                PsiElement(identifier)('identity')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(])(']')
            PsiElement(.)('.')
            PsiElement(identifier)('flatMap')
          ArgumentList
            PsiElement(()('(')
            FunctionExpression
              Parameters
                ParametersClause
                  Parameter: n
                    PsiElement(identifier)('n')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              MethodCall
                GenericCall
                  ReferenceExpression: ZSink.succeed
                    ReferenceExpression: ZSink
                      PsiElement(identifier)('ZSink')
                    PsiElement(.)('.')
                    PsiElement(identifier)('succeed')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                    PsiElement(])(']')
                ArgumentList
                  PsiElement(()('(')
                  ReferenceExpression: n.toString
                    ReferenceExpression: n
                      PsiElement(identifier)('n')
                    PsiElement(.)('.')
                    PsiElement(identifier)('toString')
                  PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
