trait Foo {
  type Repr <: String
  def f2(x: Repr) = x.length
}
trait Fooz[Repr <: Array[_]] {
  def f0(x: Repr) = x.length
}

trait Bar[Repr <: List[_]] extends Foo with Fooz[Array[Int]] {
  def f1(x: Repr) = x.length
}
-----
ScalaFile
  ScTrait: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Repr
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Repr')
          PsiWhiteSpace(' ')
          PsiElement(<:)('<:')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f2')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Repr
                    CodeReferenceElement: Repr
                      PsiElement(identifier)('Repr')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x.length
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiElement(.)('.')
            PsiElement(identifier)('length')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScTrait: Fooz
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Fooz')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: Repr
        PsiElement(identifier)('Repr')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        ParametrizedType: Array[_]
          SimpleType: Array
            CodeReferenceElement: Array
              PsiElement(identifier)('Array')
          TypeArgumentsList
            PsiElement([)('[')
            WildcardType: _
              PsiElement(_)('_')
            PsiElement(])(']')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f0
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f0')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Repr
                    CodeReferenceElement: Repr
                      PsiElement(identifier)('Repr')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x.length
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiElement(.)('.')
            PsiElement(identifier)('length')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: Bar
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bar')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: Repr
        PsiElement(identifier)('Repr')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        ParametrizedType: List[_]
          SimpleType: List
            CodeReferenceElement: List
              PsiElement(identifier)('List')
          TypeArgumentsList
            PsiElement([)('[')
            WildcardType: _
              PsiElement(_)('_')
            PsiElement(])(']')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Foo
            CodeReferenceElement: Foo
              PsiElement(identifier)('Foo')
        PsiWhiteSpace(' ')
        PsiElement(with)('with')
        PsiWhiteSpace(' ')
        ConstructorInvocation
          ParametrizedType: Fooz[Array[Int]]
            SimpleType: Fooz
              CodeReferenceElement: Fooz
                PsiElement(identifier)('Fooz')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Array[Int]
                SimpleType: Array
                  CodeReferenceElement: Array
                    PsiElement(identifier)('Array')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiElement(])(']')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f1')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Repr
                    CodeReferenceElement: Repr
                      PsiElement(identifier)('Repr')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x.length
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiElement(.)('.')
            PsiElement(identifier)('length')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
