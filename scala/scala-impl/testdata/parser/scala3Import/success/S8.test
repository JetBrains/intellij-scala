/* I believe this code is correct, but the compiler rejects it:
**
** S8.scala:18: type mismatch;
** found   : M.x.A
** required: M.x.a.B
**        val y: x.a.B = new x.A(); //correct?
**                              ^
** For a given value x of type S8, type x.A should be
** a subtype of x.a.B.
*/
class S8() {
    val a: S8 = this;
    class A() extends a.B() {}
    class B() {}
}
object M {
    val x = new S8();
    val y: x.a.B = new x.A(); //correct?
}
-----
ScalaFile
  ScClass: S8
    PsiComment(BlockComment)('/* I believe this code is correct, but the compiler rejects it:\n**\n** S8.scala:18: type mismatch;\n** found   : M.x.A\n** required: M.x.a.B\n**        val y: x.a.B = new x.A(); //correct?\n**                              ^\n** For a given value x of type S8, type x.A should be\n** a subtype of x.a.B.\n*/')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('S8')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n    ')
        ScPatternDefinition: a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: a
              PsiElement(identifier)('a')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: S8
            CodeReferenceElement: S8
              PsiElement(identifier)('S8')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ThisReference
            PsiElement(this)('this')
        PsiElement(;)(';')
        PsiWhiteSpace('\n    ')
        ScClass: A
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: a.B
                  CodeReferenceElement: a.B
                    CodeReferenceElement: a
                      PsiElement(identifier)('a')
                    PsiElement(.)('.')
                    PsiElement(identifier)('B')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiElement(})('}')
        PsiWhiteSpace('\n    ')
        ScClass: B
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('B')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScObject: M
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('M')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n    ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: S8
                    CodeReferenceElement: S8
                      PsiElement(identifier)('S8')
                  ArgumentList
                    PsiElement(()('(')
                    PsiElement())(')')
        PsiElement(;)(';')
        PsiWhiteSpace('\n    ')
        ScPatternDefinition: y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y
              PsiElement(identifier)('y')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: x.a.B
            CodeReferenceElement: x.a.B
              CodeReferenceElement: x.a
                CodeReferenceElement: x
                  PsiElement(identifier)('x')
                PsiElement(.)('.')
                PsiElement(identifier)('a')
              PsiElement(.)('.')
              PsiElement(identifier)('B')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: x.A
                    CodeReferenceElement: x.A
                      CodeReferenceElement: x
                        PsiElement(identifier)('x')
                      PsiElement(.)('.')
                      PsiElement(identifier)('A')
                  ArgumentList
                    PsiElement(()('(')
                    PsiElement())(')')
        PsiElement(;)(';')
        PsiWhiteSpace(' ')
        PsiComment(comment)('//correct?')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
