object Test:
  val x  = summon[Lie.TC[Lie[7]]]
  val fails = summon[x.Out =:= 7]
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiWhiteSpace('  ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: summon
              PsiElement(identifier)('summon')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Lie.TC[Lie[7]]
                SimpleType: Lie.TC
                  CodeReferenceElement: Lie.TC
                    CodeReferenceElement: Lie
                      PsiElement(identifier)('Lie')
                    PsiElement(.)('.')
                    PsiElement(identifier)('TC')
                TypeArgumentsList
                  PsiElement([)('[')
                  ParametrizedType: Lie[7]
                    SimpleType: Lie
                      CodeReferenceElement: Lie
                        PsiElement(identifier)('Lie')
                    TypeArgumentsList
                      PsiElement([)('[')
                      LiteralType: 7
                        IntegerLiteral
                          PsiElement(integer)('7')
                      PsiElement(])(']')
                  PsiElement(])(']')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: fails
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: fails
              PsiElement(identifier)('fails')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: summon
              PsiElement(identifier)('summon')
            TypeArgumentsList
              PsiElement([)('[')
              InfixType: x.Out =:= 7
                SimpleType: x.Out
                  CodeReferenceElement: x.Out
                    CodeReferenceElement: x
                      PsiElement(identifier)('x')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Out')
                PsiWhiteSpace(' ')
                CodeReferenceElement: =:=
                  PsiElement(identifier)('=:=')
                PsiWhiteSpace(' ')
                LiteralType: 7
                  IntegerLiteral
                    PsiElement(integer)('7')
              PsiElement(])(']')
