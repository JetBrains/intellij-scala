package p1.p2

protected[p2] class C(var x: Int = 0)

protected[p2] trait T {
  new C()
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: p1.p2
      CodeReferenceElement: p1
        PsiElement(identifier)('p1')
      PsiElement(.)('.')
      PsiElement(identifier)('p2')
    PsiWhiteSpace('\n\n')
    ScClass: C
      AnnotationsList
        <empty list>
      Modifiers
        AccessModifier
          PsiElement(protected)('protected')
          PsiElement([)('[')
          PsiElement(identifier)('p2')
          PsiElement(])(']')
      PsiWhiteSpace(' ')
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('C')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          ParametersClause
            PsiElement(()('(')
            ClassParameter: x
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(var)('var')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('x')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('0')
            PsiElement())(')')
      ExtendsBlock
        <empty list>
    PsiWhiteSpace('\n\n')
    ScTrait: T
      AnnotationsList
        <empty list>
      Modifiers
        AccessModifier
          PsiElement(protected)('protected')
          PsiElement([)('[')
          PsiElement(identifier)('p2')
          PsiElement(])(']')
      PsiWhiteSpace(' ')
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('T')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: C
                    CodeReferenceElement: C
                      PsiElement(identifier)('C')
                  ArgumentList
                    PsiElement(()('(')
                    PsiElement())(')')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
