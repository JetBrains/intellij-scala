package example

final case class Writer[W, A](run: (W, A)) {
  def map[B](f: A => B): Writer[W, B] = ???

  def flatMap[B](f: A => Writer[W, B]): Writer[W, B] = ???
}

object Main {
  implicit class WriterOps[A](a: A) {
    def set[W](w: W): Writer[W, A] = ???
  }

  def x1[A]: Writer[Vector[String], Option[A]] = ???

  val failure = for {
    a1 <- {
      Option(1) match {
        case Some(x) =>
          x1[Boolean]
        case _ =>
          Option.empty[Boolean].set(Vector.empty[String])
      }
    }
    a2 <- x1[String]
  } yield ()

  val success = for {
    a1 <- {
      val temp = Option(1) match {
        case Some(x) =>
          x1[Boolean]
        case _ =>
          Option.empty[Boolean].set(Vector.empty[String])
      }
      // why ???
      temp
    }
    a2 <- x1[String]
  } yield ()

}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: example
      PsiElement(identifier)('example')
    PsiWhiteSpace('\n\n')
    ScClass: Writer
      AnnotationsList
        <empty list>
      Modifiers
        PsiElement(final)('final')
        PsiWhiteSpace(' ')
        PsiElement(case)('case')
      PsiWhiteSpace(' ')
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Writer')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: W
          PsiElement(identifier)('W')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        TypeParameter: A
          PsiElement(identifier)('A')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          ParametersClause
            PsiElement(()('(')
            ClassParameter: run
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('run')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                TupleType: (W, A)
                  PsiElement(()('(')
                  TypesList
                    SimpleType: W
                      CodeReferenceElement: W
                        PsiElement(identifier)('W')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                  PsiElement())(')')
            PsiElement())(')')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: map
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('map')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: B
                PsiElement(identifier)('B')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: f
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('f')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    FunctionalType: A => B
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      SimpleType: B
                        CodeReferenceElement: B
                          PsiElement(identifier)('B')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Writer[W, B]
              SimpleType: Writer
                CodeReferenceElement: Writer
                  PsiElement(identifier)('Writer')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: W
                  CodeReferenceElement: W
                    PsiElement(identifier)('W')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: B
                  CodeReferenceElement: B
                    PsiElement(identifier)('B')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: ???
              PsiElement(identifier)('???')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: flatMap
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('flatMap')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: B
                PsiElement(identifier)('B')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: f
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('f')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    FunctionalType: A => Writer[W, B]
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiWhiteSpace(' ')
                      PsiElement(=>)('=>')
                      PsiWhiteSpace(' ')
                      ParametrizedType: Writer[W, B]
                        SimpleType: Writer
                          CodeReferenceElement: Writer
                            PsiElement(identifier)('Writer')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: W
                            CodeReferenceElement: W
                              PsiElement(identifier)('W')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                          PsiElement(])(']')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Writer[W, B]
              SimpleType: Writer
                CodeReferenceElement: Writer
                  PsiElement(identifier)('Writer')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: W
                  CodeReferenceElement: W
                    PsiElement(identifier)('W')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: B
                  CodeReferenceElement: B
                    PsiElement(identifier)('B')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: ???
              PsiElement(identifier)('???')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScObject: Main
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Main')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScClass: WriterOps
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(implicit)('implicit')
            PsiWhiteSpace(' ')
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('WriterOps')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: A
                PsiElement(identifier)('A')
              PsiElement(])(']')
            PrimaryConstructor
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  ClassParameter: a
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('a')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ExtendsBlock
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScFunctionDefinition: set
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('set')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: W
                      PsiElement(identifier)('W')
                    PsiElement(])(']')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: w
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('w')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: W
                            CodeReferenceElement: W
                              PsiElement(identifier)('W')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Writer[W, A]
                    SimpleType: Writer
                      CodeReferenceElement: Writer
                        PsiElement(identifier)('Writer')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: W
                        CodeReferenceElement: W
                          PsiElement(identifier)('W')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: ???
                    PsiElement(identifier)('???')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: x1
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('x1')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: A
                PsiElement(identifier)('A')
              PsiElement(])(']')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Writer[Vector[String], Option[A]]
              SimpleType: Writer
                CodeReferenceElement: Writer
                  PsiElement(identifier)('Writer')
              TypeArgumentsList
                PsiElement([)('[')
                ParametrizedType: Vector[String]
                  SimpleType: Vector
                    CodeReferenceElement: Vector
                      PsiElement(identifier)('Vector')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                    PsiElement(])(']')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ParametrizedType: Option[A]
                  SimpleType: Option
                    CodeReferenceElement: Option
                      PsiElement(identifier)('Option')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: ???
              PsiElement(identifier)('???')
          PsiWhiteSpace('\n\n  ')
          ScPatternDefinition: failure
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: failure
                PsiElement(identifier)('failure')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ForStatement
              PsiElement(for)('for')
              PsiWhiteSpace(' ')
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              Enumerators
                Generator
                  ReferencePattern: a1
                    PsiElement(identifier)('a1')
                  PsiWhiteSpace(' ')
                  PsiElement(<-)('<-')
                  PsiWhiteSpace(' ')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace('\n      ')
                    MatchStatement
                      MethodCall
                        ReferenceExpression: Option
                          PsiElement(identifier)('Option')
                        ArgumentList
                          PsiElement(()('(')
                          IntegerLiteral
                            PsiElement(integer)('1')
                          PsiElement())(')')
                      PsiWhiteSpace(' ')
                      PsiElement(match)('match')
                      PsiWhiteSpace(' ')
                      PsiElement({)('{')
                      PsiWhiteSpace('\n        ')
                      CaseClauses
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          ConstructorPattern
                            CodeReferenceElement: Some
                              PsiElement(identifier)('Some')
                            Pattern Argument List
                              PsiElement(()('(')
                              ReferencePattern: x
                                PsiElement(identifier)('x')
                              PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace('\n          ')
                          BlockOfExpressions
                            GenericCall
                              ReferenceExpression: x1
                                PsiElement(identifier)('x1')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: Boolean
                                  CodeReferenceElement: Boolean
                                    PsiElement(identifier)('Boolean')
                                PsiElement(])(']')
                        PsiWhiteSpace('\n        ')
                        CaseClause
                          PsiElement(case)('case')
                          PsiWhiteSpace(' ')
                          WildcardPattern
                            PsiElement(_)('_')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace('\n          ')
                          BlockOfExpressions
                            MethodCall
                              ReferenceExpression: Option.empty[Boolean].set
                                GenericCall
                                  ReferenceExpression: Option.empty
                                    ReferenceExpression: Option
                                      PsiElement(identifier)('Option')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('empty')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: Boolean
                                      CodeReferenceElement: Boolean
                                        PsiElement(identifier)('Boolean')
                                    PsiElement(])(']')
                                PsiElement(.)('.')
                                PsiElement(identifier)('set')
                              ArgumentList
                                PsiElement(()('(')
                                GenericCall
                                  ReferenceExpression: Vector.empty
                                    ReferenceExpression: Vector
                                      PsiElement(identifier)('Vector')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('empty')
                                  TypeArgumentsList
                                    PsiElement([)('[')
                                    SimpleType: String
                                      CodeReferenceElement: String
                                        PsiElement(identifier)('String')
                                    PsiElement(])(']')
                                PsiElement())(')')
                      PsiWhiteSpace('\n      ')
                      PsiElement(})('}')
                    PsiWhiteSpace('\n    ')
                    PsiElement(})('}')
                PsiWhiteSpace('\n    ')
                Generator
                  ReferencePattern: a2
                    PsiElement(identifier)('a2')
                  PsiWhiteSpace(' ')
                  PsiElement(<-)('<-')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: x1
                      PsiElement(identifier)('x1')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
              PsiWhiteSpace(' ')
              PsiElement(yield)('yield')
              PsiWhiteSpace(' ')
              UnitExpression
                PsiElement(()('(')
                PsiElement())(')')
          PsiWhiteSpace('\n\n  ')
          ScPatternDefinition: success
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: success
                PsiElement(identifier)('success')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ForStatement
              PsiElement(for)('for')
              PsiWhiteSpace(' ')
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              Enumerators
                Generator
                  ReferencePattern: a1
                    PsiElement(identifier)('a1')
                  PsiWhiteSpace(' ')
                  PsiElement(<-)('<-')
                  PsiWhiteSpace(' ')
                  BlockExpression
                    PsiElement({)('{')
                    PsiWhiteSpace('\n      ')
                    ScPatternDefinition: temp
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      ListOfPatterns
                        ReferencePattern: temp
                          PsiElement(identifier)('temp')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MatchStatement
                        MethodCall
                          ReferenceExpression: Option
                            PsiElement(identifier)('Option')
                          ArgumentList
                            PsiElement(()('(')
                            IntegerLiteral
                              PsiElement(integer)('1')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(match)('match')
                        PsiWhiteSpace(' ')
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        CaseClauses
                          CaseClause
                            PsiElement(case)('case')
                            PsiWhiteSpace(' ')
                            ConstructorPattern
                              CodeReferenceElement: Some
                                PsiElement(identifier)('Some')
                              Pattern Argument List
                                PsiElement(()('(')
                                ReferencePattern: x
                                  PsiElement(identifier)('x')
                                PsiElement())(')')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace('\n          ')
                            BlockOfExpressions
                              GenericCall
                                ReferenceExpression: x1
                                  PsiElement(identifier)('x1')
                                TypeArgumentsList
                                  PsiElement([)('[')
                                  SimpleType: Boolean
                                    CodeReferenceElement: Boolean
                                      PsiElement(identifier)('Boolean')
                                  PsiElement(])(']')
                          PsiWhiteSpace('\n        ')
                          CaseClause
                            PsiElement(case)('case')
                            PsiWhiteSpace(' ')
                            WildcardPattern
                              PsiElement(_)('_')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace('\n          ')
                            BlockOfExpressions
                              MethodCall
                                ReferenceExpression: Option.empty[Boolean].set
                                  GenericCall
                                    ReferenceExpression: Option.empty
                                      ReferenceExpression: Option
                                        PsiElement(identifier)('Option')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('empty')
                                    TypeArgumentsList
                                      PsiElement([)('[')
                                      SimpleType: Boolean
                                        CodeReferenceElement: Boolean
                                          PsiElement(identifier)('Boolean')
                                      PsiElement(])(']')
                                  PsiElement(.)('.')
                                  PsiElement(identifier)('set')
                                ArgumentList
                                  PsiElement(()('(')
                                  GenericCall
                                    ReferenceExpression: Vector.empty
                                      ReferenceExpression: Vector
                                        PsiElement(identifier)('Vector')
                                      PsiElement(.)('.')
                                      PsiElement(identifier)('empty')
                                    TypeArgumentsList
                                      PsiElement([)('[')
                                      SimpleType: String
                                        CodeReferenceElement: String
                                          PsiElement(identifier)('String')
                                      PsiElement(])(']')
                                  PsiElement())(')')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                    PsiWhiteSpace('\n      ')
                    PsiComment(comment)('// why ???')
                    PsiWhiteSpace('\n      ')
                    ReferenceExpression: temp
                      PsiElement(identifier)('temp')
                    PsiWhiteSpace('\n    ')
                    PsiElement(})('}')
                PsiWhiteSpace('\n    ')
                Generator
                  ReferencePattern: a2
                    PsiElement(identifier)('a2')
                  PsiWhiteSpace(' ')
                  PsiElement(<-)('<-')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: x1
                      PsiElement(identifier)('x1')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
              PsiWhiteSpace(' ')
              PsiElement(yield)('yield')
              PsiWhiteSpace(' ')
              UnitExpression
                PsiElement(()('(')
                PsiElement())(')')
          PsiWhiteSpace('\n\n')
          PsiElement(})('}')
