object Test {
  inline def v[T] = valueOf[T]

  v["foo"]
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: v
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('v')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          GenericCall
            ReferenceExpression: valueOf
              PsiElement(identifier)('valueOf')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        GenericCall
          ReferenceExpression: v
            PsiElement(identifier)('v')
          TypeArgumentsList
            PsiElement([)('[')
            LiteralType: "foo"
              StringLiteral
                PsiElement(string content)('"foo"')
            PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
