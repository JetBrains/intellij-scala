object JSON {
  sealed trait Json
  final case class JArray(elems: JValue*) extends Json
  type JValue = Number | JArray
}

object Main extends App {
  println(JSON.JArray(1))
}
-----
ScalaFile
  ScObject: JSON
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('JSON')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: Json
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(sealed)('sealed')
          PsiWhiteSpace(' ')
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Json')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScClass: JArray
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(final)('final')
            PsiWhiteSpace(' ')
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('JArray')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: elems
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('elems')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: JValue
                      CodeReferenceElement: JValue
                        PsiElement(identifier)('JValue')
                    PsiElement(identifier)('*')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                SimpleType: Json
                  CodeReferenceElement: Json
                    PsiElement(identifier)('Json')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: JValue
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('JValue')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixType: Number | JArray
            SimpleType: Number
              CodeReferenceElement: Number
                PsiElement(identifier)('Number')
            PsiWhiteSpace(' ')
            CodeReferenceElement: |
              PsiElement(identifier)('|')
            PsiWhiteSpace(' ')
            SimpleType: JArray
              CodeReferenceElement: JArray
                PsiElement(identifier)('JArray')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Main
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Main')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: App
            CodeReferenceElement: App
              PsiElement(identifier)('App')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: println
            PsiElement(identifier)('println')
          ArgumentList
            PsiElement(()('(')
            MethodCall
              ReferenceExpression: JSON.JArray
                ReferenceExpression: JSON
                  PsiElement(identifier)('JSON')
                PsiElement(.)('.')
                PsiElement(identifier)('JArray')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('1')
                PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
