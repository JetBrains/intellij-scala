object A {
  def f0[T](x: T): T = x
  def f1[T](x: => T): T = x
  def f2[T](x: () => T): T = x()

  f0(this.getClass)  // ok
  f1(this.getClass)
  f2(this.getClass)  // ok

  // a.scala:7: error: type mismatch;
  //  found   : Class[_ <: A.type]
  //  required: Class[?0(in value x1)] where type ?0(in value x1) <: A.type
  // Note: A.type >: ?0, but Java-defined class Class is invariant in type T.
  // You may wish to investigate a wildcard type such as `_ >: ?0`. (SLS 3.2.10)
  //   val x1 = f1(this.getClass)
  //                    ^
  // one error found
}
-----
ScalaFile
  ScObject: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f0
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f0')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: () => T
                    TypeInParenthesis: ()
                      PsiElement(()('(')
                      PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: x
              PsiElement(identifier)('x')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: f0
            PsiElement(identifier)('f0')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: this.getClass
              ThisReference
                PsiElement(this)('this')
              PsiElement(.)('.')
              PsiElement(identifier)('getClass')
            PsiElement())(')')
        PsiWhiteSpace('  ')
        PsiComment(comment)('// ok')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: f1
            PsiElement(identifier)('f1')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: this.getClass
              ThisReference
                PsiElement(this)('this')
              PsiElement(.)('.')
              PsiElement(identifier)('getClass')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: f2
            PsiElement(identifier)('f2')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: this.getClass
              ThisReference
                PsiElement(this)('this')
              PsiElement(.)('.')
              PsiElement(identifier)('getClass')
            PsiElement())(')')
        PsiWhiteSpace('  ')
        PsiComment(comment)('// ok')
        PsiWhiteSpace('\n\n  ')
        PsiComment(comment)('// a.scala:7: error: type mismatch;')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('//  found   : Class[_ <: A.type]')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('//  required: Class[?0(in value x1)] where type ?0(in value x1) <: A.type')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// Note: A.type >: ?0, but Java-defined class Class is invariant in type T.')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// You may wish to investigate a wildcard type such as `_ >: ?0`. (SLS 3.2.10)')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('//   val x1 = f1(this.getClass)')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('//                    ^')
        PsiWhiteSpace('\n  ')
        PsiComment(comment)('// one error found')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
