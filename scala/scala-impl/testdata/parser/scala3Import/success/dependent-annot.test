class C
class ann(x: Any*) extends annotation.Annotation

def f(y: C, z: C) =
  def g(): C @ann(y, z) = ???
  val ac: ((x: C) => Array[String @ann(x)]) = ???
  val dc = ac(g())
-----
ScalaFile
  ScClass: C
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('C')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScClass: ann
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ann')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Any
                CodeReferenceElement: Any
                  PsiElement(identifier)('Any')
              PsiElement(identifier)('*')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: annotation.Annotation
            CodeReferenceElement: annotation.Annotation
              CodeReferenceElement: annotation
                PsiElement(identifier)('annotation')
              PsiElement(.)('.')
              PsiElement(identifier)('Annotation')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: f
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('f')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('y')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        Parameter: z
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('z')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
        PsiElement())(')')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    BlockExpression
      PsiWhiteSpace('\n  ')
      ScFunctionDefinition: g
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('g')
        Parameters
          ParametersClause
            PsiElement(()('(')
            PsiElement())(')')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        TypeWithAnnotation: C @ann(y, z)
          SimpleType: C
            CodeReferenceElement: C
              PsiElement(identifier)('C')
          PsiWhiteSpace(' ')
          AnnotationsList
            Annotation
              PsiElement(@)('@')
              AnnotationExpression
                ConstructorInvocation
                  SimpleType: ann
                    CodeReferenceElement: ann
                      PsiElement(identifier)('ann')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: y
                      PsiElement(identifier)('y')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: z
                      PsiElement(identifier)('z')
                    PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ReferenceExpression: ???
          PsiElement(identifier)('???')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: ac
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: ac
            PsiElement(identifier)('ac')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        TypeInParenthesis: ((x: C) => Array[String @ann(x)])
          PsiElement(()('(')
          DependentFunctionType: (x: C) => Array[String @ann(x)]
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            ParametrizedType: Array[String @ann(x)]
              SimpleType: Array
                CodeReferenceElement: Array
                  PsiElement(identifier)('Array')
              TypeArgumentsList
                PsiElement([)('[')
                TypeWithAnnotation: String @ann(x)
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiWhiteSpace(' ')
                  AnnotationsList
                    Annotation
                      PsiElement(@)('@')
                      AnnotationExpression
                        ConstructorInvocation
                          SimpleType: ann
                            CodeReferenceElement: ann
                              PsiElement(identifier)('ann')
                          ArgumentList
                            PsiElement(()('(')
                            ReferenceExpression: x
                              PsiElement(identifier)('x')
                            PsiElement())(')')
                PsiElement(])(']')
          PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        ReferenceExpression: ???
          PsiElement(identifier)('???')
      PsiWhiteSpace('\n  ')
      ScPatternDefinition: dc
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        ListOfPatterns
          ReferencePattern: dc
            PsiElement(identifier)('dc')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: ac
            PsiElement(identifier)('ac')
          ArgumentList
            PsiElement(()('(')
            MethodCall
              ReferenceExpression: g
                PsiElement(identifier)('g')
              ArgumentList
                PsiElement(()('(')
                PsiElement())(')')
            PsiElement())(')')
