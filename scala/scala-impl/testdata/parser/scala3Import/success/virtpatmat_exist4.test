trait Global {
  trait Tree
  trait Symbol { def foo: Boolean }
}

trait IMain { self:  MemberHandlers =>
  val global: Global
  def handlers: List[MemberHandler]
}

trait MemberHandlers {
  val intp: IMain
  import intp.global.*
  sealed abstract class MemberHandler(val member: Tree) {
    def importedSymbols: List[Symbol]
  }
}

object Test {
  var intp: IMain with MemberHandlers = null

  val handlers = intp.handlers
  handlers.filterNot(_.importedSymbols.isEmpty).zipWithIndex foreach {
    case (handler, idx) =>
      val (types, terms) = handler.importedSymbols partition (_.foo)
  }
}

object Test2 {
  type JClass = java.lang.Class[_]

  def tvarString(bounds: List[AnyRef]) = {
    bounds collect { case x: JClass => x }
  }
}
-----
ScalaFile
  ScTrait: Global
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Global')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: Tree
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Tree')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScTrait: Symbol
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Symbol')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScFunctionDeclaration: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: Boolean
                  CodeReferenceElement: Boolean
                    PsiElement(identifier)('Boolean')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: IMain
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('IMain')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        SelfType: self
          PsiElement(identifier)('self')
          PsiElement(:)(':')
          PsiWhiteSpace('  ')
          SimpleType: MemberHandlers
            CodeReferenceElement: MemberHandlers
              PsiElement(identifier)('MemberHandlers')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: global
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: global
              PsiElement(identifier)('global')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Global
            CodeReferenceElement: Global
              PsiElement(identifier)('Global')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: handlers
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('handlers')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: List[MemberHandler]
            SimpleType: List
              CodeReferenceElement: List
                PsiElement(identifier)('List')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: MemberHandler
                CodeReferenceElement: MemberHandler
                  PsiElement(identifier)('MemberHandler')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: MemberHandlers
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('MemberHandlers')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: intp
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: intp
              PsiElement(identifier)('intp')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: IMain
            CodeReferenceElement: IMain
              PsiElement(identifier)('IMain')
        PsiWhiteSpace('\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: intp.global
              CodeReferenceElement: intp
                PsiElement(identifier)('intp')
              PsiElement(.)('.')
              PsiElement(identifier)('global')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        ScClass: MemberHandler
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(sealed)('sealed')
            PsiWhiteSpace(' ')
            PsiElement(abstract)('abstract')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('MemberHandler')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: member
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('member')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: Tree
                      CodeReferenceElement: Tree
                        PsiElement(identifier)('Tree')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDeclaration: importedSymbols
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('importedSymbols')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: List[Symbol]
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Symbol
                      CodeReferenceElement: Symbol
                        PsiElement(identifier)('Symbol')
                    PsiElement(])(']')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScVariableDefinition: intp
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(var)('var')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: intp
              PsiElement(identifier)('intp')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          CompoundType: IMain with MemberHandlers
            SimpleType: IMain
              CodeReferenceElement: IMain
                PsiElement(identifier)('IMain')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            SimpleType: MemberHandlers
              CodeReferenceElement: MemberHandlers
                PsiElement(identifier)('MemberHandlers')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          NullLiteral
            PsiElement(null)('null')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: handlers
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: handlers
              PsiElement(identifier)('handlers')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: intp.handlers
            ReferenceExpression: intp
              PsiElement(identifier)('intp')
            PsiElement(.)('.')
            PsiElement(identifier)('handlers')
        PsiWhiteSpace('\n  ')
        InfixExpression
          ReferenceExpression: handlers.filterNot(_.importedSymbols.isEmpty).zipWithIndex
            MethodCall
              ReferenceExpression: handlers.filterNot
                ReferenceExpression: handlers
                  PsiElement(identifier)('handlers')
                PsiElement(.)('.')
                PsiElement(identifier)('filterNot')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: _.importedSymbols.isEmpty
                  ReferenceExpression: _.importedSymbols
                    UnderscoreSection
                      PsiElement(_)('_')
                    PsiElement(.)('.')
                    PsiElement(identifier)('importedSymbols')
                  PsiElement(.)('.')
                  PsiElement(identifier)('isEmpty')
                PsiElement())(')')
            PsiElement(.)('.')
            PsiElement(identifier)('zipWithIndex')
          PsiWhiteSpace(' ')
          ReferenceExpression: foreach
            PsiElement(identifier)('foreach')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                TuplePattern
                  PsiElement(()('(')
                  ArgumentPatterns
                    ReferencePattern: handler
                      PsiElement(identifier)('handler')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferencePattern: idx
                      PsiElement(identifier)('idx')
                  PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace('\n      ')
                BlockOfExpressions
                  ScPatternDefinition: types, terms
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      TuplePattern
                        PsiElement(()('(')
                        ArgumentPatterns
                          ReferencePattern: types
                            PsiElement(identifier)('types')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          ReferencePattern: terms
                            PsiElement(identifier)('terms')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    InfixExpression
                      ReferenceExpression: handler.importedSymbols
                        ReferenceExpression: handler
                          PsiElement(identifier)('handler')
                        PsiElement(.)('.')
                        PsiElement(identifier)('importedSymbols')
                      PsiWhiteSpace(' ')
                      ReferenceExpression: partition
                        PsiElement(identifier)('partition')
                      PsiWhiteSpace(' ')
                      ExpressionInParenthesis
                        PsiElement(()('(')
                        ReferenceExpression: _.foo
                          UnderscoreSection
                            PsiElement(_)('_')
                          PsiElement(.)('.')
                          PsiElement(identifier)('foo')
                        PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Test2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: JClass
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('JClass')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: java.lang.Class[_]
            SimpleType: java.lang.Class
              CodeReferenceElement: java.lang.Class
                CodeReferenceElement: java.lang
                  CodeReferenceElement: java
                    PsiElement(identifier)('java')
                  PsiElement(.)('.')
                  PsiElement(identifier)('lang')
                PsiElement(.)('.')
                PsiElement(identifier)('Class')
            TypeArgumentsList
              PsiElement([)('[')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: tvarString
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('tvarString')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: bounds
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('bounds')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[AnyRef]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: AnyRef
                        CodeReferenceElement: AnyRef
                          PsiElement(identifier)('AnyRef')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            InfixExpression
              ReferenceExpression: bounds
                PsiElement(identifier)('bounds')
              PsiWhiteSpace(' ')
              ReferenceExpression: collect
                PsiElement(identifier)('collect')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace(' ')
                CaseClauses
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    Scala3 TypedPattern
                      ReferencePattern: x
                        PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      TypePattern
                        SimpleType: JClass
                          CodeReferenceElement: JClass
                            PsiElement(identifier)('JClass')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ReferenceExpression: x
                        PsiElement(identifier)('x')
                PsiWhiteSpace(' ')
                PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
