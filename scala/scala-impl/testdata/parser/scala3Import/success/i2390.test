trait TestSuite {
  trait NoArgTest
}

trait TestSuiteMixin { self: TestSuite =>
  def foo(test: self.NoArgTest) = {}
}

trait CancelAfterFailure extends TestSuiteMixin { self: TestSuite =>
  override def foo(test: self.NoArgTest) = {}
}
-----
ScalaFile
  ScTrait: TestSuite
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TestSuite')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: NoArgTest
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('NoArgTest')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: TestSuiteMixin
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TestSuiteMixin')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        SelfType: self
          PsiElement(identifier)('self')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: TestSuite
            CodeReferenceElement: TestSuite
              PsiElement(identifier)('TestSuite')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: test
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('test')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: self.NoArgTest
                    CodeReferenceElement: self.NoArgTest
                      CodeReferenceElement: self
                        PsiElement(identifier)('self')
                      PsiElement(.)('.')
                      PsiElement(identifier)('NoArgTest')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: CancelAfterFailure
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('CancelAfterFailure')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: TestSuiteMixin
            CodeReferenceElement: TestSuiteMixin
              PsiElement(identifier)('TestSuiteMixin')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        SelfType: self
          PsiElement(identifier)('self')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: TestSuite
            CodeReferenceElement: TestSuite
              PsiElement(identifier)('TestSuite')
          PsiWhiteSpace(' ')
          PsiElement(=>)('=>')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(override)('override')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: test
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('test')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: self.NoArgTest
                    CodeReferenceElement: self.NoArgTest
                      CodeReferenceElement: self
                        PsiElement(identifier)('self')
                      PsiElement(.)('.')
                      PsiElement(identifier)('NoArgTest')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
