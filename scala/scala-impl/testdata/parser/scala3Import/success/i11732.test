import scala.deriving._

trait TupleConversion[A, B] {
  def to(a: A): B
  def from(b: B): A
}

object TupleConversion  {
  inline given autoTupleConversion[Prod <: Product](using m: Mirror.ProductOf[Prod]): TupleConversion[Prod, m.MirroredElemTypes] =
    new TupleConversion[Prod, m.MirroredElemTypes] {
      def to(a: Prod): m.MirroredElemTypes = Tuple.fromProductTyped(a)
      def from(b: m.MirroredElemTypes): Prod = m.fromProduct(b)
    }
}

final case class Data(s0: Int, s1: Int)

abstract class BaseSpec(f: () => Unit)

object ProductBuilderTest
  extends BaseSpec(() => {
    val conv = implicitly[TupleConversion[Data, (Int, Int)]]
  })
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.deriving
        CodeReferenceElement: scala
          PsiElement(identifier)('scala')
        PsiElement(.)('.')
        PsiElement(identifier)('deriving')
      PsiElement(.)('.')
      PsiElement(_)('_')
  PsiWhiteSpace('\n\n')
  ScTrait: TupleConversion
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TupleConversion')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: B
        PsiElement(identifier)('B')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: to
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('to')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: B
            CodeReferenceElement: B
              PsiElement(identifier)('B')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: from
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('from')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: b
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('b')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: TupleConversion
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TupleConversion')
    PsiWhiteSpace('  ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScGivenAliasDefinition: autoTupleConversion
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('autoTupleConversion')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: Prod
              PsiElement(identifier)('Prod')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              SimpleType: Product
                CodeReferenceElement: Product
                  PsiElement(identifier)('Product')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: m
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('m')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Mirror.ProductOf[Prod]
                    SimpleType: Mirror.ProductOf
                      CodeReferenceElement: Mirror.ProductOf
                        CodeReferenceElement: Mirror
                          PsiElement(identifier)('Mirror')
                        PsiElement(.)('.')
                        PsiElement(identifier)('ProductOf')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Prod
                        CodeReferenceElement: Prod
                          PsiElement(identifier)('Prod')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: TupleConversion[Prod, m.MirroredElemTypes]
            SimpleType: TupleConversion
              CodeReferenceElement: TupleConversion
                PsiElement(identifier)('TupleConversion')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Prod
                CodeReferenceElement: Prod
                  PsiElement(identifier)('Prod')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: m.MirroredElemTypes
                CodeReferenceElement: m.MirroredElemTypes
                  CodeReferenceElement: m
                    PsiElement(identifier)('m')
                  PsiElement(.)('.')
                  PsiElement(identifier)('MirroredElemTypes')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: TupleConversion[Prod, m.MirroredElemTypes]
                    SimpleType: TupleConversion
                      CodeReferenceElement: TupleConversion
                        PsiElement(identifier)('TupleConversion')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Prod
                        CodeReferenceElement: Prod
                          PsiElement(identifier)('Prod')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: m.MirroredElemTypes
                        CodeReferenceElement: m.MirroredElemTypes
                          CodeReferenceElement: m
                            PsiElement(identifier)('m')
                          PsiElement(.)('.')
                          PsiElement(identifier)('MirroredElemTypes')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                ScFunctionDefinition: to
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('to')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: a
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('a')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Prod
                            CodeReferenceElement: Prod
                              PsiElement(identifier)('Prod')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: m.MirroredElemTypes
                    CodeReferenceElement: m.MirroredElemTypes
                      CodeReferenceElement: m
                        PsiElement(identifier)('m')
                      PsiElement(.)('.')
                      PsiElement(identifier)('MirroredElemTypes')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: Tuple.fromProductTyped
                      ReferenceExpression: Tuple
                        PsiElement(identifier)('Tuple')
                      PsiElement(.)('.')
                      PsiElement(identifier)('fromProductTyped')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: a
                        PsiElement(identifier)('a')
                      PsiElement())(')')
                PsiWhiteSpace('\n      ')
                ScFunctionDefinition: from
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('from')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: b
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('b')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: m.MirroredElemTypes
                            CodeReferenceElement: m.MirroredElemTypes
                              CodeReferenceElement: m
                                PsiElement(identifier)('m')
                              PsiElement(.)('.')
                              PsiElement(identifier)('MirroredElemTypes')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: Prod
                    CodeReferenceElement: Prod
                      PsiElement(identifier)('Prod')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: m.fromProduct
                      ReferenceExpression: m
                        PsiElement(identifier)('m')
                      PsiElement(.)('.')
                      PsiElement(identifier)('fromProduct')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: b
                        PsiElement(identifier)('b')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Data
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
      PsiWhiteSpace(' ')
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Data')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: s0
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('s0')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: s1
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('s1')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScClass: BaseSpec
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(abstract)('abstract')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('BaseSpec')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: f
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('f')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              FunctionalType: () => Unit
                TypeInParenthesis: ()
                  PsiElement(()('(')
                  PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                SimpleType: Unit
                  CodeReferenceElement: Unit
                    PsiElement(identifier)('Unit')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: ProductBuilderTest
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ProductBuilderTest')
    PsiWhiteSpace('\n  ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: BaseSpec
            CodeReferenceElement: BaseSpec
              PsiElement(identifier)('BaseSpec')
          ArgumentList
            PsiElement(()('(')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScPatternDefinition: conv
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: conv
                      PsiElement(identifier)('conv')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  GenericCall
                    ReferenceExpression: implicitly
                      PsiElement(identifier)('implicitly')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: TupleConversion[Data, (Int, Int)]
                        SimpleType: TupleConversion
                          CodeReferenceElement: TupleConversion
                            PsiElement(identifier)('TupleConversion')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: Data
                            CodeReferenceElement: Data
                              PsiElement(identifier)('Data')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          TupleType: (Int, Int)
                            PsiElement(()('(')
                            TypesList
                              SimpleType: Int
                                CodeReferenceElement: Int
                                  PsiElement(identifier)('Int')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: Int
                                CodeReferenceElement: Int
                                  PsiElement(identifier)('Int')
                            PsiElement())(')')
                          PsiElement(])(']')
                      PsiElement(])(']')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
            PsiElement())(')')
