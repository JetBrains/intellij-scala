class A(val options: Seq[String])

object Test {
  implicit def ss: Equiv[Seq[String]] = sys.error("dummy")
  implicit def equivA(implicit seqEq: Equiv[Seq[String]]): Equiv[A] = sys.error("dummy")
  implicitly[Equiv[A]]
}
-----
ScalaFile
  ScClass: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: options
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('options')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: Seq[String]
                SimpleType: Seq
                  CodeReferenceElement: Seq
                    PsiElement(identifier)('Seq')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(])(']')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: ss
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ss')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Equiv[Seq[String]]
            SimpleType: Equiv
              CodeReferenceElement: Equiv
                PsiElement(identifier)('Equiv')
            TypeArgumentsList
              PsiElement([)('[')
              ParametrizedType: Seq[String]
                SimpleType: Seq
                  CodeReferenceElement: Seq
                    PsiElement(identifier)('Seq')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(])(']')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: sys.error
              ReferenceExpression: sys
                PsiElement(identifier)('sys')
              PsiElement(.)('.')
              PsiElement(identifier)('error')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"dummy"')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: equivA
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('equivA')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(implicit)('implicit')
              PsiWhiteSpace(' ')
              Parameter: seqEq
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('seqEq')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Equiv[Seq[String]]
                    SimpleType: Equiv
                      CodeReferenceElement: Equiv
                        PsiElement(identifier)('Equiv')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Seq[String]
                        SimpleType: Seq
                          CodeReferenceElement: Seq
                            PsiElement(identifier)('Seq')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                          PsiElement(])(']')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Equiv[A]
            SimpleType: Equiv
              CodeReferenceElement: Equiv
                PsiElement(identifier)('Equiv')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: sys.error
              ReferenceExpression: sys
                PsiElement(identifier)('sys')
              PsiElement(.)('.')
              PsiElement(identifier)('error')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"dummy"')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        GenericCall
          ReferenceExpression: implicitly
            PsiElement(identifier)('implicitly')
          TypeArgumentsList
            PsiElement([)('[')
            ParametrizedType: Equiv[A]
              SimpleType: Equiv
                CodeReferenceElement: Equiv
                  PsiElement(identifier)('Equiv')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiElement(])(']')
            PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
