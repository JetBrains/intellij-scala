sealed trait Option {}
case class Choice(a: Option, b: Option) extends Option;
case class Some(x: Boolean) extends Option;
case object None extends Option;

object test {

// drop any case and it will report an error
// note that booleans are taken into account
  def f(opt: Option) = (opt: @unchecked) match {
    case Choice(None, None) => 1;
    case Choice(None, Some(_)) => 1;
    case Choice(None, Choice(_, _)) => 1;
    case Choice(Some(true), None) => 1;
    // case Choice(Some(false), None) => 1;
    case Choice(Some(_), Some(_)) => 1;
    case Choice(Some(_), Choice(_, _)) => 1;
    case Choice(Choice(_, _), None) => 1;
    case Choice(Choice(_, _), Some(_)) => 1;
    case Choice(Choice(_, _), Choice(_, _)) => 1;
    case Some(b) => 4;
    case None => 5;
  }
}
-----
ScalaFile
  ScTrait: Option
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(sealed)('sealed')
    PsiWhiteSpace(' ')
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Option')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: Choice
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Choice')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: a
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('a')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Option
                CodeReferenceElement: Option
                  PsiElement(identifier)('Option')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          ClassParameter: b
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('b')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Option
                CodeReferenceElement: Option
                  PsiElement(identifier)('Option')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Option
            CodeReferenceElement: Option
              PsiElement(identifier)('Option')
  PsiElement(;)(';')
  PsiWhiteSpace('\n')
  ScClass: Some
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Some')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Boolean
                CodeReferenceElement: Boolean
                  PsiElement(identifier)('Boolean')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Option
            CodeReferenceElement: Option
              PsiElement(identifier)('Option')
  PsiElement(;)(';')
  PsiWhiteSpace('\n')
  ScObject: None
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('None')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Option
            CodeReferenceElement: Option
              PsiElement(identifier)('Option')
  PsiElement(;)(';')
  PsiWhiteSpace('\n\n')
  ScObject: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n')
        ScFunctionDefinition: f
          PsiComment(comment)('// drop any case and it will report an error')
          PsiWhiteSpace('\n')
          PsiComment(comment)('// note that booleans are taken into account')
          PsiWhiteSpace('\n  ')
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: opt
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('opt')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Option
                    CodeReferenceElement: Option
                      PsiElement(identifier)('Option')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ExpressionInParenthesis
              PsiElement(()('(')
              TypedExpression
                ReferenceExpression: opt
                  PsiElement(identifier)('opt')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                AnnotationsList
                  Annotation
                    PsiElement(@)('@')
                    AnnotationExpression
                      ConstructorInvocation
                        SimpleType: unchecked
                          CodeReferenceElement: unchecked
                            PsiElement(identifier)('unchecked')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Choice
                    PsiElement(identifier)('Choice')
                  Pattern Argument List
                    PsiElement(()('(')
                    StableElementPattern
                      ReferenceExpression: None
                        PsiElement(identifier)('None')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    StableElementPattern
                      ReferenceExpression: None
                        PsiElement(identifier)('None')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Choice
                    PsiElement(identifier)('Choice')
                  Pattern Argument List
                    PsiElement(()('(')
                    StableElementPattern
                      ReferenceExpression: None
                        PsiElement(identifier)('None')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ConstructorPattern
                      CodeReferenceElement: Some
                        PsiElement(identifier)('Some')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Choice
                    PsiElement(identifier)('Choice')
                  Pattern Argument List
                    PsiElement(()('(')
                    StableElementPattern
                      ReferenceExpression: None
                        PsiElement(identifier)('None')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ConstructorPattern
                      CodeReferenceElement: Choice
                        PsiElement(identifier)('Choice')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Choice
                    PsiElement(identifier)('Choice')
                  Pattern Argument List
                    PsiElement(()('(')
                    ConstructorPattern
                      CodeReferenceElement: Some
                        PsiElement(identifier)('Some')
                      Pattern Argument List
                        PsiElement(()('(')
                        LiteralPattern
                          BooleanLiteral
                            PsiElement(true)('true')
                        PsiElement())(')')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    StableElementPattern
                      ReferenceExpression: None
                        PsiElement(identifier)('None')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              PsiComment(comment)('// case Choice(Some(false), None) => 1;')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Choice
                    PsiElement(identifier)('Choice')
                  Pattern Argument List
                    PsiElement(()('(')
                    ConstructorPattern
                      CodeReferenceElement: Some
                        PsiElement(identifier)('Some')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ConstructorPattern
                      CodeReferenceElement: Some
                        PsiElement(identifier)('Some')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Choice
                    PsiElement(identifier)('Choice')
                  Pattern Argument List
                    PsiElement(()('(')
                    ConstructorPattern
                      CodeReferenceElement: Some
                        PsiElement(identifier)('Some')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ConstructorPattern
                      CodeReferenceElement: Choice
                        PsiElement(identifier)('Choice')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Choice
                    PsiElement(identifier)('Choice')
                  Pattern Argument List
                    PsiElement(()('(')
                    ConstructorPattern
                      CodeReferenceElement: Choice
                        PsiElement(identifier)('Choice')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    StableElementPattern
                      ReferenceExpression: None
                        PsiElement(identifier)('None')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Choice
                    PsiElement(identifier)('Choice')
                  Pattern Argument List
                    PsiElement(()('(')
                    ConstructorPattern
                      CodeReferenceElement: Choice
                        PsiElement(identifier)('Choice')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ConstructorPattern
                      CodeReferenceElement: Some
                        PsiElement(identifier)('Some')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Choice
                    PsiElement(identifier)('Choice')
                  Pattern Argument List
                    PsiElement(()('(')
                    ConstructorPattern
                      CodeReferenceElement: Choice
                        PsiElement(identifier)('Choice')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ConstructorPattern
                      CodeReferenceElement: Choice
                        PsiElement(identifier)('Choice')
                      Pattern Argument List
                        PsiElement(()('(')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        WildcardPattern
                          PsiElement(_)('_')
                        PsiElement())(')')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: Some
                    PsiElement(identifier)('Some')
                  Pattern Argument List
                    PsiElement(()('(')
                    ReferencePattern: b
                      PsiElement(identifier)('b')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('4')
                  PsiElement(;)(';')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: None
                    PsiElement(identifier)('None')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  IntegerLiteral
                    PsiElement(integer)('5')
                  PsiElement(;)(';')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
