object testindent:

  if (true)
    val x = 1
    println(x)

  while (false)
    val x = 1
    println(x)

  for (x <- List(1, 2, 3))
    val y = x
    println(y)

  for { x <- List(1, 2, 3) }
    val y = x
    println(y)

  for {
    x <- List(1, 2, 3)
  }
    val y = x
    println(y)

  while true
  do println(1)

  for i <- List(1, 2, 3)
  do println(i)

  while (true)
  do println(1)

  for (i <- List(1, 2, 3))
  do println(i)
-----
ScalaFile
  ScObject: testindent
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('testindent')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n\n  ')
        IfStatement
          PsiElement(if)('if')
          PsiWhiteSpace(' ')
          PsiElement(()('(')
          BooleanLiteral
            PsiElement(true)('true')
          PsiElement())(')')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: x
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: x
                  PsiElement(identifier)('x')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('1')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: x
                  PsiElement(identifier)('x')
                PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        WhileStatement
          PsiElement(while)('while')
          PsiWhiteSpace(' ')
          PsiElement(()('(')
          BooleanLiteral
            PsiElement(false)('false')
          PsiElement())(')')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: x
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: x
                  PsiElement(identifier)('x')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('1')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: x
                  PsiElement(identifier)('x')
                PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ForStatement
          PsiElement(for)('for')
          PsiWhiteSpace(' ')
          PsiElement(()('(')
          Enumerators
            Generator
              ReferencePattern: x
                PsiElement(identifier)('x')
              PsiWhiteSpace(' ')
              PsiElement(<-)('<-')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
          PsiElement())(')')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: y
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: y
                  PsiElement(identifier)('y')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: y
                  PsiElement(identifier)('y')
                PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ForStatement
          PsiElement(for)('for')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace(' ')
          Enumerators
            Generator
              ReferencePattern: x
                PsiElement(identifier)('x')
              PsiWhiteSpace(' ')
              PsiElement(<-)('<-')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(})('}')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: y
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: y
                  PsiElement(identifier)('y')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: y
                  PsiElement(identifier)('y')
                PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ForStatement
          PsiElement(for)('for')
          PsiWhiteSpace(' ')
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          Enumerators
            Generator
              ReferencePattern: x
                PsiElement(identifier)('x')
              PsiWhiteSpace(' ')
              PsiElement(<-)('<-')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: y
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: y
                  PsiElement(identifier)('y')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: y
                  PsiElement(identifier)('y')
                PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        WhileStatement
          PsiElement(while)('while')
          PsiWhiteSpace(' ')
          BooleanLiteral
            PsiElement(true)('true')
          PsiWhiteSpace('\n  ')
          PsiElement(do)('do')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: println
              PsiElement(identifier)('println')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ForStatement
          PsiElement(for)('for')
          PsiWhiteSpace(' ')
          Enumerators
            Generator
              ReferencePattern: i
                PsiElement(identifier)('i')
              PsiWhiteSpace(' ')
              PsiElement(<-)('<-')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(do)('do')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: println
              PsiElement(identifier)('println')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        WhileStatement
          PsiElement(while)('while')
          PsiWhiteSpace(' ')
          ExpressionInParenthesis
            PsiElement(()('(')
            BooleanLiteral
              PsiElement(true)('true')
            PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(do)('do')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: println
              PsiElement(identifier)('println')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ForStatement
          PsiElement(for)('for')
          PsiWhiteSpace(' ')
          PsiElement(()('(')
          Enumerators
            Generator
              ReferencePattern: i
                PsiElement(identifier)('i')
              PsiWhiteSpace(' ')
              PsiElement(<-)('<-')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: List
                  PsiElement(identifier)('List')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  IntegerLiteral
                    PsiElement(integer)('3')
                  PsiElement())(')')
          PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(do)('do')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: println
              PsiElement(identifier)('println')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: i
                PsiElement(identifier)('i')
              PsiElement())(')')
