class Outer {
  class Inner {
    class Inner2
  }
}

class HasA { type A }

class Foo[A]

object Test {
  def test = {
    val a: Outer#Inner = {
      val o = new Outer
      new o.Inner
    }

    val b: Outer#Inner#Inner2 = {
      val o = new Outer
      val i = new o.Inner
      new i.Inner2
    }

    val c: HasA { type A = Int } = {
      val h = new HasA {
        type A = Int
      }
      val x: HasA { type A = h.A } = h
      x
    }

/*    val d: Foo[Int] = {
      class Bar[B] extends Foo[B]
      new Bar[Int]
    }
*/
    val e: Foo[_] = {
      class Bar[B11] extends Foo[B11]
      new Bar[Int]: Bar[_ <: Int]
    }
  }
}
-----
ScalaFile
  ScClass: Outer
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Outer')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: Inner
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Inner')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScClass: Inner2
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(class)('class')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Inner2')
                PrimaryConstructor
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  Parameters
                    <empty list>
                ExtendsBlock
                  <empty list>
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: HasA
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('HasA')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ScTypeAliasDeclaration: A
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: a
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: a
                  PsiElement(identifier)('a')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              TypeProjection: Outer#Inner
                SimpleType: Outer
                  CodeReferenceElement: Outer
                    PsiElement(identifier)('Outer')
                PsiElement(#)('#')
                PsiElement(identifier)('Inner')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                ScPatternDefinition: o
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: o
                      PsiElement(identifier)('o')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: Outer
                            CodeReferenceElement: Outer
                              PsiElement(identifier)('Outer')
                PsiWhiteSpace('\n      ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: o.Inner
                          CodeReferenceElement: o.Inner
                            CodeReferenceElement: o
                              PsiElement(identifier)('o')
                            PsiElement(.)('.')
                            PsiElement(identifier)('Inner')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
            PsiWhiteSpace('\n\n    ')
            ScPatternDefinition: b
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: b
                  PsiElement(identifier)('b')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              TypeProjection: Outer#Inner#Inner2
                TypeProjection: Outer#Inner
                  SimpleType: Outer
                    CodeReferenceElement: Outer
                      PsiElement(identifier)('Outer')
                  PsiElement(#)('#')
                  PsiElement(identifier)('Inner')
                PsiElement(#)('#')
                PsiElement(identifier)('Inner2')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                ScPatternDefinition: o
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: o
                      PsiElement(identifier)('o')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: Outer
                            CodeReferenceElement: Outer
                              PsiElement(identifier)('Outer')
                PsiWhiteSpace('\n      ')
                ScPatternDefinition: i
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: i
                      PsiElement(identifier)('i')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: o.Inner
                            CodeReferenceElement: o.Inner
                              CodeReferenceElement: o
                                PsiElement(identifier)('o')
                              PsiElement(.)('.')
                              PsiElement(identifier)('Inner')
                PsiWhiteSpace('\n      ')
                ScNewTemplateDefinition: <anonymous>
                  PsiElement(new)('new')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: i.Inner2
                          CodeReferenceElement: i.Inner2
                            CodeReferenceElement: i
                              PsiElement(identifier)('i')
                            PsiElement(.)('.')
                            PsiElement(identifier)('Inner2')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
            PsiWhiteSpace('\n\n    ')
            ScPatternDefinition: c
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: c
                  PsiElement(identifier)('c')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              CompoundType: HasA { type A = Int }
                SimpleType: HasA
                  CodeReferenceElement: HasA
                    PsiElement(identifier)('HasA')
                PsiWhiteSpace(' ')
                Refinement
                  PsiElement({)('{')
                  PsiWhiteSpace(' ')
                  ScTypeAliasDefinition: A
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(type)('type')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('A')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                  PsiWhiteSpace(' ')
                  PsiElement(})('}')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                ScPatternDefinition: h
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: h
                      PsiElement(identifier)('h')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          SimpleType: HasA
                            CodeReferenceElement: HasA
                              PsiElement(identifier)('HasA')
                      PsiWhiteSpace(' ')
                      ScTemplateBody
                        PsiElement({)('{')
                        PsiWhiteSpace('\n        ')
                        ScTypeAliasDefinition: A
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(type)('type')
                          PsiWhiteSpace(' ')
                          PsiElement(identifier)('A')
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                        PsiWhiteSpace('\n      ')
                        PsiElement(})('}')
                PsiWhiteSpace('\n      ')
                ScPatternDefinition: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: x
                      PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  CompoundType: HasA { type A = h.A }
                    SimpleType: HasA
                      CodeReferenceElement: HasA
                        PsiElement(identifier)('HasA')
                    PsiWhiteSpace(' ')
                    Refinement
                      PsiElement({)('{')
                      PsiWhiteSpace(' ')
                      ScTypeAliasDefinition: A
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(type)('type')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('A')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        SimpleType: h.A
                          CodeReferenceElement: h.A
                            CodeReferenceElement: h
                              PsiElement(identifier)('h')
                            PsiElement(.)('.')
                            PsiElement(identifier)('A')
                      PsiWhiteSpace(' ')
                      PsiElement(})('}')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: h
                    PsiElement(identifier)('h')
                PsiWhiteSpace('\n      ')
                ReferenceExpression: x
                  PsiElement(identifier)('x')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
            PsiWhiteSpace('\n\n')
            ScPatternDefinition: e
              PsiComment(BlockComment)('/*    val d: Foo[Int] = {\n      class Bar[B] extends Foo[B]\n      new Bar[Int]\n    }\n*/')
              PsiWhiteSpace('\n    ')
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: e
                  PsiElement(identifier)('e')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParametrizedType: Foo[_]
                SimpleType: Foo
                  CodeReferenceElement: Foo
                    PsiElement(identifier)('Foo')
                TypeArgumentsList
                  PsiElement([)('[')
                  WildcardType: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                ScClass: Bar
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(class)('class')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('Bar')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: B11
                      PsiElement(identifier)('B11')
                    PsiElement(])(']')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      <empty list>
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    PsiElement(extends)('extends')
                    PsiWhiteSpace(' ')
                    TemplateParents
                      ConstructorInvocation
                        ParametrizedType: Foo[B11]
                          SimpleType: Foo
                            CodeReferenceElement: Foo
                              PsiElement(identifier)('Foo')
                          TypeArgumentsList
                            PsiElement([)('[')
                            SimpleType: B11
                              CodeReferenceElement: B11
                                PsiElement(identifier)('B11')
                            PsiElement(])(']')
                PsiWhiteSpace('\n      ')
                TypedExpression
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          ParametrizedType: Bar[Int]
                            SimpleType: Bar
                              CodeReferenceElement: Bar
                                PsiElement(identifier)('Bar')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: Int
                                CodeReferenceElement: Int
                                  PsiElement(identifier)('Int')
                              PsiElement(])(']')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: Bar[_ <: Int]
                    SimpleType: Bar
                      CodeReferenceElement: Bar
                        PsiElement(identifier)('Bar')
                    TypeArgumentsList
                      PsiElement([)('[')
                      WildcardType: _ <: Int
                        PsiElement(_)('_')
                        PsiWhiteSpace(' ')
                        PsiElement(<:)('<:')
                        PsiWhiteSpace(' ')
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                      PsiElement(])(']')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
