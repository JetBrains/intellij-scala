trait Bar[T]
object Bar {
  def derived[T]: Bar[T] = new Bar[T] {}
}

trait Baz[T]
object Baz {
  def derived[T]: Baz[T] = new Baz[T] {}
}

class Foo derives Bar, Baz

class Foo2 derives Bar,
   Baz

val x, y, z = (1, 2, 3)
val a,
    b,
    c = (1, 2, 3)
-----
ScalaFile
  ScTrait: Bar
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bar')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScObject: Bar
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bar')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: derived
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('derived')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Bar[T]
            SimpleType: Bar
              CodeReferenceElement: Bar
                PsiElement(identifier)('Bar')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Bar[T]
                    SimpleType: Bar
                      CodeReferenceElement: Bar
                        PsiElement(identifier)('Bar')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: Baz
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Baz')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScObject: Baz
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Baz')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: derived
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('derived')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Baz[T]
            SimpleType: Baz
              CodeReferenceElement: Baz
                PsiElement(identifier)('Baz')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: Baz[T]
                    SimpleType: Baz
                      CodeReferenceElement: Baz
                        PsiElement(identifier)('Baz')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                      PsiElement(])(']')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      DerivesClause
        PsiElement(derives)('derives')
        PsiWhiteSpace(' ')
        CodeReferenceElement: Bar
          PsiElement(identifier)('Bar')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        CodeReferenceElement: Baz
          PsiElement(identifier)('Baz')
  PsiWhiteSpace('\n\n')
  ScClass: Foo2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo2')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      DerivesClause
        PsiElement(derives)('derives')
        PsiWhiteSpace(' ')
        CodeReferenceElement: Bar
          PsiElement(identifier)('Bar')
        PsiElement(,)(',')
        PsiWhiteSpace('\n   ')
        CodeReferenceElement: Baz
          PsiElement(identifier)('Baz')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: x, y, z
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: x
        PsiElement(identifier)('x')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      ReferencePattern: y
        PsiElement(identifier)('y')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      ReferencePattern: z
        PsiElement(identifier)('z')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    Tuple
      PsiElement(()('(')
      IntegerLiteral
        PsiElement(integer)('1')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      IntegerLiteral
        PsiElement(integer)('2')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      IntegerLiteral
        PsiElement(integer)('3')
      PsiElement())(')')
  PsiWhiteSpace('\n')
  ScPatternDefinition: a, b, c
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: a
        PsiElement(identifier)('a')
      PsiElement(,)(',')
      PsiWhiteSpace('\n    ')
      ReferencePattern: b
        PsiElement(identifier)('b')
      PsiElement(,)(',')
      PsiWhiteSpace('\n    ')
      ReferencePattern: c
        PsiElement(identifier)('c')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    Tuple
      PsiElement(()('(')
      IntegerLiteral
        PsiElement(integer)('1')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      IntegerLiteral
        PsiElement(integer)('2')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      IntegerLiteral
        PsiElement(integer)('3')
      PsiElement())(')')
