trait T {
  type TT = T with Any
  private val priv = 0
  (??? : TT).priv
}

trait U {
  type UU = Any with U
  private val priv = 0
  (??? : UU).priv
}
-----
ScalaFile
  ScTrait: T
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('T')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: TT
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('TT')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          CompoundType: T with Any
            SimpleType: T
              CodeReferenceElement: T
                PsiElement(identifier)('T')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            SimpleType: Any
              CodeReferenceElement: Any
                PsiElement(identifier)('Any')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: priv
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: priv
              PsiElement(identifier)('priv')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('0')
        PsiWhiteSpace('\n  ')
        ReferenceExpression: (??? : TT).priv
          ExpressionInParenthesis
            PsiElement(()('(')
            TypedExpression
              ReferenceExpression: ???
                PsiElement(identifier)('???')
              PsiWhiteSpace(' ')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: TT
                CodeReferenceElement: TT
                  PsiElement(identifier)('TT')
            PsiElement())(')')
          PsiElement(.)('.')
          PsiElement(identifier)('priv')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: U
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('U')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: UU
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('UU')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          CompoundType: Any with U
            SimpleType: Any
              CodeReferenceElement: Any
                PsiElement(identifier)('Any')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            SimpleType: U
              CodeReferenceElement: U
                PsiElement(identifier)('U')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: priv
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: priv
              PsiElement(identifier)('priv')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('0')
        PsiWhiteSpace('\n  ')
        ReferenceExpression: (??? : UU).priv
          ExpressionInParenthesis
            PsiElement(()('(')
            TypedExpression
              ReferenceExpression: ???
                PsiElement(identifier)('???')
              PsiWhiteSpace(' ')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: UU
                CodeReferenceElement: UU
                  PsiElement(identifier)('UU')
            PsiElement())(')')
          PsiElement(.)('.')
          PsiElement(identifier)('priv')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
