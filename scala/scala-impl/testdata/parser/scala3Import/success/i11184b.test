import scala.quoted._

inline def isTrue(): Boolean = true
inline def oneOf: String = inline if isTrue() then "foo" else "bar"
def test1 = oneOf
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.quoted
        CodeReferenceElement: scala
          PsiElement(identifier)('scala')
        PsiElement(.)('.')
        PsiElement(identifier)('quoted')
      PsiElement(.)('.')
      PsiElement(_)('_')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: isTrue
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('isTrue')
    Parameters
      ParametersClause
        PsiElement(()('(')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Boolean
      CodeReferenceElement: Boolean
        PsiElement(identifier)('Boolean')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BooleanLiteral
      PsiElement(true)('true')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: oneOf
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('oneOf')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: String
      CodeReferenceElement: String
        PsiElement(identifier)('String')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    IfStatement
      PsiElement(inline)('inline')
      PsiWhiteSpace(' ')
      PsiElement(if)('if')
      PsiWhiteSpace(' ')
      MethodCall
        ReferenceExpression: isTrue
          PsiElement(identifier)('isTrue')
        ArgumentList
          PsiElement(()('(')
          PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement(then)('then')
      PsiWhiteSpace(' ')
      StringLiteral
        PsiElement(string content)('"foo"')
      PsiWhiteSpace(' ')
      PsiElement(else)('else')
      PsiWhiteSpace(' ')
      StringLiteral
        PsiElement(string content)('"bar"')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: test1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test1')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: oneOf
      PsiElement(identifier)('oneOf')
