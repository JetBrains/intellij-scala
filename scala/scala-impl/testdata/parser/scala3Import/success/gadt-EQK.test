object EQK {
  sealed trait EQ[A, B]
  final case class Refl[A]() extends EQ[A, A]

  sealed trait EQK[F[_], G[_]]
  final case class ReflK[F[_]]() extends EQK[F, F]

  def m0[F[_], G[_], A](fa: F[A], eqk: EQK[F, G]): G[A] =
    eqk match { case ReflK() => fa }

  def m1[F[_], G[_], A](fa: F[A], eq: EQ[A, Int], eqk: EQK[F, G]): G[Int] =
    eqk match {
      case ReflK() => eq match {
        case Refl() =>
          val r1: F[Int] = fa
          val r2: G[A] = fa
          val r3: F[Int] = r2
          fa : G[Int]
      }
    }
}
-----
ScalaFile
  ScObject: EQK
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('EQK')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: EQ
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(sealed)('sealed')
          PsiWhiteSpace(' ')
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('EQ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: B
              PsiElement(identifier)('B')
            PsiElement(])(']')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScClass: Refl
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(final)('final')
            PsiWhiteSpace(' ')
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Refl')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: EQ[A, A]
                  SimpleType: EQ
                    CodeReferenceElement: EQ
                      PsiElement(identifier)('EQ')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                    PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScTrait: EQK
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(sealed)('sealed')
          PsiWhiteSpace(' ')
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('EQK')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: G
              PsiElement(identifier)('G')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n  ')
        ScClass: ReflK
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(final)('final')
            PsiWhiteSpace(' ')
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('ReflK')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            PsiElement(extends)('extends')
            PsiWhiteSpace(' ')
            TemplateParents
              ConstructorInvocation
                ParametrizedType: EQK[F, F]
                  SimpleType: EQK
                    CodeReferenceElement: EQK
                      PsiElement(identifier)('EQK')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: m0
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('m0')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: G
              PsiElement(identifier)('G')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: fa
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('fa')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: F[A]
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: eqk
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('eqk')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: EQK[F, G]
                    SimpleType: EQK
                      CodeReferenceElement: EQK
                        PsiElement(identifier)('EQK')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: G
                        CodeReferenceElement: G
                          PsiElement(identifier)('G')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: G[A]
            SimpleType: G
              CodeReferenceElement: G
                PsiElement(identifier)('G')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            ReferenceExpression: eqk
              PsiElement(identifier)('eqk')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace(' ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: ReflK
                    PsiElement(identifier)('ReflK')
                  Pattern Argument List
                    PsiElement(()('(')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: fa
                    PsiElement(identifier)('fa')
            PsiWhiteSpace(' ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: m1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('m1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: F
              PsiElement(identifier)('F')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: G
              PsiElement(identifier)('G')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: _
                  PsiElement(_)('_')
                PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: fa
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('fa')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: F[A]
                    SimpleType: F
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: eq
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('eq')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: EQ[A, Int]
                    SimpleType: EQ
                      CodeReferenceElement: EQ
                        PsiElement(identifier)('EQ')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                      PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              Parameter: eqk
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('eqk')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: EQK[F, G]
                    SimpleType: EQK
                      CodeReferenceElement: EQK
                        PsiElement(identifier)('EQK')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: F
                        CodeReferenceElement: F
                          PsiElement(identifier)('F')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: G
                        CodeReferenceElement: G
                          PsiElement(identifier)('G')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: G[Int]
            SimpleType: G
              CodeReferenceElement: G
                PsiElement(identifier)('G')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace('\n    ')
          MatchStatement
            ReferenceExpression: eqk
              PsiElement(identifier)('eqk')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n      ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ConstructorPattern
                  CodeReferenceElement: ReflK
                    PsiElement(identifier)('ReflK')
                  Pattern Argument List
                    PsiElement(()('(')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MatchStatement
                    ReferenceExpression: eq
                      PsiElement(identifier)('eq')
                    PsiWhiteSpace(' ')
                    PsiElement(match)('match')
                    PsiWhiteSpace(' ')
                    PsiElement({)('{')
                    PsiWhiteSpace('\n        ')
                    CaseClauses
                      CaseClause
                        PsiElement(case)('case')
                        PsiWhiteSpace(' ')
                        ConstructorPattern
                          CodeReferenceElement: Refl
                            PsiElement(identifier)('Refl')
                          Pattern Argument List
                            PsiElement(()('(')
                            PsiElement())(')')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace('\n          ')
                        BlockOfExpressions
                          ScPatternDefinition: r1
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(val)('val')
                            PsiWhiteSpace(' ')
                            ListOfPatterns
                              ReferencePattern: r1
                                PsiElement(identifier)('r1')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParametrizedType: F[Int]
                              SimpleType: F
                                CodeReferenceElement: F
                                  PsiElement(identifier)('F')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: Int
                                  CodeReferenceElement: Int
                                    PsiElement(identifier)('Int')
                                PsiElement(])(']')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: fa
                              PsiElement(identifier)('fa')
                          PsiWhiteSpace('\n          ')
                          ScPatternDefinition: r2
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(val)('val')
                            PsiWhiteSpace(' ')
                            ListOfPatterns
                              ReferencePattern: r2
                                PsiElement(identifier)('r2')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParametrizedType: G[A]
                              SimpleType: G
                                CodeReferenceElement: G
                                  PsiElement(identifier)('G')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(])(']')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: fa
                              PsiElement(identifier)('fa')
                          PsiWhiteSpace('\n          ')
                          ScPatternDefinition: r3
                            AnnotationsList
                              <empty list>
                            Modifiers
                              <empty list>
                            PsiElement(val)('val')
                            PsiWhiteSpace(' ')
                            ListOfPatterns
                              ReferencePattern: r3
                                PsiElement(identifier)('r3')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParametrizedType: F[Int]
                              SimpleType: F
                                CodeReferenceElement: F
                                  PsiElement(identifier)('F')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: Int
                                  CodeReferenceElement: Int
                                    PsiElement(identifier)('Int')
                                PsiElement(])(']')
                            PsiWhiteSpace(' ')
                            PsiElement(=)('=')
                            PsiWhiteSpace(' ')
                            ReferenceExpression: r2
                              PsiElement(identifier)('r2')
                          PsiWhiteSpace('\n          ')
                          TypedExpression
                            ReferenceExpression: fa
                              PsiElement(identifier)('fa')
                            PsiWhiteSpace(' ')
                            PsiElement(:)(':')
                            PsiWhiteSpace(' ')
                            ParametrizedType: G[Int]
                              SimpleType: G
                                CodeReferenceElement: G
                                  PsiElement(identifier)('G')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: Int
                                  CodeReferenceElement: Int
                                    PsiElement(identifier)('Int')
                                PsiElement(])(']')
                    PsiWhiteSpace('\n      ')
                    PsiElement(})('}')
            PsiWhiteSpace('\n    ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
