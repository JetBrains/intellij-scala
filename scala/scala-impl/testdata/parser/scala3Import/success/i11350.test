//case class A[T](action: A[T] ?=> String) // now disallowed

class A1[T](action: A1[T] ?=> String = (_: A1[T]) ?=> "") // works
//case class A2[T](action: A2[?] ?=> String) // now disallowed
//case class A3[T](action: A3[T] => String) // now disallowed
-----
ScalaFile
  PsiComment(comment)('//case class A[T](action: A[T] ?=> String) // now disallowed')
  PsiWhiteSpace('\n\n')
  ScClass: A1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A1')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: action
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('action')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              FunctionalType: A1[T] ?=> String
                ParametrizedType: A1[T]
                  SimpleType: A1
                    CodeReferenceElement: A1
                      PsiElement(identifier)('A1')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: T
                      CodeReferenceElement: T
                        PsiElement(identifier)('T')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(?=>)('?=>')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: _
                    AnnotationsList
                      <empty list>
                    PsiElement(_)('_')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      ParametrizedType: A1[T]
                        SimpleType: A1
                          CodeReferenceElement: A1
                            PsiElement(identifier)('A1')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                          PsiElement(])(']')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(?=>)('?=>')
              PsiWhiteSpace(' ')
              StringLiteral
                PsiElement(string content)('""')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace(' ')
  PsiComment(comment)('// works')
  PsiWhiteSpace('\n')
  PsiComment(comment)('//case class A2[T](action: A2[?] ?=> String) // now disallowed')
  PsiWhiteSpace('\n')
  PsiComment(comment)('//case class A3[T](action: A3[T] => String) // now disallowed')
