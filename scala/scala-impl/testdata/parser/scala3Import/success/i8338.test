object test {
  trait B {
    type X; def mkX(i: Int): B#X
  }
  val b: B = new B {
    type X = Int; def mkX(i: Int): X = i  // error
  }
}
-----
ScalaFile
  ScObject: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: B
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('B')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDeclaration: X
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('X')
              PsiElement(;)(';')
              PsiWhiteSpace(' ')
              ScFunctionDeclaration: mkX
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('mkX')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: i
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('i')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                TypeProjection: B#X
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
                  PsiElement(#)('#')
                  PsiElement(identifier)('X')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: b
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: b
              PsiElement(identifier)('b')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: B
            CodeReferenceElement: B
              PsiElement(identifier)('B')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  SimpleType: B
                    CodeReferenceElement: B
                      PsiElement(identifier)('B')
              PsiWhiteSpace(' ')
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScTypeAliasDefinition: X
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(type)('type')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('X')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                PsiElement(;)(';')
                PsiWhiteSpace(' ')
                ScFunctionDefinition: mkX
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('mkX')
                  Parameters
                    ParametersClause
                      PsiElement(()('(')
                      Parameter: i
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(identifier)('i')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        ParameterType
                          SimpleType: Int
                            CodeReferenceElement: Int
                              PsiElement(identifier)('Int')
                      PsiElement())(')')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  SimpleType: X
                    CodeReferenceElement: X
                      PsiElement(identifier)('X')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: i
                    PsiElement(identifier)('i')
                PsiWhiteSpace('  ')
                PsiComment(comment)('// error')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
