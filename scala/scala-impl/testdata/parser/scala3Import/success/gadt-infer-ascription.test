// test based on an example code by @Blaisorblade
object GadtAscription {
  enum Var[G, A] {
    case Z[G, A]() extends Var[(A, G), A]
    case S[G, A, B](x: Var[G, A]) extends Var[(B, G), A]
  }

  import Var.*
  def evalVar[G, A](x: Var[G, A])(rho: G): A = x match {
    case _: Z[g, a] =>
      rho(0)
    case s: S[g, a, b] =>
      evalVar(s.x)(rho(1))
  }
}
-----
ScalaFile
  ScObject: GadtAscription
    PsiComment(comment)('// test based on an example code by @Blaisorblade')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('GadtAscription')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScEnum: Var
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(enum)('enum')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Var')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: G
              PsiElement(identifier)('G')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScEnumCases: Z
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ScEnumClassCase: Z
                  PsiElement(identifier)('Z')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: G
                      PsiElement(identifier)('G')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: A
                      PsiElement(identifier)('A')
                    PsiElement(])(']')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    PsiElement(extends)('extends')
                    PsiWhiteSpace(' ')
                    TemplateParents
                      ConstructorInvocation
                        ParametrizedType: Var[(A, G), A]
                          SimpleType: Var
                            CodeReferenceElement: Var
                              PsiElement(identifier)('Var')
                          TypeArgumentsList
                            PsiElement([)('[')
                            TupleType: (A, G)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: G
                                  CodeReferenceElement: G
                                    PsiElement(identifier)('G')
                              PsiElement())(')')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
              PsiWhiteSpace('\n    ')
              ScEnumCases: S
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                ScEnumClassCase: S
                  PsiElement(identifier)('S')
                  TypeParameterClause
                    PsiElement([)('[')
                    TypeParameter: G
                      PsiElement(identifier)('G')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: A
                      PsiElement(identifier)('A')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    TypeParameter: B
                      PsiElement(identifier)('B')
                    PsiElement(])(']')
                  PrimaryConstructor
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        ClassParameter: x
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('x')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: Var[G, A]
                              SimpleType: Var
                                CodeReferenceElement: Var
                                  PsiElement(identifier)('Var')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: G
                                  CodeReferenceElement: G
                                    PsiElement(identifier)('G')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(])(']')
                        PsiElement())(')')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    PsiElement(extends)('extends')
                    PsiWhiteSpace(' ')
                    TemplateParents
                      ConstructorInvocation
                        ParametrizedType: Var[(B, G), A]
                          SimpleType: Var
                            CodeReferenceElement: Var
                              PsiElement(identifier)('Var')
                          TypeArgumentsList
                            PsiElement([)('[')
                            TupleType: (B, G)
                              PsiElement(()('(')
                              TypesList
                                SimpleType: B
                                  CodeReferenceElement: B
                                    PsiElement(identifier)('B')
                                PsiElement(,)(',')
                                PsiWhiteSpace(' ')
                                SimpleType: G
                                  CodeReferenceElement: G
                                    PsiElement(identifier)('G')
                              PsiElement())(')')
                            PsiElement(,)(',')
                            PsiWhiteSpace(' ')
                            SimpleType: A
                              CodeReferenceElement: A
                                PsiElement(identifier)('A')
                            PsiElement(])(']')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScImportStatement
          PsiElement(import)('import')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: Var
              PsiElement(identifier)('Var')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: evalVar
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('evalVar')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: G
              PsiElement(identifier)('G')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Var[G, A]
                    SimpleType: Var
                      CodeReferenceElement: Var
                        PsiElement(identifier)('Var')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: G
                        CodeReferenceElement: G
                          PsiElement(identifier)('G')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              Parameter: rho
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('rho')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: G
                    CodeReferenceElement: G
                      PsiElement(identifier)('G')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ReferenceExpression: x
              PsiElement(identifier)('x')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                Scala3 TypedPattern
                  WildcardPattern
                    PsiElement(_)('_')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TypePattern
                    ParametrizedType: Z[g, a]
                      SimpleType: Z
                        CodeReferenceElement: Z
                          PsiElement(identifier)('Z')
                      TypeArgumentsList
                        PsiElement([)('[')
                        TypeVariable: g
                          PsiElement(identifier)('g')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeVariable: a
                          PsiElement(identifier)('a')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace('\n      ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: rho
                      PsiElement(identifier)('rho')
                    ArgumentList
                      PsiElement(()('(')
                      IntegerLiteral
                        PsiElement(integer)('0')
                      PsiElement())(')')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                Scala3 TypedPattern
                  ReferencePattern: s
                    PsiElement(identifier)('s')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TypePattern
                    ParametrizedType: S[g, a, b]
                      SimpleType: S
                        CodeReferenceElement: S
                          PsiElement(identifier)('S')
                      TypeArgumentsList
                        PsiElement([)('[')
                        TypeVariable: g
                          PsiElement(identifier)('g')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeVariable: a
                          PsiElement(identifier)('a')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        TypeVariable: b
                          PsiElement(identifier)('b')
                        PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace('\n      ')
                BlockOfExpressions
                  MethodCall
                    MethodCall
                      ReferenceExpression: evalVar
                        PsiElement(identifier)('evalVar')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: s.x
                          ReferenceExpression: s
                            PsiElement(identifier)('s')
                          PsiElement(.)('.')
                          PsiElement(identifier)('x')
                        PsiElement())(')')
                    ArgumentList
                      PsiElement(()('(')
                      MethodCall
                        ReferenceExpression: rho
                          PsiElement(identifier)('rho')
                        ArgumentList
                          PsiElement(()('(')
                          IntegerLiteral
                            PsiElement(integer)('1')
                          PsiElement())(')')
                      PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
