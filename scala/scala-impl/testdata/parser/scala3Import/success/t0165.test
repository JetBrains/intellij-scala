package test3
import scala.collection.mutable.LinkedHashMap

trait Main {
  def asMany : ArrayResult = {
    object result extends LinkedHashMap[String,String] with ArrayResult {
      def current = this.result()
    }
    result
  }
  trait ArrayResult {
    def current : scala.collection.Map[String,String]
  }
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: test3
      PsiElement(identifier)('test3')
    PsiWhiteSpace('\n')
    ScImportStatement
      PsiElement(import)('import')
      PsiWhiteSpace(' ')
      ImportExpression
        CodeReferenceElement: scala.collection.mutable.LinkedHashMap
          CodeReferenceElement: scala.collection.mutable
            CodeReferenceElement: scala.collection
              CodeReferenceElement: scala
                PsiElement(identifier)('scala')
              PsiElement(.)('.')
              PsiElement(identifier)('collection')
            PsiElement(.)('.')
            PsiElement(identifier)('mutable')
          PsiElement(.)('.')
          PsiElement(identifier)('LinkedHashMap')
    PsiWhiteSpace('\n\n')
    ScTrait: Main
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Main')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: asMany
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('asMany')
            Parameters
              <empty list>
            PsiWhiteSpace(' ')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: ArrayResult
              CodeReferenceElement: ArrayResult
                PsiElement(identifier)('ArrayResult')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScObject: result
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(object)('object')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('result')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  PsiElement(extends)('extends')
                  PsiWhiteSpace(' ')
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: LinkedHashMap[String,String]
                        SimpleType: LinkedHashMap
                          CodeReferenceElement: LinkedHashMap
                            PsiElement(identifier)('LinkedHashMap')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                          PsiElement(,)(',')
                          SimpleType: String
                            CodeReferenceElement: String
                              PsiElement(identifier)('String')
                          PsiElement(])(']')
                    PsiWhiteSpace(' ')
                    PsiElement(with)('with')
                    PsiWhiteSpace(' ')
                    ConstructorInvocation
                      SimpleType: ArrayResult
                        CodeReferenceElement: ArrayResult
                          PsiElement(identifier)('ArrayResult')
                  PsiWhiteSpace(' ')
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiWhiteSpace('\n      ')
                    ScFunctionDefinition: current
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(def)('def')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('current')
                      Parameters
                        <empty list>
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      MethodCall
                        ReferenceExpression: this.result
                          ThisReference
                            PsiElement(this)('this')
                          PsiElement(.)('.')
                          PsiElement(identifier)('result')
                        ArgumentList
                          PsiElement(()('(')
                          PsiElement())(')')
                    PsiWhiteSpace('\n    ')
                    PsiElement(})('}')
              PsiWhiteSpace('\n    ')
              ReferenceExpression: result
                PsiElement(identifier)('result')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          ScTrait: ArrayResult
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(trait)('trait')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('ArrayResult')
            PsiWhiteSpace(' ')
            ExtendsBlock
              ScTemplateBody
                PsiElement({)('{')
                PsiWhiteSpace('\n    ')
                ScFunctionDeclaration: current
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(def)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('current')
                  Parameters
                    <empty list>
                  PsiWhiteSpace(' ')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParametrizedType: scala.collection.Map[String,String]
                    SimpleType: scala.collection.Map
                      CodeReferenceElement: scala.collection.Map
                        CodeReferenceElement: scala.collection
                          CodeReferenceElement: scala
                            PsiElement(identifier)('scala')
                          PsiElement(.)('.')
                          PsiElement(identifier)('collection')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Map')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(,)(',')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
                PsiWhiteSpace('\n  ')
                PsiElement(})('}')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
