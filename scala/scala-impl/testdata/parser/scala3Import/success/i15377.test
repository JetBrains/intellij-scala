trait Tst:
  val a: Int

trait Q[A <: Tst]:
  def mk(a: A): a.a.type = a.a

object Q extends Q[Nothing]
-----
ScalaFile
  ScTrait: Tst
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Tst')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration: a
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            Field identifier: a
              PsiElement(identifier)('a')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Int
            CodeReferenceElement: Int
              PsiElement(identifier)('Int')
  PsiWhiteSpace('\n\n')
  ScTrait: Q
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Q')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: Tst
          CodeReferenceElement: Tst
            PsiElement(identifier)('Tst')
      PsiElement(])(']')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: mk
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('mk')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: a.a.type
            CodeReferenceElement: a.a
              CodeReferenceElement: a
                PsiElement(identifier)('a')
              PsiElement(.)('.')
              PsiElement(identifier)('a')
            PsiElement(.)('.')
            PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: a.a
            ReferenceExpression: a
              PsiElement(identifier)('a')
            PsiElement(.)('.')
            PsiElement(identifier)('a')
  PsiWhiteSpace('\n\n')
  ScObject: Q
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Q')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Q[Nothing]
            SimpleType: Q
              CodeReferenceElement: Q
                PsiElement(identifier)('Q')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Nothing
                CodeReferenceElement: Nothing
                  PsiElement(identifier)('Nothing')
              PsiElement(])(']')
