class TC
val tc = TC()
class C(using x: TC) {
  assert(x eq tc)
}
class C2(n: Int)(using x: TC)(using List[TC]) {
  assert(x eq tc)
  summon[List[TC]].foreach(t => assert(t eq tc))

  def this()(using TC)(using List[TC]) = this(1)
}

class D extends C(using tc)
class D2 extends C2(1)(using tc)(using Nil)

class Foo(using TC) {
  assert(summon[TC] != null)
}

object Test extends App {
  new C(using tc)
  new C(using tc) {}
  new C2(1)(using tc)(using List(tc))
  new C2(1)(using tc)(using List(tc)) {}
  new C2()(using tc)(using List(tc))
  def foo(using TC) = ()
  foo(using tc)
}
-----
ScalaFile
  ScClass: TC
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('TC')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScPatternDefinition: tc
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: tc
        PsiElement(identifier)('tc')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: TC
        PsiElement(identifier)('TC')
      ArgumentList
        PsiElement(()('(')
        PsiElement())(')')
  PsiWhiteSpace('\n')
  ScClass: C
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('C')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          PsiElement(using)('using')
          PsiWhiteSpace(' ')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: TC
                CodeReferenceElement: TC
                  PsiElement(identifier)('TC')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: assert
            PsiElement(identifier)('assert')
          ArgumentList
            PsiElement(()('(')
            InfixExpression
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiWhiteSpace(' ')
              ReferenceExpression: eq
                PsiElement(identifier)('eq')
              PsiWhiteSpace(' ')
              ReferenceExpression: tc
                PsiElement(identifier)('tc')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScClass: C2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('C2')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: n
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('n')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
        ParametersClause
          PsiElement(()('(')
          PsiElement(using)('using')
          PsiWhiteSpace(' ')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: TC
                CodeReferenceElement: TC
                  PsiElement(identifier)('TC')
          PsiElement())(')')
        ParametersClause
          PsiElement(()('(')
          PsiElement(using)('using')
          PsiWhiteSpace(' ')
          ClassParameter: x$3
            ParameterType
              ParametrizedType: List[TC]
                SimpleType: List
                  CodeReferenceElement: List
                    PsiElement(identifier)('List')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: TC
                    CodeReferenceElement: TC
                      PsiElement(identifier)('TC')
                  PsiElement(])(']')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: assert
            PsiElement(identifier)('assert')
          ArgumentList
            PsiElement(()('(')
            InfixExpression
              ReferenceExpression: x
                PsiElement(identifier)('x')
              PsiWhiteSpace(' ')
              ReferenceExpression: eq
                PsiElement(identifier)('eq')
              PsiWhiteSpace(' ')
              ReferenceExpression: tc
                PsiElement(identifier)('tc')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: summon[List[TC]].foreach
            GenericCall
              ReferenceExpression: summon
                PsiElement(identifier)('summon')
              TypeArgumentsList
                PsiElement([)('[')
                ParametrizedType: List[TC]
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: TC
                      CodeReferenceElement: TC
                        PsiElement(identifier)('TC')
                    PsiElement(])(']')
                PsiElement(])(']')
            PsiElement(.)('.')
            PsiElement(identifier)('foreach')
          ArgumentList
            PsiElement(()('(')
            FunctionExpression
              Parameters
                ParametersClause
                  Parameter: t
                    PsiElement(identifier)('t')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: assert
                  PsiElement(identifier)('assert')
                ArgumentList
                  PsiElement(()('(')
                  InfixExpression
                    ReferenceExpression: t
                      PsiElement(identifier)('t')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: eq
                      PsiElement(identifier)('eq')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: tc
                      PsiElement(identifier)('tc')
                  PsiElement())(')')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: this
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(this)('this')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: <anonymous>
                ParameterType
                  SimpleType: TC
                    CodeReferenceElement: TC
                      PsiElement(identifier)('TC')
              PsiElement())(')')
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: <anonymous>
                ParameterType
                  ParametrizedType: List[TC]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: TC
                        CodeReferenceElement: TC
                          PsiElement(identifier)('TC')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          SelfInvocation
            PsiElement(this)('this')
            ArgumentList
              PsiElement(()('(')
              IntegerLiteral
                PsiElement(integer)('1')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: D
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('D')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: C
            CodeReferenceElement: C
              PsiElement(identifier)('C')
          ArgumentList
            PsiElement(()('(')
            PsiElement(using)('using')
            PsiWhiteSpace(' ')
            ReferenceExpression: tc
              PsiElement(identifier)('tc')
            PsiElement())(')')
  PsiWhiteSpace('\n')
  ScClass: D2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('D2')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: C2
            CodeReferenceElement: C2
              PsiElement(identifier)('C2')
          ArgumentList
            PsiElement(()('(')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement())(')')
          ArgumentList
            PsiElement(()('(')
            PsiElement(using)('using')
            PsiWhiteSpace(' ')
            ReferenceExpression: tc
              PsiElement(identifier)('tc')
            PsiElement())(')')
          ArgumentList
            PsiElement(()('(')
            PsiElement(using)('using')
            PsiWhiteSpace(' ')
            ReferenceExpression: Nil
              PsiElement(identifier)('Nil')
            PsiElement())(')')
  PsiWhiteSpace('\n\n')
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          PsiElement(using)('using')
          PsiWhiteSpace(' ')
          ClassParameter: x$1
            ParameterType
              SimpleType: TC
                CodeReferenceElement: TC
                  PsiElement(identifier)('TC')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: assert
            PsiElement(identifier)('assert')
          ArgumentList
            PsiElement(()('(')
            InfixExpression
              GenericCall
                ReferenceExpression: summon
                  PsiElement(identifier)('summon')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: TC
                    CodeReferenceElement: TC
                      PsiElement(identifier)('TC')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              ReferenceExpression: !=
                PsiElement(identifier)('!=')
              PsiWhiteSpace(' ')
              NullLiteral
                PsiElement(null)('null')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: App
            CodeReferenceElement: App
              PsiElement(identifier)('App')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement(using)('using')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: tc
                    PsiElement(identifier)('tc')
                  PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement(using)('using')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: tc
                    PsiElement(identifier)('tc')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C2
                  CodeReferenceElement: C2
                    PsiElement(identifier)('C2')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement())(')')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement(using)('using')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: tc
                    PsiElement(identifier)('tc')
                  PsiElement())(')')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement(using)('using')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: List
                      PsiElement(identifier)('List')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: tc
                        PsiElement(identifier)('tc')
                      PsiElement())(')')
                  PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C2
                  CodeReferenceElement: C2
                    PsiElement(identifier)('C2')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('1')
                  PsiElement())(')')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement(using)('using')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: tc
                    PsiElement(identifier)('tc')
                  PsiElement())(')')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement(using)('using')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: List
                      PsiElement(identifier)('List')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: tc
                        PsiElement(identifier)('tc')
                      PsiElement())(')')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: C2
                  CodeReferenceElement: C2
                    PsiElement(identifier)('C2')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement())(')')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement(using)('using')
                  PsiWhiteSpace(' ')
                  ReferenceExpression: tc
                    PsiElement(identifier)('tc')
                  PsiElement())(')')
                ArgumentList
                  PsiElement(()('(')
                  PsiElement(using)('using')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: List
                      PsiElement(identifier)('List')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: tc
                        PsiElement(identifier)('tc')
                      PsiElement())(')')
                  PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement(using)('using')
              PsiWhiteSpace(' ')
              Parameter: <anonymous>
                ParameterType
                  SimpleType: TC
                    CodeReferenceElement: TC
                      PsiElement(identifier)('TC')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: foo
            PsiElement(identifier)('foo')
          ArgumentList
            PsiElement(()('(')
            PsiElement(using)('using')
            PsiWhiteSpace(' ')
            ReferenceExpression: tc
              PsiElement(identifier)('tc')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
