class Parent { class E }

object ChildA extends Parent

object ChildB extends Parent

class Printer[C <: Parent](val child: C):
  def print22(e: child.E): String = ""

def test =
  Printer(ChildA).print22(new ChildA.E) // does not work

  //Printer[ChildA.type](ChildA).print22(new ChildA.E) // works
  //val p = Printer(ChildA); p.print22(new ChildA.E) // works
-----
ScalaFile
  ScClass: Parent
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Parent')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ScClass: E
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('E')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          ExtendsBlock
            <empty list>
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: ChildA
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ChildA')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Parent
            CodeReferenceElement: Parent
              PsiElement(identifier)('Parent')
  PsiWhiteSpace('\n\n')
  ScObject: ChildB
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ChildB')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Parent
            CodeReferenceElement: Parent
              PsiElement(identifier)('Parent')
  PsiWhiteSpace('\n\n')
  ScClass: Printer
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Printer')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: C
        PsiElement(identifier)('C')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        SimpleType: Parent
          CodeReferenceElement: Parent
            PsiElement(identifier)('Parent')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: child
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('child')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: C
                CodeReferenceElement: C
                  PsiElement(identifier)('C')
          PsiElement())(')')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: print22
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('print22')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: e
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('e')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: child.E
                    CodeReferenceElement: child.E
                      CodeReferenceElement: child
                        PsiElement(identifier)('child')
                      PsiElement(.)('.')
                      PsiElement(identifier)('E')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('""')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace('\n  ')
    MethodCall
      ReferenceExpression: Printer(ChildA).print22
        MethodCall
          ReferenceExpression: Printer
            PsiElement(identifier)('Printer')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: ChildA
              PsiElement(identifier)('ChildA')
            PsiElement())(')')
        PsiElement(.)('.')
        PsiElement(identifier)('print22')
      ArgumentList
        PsiElement(()('(')
        ScNewTemplateDefinition: <anonymous>
          PsiElement(new)('new')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: ChildA.E
                  CodeReferenceElement: ChildA.E
                    CodeReferenceElement: ChildA
                      PsiElement(identifier)('ChildA')
                    PsiElement(.)('.')
                    PsiElement(identifier)('E')
        PsiElement())(')')
  PsiWhiteSpace(' ')
  PsiComment(comment)('// does not work')
  PsiWhiteSpace('\n\n  ')
  PsiComment(comment)('//Printer[ChildA.type](ChildA).print22(new ChildA.E) // works')
  PsiWhiteSpace('\n  ')
  PsiComment(comment)('//val p = Printer(ChildA); p.print22(new ChildA.E) // works')
