// scalac: -Werror
class Test:
  def pmat(xs: java.util.Vector[_]): String = xs.get(0) match
    case d: Double => d.toString() // was: error: unreachable case, which is spurious
    case _         => "shrug"

  def pmatR(xs: java.util.Vector[_]): String =
    val scr = xs.get(0)
    1.0 match
      case `scr` => scr.toString() // for the reverse provablyDisjoint case
      case _     => "shrug"

  def test =
    val x = new java.util.Vector[Double]()
    x.add(1.0)
    pmat(x)
-----
ScalaFile
  ScClass: Test
    PsiComment(comment)('// scalac: -Werror')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: pmat
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('pmat')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: java.util.Vector[_]
                    SimpleType: java.util.Vector
                      CodeReferenceElement: java.util.Vector
                        CodeReferenceElement: java.util
                          CodeReferenceElement: java
                            PsiElement(identifier)('java')
                          PsiElement(.)('.')
                          PsiElement(identifier)('util')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Vector')
                    TypeArgumentsList
                      PsiElement([)('[')
                      WildcardType: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            MethodCall
              ReferenceExpression: xs.get
                ReferenceExpression: xs
                  PsiElement(identifier)('xs')
                PsiElement(.)('.')
                PsiElement(identifier)('get')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('0')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                Scala3 TypedPattern
                  ReferencePattern: d
                    PsiElement(identifier)('d')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  TypePattern
                    SimpleType: Double
                      CodeReferenceElement: Double
                        PsiElement(identifier)('Double')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: d.toString
                      ReferenceExpression: d
                        PsiElement(identifier)('d')
                      PsiElement(.)('.')
                      PsiElement(identifier)('toString')
                    ArgumentList
                      PsiElement(()('(')
                      PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// was: error: unreachable case, which is spurious')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                WildcardPattern
                  PsiElement(_)('_')
                PsiWhiteSpace('         ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  StringLiteral
                    PsiElement(string content)('"shrug"')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: pmatR
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('pmatR')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: java.util.Vector[_]
                    SimpleType: java.util.Vector
                      CodeReferenceElement: java.util.Vector
                        CodeReferenceElement: java.util
                          CodeReferenceElement: java
                            PsiElement(identifier)('java')
                          PsiElement(.)('.')
                          PsiElement(identifier)('util')
                        PsiElement(.)('.')
                        PsiElement(identifier)('Vector')
                    TypeArgumentsList
                      PsiElement([)('[')
                      WildcardType: _
                        PsiElement(_)('_')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: scr
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: scr
                  PsiElement(identifier)('scr')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              MethodCall
                ReferenceExpression: xs.get
                  ReferenceExpression: xs
                    PsiElement(identifier)('xs')
                  PsiElement(.)('.')
                  PsiElement(identifier)('get')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('0')
                  PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MatchStatement
              DoubleLiteral
                PsiElement(double)('1.0')
              PsiWhiteSpace(' ')
              PsiElement(match)('match')
              PsiWhiteSpace('\n      ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  StableElementPattern
                    ReferenceExpression: `scr`
                      PsiElement(identifier)('`scr`')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: scr.toString
                        ReferenceExpression: scr
                          PsiElement(identifier)('scr')
                        PsiElement(.)('.')
                        PsiElement(identifier)('toString')
                      ArgumentList
                        PsiElement(()('(')
                        PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiComment(comment)('// for the reverse provablyDisjoint case')
                PsiWhiteSpace('\n      ')
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  WildcardPattern
                    PsiElement(_)('_')
                  PsiWhiteSpace('     ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    StringLiteral
                      PsiElement(string content)('"shrug"')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          BlockExpression
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: x
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: x
                  PsiElement(identifier)('x')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      ParametrizedType: java.util.Vector[Double]
                        SimpleType: java.util.Vector
                          CodeReferenceElement: java.util.Vector
                            CodeReferenceElement: java.util
                              CodeReferenceElement: java
                                PsiElement(identifier)('java')
                              PsiElement(.)('.')
                              PsiElement(identifier)('util')
                            PsiElement(.)('.')
                            PsiElement(identifier)('Vector')
                        TypeArgumentsList
                          PsiElement([)('[')
                          SimpleType: Double
                            CodeReferenceElement: Double
                              PsiElement(identifier)('Double')
                          PsiElement(])(']')
                      ArgumentList
                        PsiElement(()('(')
                        PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: x.add
                ReferenceExpression: x
                  PsiElement(identifier)('x')
                PsiElement(.)('.')
                PsiElement(identifier)('add')
              ArgumentList
                PsiElement(()('(')
                DoubleLiteral
                  PsiElement(double)('1.0')
                PsiElement())(')')
            PsiWhiteSpace('\n    ')
            MethodCall
              ReferenceExpression: pmat
                PsiElement(identifier)('pmat')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: x
                  PsiElement(identifier)('x')
                PsiElement())(')')
