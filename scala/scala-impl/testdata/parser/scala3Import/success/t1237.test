class HelloWorld {
  def main(args: Array[String]): Unit = {

    object TypeBool;

    trait Fct {
      def g(x : Int) = TypeBool // breaks.

      //    def g(x : Int) = 3 // fine.
    }

    ()
  }
}
-----
ScalaFile
  ScClass: HelloWorld
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('HelloWorld')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: main
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('main')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: args
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('args')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: Array[String]
                    SimpleType: Array
                      CodeReferenceElement: Array
                        PsiElement(identifier)('Array')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n\n    ')
            ScObject: TypeBool
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(object)('object')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('TypeBool')
              ExtendsBlock
                <empty list>
            PsiElement(;)(';')
            PsiWhiteSpace('\n\n    ')
            ScTrait: Fct
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(trait)('trait')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Fct')
              PsiWhiteSpace(' ')
              ExtendsBlock
                ScTemplateBody
                  PsiElement({)('{')
                  PsiWhiteSpace('\n      ')
                  ScFunctionDefinition: g
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(def)('def')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('g')
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        Parameter: x
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(identifier)('x')
                          PsiWhiteSpace(' ')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: TypeBool
                      PsiElement(identifier)('TypeBool')
                  PsiWhiteSpace(' ')
                  PsiComment(comment)('// breaks.')
                  PsiWhiteSpace('\n\n      ')
                  PsiComment(comment)('//    def g(x : Int) = 3 // fine.')
                  PsiWhiteSpace('\n    ')
                  PsiElement(})('}')
            PsiWhiteSpace('\n\n    ')
            UnitExpression
              PsiElement(()('(')
              PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
