package t7818

class Observable1[+T](val asJava: JObservable[_ <: T]) extends AnyVal {
  private def foo[X](a: JObservable[X]): JObservable[X] = ???
  // was generating a type error as the type of the RHS included an existential
  // skolem based on the class type parameter `T`, which did not conform
  // to the typer parameter of the extension method into which the RHS is
  // transplanted.
  def synchronize: Observable1[T] = new Observable1(foo(asJava))

  // Was generating a Ycheck error after ExtensionMethods.
  // Fixed by having TypeMap go over info of SkolemTypes
  private[this] def id(x: JObservable[_ <: T]) = x
  def synchronize2: Observable1[T] = new Observable1(foo(id(asJava)))
}

class JObservable[T]
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: t7818
      PsiElement(identifier)('t7818')
    PsiWhiteSpace('\n\n')
    ScClass: Observable1
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Observable1')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: T
          PsiElement(identifier)('+')
          PsiElement(identifier)('T')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          ParametersClause
            PsiElement(()('(')
            ClassParameter: asJava
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('asJava')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                ParametrizedType: JObservable[_ <: T]
                  SimpleType: JObservable
                    CodeReferenceElement: JObservable
                      PsiElement(identifier)('JObservable')
                  TypeArgumentsList
                    PsiElement([)('[')
                    WildcardType: _ <: T
                      PsiElement(_)('_')
                      PsiWhiteSpace(' ')
                      PsiElement(<:)('<:')
                      PsiWhiteSpace(' ')
                      SimpleType: T
                        CodeReferenceElement: T
                          PsiElement(identifier)('T')
                    PsiElement(])(']')
            PsiElement())(')')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: AnyVal
              CodeReferenceElement: AnyVal
                PsiElement(identifier)('AnyVal')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: foo
            AnnotationsList
              <empty list>
            Modifiers
              AccessModifier
                PsiElement(private)('private')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('foo')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: X
                PsiElement(identifier)('X')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: a
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('a')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: JObservable[X]
                      SimpleType: JObservable
                        CodeReferenceElement: JObservable
                          PsiElement(identifier)('JObservable')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: X
                          CodeReferenceElement: X
                            PsiElement(identifier)('X')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: JObservable[X]
              SimpleType: JObservable
                CodeReferenceElement: JObservable
                  PsiElement(identifier)('JObservable')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: X
                  CodeReferenceElement: X
                    PsiElement(identifier)('X')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: ???
              PsiElement(identifier)('???')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: synchronize
            PsiComment(comment)('// was generating a type error as the type of the RHS included an existential')
            PsiWhiteSpace('\n  ')
            PsiComment(comment)('// skolem based on the class type parameter `T`, which did not conform')
            PsiWhiteSpace('\n  ')
            PsiComment(comment)('// to the typer parameter of the extension method into which the RHS is')
            PsiWhiteSpace('\n  ')
            PsiComment(comment)('// transplanted.')
            PsiWhiteSpace('\n  ')
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('synchronize')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Observable1[T]
              SimpleType: Observable1
                CodeReferenceElement: Observable1
                  PsiElement(identifier)('Observable1')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: Observable1
                      CodeReferenceElement: Observable1
                        PsiElement(identifier)('Observable1')
                    ArgumentList
                      PsiElement(()('(')
                      MethodCall
                        ReferenceExpression: foo
                          PsiElement(identifier)('foo')
                        ArgumentList
                          PsiElement(()('(')
                          ReferenceExpression: asJava
                            PsiElement(identifier)('asJava')
                          PsiElement())(')')
                      PsiElement())(')')
          PsiWhiteSpace('\n\n  ')
          ScFunctionDefinition: id
            PsiComment(comment)('// Was generating a Ycheck error after ExtensionMethods.')
            PsiWhiteSpace('\n  ')
            PsiComment(comment)('// Fixed by having TypeMap go over info of SkolemTypes')
            PsiWhiteSpace('\n  ')
            AnnotationsList
              <empty list>
            Modifiers
              AccessModifier
                PsiElement(private)('private')
                PsiElement([)('[')
                PsiElement(this)('this')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('id')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: x
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('x')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: JObservable[_ <: T]
                      SimpleType: JObservable
                        CodeReferenceElement: JObservable
                          PsiElement(identifier)('JObservable')
                      TypeArgumentsList
                        PsiElement([)('[')
                        WildcardType: _ <: T
                          PsiElement(_)('_')
                          PsiWhiteSpace(' ')
                          PsiElement(<:)('<:')
                          PsiWhiteSpace(' ')
                          SimpleType: T
                            CodeReferenceElement: T
                              PsiElement(identifier)('T')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: x
              PsiElement(identifier)('x')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: synchronize2
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('synchronize2')
            Parameters
              <empty list>
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Observable1[T]
              SimpleType: Observable1
                CodeReferenceElement: Observable1
                  PsiElement(identifier)('Observable1')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ScNewTemplateDefinition: <anonymous>
              PsiElement(new)('new')
              PsiWhiteSpace(' ')
              ExtendsBlock
                TemplateParents
                  ConstructorInvocation
                    SimpleType: Observable1
                      CodeReferenceElement: Observable1
                        PsiElement(identifier)('Observable1')
                    ArgumentList
                      PsiElement(()('(')
                      MethodCall
                        ReferenceExpression: foo
                          PsiElement(identifier)('foo')
                        ArgumentList
                          PsiElement(()('(')
                          MethodCall
                            ReferenceExpression: id
                              PsiElement(identifier)('id')
                            ArgumentList
                              PsiElement(()('(')
                              ReferenceExpression: asJava
                                PsiElement(identifier)('asJava')
                              PsiElement())(')')
                          PsiElement())(')')
                      PsiElement())(')')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScClass: JObservable
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('JObservable')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: T
          PsiElement(identifier)('T')
        PsiElement(])(']')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          <empty list>
      ExtendsBlock
        <empty list>
