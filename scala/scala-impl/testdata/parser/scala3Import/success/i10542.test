package test_10542:

  trait Foo {
    inline def foo[A](t: => A): Unit = ()
  }

  object Bar extends Foo

  object Test {
    Bar.foo {
      sealed trait T1
      case object S1 extends T1
    }
  }

package test_10540:

  trait Foo {
    inline def foo[A](t: => A): Unit = ()
  }

  object Bar extends Foo

  object Test {
    Bar.foo {
      trait T1
      val array = Array(new T1 {})
    }
  }

package test_9655:

  inline def foo[T](inline body: T): T = body

  def test = foo {
    sealed trait Status
    object Active extends Status
  }
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: test_10542
      PsiElement(identifier)('test_10542')
    PsiElement(:)(':')
    PsiWhiteSpace('\n\n  ')
    ScTrait: Foo
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Foo')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          ScFunctionDefinition: foo
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('foo')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: A
                PsiElement(identifier)('A')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: t
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('t')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            UnitExpression
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n  ')
    ScObject: Bar
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Bar')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
    PsiWhiteSpace('\n\n  ')
    ScObject: Test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          MethodCall
            ReferenceExpression: Bar.foo
              ReferenceExpression: Bar
                PsiElement(identifier)('Bar')
              PsiElement(.)('.')
              PsiElement(identifier)('foo')
            PsiWhiteSpace(' ')
            ArgumentList
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                ScTrait: T1
                  AnnotationsList
                    <empty list>
                  Modifiers
                    PsiElement(sealed)('sealed')
                  PsiWhiteSpace(' ')
                  PsiElement(trait)('trait')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('T1')
                  ExtendsBlock
                    <empty list>
                PsiWhiteSpace('\n      ')
                ScObject: S1
                  AnnotationsList
                    <empty list>
                  Modifiers
                    PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  PsiElement(object)('object')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('S1')
                  PsiWhiteSpace(' ')
                  ExtendsBlock
                    PsiElement(extends)('extends')
                    PsiWhiteSpace(' ')
                    TemplateParents
                      ConstructorInvocation
                        SimpleType: T1
                          CodeReferenceElement: T1
                            PsiElement(identifier)('T1')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: test_10540
      PsiElement(identifier)('test_10540')
    PsiElement(:)(':')
    PsiWhiteSpace('\n\n  ')
    ScTrait: Foo
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Foo')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          ScFunctionDefinition: foo
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('foo')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: A
                PsiElement(identifier)('A')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                Parameter: t
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('t')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            SimpleType: Unit
              CodeReferenceElement: Unit
                PsiElement(identifier)('Unit')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            UnitExpression
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n  ')
    ScObject: Bar
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Bar')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
    PsiWhiteSpace('\n\n  ')
    ScObject: Test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Test')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          MethodCall
            ReferenceExpression: Bar.foo
              ReferenceExpression: Bar
                PsiElement(identifier)('Bar')
              PsiElement(.)('.')
              PsiElement(identifier)('foo')
            PsiWhiteSpace(' ')
            ArgumentList
              BlockExpression
                PsiElement({)('{')
                PsiWhiteSpace('\n      ')
                ScTrait: T1
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(trait)('trait')
                  PsiWhiteSpace(' ')
                  PsiElement(identifier)('T1')
                  ExtendsBlock
                    <empty list>
                PsiWhiteSpace('\n      ')
                ScPatternDefinition: array
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  ListOfPatterns
                    ReferencePattern: array
                      PsiElement(identifier)('array')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  MethodCall
                    ReferenceExpression: Array
                      PsiElement(identifier)('Array')
                    ArgumentList
                      PsiElement(()('(')
                      ScNewTemplateDefinition: <anonymous>
                        PsiElement(new)('new')
                        PsiWhiteSpace(' ')
                        ExtendsBlock
                          TemplateParents
                            ConstructorInvocation
                              SimpleType: T1
                                CodeReferenceElement: T1
                                  PsiElement(identifier)('T1')
                          PsiWhiteSpace(' ')
                          ScTemplateBody
                            PsiElement({)('{')
                            PsiElement(})('}')
                      PsiElement())(')')
                PsiWhiteSpace('\n    ')
                PsiElement(})('}')
          PsiWhiteSpace('\n  ')
          PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: test_9655
      PsiElement(identifier)('test_9655')
    PsiElement(:)(':')
    PsiWhiteSpace('\n\n  ')
    ScFunctionDefinition: foo
      AnnotationsList
        <empty list>
      Modifiers
        PsiElement(inline)('inline')
      PsiWhiteSpace(' ')
      PsiElement(def)('def')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('foo')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: T
          PsiElement(identifier)('T')
        PsiElement(])(']')
      Parameters
        ParametersClause
          PsiElement(()('(')
          Parameter: body
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(inline)('inline')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('body')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
          PsiElement())(')')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      SimpleType: T
        CodeReferenceElement: T
          PsiElement(identifier)('T')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      ReferenceExpression: body
        PsiElement(identifier)('body')
    PsiWhiteSpace('\n\n  ')
    ScFunctionDefinition: test
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(def)('def')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('test')
      Parameters
        <empty list>
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      MethodCall
        ReferenceExpression: foo
          PsiElement(identifier)('foo')
        PsiWhiteSpace(' ')
        ArgumentList
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScTrait: Status
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(sealed)('sealed')
              PsiWhiteSpace(' ')
              PsiElement(trait)('trait')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Status')
              ExtendsBlock
                <empty list>
            PsiWhiteSpace('\n    ')
            ScObject: Active
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(object)('object')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('Active')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    SimpleType: Status
                      CodeReferenceElement: Status
                        PsiElement(identifier)('Status')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
