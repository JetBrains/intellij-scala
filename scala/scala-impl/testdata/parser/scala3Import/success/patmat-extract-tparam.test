trait Bip[T] { def h: T }
trait BoolBip extends Bip[Boolean]

class A {
  def g(x: Boolean): Unit = ()
  def f(xs: List[Bip[_]]) = xs foreach { case x: BoolBip => g(x.h) }
}

class B {
  def g(x: Boolean): Unit = ()
  def g(x: Int): Unit = ()
  def f(xs: List[Bip[_]]) = xs foreach { case x: BoolBip => g(x.h) }
}
-----
ScalaFile
  ScTrait: Bip
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Bip')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        ScFunctionDeclaration: h
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('h')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: T
            CodeReferenceElement: T
              PsiElement(identifier)('T')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScTrait: BoolBip
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('BoolBip')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Bip[Boolean]
            SimpleType: Bip
              CodeReferenceElement: Bip
                PsiElement(identifier)('Bip')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Boolean
                CodeReferenceElement: Boolean
                  PsiElement(identifier)('Boolean')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScClass: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: g
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('g')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[Bip[_]]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Bip[_]
                        SimpleType: Bip
                          CodeReferenceElement: Bip
                            PsiElement(identifier)('Bip')
                        TypeArgumentsList
                          PsiElement([)('[')
                          WildcardType: _
                            PsiElement(_)('_')
                          PsiElement(])(']')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            ReferenceExpression: xs
              PsiElement(identifier)('xs')
            PsiWhiteSpace(' ')
            ReferenceExpression: foreach
              PsiElement(identifier)('foreach')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    ReferencePattern: x
                      PsiElement(identifier)('x')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: BoolBip
                        CodeReferenceElement: BoolBip
                          PsiElement(identifier)('BoolBip')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: g
                        PsiElement(identifier)('g')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: x.h
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement(.)('.')
                          PsiElement(identifier)('h')
                        PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: B
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('B')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: g
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('g')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Boolean
                    CodeReferenceElement: Boolean
                      PsiElement(identifier)('Boolean')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: g
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('g')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('x')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Unit
            CodeReferenceElement: Unit
              PsiElement(identifier)('Unit')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          UnitExpression
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: xs
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('xs')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: List[Bip[_]]
                    SimpleType: List
                      CodeReferenceElement: List
                        PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      ParametrizedType: Bip[_]
                        SimpleType: Bip
                          CodeReferenceElement: Bip
                            PsiElement(identifier)('Bip')
                        TypeArgumentsList
                          PsiElement([)('[')
                          WildcardType: _
                            PsiElement(_)('_')
                          PsiElement(])(']')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          InfixExpression
            ReferenceExpression: xs
              PsiElement(identifier)('xs')
            PsiWhiteSpace(' ')
            ReferenceExpression: foreach
              PsiElement(identifier)('foreach')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    ReferencePattern: x
                      PsiElement(identifier)('x')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: BoolBip
                        CodeReferenceElement: BoolBip
                          PsiElement(identifier)('BoolBip')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    MethodCall
                      ReferenceExpression: g
                        PsiElement(identifier)('g')
                      ArgumentList
                        PsiElement(()('(')
                        ReferenceExpression: x.h
                          ReferenceExpression: x
                            PsiElement(identifier)('x')
                          PsiElement(.)('.')
                          PsiElement(identifier)('h')
                        PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
