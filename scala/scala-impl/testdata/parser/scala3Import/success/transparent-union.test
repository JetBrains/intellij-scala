transparent trait ID
case class UserName(name: String) extends ID
case class Password(hash: Int) extends ID

val password: Password = Password(123)
val name = UserName("Eve")
val res = if ??? then name else password
val _: UserName | Password = res
-----
ScalaFile
  ScTrait: ID
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(transparent)('transparent')
    PsiWhiteSpace(' ')
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ID')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScClass: UserName
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('UserName')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: name
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('name')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: ID
            CodeReferenceElement: ID
              PsiElement(identifier)('ID')
  PsiWhiteSpace('\n')
  ScClass: Password
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Password')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: hash
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('hash')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: ID
            CodeReferenceElement: ID
              PsiElement(identifier)('ID')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: password
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: password
        PsiElement(identifier)('password')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Password
      CodeReferenceElement: Password
        PsiElement(identifier)('Password')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: Password
        PsiElement(identifier)('Password')
      ArgumentList
        PsiElement(()('(')
        IntegerLiteral
          PsiElement(integer)('123')
        PsiElement())(')')
  PsiWhiteSpace('\n')
  ScPatternDefinition: name
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: name
        PsiElement(identifier)('name')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: UserName
        PsiElement(identifier)('UserName')
      ArgumentList
        PsiElement(()('(')
        StringLiteral
          PsiElement(string content)('"Eve"')
        PsiElement())(')')
  PsiWhiteSpace('\n')
  ScPatternDefinition: res
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: res
        PsiElement(identifier)('res')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    IfStatement
      PsiElement(if)('if')
      PsiWhiteSpace(' ')
      ReferenceExpression: ???
        PsiElement(identifier)('???')
      PsiWhiteSpace(' ')
      PsiElement(then)('then')
      PsiWhiteSpace(' ')
      ReferenceExpression: name
        PsiElement(identifier)('name')
      PsiWhiteSpace(' ')
      PsiElement(else)('else')
      PsiWhiteSpace(' ')
      ReferenceExpression: password
        PsiElement(identifier)('password')
  PsiWhiteSpace('\n')
  ScPatternDefinition
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      WildcardPattern
        PsiElement(_)('_')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    InfixType: UserName | Password
      SimpleType: UserName
        CodeReferenceElement: UserName
          PsiElement(identifier)('UserName')
      PsiWhiteSpace(' ')
      CodeReferenceElement: |
        PsiElement(identifier)('|')
      PsiWhiteSpace(' ')
      SimpleType: Password
        CodeReferenceElement: Password
          PsiElement(identifier)('Password')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: res
      PsiElement(identifier)('res')
