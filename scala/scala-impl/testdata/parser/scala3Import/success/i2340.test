sealed class Entry(path: Int)

class Test {
  def test = {
    class FileEntry() extends Entry(1)
    val f = new FileEntry()
  }
}
-----
ScalaFile
  ScClass: Entry
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(sealed)('sealed')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Entry')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: path
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('path')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScClass: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            ScClass: FileEntry
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(class)('class')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('FileEntry')
              PrimaryConstructor
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              ExtendsBlock
                PsiElement(extends)('extends')
                PsiWhiteSpace(' ')
                TemplateParents
                  ConstructorInvocation
                    SimpleType: Entry
                      CodeReferenceElement: Entry
                        PsiElement(identifier)('Entry')
                    ArgumentList
                      PsiElement(()('(')
                      IntegerLiteral
                        PsiElement(integer)('1')
                      PsiElement())(')')
            PsiWhiteSpace('\n    ')
            ScPatternDefinition: f
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              ListOfPatterns
                ReferencePattern: f
                  PsiElement(identifier)('f')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      SimpleType: FileEntry
                        CodeReferenceElement: FileEntry
                          PsiElement(identifier)('FileEntry')
                      ArgumentList
                        PsiElement(()('(')
                        PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
