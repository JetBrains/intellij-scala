inline def foo: String = bar(using 4)
private def bar: Int ?=> String = "baz"
-----
ScalaFile
  ScFunctionDefinition: foo
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('foo')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: String
      CodeReferenceElement: String
        PsiElement(identifier)('String')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: bar
        PsiElement(identifier)('bar')
      ArgumentList
        PsiElement(()('(')
        PsiElement(using)('using')
        PsiWhiteSpace(' ')
        IntegerLiteral
          PsiElement(integer)('4')
        PsiElement())(')')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: bar
    AnnotationsList
      <empty list>
    Modifiers
      AccessModifier
        PsiElement(private)('private')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('bar')
    Parameters
      <empty list>
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    FunctionalType: Int ?=> String
      SimpleType: Int
        CodeReferenceElement: Int
          PsiElement(identifier)('Int')
      PsiWhiteSpace(' ')
      PsiElement(?=>)('?=>')
      PsiWhiteSpace(' ')
      SimpleType: String
        CodeReferenceElement: String
          PsiElement(identifier)('String')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    StringLiteral
      PsiElement(string content)('"baz"')
