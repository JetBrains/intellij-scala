// tests transformation of return type in typedTypeApply (see also tcpoly_gm.scala)
class As {
  class A {
    def foo: A.this.type = bar.asInstanceOf[A.this.type]
    def foo2: this.type = bar.asInstanceOf[this.type]
    def bar: A = null
  }
}
-----
ScalaFile
  ScClass: As
    PsiComment(comment)('// tests transformation of return type in typedTypeApply (see also tcpoly_gm.scala)')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('As')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: A
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('A')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              <empty list>
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: foo
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: A.this.type
                  ThisReference
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
                    PsiElement(.)('.')
                    PsiElement(this)('this')
                  PsiElement(.)('.')
                  PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                GenericCall
                  ReferenceExpression: bar.asInstanceOf
                    ReferenceExpression: bar
                      PsiElement(identifier)('bar')
                    PsiElement(.)('.')
                    PsiElement(identifier)('asInstanceOf')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: A.this.type
                      ThisReference
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                        PsiElement(.)('.')
                        PsiElement(this)('this')
                      PsiElement(.)('.')
                      PsiElement(type)('type')
                    PsiElement(])(']')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: foo2
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo2')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: this.type
                  ThisReference
                    PsiElement(this)('this')
                  PsiElement(.)('.')
                  PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                GenericCall
                  ReferenceExpression: bar.asInstanceOf
                    ReferenceExpression: bar
                      PsiElement(identifier)('bar')
                    PsiElement(.)('.')
                    PsiElement(identifier)('asInstanceOf')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: this.type
                      ThisReference
                        PsiElement(this)('this')
                      PsiElement(.)('.')
                      PsiElement(type)('type')
                    PsiElement(])(']')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: bar
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('bar')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                NullLiteral
                  PsiElement(null)('null')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
