object Test {
  val bldr = SchemaBuilder_1.builder()
  val oops = bldr.fixed("foo")
}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: bldr
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: bldr
              PsiElement(identifier)('bldr')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: SchemaBuilder_1.builder
              ReferenceExpression: SchemaBuilder_1
                PsiElement(identifier)('SchemaBuilder_1')
              PsiElement(.)('.')
              PsiElement(identifier)('builder')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: oops
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: oops
              PsiElement(identifier)('oops')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: bldr.fixed
              ReferenceExpression: bldr
                PsiElement(identifier)('bldr')
              PsiElement(.)('.')
              PsiElement(identifier)('fixed')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"foo"')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
