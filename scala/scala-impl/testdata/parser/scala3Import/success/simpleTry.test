
class Foo {
  try 3
  catch {
    case e: Throwable => 4
  } finally println(6)
}
-----
ScalaFile
  ScClass: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        TryStatement
          PsiElement(try)('try')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('3')
          PsiWhiteSpace('\n  ')
          CatchBlock
            PsiElement(catch)('catch')
            PsiWhiteSpace(' ')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              CaseClauses
                CaseClause
                  PsiElement(case)('case')
                  PsiWhiteSpace(' ')
                  Scala3 TypedPattern
                    ReferencePattern: e
                      PsiElement(identifier)('e')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    TypePattern
                      SimpleType: Throwable
                        CodeReferenceElement: Throwable
                          PsiElement(identifier)('Throwable')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  BlockOfExpressions
                    IntegerLiteral
                      PsiElement(integer)('4')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
          PsiWhiteSpace(' ')
          FinallyBlock
            PsiElement(finally)('finally')
            PsiWhiteSpace(' ')
            MethodCall
              ReferenceExpression: println
                PsiElement(identifier)('println')
              ArgumentList
                PsiElement(()('(')
                IntegerLiteral
                  PsiElement(integer)('6')
                PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
