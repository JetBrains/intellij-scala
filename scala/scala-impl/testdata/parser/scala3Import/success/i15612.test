import scala.reflect.TypeTest

class ForSyntax[E](using E: TypeTest[E | Any, E]):
  extension [A](aOrE: E | A)
    inline def flatMap[B](f: A => E | B): E | B =
      aOrE match
        case e: E => ???
        case _ => ???


class UnhappyCase[E](using E: TypeTest[E | Any, E]) extends ForSyntax[E]:
  extension [A](aOrE: E | A)
    inline def fold[B](inline fe: E => B, inline fa: A => B): B =
      aOrE match
        case e: E => ???
        case _ => ???

class A:
  private val a = 1
  inline def foo() = a
class B extends A:
  private val a = 2
  inline def bar() = a
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.reflect.TypeTest
        CodeReferenceElement: scala.reflect
          CodeReferenceElement: scala
            PsiElement(identifier)('scala')
          PsiElement(.)('.')
          PsiElement(identifier)('reflect')
        PsiElement(.)('.')
        PsiElement(identifier)('TypeTest')
  PsiWhiteSpace('\n\n')
  ScClass: ForSyntax
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ForSyntax')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: E
        PsiElement(identifier)('E')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          PsiElement(using)('using')
          PsiWhiteSpace(' ')
          ClassParameter: E
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('E')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: TypeTest[E | Any, E]
                SimpleType: TypeTest
                  CodeReferenceElement: TypeTest
                    PsiElement(identifier)('TypeTest')
                TypeArgumentsList
                  PsiElement([)('[')
                  InfixType: E | Any
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    PsiWhiteSpace(' ')
                    CodeReferenceElement: |
                      PsiElement(identifier)('|')
                    PsiWhiteSpace(' ')
                    SimpleType: Any
                      CodeReferenceElement: Any
                        PsiElement(identifier)('Any')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: E
                    CodeReferenceElement: E
                      PsiElement(identifier)('E')
                  PsiElement(])(']')
          PsiElement())(')')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        Extension on E | A
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: aOrE
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('aOrE')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  InfixType: E | A
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    PsiWhiteSpace(' ')
                    CodeReferenceElement: |
                      PsiElement(identifier)('|')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDefinition: flatMap
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(inline)('inline')
              PsiWhiteSpace(' ')
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('flatMap')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: B
                  PsiElement(identifier)('B')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: f
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(identifier)('f')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      FunctionalType: A => E | B
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        InfixType: E | B
                          SimpleType: E
                            CodeReferenceElement: E
                              PsiElement(identifier)('E')
                          PsiWhiteSpace(' ')
                          CodeReferenceElement: |
                            PsiElement(identifier)('|')
                          PsiWhiteSpace(' ')
                          SimpleType: B
                            CodeReferenceElement: B
                              PsiElement(identifier)('B')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              InfixType: E | B
                SimpleType: E
                  CodeReferenceElement: E
                    PsiElement(identifier)('E')
                PsiWhiteSpace(' ')
                CodeReferenceElement: |
                  PsiElement(identifier)('|')
                PsiWhiteSpace(' ')
                SimpleType: B
                  CodeReferenceElement: B
                    PsiElement(identifier)('B')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace('\n      ')
              MatchStatement
                ReferenceExpression: aOrE
                  PsiElement(identifier)('aOrE')
                PsiWhiteSpace(' ')
                PsiElement(match)('match')
                PsiWhiteSpace('\n        ')
                CaseClauses
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    Scala3 TypedPattern
                      ReferencePattern: e
                        PsiElement(identifier)('e')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      TypePattern
                        SimpleType: E
                          CodeReferenceElement: E
                            PsiElement(identifier)('E')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ReferenceExpression: ???
                        PsiElement(identifier)('???')
                  PsiWhiteSpace('\n        ')
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ReferenceExpression: ???
                        PsiElement(identifier)('???')
  PsiWhiteSpace('\n\n\n')
  ScClass: UnhappyCase
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('UnhappyCase')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: E
        PsiElement(identifier)('E')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          PsiElement(using)('using')
          PsiWhiteSpace(' ')
          ClassParameter: E
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('E')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              ParametrizedType: TypeTest[E | Any, E]
                SimpleType: TypeTest
                  CodeReferenceElement: TypeTest
                    PsiElement(identifier)('TypeTest')
                TypeArgumentsList
                  PsiElement([)('[')
                  InfixType: E | Any
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    PsiWhiteSpace(' ')
                    CodeReferenceElement: |
                      PsiElement(identifier)('|')
                    PsiWhiteSpace(' ')
                    SimpleType: Any
                      CodeReferenceElement: Any
                        PsiElement(identifier)('Any')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: E
                    CodeReferenceElement: E
                      PsiElement(identifier)('E')
                  PsiElement(])(']')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: ForSyntax[E]
            SimpleType: ForSyntax
              CodeReferenceElement: ForSyntax
                PsiElement(identifier)('ForSyntax')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: E
                CodeReferenceElement: E
                  PsiElement(identifier)('E')
              PsiElement(])(']')
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        Extension on E | A
          PsiElement(extension)('extension')
          PsiWhiteSpace(' ')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: aOrE
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('aOrE')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  InfixType: E | A
                    SimpleType: E
                      CodeReferenceElement: E
                        PsiElement(identifier)('E')
                    PsiWhiteSpace(' ')
                    CodeReferenceElement: |
                      PsiElement(identifier)('|')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
              PsiElement())(')')
          PsiWhiteSpace('\n    ')
          ScExtensionBody
            ScFunctionDefinition: fold
              AnnotationsList
                <empty list>
              Modifiers
                PsiElement(inline)('inline')
              PsiWhiteSpace(' ')
              PsiElement(def)('def')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('fold')
              TypeParameterClause
                PsiElement([)('[')
                TypeParameter: B
                  PsiElement(identifier)('B')
                PsiElement(])(']')
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: fe
                    AnnotationsList
                      <empty list>
                    Modifiers
                      PsiElement(inline)('inline')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('fe')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      FunctionalType: E => B
                        SimpleType: E
                          CodeReferenceElement: E
                            PsiElement(identifier)('E')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  Parameter: fa
                    AnnotationsList
                      <empty list>
                    Modifiers
                      PsiElement(inline)('inline')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('fa')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      FunctionalType: A => B
                        SimpleType: A
                          CodeReferenceElement: A
                            PsiElement(identifier)('A')
                        PsiWhiteSpace(' ')
                        PsiElement(=>)('=>')
                        PsiWhiteSpace(' ')
                        SimpleType: B
                          CodeReferenceElement: B
                            PsiElement(identifier)('B')
                  PsiElement())(')')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              SimpleType: B
                CodeReferenceElement: B
                  PsiElement(identifier)('B')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace('\n      ')
              MatchStatement
                ReferenceExpression: aOrE
                  PsiElement(identifier)('aOrE')
                PsiWhiteSpace(' ')
                PsiElement(match)('match')
                PsiWhiteSpace('\n        ')
                CaseClauses
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    Scala3 TypedPattern
                      ReferencePattern: e
                        PsiElement(identifier)('e')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      TypePattern
                        SimpleType: E
                          CodeReferenceElement: E
                            PsiElement(identifier)('E')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ReferenceExpression: ???
                        PsiElement(identifier)('???')
                  PsiWhiteSpace('\n        ')
                  CaseClause
                    PsiElement(case)('case')
                    PsiWhiteSpace(' ')
                    WildcardPattern
                      PsiElement(_)('_')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      ReferenceExpression: ???
                        PsiElement(identifier)('???')
  PsiWhiteSpace('\n\n')
  ScClass: A
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('A')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: a
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: a
              PsiElement(identifier)('a')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('1')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: foo
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('foo')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: a
            PsiElement(identifier)('a')
  PsiWhiteSpace('\n')
  ScClass: B
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('B')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: a
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
          PsiWhiteSpace(' ')
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: a
              PsiElement(identifier)('a')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('2')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: bar
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('bar')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: a
            PsiElement(identifier)('a')
