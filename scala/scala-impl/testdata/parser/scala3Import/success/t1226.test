package graphs;

abstract class Graph (private[graphs] val mappings : Any){
}

class Nodes (mappings : Any)  extends Graph(mappings) {
  mappings.toString;
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: graphs
      PsiElement(identifier)('graphs')
    PsiElement(;)(';')
    PsiWhiteSpace('\n\n')
    ScClass: Graph
      AnnotationsList
        <empty list>
      Modifiers
        PsiElement(abstract)('abstract')
      PsiWhiteSpace(' ')
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Graph')
      PsiWhiteSpace(' ')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          ParametersClause
            PsiElement(()('(')
            ClassParameter: mappings
              AnnotationsList
                <empty list>
              Modifiers
                AccessModifier
                  PsiElement(private)('private')
                  PsiElement([)('[')
                  PsiElement(identifier)('graphs')
                  PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              PsiElement(identifier)('mappings')
              PsiWhiteSpace(' ')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Any
                  CodeReferenceElement: Any
                    PsiElement(identifier)('Any')
            PsiElement())(')')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScClass: Nodes
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(class)('class')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Nodes')
      PsiWhiteSpace(' ')
      PrimaryConstructor
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        Parameters
          ParametersClause
            PsiElement(()('(')
            ClassParameter: mappings
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('mappings')
              PsiWhiteSpace(' ')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Any
                  CodeReferenceElement: Any
                    PsiElement(identifier)('Any')
            PsiElement())(')')
      PsiWhiteSpace('  ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            SimpleType: Graph
              CodeReferenceElement: Graph
                PsiElement(identifier)('Graph')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: mappings
                PsiElement(identifier)('mappings')
              PsiElement())(')')
        PsiWhiteSpace(' ')
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ReferenceExpression: mappings.toString
            ReferenceExpression: mappings
              PsiElement(identifier)('mappings')
            PsiElement(.)('.')
            PsiElement(identifier)('toString')
          PsiElement(;)(';')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
