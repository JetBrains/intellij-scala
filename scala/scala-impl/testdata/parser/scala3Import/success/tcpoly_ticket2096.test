// smallest expression of monad i can find
trait MBrace[C[X] <: MBrace[C,X],A] {
 def nest( a : A ) : C[A]
 def flatten[T <: C[C[A]]]( bsq : T ) : C[A]
}

// a monad that is a Seq
trait MBraceSeq[C[X] <: MBrace[C,X] with Seq[X],A] extends MBrace[C,A]

// one of the simplest witnesses of monad i can find
case class MSequitor[A]( a_ : A* ) extends Seq[A] with MBrace[MSequitor,A]
{
 override def nest( a : A ) = new MSequitor[A]( a )
 override def flatten[T <: MSequitor[MSequitor[A]]]( bsq : T ) : MSequitor[A] = {
   bsq.foldLeft(new MSequitor[A]( ))( {
     ( acc : MSequitor[A], e : MSequitor[A] ) => ( acc ++ e ).asInstanceOf[MSequitor[A]]
   } )
 }
 override def length = a_.length
 override def iterator = a_.iterator
 override def apply( n : Int ) = a_.apply( n )
}

//  type arguments [MSequitor,A] do not conform to trait MBraceSeq's type parameter bounds [C[_] <: MBrace[C,A] with Seq[A],A]
// a statement of the instance relation
class MBraceSequitor[A] extends MBraceSeq[MSequitor,A] {
 val empty : MSequitor[A] = new MSequitor[A]( )
 override def nest( a : A ) = empty.nest( a )
 override def flatten[T <: MSequitor[MSequitor[A]]]( bsq : T ): MSequitor[A] = empty.flatten( bsq )
}
-----
ScalaFile
  ScTrait: MBrace
    PsiComment(comment)('// smallest expression of monad i can find')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('MBrace')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: C
        PsiElement(identifier)('C')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: X
            PsiElement(identifier)('X')
          PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        ParametrizedType: MBrace[C,X]
          SimpleType: MBrace
            CodeReferenceElement: MBrace
              PsiElement(identifier)('MBrace')
          TypeArgumentsList
            PsiElement([)('[')
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
            PsiElement(,)(',')
            SimpleType: X
              CodeReferenceElement: X
                PsiElement(identifier)('X')
            PsiElement(])(']')
      PsiElement(,)(',')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n ')
        ScFunctionDeclaration: nest
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('nest')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: C[A]
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
        PsiWhiteSpace('\n ')
        ScFunctionDeclaration: flatten
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('flatten')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: C[C[A]]
                SimpleType: C
                  CodeReferenceElement: C
                    PsiElement(identifier)('C')
                TypeArgumentsList
                  PsiElement([)('[')
                  ParametrizedType: C[A]
                    SimpleType: C
                      CodeReferenceElement: C
                        PsiElement(identifier)('C')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              Parameter: bsq
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('bsq')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: C[A]
            SimpleType: C
              CodeReferenceElement: C
                PsiElement(identifier)('C')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScTrait: MBraceSeq
    PsiComment(comment)('// a monad that is a Seq')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('MBraceSeq')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: C
        PsiElement(identifier)('C')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: X
            PsiElement(identifier)('X')
          PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(<:)('<:')
        PsiWhiteSpace(' ')
        CompoundType: MBrace[C,X] with Seq[X]
          ParametrizedType: MBrace[C,X]
            SimpleType: MBrace
              CodeReferenceElement: MBrace
                PsiElement(identifier)('MBrace')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: C
                CodeReferenceElement: C
                  PsiElement(identifier)('C')
              PsiElement(,)(',')
              SimpleType: X
                CodeReferenceElement: X
                  PsiElement(identifier)('X')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(with)('with')
          PsiWhiteSpace(' ')
          ParametrizedType: Seq[X]
            SimpleType: Seq
              CodeReferenceElement: Seq
                PsiElement(identifier)('Seq')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: X
                CodeReferenceElement: X
                  PsiElement(identifier)('X')
              PsiElement(])(']')
      PsiElement(,)(',')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: MBrace[C,A]
            SimpleType: MBrace
              CodeReferenceElement: MBrace
                PsiElement(identifier)('MBrace')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: C
                CodeReferenceElement: C
                  PsiElement(identifier)('C')
              PsiElement(,)(',')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
  PsiWhiteSpace('\n\n')
  ScClass: MSequitor
    PsiComment(comment)('// one of the simplest witnesses of monad i can find')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('MSequitor')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          PsiWhiteSpace(' ')
          ClassParameter: a_
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('a_')
            PsiWhiteSpace(' ')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(identifier)('*')
          PsiWhiteSpace(' ')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: Seq[A]
            SimpleType: Seq
              CodeReferenceElement: Seq
                PsiElement(identifier)('Seq')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(with)('with')
        PsiWhiteSpace(' ')
        ConstructorInvocation
          ParametrizedType: MBrace[MSequitor,A]
            SimpleType: MBrace
              CodeReferenceElement: MBrace
                PsiElement(identifier)('MBrace')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: MSequitor
                CodeReferenceElement: MSequitor
                  PsiElement(identifier)('MSequitor')
              PsiElement(,)(',')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
      PsiWhiteSpace('\n')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n ')
        ScFunctionDefinition: nest
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(override)('override')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('nest')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: MSequitor[A]
                    SimpleType: MSequitor
                      CodeReferenceElement: MSequitor
                        PsiElement(identifier)('MSequitor')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: a
                      PsiElement(identifier)('a')
                    PsiWhiteSpace(' ')
                    PsiElement())(')')
        PsiWhiteSpace('\n ')
        ScFunctionDefinition: flatten
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(override)('override')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('flatten')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: MSequitor[MSequitor[A]]
                SimpleType: MSequitor
                  CodeReferenceElement: MSequitor
                    PsiElement(identifier)('MSequitor')
                TypeArgumentsList
                  PsiElement([)('[')
                  ParametrizedType: MSequitor[A]
                    SimpleType: MSequitor
                      CodeReferenceElement: MSequitor
                        PsiElement(identifier)('MSequitor')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              Parameter: bsq
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('bsq')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: MSequitor[A]
            SimpleType: MSequitor
              CodeReferenceElement: MSequitor
                PsiElement(identifier)('MSequitor')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiWhiteSpace('\n   ')
            MethodCall
              MethodCall
                ReferenceExpression: bsq.foldLeft
                  ReferenceExpression: bsq
                    PsiElement(identifier)('bsq')
                  PsiElement(.)('.')
                  PsiElement(identifier)('foldLeft')
                ArgumentList
                  PsiElement(()('(')
                  ScNewTemplateDefinition: <anonymous>
                    PsiElement(new)('new')
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      TemplateParents
                        ConstructorInvocation
                          ParametrizedType: MSequitor[A]
                            SimpleType: MSequitor
                              CodeReferenceElement: MSequitor
                                PsiElement(identifier)('MSequitor')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                          ArgumentList
                            PsiElement(()('(')
                            PsiWhiteSpace(' ')
                            PsiElement())(')')
                  PsiElement())(')')
              ArgumentList
                PsiElement(()('(')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n     ')
                  FunctionExpression
                    Parameters
                      ParametersClause
                        PsiElement(()('(')
                        PsiWhiteSpace(' ')
                        Parameter: acc
                          AnnotationsList
                            <empty list>
                          PsiElement(identifier)('acc')
                          PsiWhiteSpace(' ')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: MSequitor[A]
                              SimpleType: MSequitor
                                CodeReferenceElement: MSequitor
                                  PsiElement(identifier)('MSequitor')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(])(']')
                        PsiElement(,)(',')
                        PsiWhiteSpace(' ')
                        Parameter: e
                          AnnotationsList
                            <empty list>
                          PsiElement(identifier)('e')
                          PsiWhiteSpace(' ')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          ParameterType
                            ParametrizedType: MSequitor[A]
                              SimpleType: MSequitor
                                CodeReferenceElement: MSequitor
                                  PsiElement(identifier)('MSequitor')
                              TypeArgumentsList
                                PsiElement([)('[')
                                SimpleType: A
                                  CodeReferenceElement: A
                                    PsiElement(identifier)('A')
                                PsiElement(])(']')
                        PsiWhiteSpace(' ')
                        PsiElement())(')')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    BlockOfExpressions
                      GenericCall
                        ReferenceExpression: ( acc ++ e ).asInstanceOf
                          ExpressionInParenthesis
                            PsiElement(()('(')
                            PsiWhiteSpace(' ')
                            InfixExpression
                              ReferenceExpression: acc
                                PsiElement(identifier)('acc')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: ++
                                PsiElement(identifier)('++')
                              PsiWhiteSpace(' ')
                              ReferenceExpression: e
                                PsiElement(identifier)('e')
                            PsiWhiteSpace(' ')
                            PsiElement())(')')
                          PsiElement(.)('.')
                          PsiElement(identifier)('asInstanceOf')
                        TypeArgumentsList
                          PsiElement([)('[')
                          ParametrizedType: MSequitor[A]
                            SimpleType: MSequitor
                              CodeReferenceElement: MSequitor
                                PsiElement(identifier)('MSequitor')
                            TypeArgumentsList
                              PsiElement([)('[')
                              SimpleType: A
                                CodeReferenceElement: A
                                  PsiElement(identifier)('A')
                              PsiElement(])(']')
                          PsiElement(])(']')
                  PsiWhiteSpace('\n   ')
                  PsiElement(})('}')
                PsiWhiteSpace(' ')
                PsiElement())(')')
            PsiWhiteSpace('\n ')
            PsiElement(})('}')
        PsiWhiteSpace('\n ')
        ScFunctionDefinition: length
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(override)('override')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('length')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: a_.length
            ReferenceExpression: a_
              PsiElement(identifier)('a_')
            PsiElement(.)('.')
            PsiElement(identifier)('length')
        PsiWhiteSpace('\n ')
        ScFunctionDefinition: iterator
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(override)('override')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('iterator')
          Parameters
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: a_.iterator
            ReferenceExpression: a_
              PsiElement(identifier)('a_')
            PsiElement(.)('.')
            PsiElement(identifier)('iterator')
        PsiWhiteSpace('\n ')
        ScFunctionDefinition: apply
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(override)('override')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('apply')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              Parameter: n
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('n')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiWhiteSpace(' ')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: a_.apply
              ReferenceExpression: a_
                PsiElement(identifier)('a_')
              PsiElement(.)('.')
              PsiElement(identifier)('apply')
            ArgumentList
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              ReferenceExpression: n
                PsiElement(identifier)('n')
              PsiWhiteSpace(' ')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: MBraceSequitor
    PsiComment(comment)('//  type arguments [MSequitor,A] do not conform to trait MBraceSeq's type parameter bounds [C[_] <: MBrace[C,A] with Seq[A],A]')
    PsiWhiteSpace('\n')
    PsiComment(comment)('// a statement of the instance relation')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('MBraceSequitor')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: A
        PsiElement(identifier)('A')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          ParametrizedType: MBraceSeq[MSequitor,A]
            SimpleType: MBraceSeq
              CodeReferenceElement: MBraceSeq
                PsiElement(identifier)('MBraceSeq')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: MSequitor
                CodeReferenceElement: MSequitor
                  PsiElement(identifier)('MSequitor')
              PsiElement(,)(',')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n ')
        ScPatternDefinition: empty
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: empty
              PsiElement(identifier)('empty')
          PsiWhiteSpace(' ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: MSequitor[A]
            SimpleType: MSequitor
              CodeReferenceElement: MSequitor
                PsiElement(identifier)('MSequitor')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ScNewTemplateDefinition: <anonymous>
            PsiElement(new)('new')
            PsiWhiteSpace(' ')
            ExtendsBlock
              TemplateParents
                ConstructorInvocation
                  ParametrizedType: MSequitor[A]
                    SimpleType: MSequitor
                      CodeReferenceElement: MSequitor
                        PsiElement(identifier)('MSequitor')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    PsiWhiteSpace(' ')
                    PsiElement())(')')
        PsiWhiteSpace('\n ')
        ScFunctionDefinition: nest
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(override)('override')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('nest')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: empty.nest
              ReferenceExpression: empty
                PsiElement(identifier)('empty')
              PsiElement(.)('.')
              PsiElement(identifier)('nest')
            ArgumentList
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              ReferenceExpression: a
                PsiElement(identifier)('a')
              PsiWhiteSpace(' ')
              PsiElement())(')')
        PsiWhiteSpace('\n ')
        ScFunctionDefinition: flatten
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(override)('override')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('flatten')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement(<:)('<:')
              PsiWhiteSpace(' ')
              ParametrizedType: MSequitor[MSequitor[A]]
                SimpleType: MSequitor
                  CodeReferenceElement: MSequitor
                    PsiElement(identifier)('MSequitor')
                TypeArgumentsList
                  PsiElement([)('[')
                  ParametrizedType: MSequitor[A]
                    SimpleType: MSequitor
                      CodeReferenceElement: MSequitor
                        PsiElement(identifier)('MSequitor')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
                  PsiElement(])(']')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              Parameter: bsq
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('bsq')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: T
                    CodeReferenceElement: T
                      PsiElement(identifier)('T')
              PsiWhiteSpace(' ')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: MSequitor[A]
            SimpleType: MSequitor
              CodeReferenceElement: MSequitor
                PsiElement(identifier)('MSequitor')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: empty.flatten
              ReferenceExpression: empty
                PsiElement(identifier)('empty')
              PsiElement(.)('.')
              PsiElement(identifier)('flatten')
            ArgumentList
              PsiElement(()('(')
              PsiWhiteSpace(' ')
              ReferenceExpression: bsq
                PsiElement(identifier)('bsq')
              PsiWhiteSpace(' ')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
