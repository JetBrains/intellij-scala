class Super(x: Int)

class Sub extends Super({
  def foo3(x: Int) = {

    class C {
      def this(name: String) = this()

      def bam(y: Int): String => Int = {
        def baz = x + y
        z => baz * z.length
      }
    }

    val fun = new C("dummy").bam(1)
    fun("abc")

  }
  foo3(22)
})
-----
ScalaFile
  ScClass: Super
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Super')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: x
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  ScClass: Sub
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Sub')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Super
            CodeReferenceElement: Super
              PsiElement(identifier)('Super')
          ArgumentList
            PsiElement(()('(')
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace('\n  ')
              ScFunctionDefinition: foo3
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('foo3')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: x
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('x')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Int
                          CodeReferenceElement: Int
                            PsiElement(identifier)('Int')
                    PsiElement())(')')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                BlockExpression
                  PsiElement({)('{')
                  PsiWhiteSpace('\n\n    ')
                  ScClass: C
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(class)('class')
                    PsiWhiteSpace(' ')
                    PsiElement(identifier)('C')
                    PrimaryConstructor
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      Parameters
                        <empty list>
                    PsiWhiteSpace(' ')
                    ExtendsBlock
                      ScTemplateBody
                        PsiElement({)('{')
                        PsiWhiteSpace('\n      ')
                        ScFunctionDefinition: this
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(def)('def')
                          PsiWhiteSpace(' ')
                          PsiElement(this)('this')
                          Parameters
                            ParametersClause
                              PsiElement(()('(')
                              Parameter: name
                                AnnotationsList
                                  <empty list>
                                Modifiers
                                  <empty list>
                                PsiElement(identifier)('name')
                                PsiElement(:)(':')
                                PsiWhiteSpace(' ')
                                ParameterType
                                  SimpleType: String
                                    CodeReferenceElement: String
                                      PsiElement(identifier)('String')
                              PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          SelfInvocation
                            PsiElement(this)('this')
                            ArgumentList
                              PsiElement(()('(')
                              PsiElement())(')')
                        PsiWhiteSpace('\n\n      ')
                        ScFunctionDefinition: bam
                          AnnotationsList
                            <empty list>
                          Modifiers
                            <empty list>
                          PsiElement(def)('def')
                          PsiWhiteSpace(' ')
                          PsiElement(identifier)('bam')
                          Parameters
                            ParametersClause
                              PsiElement(()('(')
                              Parameter: y
                                AnnotationsList
                                  <empty list>
                                Modifiers
                                  <empty list>
                                PsiElement(identifier)('y')
                                PsiElement(:)(':')
                                PsiWhiteSpace(' ')
                                ParameterType
                                  SimpleType: Int
                                    CodeReferenceElement: Int
                                      PsiElement(identifier)('Int')
                              PsiElement())(')')
                          PsiElement(:)(':')
                          PsiWhiteSpace(' ')
                          FunctionalType: String => Int
                            SimpleType: String
                              CodeReferenceElement: String
                                PsiElement(identifier)('String')
                            PsiWhiteSpace(' ')
                            PsiElement(=>)('=>')
                            PsiWhiteSpace(' ')
                            SimpleType: Int
                              CodeReferenceElement: Int
                                PsiElement(identifier)('Int')
                          PsiWhiteSpace(' ')
                          PsiElement(=)('=')
                          PsiWhiteSpace(' ')
                          BlockExpression
                            PsiElement({)('{')
                            PsiWhiteSpace('\n        ')
                            ScFunctionDefinition: baz
                              AnnotationsList
                                <empty list>
                              Modifiers
                                <empty list>
                              PsiElement(def)('def')
                              PsiWhiteSpace(' ')
                              PsiElement(identifier)('baz')
                              Parameters
                                <empty list>
                              PsiWhiteSpace(' ')
                              PsiElement(=)('=')
                              PsiWhiteSpace(' ')
                              InfixExpression
                                ReferenceExpression: x
                                  PsiElement(identifier)('x')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: +
                                  PsiElement(identifier)('+')
                                PsiWhiteSpace(' ')
                                ReferenceExpression: y
                                  PsiElement(identifier)('y')
                            PsiWhiteSpace('\n        ')
                            FunctionExpression
                              Parameters
                                ParametersClause
                                  Parameter: z
                                    PsiElement(identifier)('z')
                              PsiWhiteSpace(' ')
                              PsiElement(=>)('=>')
                              PsiWhiteSpace(' ')
                              BlockOfExpressions
                                InfixExpression
                                  ReferenceExpression: baz
                                    PsiElement(identifier)('baz')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: *
                                    PsiElement(identifier)('*')
                                  PsiWhiteSpace(' ')
                                  ReferenceExpression: z.length
                                    ReferenceExpression: z
                                      PsiElement(identifier)('z')
                                    PsiElement(.)('.')
                                    PsiElement(identifier)('length')
                            PsiWhiteSpace('\n      ')
                            PsiElement(})('}')
                        PsiWhiteSpace('\n    ')
                        PsiElement(})('}')
                  PsiWhiteSpace('\n\n    ')
                  ScPatternDefinition: fun
                    AnnotationsList
                      <empty list>
                    Modifiers
                      <empty list>
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    ListOfPatterns
                      ReferencePattern: fun
                        PsiElement(identifier)('fun')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    PsiWhiteSpace(' ')
                    MethodCall
                      ReferenceExpression: new C("dummy").bam
                        ScNewTemplateDefinition: <anonymous>
                          PsiElement(new)('new')
                          PsiWhiteSpace(' ')
                          ExtendsBlock
                            TemplateParents
                              ConstructorInvocation
                                SimpleType: C
                                  CodeReferenceElement: C
                                    PsiElement(identifier)('C')
                                ArgumentList
                                  PsiElement(()('(')
                                  StringLiteral
                                    PsiElement(string content)('"dummy"')
                                  PsiElement())(')')
                        PsiElement(.)('.')
                        PsiElement(identifier)('bam')
                      ArgumentList
                        PsiElement(()('(')
                        IntegerLiteral
                          PsiElement(integer)('1')
                        PsiElement())(')')
                  PsiWhiteSpace('\n    ')
                  MethodCall
                    ReferenceExpression: fun
                      PsiElement(identifier)('fun')
                    ArgumentList
                      PsiElement(()('(')
                      StringLiteral
                        PsiElement(string content)('"abc"')
                      PsiElement())(')')
                  PsiWhiteSpace('\n\n  ')
                  PsiElement(})('}')
              PsiWhiteSpace('\n  ')
              MethodCall
                ReferenceExpression: foo3
                  PsiElement(identifier)('foo3')
                ArgumentList
                  PsiElement(()('(')
                  IntegerLiteral
                    PsiElement(integer)('22')
                  PsiElement())(')')
              PsiWhiteSpace('\n')
              PsiElement(})('}')
            PsiElement())(')')
