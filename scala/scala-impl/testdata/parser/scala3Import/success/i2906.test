enum Foo {
  case A
  private case B
  @deprecated("Will be removed") case C
  @deprecated("Will be removed") private case D
}
-----
ScalaFile
  ScEnum: Foo
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScEnumCases: A
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: A
            PsiElement(identifier)('A')
            ExtendsBlock
              <empty list>
        PsiWhiteSpace('\n  ')
        ScEnumCases: B
          AnnotationsList
            <empty list>
          Modifiers
            AccessModifier
              PsiElement(private)('private')
          PsiWhiteSpace(' ')
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: B
            PsiElement(identifier)('B')
            ExtendsBlock
              <empty list>
        PsiWhiteSpace('\n  ')
        ScEnumCases: C
          AnnotationsList
            Annotation
              PsiElement(@)('@')
              AnnotationExpression
                ConstructorInvocation
                  SimpleType: deprecated
                    CodeReferenceElement: deprecated
                      PsiElement(identifier)('deprecated')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"Will be removed"')
                    PsiElement())(')')
          Modifiers
            <empty list>
          PsiWhiteSpace(' ')
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: C
            PsiElement(identifier)('C')
            ExtendsBlock
              <empty list>
        PsiWhiteSpace('\n  ')
        ScEnumCases: D
          AnnotationsList
            Annotation
              PsiElement(@)('@')
              AnnotationExpression
                ConstructorInvocation
                  SimpleType: deprecated
                    CodeReferenceElement: deprecated
                      PsiElement(identifier)('deprecated')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"Will be removed"')
                    PsiElement())(')')
          PsiWhiteSpace(' ')
          Modifiers
            AccessModifier
              PsiElement(private)('private')
          PsiWhiteSpace(' ')
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: D
            PsiElement(identifier)('D')
            ExtendsBlock
              <empty list>
        PsiWhiteSpace('\n')
        PsiElement(})('}')
