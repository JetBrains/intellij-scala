object test1:

  object Html {
    final opaque type Tag[+N] = String
    def apply[N](name: String): Tag[N] = ???
  }

  object HtmlTags {
    final def br: Html.Tag[Int] = Html("br")
    final def p = Html[Long]("p")
  }

  object Test {
    type Expect = Html.Tag[Any]

    val x = List[Expect](HtmlTags.br, HtmlTags.p) // ok

    val y = List(HtmlTags.br, HtmlTags.p)
    y: List[Expect] // was error
  }

class test2:
  type Tag[+N]
  object Html:
    def apply[N](name: String): Tag[N] = ???

  object HtmlTags {
    final def br: Tag[Int] = Html("br")
    final def p = Html[Long]("p")
  }

  object Test {
    type Expect = Tag[Any]

    val x = List[Expect](HtmlTags.br, HtmlTags.p) // ok

    val y = List(HtmlTags.br, HtmlTags.p)
    y: List[Expect] // was error
  }

-----
ScalaFile
  ScObject: test1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test1')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n\n  ')
        ScObject: Html
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Html')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: Tag
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(final)('final')
                  PsiWhiteSpace(' ')
                  PsiElement(opaque)('opaque')
                PsiWhiteSpace(' ')
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Tag')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: N
                    PsiElement(identifier)('+')
                    PsiElement(identifier)('N')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: apply
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('apply')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: N
                    PsiElement(identifier)('N')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: name
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('name')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: String
                          CodeReferenceElement: String
                            PsiElement(identifier)('String')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tag[N]
                  SimpleType: Tag
                    CodeReferenceElement: Tag
                      PsiElement(identifier)('Tag')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: N
                      CodeReferenceElement: N
                        PsiElement(identifier)('N')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: HtmlTags
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('HtmlTags')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: br
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('br')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Html.Tag[Int]
                  SimpleType: Html.Tag
                    CodeReferenceElement: Html.Tag
                      CodeReferenceElement: Html
                        PsiElement(identifier)('Html')
                      PsiElement(.)('.')
                      PsiElement(identifier)('Tag')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Html
                    PsiElement(identifier)('Html')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"br"')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: p
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('p')
                Parameters
                  <empty list>
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  GenericCall
                    ReferenceExpression: Html
                      PsiElement(identifier)('Html')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Long
                        CodeReferenceElement: Long
                          PsiElement(identifier)('Long')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"p"')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: Test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Test')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: Expect
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Expect')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ParametrizedType: Html.Tag[Any]
                  SimpleType: Html.Tag
                    CodeReferenceElement: Html.Tag
                      CodeReferenceElement: Html
                        PsiElement(identifier)('Html')
                      PsiElement(.)('.')
                      PsiElement(identifier)('Tag')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Any
                      CodeReferenceElement: Any
                        PsiElement(identifier)('Any')
                    PsiElement(])(']')
              PsiWhiteSpace('\n\n    ')
              ScPatternDefinition: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: x
                    PsiElement(identifier)('x')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  GenericCall
                    ReferenceExpression: List
                      PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Expect
                        CodeReferenceElement: Expect
                          PsiElement(identifier)('Expect')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: HtmlTags.br
                      ReferenceExpression: HtmlTags
                        PsiElement(identifier)('HtmlTags')
                      PsiElement(.)('.')
                      PsiElement(identifier)('br')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: HtmlTags.p
                      ReferenceExpression: HtmlTags
                        PsiElement(identifier)('HtmlTags')
                      PsiElement(.)('.')
                      PsiElement(identifier)('p')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// ok')
              PsiWhiteSpace('\n\n    ')
              ScPatternDefinition: y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: y
                    PsiElement(identifier)('y')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: List
                    PsiElement(identifier)('List')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: HtmlTags.br
                      ReferenceExpression: HtmlTags
                        PsiElement(identifier)('HtmlTags')
                      PsiElement(.)('.')
                      PsiElement(identifier)('br')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: HtmlTags.p
                      ReferenceExpression: HtmlTags
                        PsiElement(identifier)('HtmlTags')
                      PsiElement(.)('.')
                      PsiElement(identifier)('p')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              TypedExpression
                ReferenceExpression: y
                  PsiElement(identifier)('y')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: List[Expect]
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Expect
                      CodeReferenceElement: Expect
                        PsiElement(identifier)('Expect')
                    PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// was error')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: test2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('test2')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDeclaration: Tag
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Tag')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: N
              PsiElement(identifier)('+')
              PsiElement(identifier)('N')
            PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScObject: Html
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Html')
          ExtendsBlock
            ScTemplateBody
              PsiElement(:)(':')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: apply
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('apply')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: N
                    PsiElement(identifier)('N')
                  PsiElement(])(']')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: name
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('name')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: String
                          CodeReferenceElement: String
                            PsiElement(identifier)('String')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tag[N]
                  SimpleType: Tag
                    CodeReferenceElement: Tag
                      PsiElement(identifier)('Tag')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: N
                      CodeReferenceElement: N
                        PsiElement(identifier)('N')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        ScObject: HtmlTags
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('HtmlTags')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: br
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('br')
                Parameters
                  <empty list>
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: Tag[Int]
                  SimpleType: Tag
                    CodeReferenceElement: Tag
                      PsiElement(identifier)('Tag')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: Html
                    PsiElement(identifier)('Html')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"br"')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: p
                AnnotationsList
                  <empty list>
                Modifiers
                  PsiElement(final)('final')
                PsiWhiteSpace(' ')
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('p')
                Parameters
                  <empty list>
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  GenericCall
                    ReferenceExpression: Html
                      PsiElement(identifier)('Html')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Long
                        CodeReferenceElement: Long
                          PsiElement(identifier)('Long')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"p"')
                    PsiElement())(')')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: Test
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Test')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: Expect
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Expect')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ParametrizedType: Tag[Any]
                  SimpleType: Tag
                    CodeReferenceElement: Tag
                      PsiElement(identifier)('Tag')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Any
                      CodeReferenceElement: Any
                        PsiElement(identifier)('Any')
                    PsiElement(])(']')
              PsiWhiteSpace('\n\n    ')
              ScPatternDefinition: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: x
                    PsiElement(identifier)('x')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  GenericCall
                    ReferenceExpression: List
                      PsiElement(identifier)('List')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: Expect
                        CodeReferenceElement: Expect
                          PsiElement(identifier)('Expect')
                      PsiElement(])(']')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: HtmlTags.br
                      ReferenceExpression: HtmlTags
                        PsiElement(identifier)('HtmlTags')
                      PsiElement(.)('.')
                      PsiElement(identifier)('br')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: HtmlTags.p
                      ReferenceExpression: HtmlTags
                        PsiElement(identifier)('HtmlTags')
                      PsiElement(.)('.')
                      PsiElement(identifier)('p')
                    PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// ok')
              PsiWhiteSpace('\n\n    ')
              ScPatternDefinition: y
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: y
                    PsiElement(identifier)('y')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                MethodCall
                  ReferenceExpression: List
                    PsiElement(identifier)('List')
                  ArgumentList
                    PsiElement(()('(')
                    ReferenceExpression: HtmlTags.br
                      ReferenceExpression: HtmlTags
                        PsiElement(identifier)('HtmlTags')
                      PsiElement(.)('.')
                      PsiElement(identifier)('br')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ReferenceExpression: HtmlTags.p
                      ReferenceExpression: HtmlTags
                        PsiElement(identifier)('HtmlTags')
                      PsiElement(.)('.')
                      PsiElement(identifier)('p')
                    PsiElement())(')')
              PsiWhiteSpace('\n    ')
              TypedExpression
                ReferenceExpression: y
                  PsiElement(identifier)('y')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParametrizedType: List[Expect]
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Expect
                      CodeReferenceElement: Expect
                        PsiElement(identifier)('Expect')
                    PsiElement(])(']')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// was error')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
