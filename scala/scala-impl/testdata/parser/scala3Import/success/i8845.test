trait IntToLong:
  def apply(v: Int) : Long

inline def convert1(       f: IntToLong) = ???
inline def convert2(inline f: IntToLong) = ???

val test1 = convert1(_ * 10)
val test2 = convert2(_ * 10)
-----
ScalaFile
  ScTrait: IntToLong
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('IntToLong')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n  ')
        ScFunctionDeclaration: apply
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('apply')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: v
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('v')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: Long
            CodeReferenceElement: Long
              PsiElement(identifier)('Long')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: convert1
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('convert1')
    Parameters
      ParametersClause
        PsiElement(()('(')
        PsiWhiteSpace('       ')
        Parameter: f
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('f')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: IntToLong
              CodeReferenceElement: IntToLong
                PsiElement(identifier)('IntToLong')
        PsiElement())(')')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: ???
      PsiElement(identifier)('???')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: convert2
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(inline)('inline')
    PsiWhiteSpace(' ')
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('convert2')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: f
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('f')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: IntToLong
              CodeReferenceElement: IntToLong
                PsiElement(identifier)('IntToLong')
        PsiElement())(')')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    ReferenceExpression: ???
      PsiElement(identifier)('???')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: test1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: test1
        PsiElement(identifier)('test1')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: convert1
        PsiElement(identifier)('convert1')
      ArgumentList
        PsiElement(()('(')
        InfixExpression
          UnderscoreSection
            PsiElement(_)('_')
          PsiWhiteSpace(' ')
          ReferenceExpression: *
            PsiElement(identifier)('*')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('10')
        PsiElement())(')')
  PsiWhiteSpace('\n')
  ScPatternDefinition: test2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: test2
        PsiElement(identifier)('test2')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    MethodCall
      ReferenceExpression: convert2
        PsiElement(identifier)('convert2')
      ArgumentList
        PsiElement(()('(')
        InfixExpression
          UnderscoreSection
            PsiElement(_)('_')
          PsiWhiteSpace(' ')
          ReferenceExpression: *
            PsiElement(identifier)('*')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('10')
        PsiElement())(')')
