object t5305 {
  def in(a: Any) = {}

  object O {
    type F = Int
    val v = ""
  }

  in {
    import O.{F, v}
    type x = {type l = (F, v.type)} // not found: type F
  }
}
-----
ScalaFile
  ScObject: t5305
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('t5305')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: in
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('in')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: a
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('a')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  SimpleType: Any
                    CodeReferenceElement: Any
                      PsiElement(identifier)('Any')
              PsiElement())(')')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          BlockExpression
            PsiElement({)('{')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        ScObject: O
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(object)('object')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('O')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: F
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('F')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
              PsiWhiteSpace('\n    ')
              ScPatternDefinition: v
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                ListOfPatterns
                  ReferencePattern: v
                    PsiElement(identifier)('v')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                StringLiteral
                  PsiElement(string content)('""')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: in
            PsiElement(identifier)('in')
          PsiWhiteSpace(' ')
          ArgumentList
            BlockExpression
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScImportStatement
                PsiElement(import)('import')
                PsiWhiteSpace(' ')
                ImportExpression
                  CodeReferenceElement: O
                    PsiElement(identifier)('O')
                  PsiElement(.)('.')
                  ImportSelectors
                    PsiElement({)('{')
                    ImportSelector
                      CodeReferenceElement: F
                        PsiElement(identifier)('F')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    ImportSelector
                      CodeReferenceElement: v
                        PsiElement(identifier)('v')
                    PsiElement(})('}')
              PsiWhiteSpace('\n    ')
              ScTypeAliasDefinition: x
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('x')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                CompoundType: {type l = (F, v.type)}
                  Refinement
                    PsiElement({)('{')
                    ScTypeAliasDefinition: l
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(type)('type')
                      PsiWhiteSpace(' ')
                      PsiElement(identifier)('l')
                      PsiWhiteSpace(' ')
                      PsiElement(=)('=')
                      PsiWhiteSpace(' ')
                      TupleType: (F, v.type)
                        PsiElement(()('(')
                        TypesList
                          SimpleType: F
                            CodeReferenceElement: F
                              PsiElement(identifier)('F')
                          PsiElement(,)(',')
                          PsiWhiteSpace(' ')
                          SimpleType: v.type
                            CodeReferenceElement: v
                              PsiElement(identifier)('v')
                            PsiElement(.)('.')
                            PsiElement(type)('type')
                        PsiElement())(')')
                    PsiElement(})('}')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// not found: type F')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
