final class fooAnnot[T](member: T) extends scala.annotation.StaticAnnotation // must have type parameter

@fooAnnot(new RecAnnotated {}) // must pass instance of anonymous subclass
trait RecAnnotated
-----
ScalaFile
  ScClass: fooAnnot
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('fooAnnot')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: T
        PsiElement(identifier)('T')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: member
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('member')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: scala.annotation.StaticAnnotation
            CodeReferenceElement: scala.annotation.StaticAnnotation
              CodeReferenceElement: scala.annotation
                CodeReferenceElement: scala
                  PsiElement(identifier)('scala')
                PsiElement(.)('.')
                PsiElement(identifier)('annotation')
              PsiElement(.)('.')
              PsiElement(identifier)('StaticAnnotation')
  PsiWhiteSpace(' ')
  PsiComment(comment)('// must have type parameter')
  PsiWhiteSpace('\n\n')
  ScTrait: RecAnnotated
    AnnotationsList
      Annotation
        PsiElement(@)('@')
        AnnotationExpression
          ConstructorInvocation
            SimpleType: fooAnnot
              CodeReferenceElement: fooAnnot
                PsiElement(identifier)('fooAnnot')
            ArgumentList
              PsiElement(()('(')
              ScNewTemplateDefinition: <anonymous>
                PsiElement(new)('new')
                PsiWhiteSpace(' ')
                ExtendsBlock
                  TemplateParents
                    ConstructorInvocation
                      SimpleType: RecAnnotated
                        CodeReferenceElement: RecAnnotated
                          PsiElement(identifier)('RecAnnotated')
                  PsiWhiteSpace(' ')
                  ScTemplateBody
                    PsiElement({)('{')
                    PsiElement(})('}')
              PsiElement())(')')
    Modifiers
      <empty list>
    PsiWhiteSpace(' ')
    PsiComment(comment)('// must pass instance of anonymous subclass')
    PsiWhiteSpace('\n')
    PsiElement(trait)('trait')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('RecAnnotated')
    ExtendsBlock
      <empty list>
