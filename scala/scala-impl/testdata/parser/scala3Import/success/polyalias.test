
object Test {

  type S[X] = scala.Predef.Set[X]

  val z: S[_] = ???


  type Pair[T] = (T, T)
  val x = (1, 2)
  val xx: Pair[Int] = x
  val xxx = xx

  type Config[T] = (T => T, String)

  val y = ((x: String) => x, "a")
  val yy: Config[String] = y
  val yyy = yy

  type RMap[K, V] = Map[V, K]
  type RRMap[KK, VV] = RMap[VV, KK]

  val rm: RMap[Int, String] = Map[String, Int]()
  val rrm: RRMap[Int, String] = Map[Int, String]()

  val zz: RMap[_, Int] = Map[Int, String]()
  val m = Map[Int, String]()
  val ts: RMap[_, Int] = m
  val us: RMap[String, _] = m
  val vs: RMap[_, _] = m

}
-----
ScalaFile
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: S
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('S')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: X
              PsiElement(identifier)('X')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: scala.Predef.Set[X]
            SimpleType: scala.Predef.Set
              CodeReferenceElement: scala.Predef.Set
                CodeReferenceElement: scala.Predef
                  CodeReferenceElement: scala
                    PsiElement(identifier)('scala')
                  PsiElement(.)('.')
                  PsiElement(identifier)('Predef')
                PsiElement(.)('.')
                PsiElement(identifier)('Set')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: X
                CodeReferenceElement: X
                  PsiElement(identifier)('X')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: z
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: z
              PsiElement(identifier)('z')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: S[_]
            SimpleType: S
              CodeReferenceElement: S
                PsiElement(identifier)('S')
            TypeArgumentsList
              PsiElement([)('[')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n\n  ')
        ScTypeAliasDefinition: Pair
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Pair')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          TupleType: (T, T)
            PsiElement(()('(')
            TypesList
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: T
                CodeReferenceElement: T
                  PsiElement(identifier)('T')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: x
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: x
              PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          Tuple
            PsiElement(()('(')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            IntegerLiteral
              PsiElement(integer)('2')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: xx
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xx
              PsiElement(identifier)('xx')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Pair[Int]
            SimpleType: Pair
              CodeReferenceElement: Pair
                PsiElement(identifier)('Pair')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: x
            PsiElement(identifier)('x')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: xxx
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: xxx
              PsiElement(identifier)('xxx')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: xx
            PsiElement(identifier)('xx')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: Config
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Config')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          TupleType: (T => T, String)
            PsiElement(()('(')
            TypesList
              FunctionalType: T => T
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                SimpleType: T
                  CodeReferenceElement: T
                    PsiElement(identifier)('T')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: y
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: y
              PsiElement(identifier)('y')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          Tuple
            PsiElement(()('(')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: x
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('x')
                    PsiElement(:)(':')
                    PsiWhiteSpace(' ')
                    ParameterType
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              ReferenceExpression: x
                PsiElement(identifier)('x')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            StringLiteral
              PsiElement(string content)('"a"')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: yy
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: yy
              PsiElement(identifier)('yy')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Config[String]
            SimpleType: Config
              CodeReferenceElement: Config
                PsiElement(identifier)('Config')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: y
            PsiElement(identifier)('y')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: yyy
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: yyy
              PsiElement(identifier)('yyy')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: yy
            PsiElement(identifier)('yy')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: RMap
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('RMap')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: K
              PsiElement(identifier)('K')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: V
              PsiElement(identifier)('V')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: Map[V, K]
            SimpleType: Map
              CodeReferenceElement: Map
                PsiElement(identifier)('Map')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: V
                CodeReferenceElement: V
                  PsiElement(identifier)('V')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: K
                CodeReferenceElement: K
                  PsiElement(identifier)('K')
              PsiElement(])(']')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: RRMap
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('RRMap')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: KK
              PsiElement(identifier)('KK')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: VV
              PsiElement(identifier)('VV')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ParametrizedType: RMap[VV, KK]
            SimpleType: RMap
              CodeReferenceElement: RMap
                PsiElement(identifier)('RMap')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: VV
                CodeReferenceElement: VV
                  PsiElement(identifier)('VV')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: KK
                CodeReferenceElement: KK
                  PsiElement(identifier)('KK')
              PsiElement(])(']')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: rm
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: rm
              PsiElement(identifier)('rm')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: RMap[Int, String]
            SimpleType: RMap
              CodeReferenceElement: RMap
                PsiElement(identifier)('RMap')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            GenericCall
              ReferenceExpression: Map
                PsiElement(identifier)('Map')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: rrm
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: rrm
              PsiElement(identifier)('rrm')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: RRMap[Int, String]
            SimpleType: RRMap
              CodeReferenceElement: RRMap
                PsiElement(identifier)('RRMap')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            GenericCall
              ReferenceExpression: Map
                PsiElement(identifier)('Map')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: zz
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: zz
              PsiElement(identifier)('zz')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: RMap[_, Int]
            SimpleType: RMap
              CodeReferenceElement: RMap
                PsiElement(identifier)('RMap')
            TypeArgumentsList
              PsiElement([)('[')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            GenericCall
              ReferenceExpression: Map
                PsiElement(identifier)('Map')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: m
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: m
              PsiElement(identifier)('m')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            GenericCall
              ReferenceExpression: Map
                PsiElement(identifier)('Map')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiElement(])(']')
            ArgumentList
              PsiElement(()('(')
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: ts
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: ts
              PsiElement(identifier)('ts')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: RMap[_, Int]
            SimpleType: RMap
              CodeReferenceElement: RMap
                PsiElement(identifier)('RMap')
            TypeArgumentsList
              PsiElement([)('[')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: m
            PsiElement(identifier)('m')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: us
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: us
              PsiElement(identifier)('us')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: RMap[String, _]
            SimpleType: RMap
              CodeReferenceElement: RMap
                PsiElement(identifier)('RMap')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: m
            PsiElement(identifier)('m')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: vs
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: vs
              PsiElement(identifier)('vs')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: RMap[_, _]
            SimpleType: RMap
              CodeReferenceElement: RMap
                PsiElement(identifier)('RMap')
            TypeArgumentsList
              PsiElement([)('[')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              WildcardType: _
                PsiElement(_)('_')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: m
            PsiElement(identifier)('m')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
