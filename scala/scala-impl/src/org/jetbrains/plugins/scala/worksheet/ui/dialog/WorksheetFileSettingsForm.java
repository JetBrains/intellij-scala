package org.jetbrains.plugins.scala.worksheet.ui.dialog;

import com.intellij.application.options.ModulesComboBox;
import com.intellij.openapi.actionSystem.impl.ActionButton;
import com.intellij.openapi.module.Module;
import com.intellij.psi.PsiFile;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.jetbrains.plugins.scala.project.settings.ScalaCompilerSettingsProfile;
import org.jetbrains.plugins.scala.worksheet.actions.RunWorksheetAction;
import org.jetbrains.plugins.scala.worksheet.actions.RunWorksheetAction$;
import scala.Some;

import javax.swing.*;
import java.awt.*;

/**
 * User: Dmitry.Naydanov
 * Date: 05.02.18.
 */
public class WorksheetFileSettingsForm {
    private final PsiFile myFile;

    private JCheckBox useREPLModeCheckBox;
    private JCheckBox interactiveModeCheckBox;
    private JCheckBox makeProjectBeforeRunCheckBox;
    private ModulesComboBox moduleComboBox;
    private JPanel mainPanel;
    private JComboBox<ScalaCompilerSettingsProfile> compilerProfileComboBox;
    private ActionButton openCompilerProfileSettingsButton;

    public WorksheetFileSettingsForm(PsiFile file, WorksheetSettingsData settingsData) {
        myFile = file;
        $$$setupUI$$$();

        useREPLModeCheckBox.setSelected(settingsData.isRepl);
        interactiveModeCheckBox.setSelected(settingsData.isInteractive);
        makeProjectBeforeRunCheckBox.setSelected(settingsData.isMakeBeforeRun);
        compilerProfileComboBox.setModel(new DefaultComboBoxModel<>(settingsData.profiles));
        compilerProfileComboBox.setSelectedItem(settingsData.compilerProfileName);
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public PsiFile getFile() {
        return myFile;
    }

    public void onProfilesReload(ScalaCompilerSettingsProfile compilerProfile, ScalaCompilerSettingsProfile[] profiles) {
        compilerProfileComboBox.setSelectedItem(null);
        compilerProfileComboBox.setModel(new DefaultComboBoxModel<>(profiles));
        compilerProfileComboBox.setSelectedItem(compilerProfile);
    }

    public WorksheetSettingsData getSettings() {
        return new WorksheetSettingsData(
                useREPLModeCheckBox.isSelected(),
                interactiveModeCheckBox.isSelected(),
                makeProjectBeforeRunCheckBox.isSelected(),
                moduleComboBox.isEnabled() ? moduleComboBox.getSelectedModule() : null,
                (ScalaCompilerSettingsProfile) compilerProfileComboBox.getSelectedItem(),
                null
        );
    }

    private void createUIComponents() {
        moduleComboBox = new ModulesComboBox();
        moduleComboBox.fillModules(myFile.getProject());
        moduleComboBox.setToolTipText("Using class path of the module...");

        Module defaultModule = RunWorksheetAction$.MODULE$.getModuleFor(myFile);
        if (defaultModule != null) {
            moduleComboBox.setSelectedModule(defaultModule);
            if (!RunWorksheetAction.isScratchWorksheet(new Some<>(myFile.getVirtualFile()), myFile.getProject()))
                moduleComboBox.setEnabled(false);
        }

        openCompilerProfileSettingsButton = new ShowCompilerProfileSettingsButton(this).getActionButton();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(6, 3, new Insets(0, 0, 0, 0), -1, -1));
        useREPLModeCheckBox = new JCheckBox();
        useREPLModeCheckBox.setText("Use REPL Mode");
        mainPanel.add(useREPLModeCheckBox, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        mainPanel.add(spacer1, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        interactiveModeCheckBox = new JCheckBox();
        interactiveModeCheckBox.setText("Interactive Mode");
        mainPanel.add(interactiveModeCheckBox, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        makeProjectBeforeRunCheckBox = new JCheckBox();
        makeProjectBeforeRunCheckBox.setText("Make project before run");
        mainPanel.add(makeProjectBeforeRunCheckBox, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mainPanel.add(moduleComboBox, new GridConstraints(3, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Use class path of module:");
        mainPanel.add(label1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        compilerProfileComboBox = new JComboBox();
        mainPanel.add(compilerProfileComboBox, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Compiler profile:");
        mainPanel.add(label2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mainPanel.add(openCompilerProfileSettingsButton, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
