<!--suppress PluginXmlValidity -->
<idea-plugin>

    <extensionPoints>
        <extensionPoint name="scalaIntentionAvailabilityChecker" interface="org.jetbrains.plugins.scala.util.IntentionAvailabilityChecker"/>
        <extensionPoint name="scalaPluginVersionVerifier" interface="org.jetbrains.plugins.scala.components.ScalaPluginVersionVerifier"/>
        <extensionPoint name="scalaUiWithDependency" interface="org.jetbrains.plugins.scala.settings.uiControls.ScalaUiWithDependency"/>
        <extensionPoint name="scalaLanguageDerivative" interface="org.jetbrains.plugins.scala.finder.ScalaLanguageDerivative"/>
        <extensionPoint name="memberElementTypesExtension" interface="org.jetbrains.plugins.scala.util.MemberElementTypesExtension"/>
        <extensionPoint name="scalaElementToRenameContributor" interface="org.jetbrains.plugins.scala.lang.refactoring.rename.ScalaElementToRenameContributor"/>
        <extensionPoint name="scalaSyntheticClassProducer" interface="org.jetbrains.plugins.scala.lang.resolve.SyntheticClassProducer"/>
        <extensionPoint name="evaluatorCompileHelper" interface="org.jetbrains.plugins.scala.debugger.evaluation.EvaluatorCompileHelper"/>
        <extensionPoint name="syntheticMemberInjector" interface="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.typedef.SyntheticMembersInjector"/>
        <extensionPoint name="testWorkingDirectoryProvider" interface="org.jetbrains.plugins.scala.testingSupport.TestWorkingDirectoryProvider"/>
        <extensionPoint name="parameterInfoEnhancer" interface="org.jetbrains.plugins.scala.lang.parameterInfo.ScalaParameterInfoEnhancer"/>
        <extensionPoint name="scalaDynamicTypeResolver" interface="org.jetbrains.plugins.scala.lang.resolve.DynamicTypeReferenceResolver"/>
        <extensionPoint name="genericTypeNamesProvider" interface="org.jetbrains.plugins.scala.lang.refactoring.namesSuggester.genericTypes.GenericTypeNamesProvider"/>
        <extensionPoint name="nailgunServerAdditionalCp" beanClass="org.jetbrains.plugins.scala.compiler.NailgunServerAdditionalCp"/>
        <extensionPoint name="compileServerVmOptionsProvider" interface="org.jetbrains.plugins.scala.compiler.CompileServerVmOptionsProvider"/>
        <extensionPoint name="sdkResolver" interface="org.jetbrains.plugins.scala.project.external.SdkResolver"/>
        <extensionPoint name="unresolvedReferenceFixProvider" interface="org.jetbrains.plugins.scala.annotator.UnresolvedReferenceFixProvider"/>
        <extensionPoint name="interpolatedStringMacroTypeProvider" interface="org.jetbrains.plugins.scala.lang.psi.impl.base.InterpolatedStringMacroTypeProvider"/>
        <extensionPoint name="worksheetExternalRunType" interface="org.jetbrains.plugins.scala.worksheet.settings.WorksheetExternalRunType"/>
        <extensionPoint name="fileDeclarationsContributor" interface="org.jetbrains.plugins.scala.worksheet.FileDeclarationsContributor"/>
    </extensionPoints>

    <extensions defaultExtensionNs="org.intellij.scala">
        <!--<syntheticMemberInjector implementation="scala.meta.MetaAnnotationInjector"/>-->
        <syntheticMemberInjector implementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.typedef.CaseClassAndCompanionMembersInjector"/>
        <syntheticMemberInjector implementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.typedef.MonocleInjector"/>
        <syntheticMemberInjector implementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.typedef.ScalazDerivingInjector"/>
        <syntheticMemberInjector implementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.typedef.CirceCodecInjector"/>
        <syntheticMemberInjector implementation="scala.meta.intellij.MetaSupportInjector"/>
        <syntheticMemberInjector implementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.typedef.QuasiQuotesInjector"/>
        <syntheticMemberInjector implementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.typedef.simulacrum.SimulacrumInjector"/>

        <genericTypeNamesProvider
                implementation="org.jetbrains.plugins.scala.lang.refactoring.namesSuggester.genericTypes.TypePluralNamesProvider"/>
        <genericTypeNamesProvider
                implementation="org.jetbrains.plugins.scala.lang.refactoring.namesSuggester.genericTypes.EitherTypeNamesProvider"/>
        <genericTypeNamesProvider
                implementation="org.jetbrains.plugins.scala.lang.refactoring.namesSuggester.genericTypes.FromTypeToTypeNamesProvider"/>
        <genericTypeNamesProvider
                implementation="org.jetbrains.plugins.scala.lang.refactoring.namesSuggester.genericTypes.MonadicTypeNamesProvider"/>
        <genericTypeNamesProvider
                implementation="org.jetbrains.plugins.scala.lang.refactoring.namesSuggester.genericTypes.FunctionTypeNamesProvider"/>
        <genericTypeNamesProvider
                implementation="org.jetbrains.plugins.scala.lang.refactoring.namesSuggester.genericTypes.TupleTypeNamesProvider"/>

        <fileDeclarationsContributor implementation="org.jetbrains.plugins.scala.worksheet.ui.WorksheetFileDeclarationsContributor"/>
        <fileDeclarationsContributor implementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteFileDeclarationsContributor"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <annotator language="JAVA"
                   implementationClass="org.jetbrains.plugins.scala.annotator.template.SealedJavaInheritance"/>
        <annotator language="Scala"
                   implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaColorSchemeAnnotator"/>
        <statusBarWidgetProvider implementation="org.jetbrains.plugins.scala.components.TypeAwareWidgetProvider"/>

        <breadcrumbsInfoProvider
                implementation="org.jetbrains.plugins.scala.lang.breadcrumbs.ScalaBreadcrumbsInfoProvider"/>
        <breadcrumbsPresentationProvider
                implementation="org.jetbrains.plugins.scala.lang.breadcrumbs.ScalaBreadcrumbsPresentationProvider"/>
        <project.converterProvider
                implementation="org.jetbrains.plugins.scala.project.converter.ScalaProjectConverterProvider"/>
        <codeStyle.ReferenceAdjuster language="Scala" implementationClass="org.jetbrains.plugins.scala.codeInsight.template.ScalaReferenceAdjuster"/>
        <lang.rearranger language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.rearranger.ScalaRearranger"/>
        <testFinder implementation="org.jetbrains.plugins.scala.testingSupport.ScalaTestFinder"/>
        <exceptionFilter implementation="org.jetbrains.plugins.scala.testingSupport.util.scalatest.ScalaTestFailureLocationFilterFactory"/>
        <exceptionFilter implementation="org.jetbrains.plugins.scala.stacktrace.ScalaPackageObjectFilterFactory" order="first"/>
        <consoleFilterProvider implementation="org.jetbrains.plugins.scala.stacktrace.ScalaPackageObjectConsoleFilterProvider" order="first"/>
        <compileServer.plugin classpath="scala-library.jar;compiler-shared.jar;jps/nailgun.jar;jps/compiler-jps.jar;jps/sbt-interface.jar;jps/incremental-compiler.jar;spray-json_2.12-1.3.4.jar;scala-compiler-indices-protocol_2.12-0.1.1.jar"/>
        <buildProcess.parametersProvider implementation="org.jetbrains.plugins.scala.compiler.ScalaBuildProcessParametersProvider"/>
        <buildProcess.parametersProvider implementation="org.jetbrains.plugins.scala.findUsages.compilerReferences.CompilerIndicesBuildProcessParametersProvider"/>
        <projectTemplatesFactory implementation="org.jetbrains.plugins.scala.project.template.ScalaProjectTemplatesFactory"/>
        <refactoring.moveMemberHandler language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.refactoring.move.members.ScalaMoveMemberHandler"/>
        <refactoring.moveHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.move.members.ScalaMoveMembersHandler" order="first" id="scalaMoveMembersHandler"/>
        <refactoring.moveHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.move.ScalaMoveClassesOrPackagesHandler" order="first, after scalaMoveMembersHandler"/>
        <refactoring.moveAllClassesInFileHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.move.MoveScalaClassesInFileHandler" order="last"/>
        <statementUpDownMover implementation="org.jetbrains.plugins.scala.lang.refactoring.ScalaStatementMover"/>
        <moveLeftRightHandler language="Scala"
                              implementationClass="org.jetbrains.plugins.scala.codeInsight.ScalaMoveLeftRightHandler"/>
        <editorTabTitleProvider implementation="org.jetbrains.plugins.scala.editor.PackageObjectEditorTabTitleProvider"/>
        <debugger.codeFragmentFactory implementation="org.jetbrains.plugins.scala.debugger.evaluation.ScalaCodeFragmentFactory"/>
        <debugger.positionManagerFactory implementation="org.jetbrains.plugins.scala.debugger.ScalaPositionManagerFactory"/>
        <debuggerEditorTextProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.debugger.evaluation.ScalaEditorTextProvider"/>
        <debugger.nodeRenderer implementation="org.jetbrains.plugins.scala.debugger.ui.NonStrictCollectionsRenderer"/>
        <debugger.nodeRenderer implementation="org.jetbrains.plugins.scala.debugger.ui.RuntimeRefRenderer"/>
        <debugger.nodeRenderer implementation="org.jetbrains.plugins.scala.debugger.ui.ScalaCollectionRenderer"/>
        <debugger.nodeRenderer implementation="org.jetbrains.plugins.scala.debugger.ui.ClassWithSpecializedFieldsRenderer"/>
        <debugger.syntheticProvider implementation="org.jetbrains.plugins.scala.debugger.ScalaSyntheticProvider"/>
        <debugger.frameExtraVarsProvider implementation="org.jetbrains.plugins.scala.debugger.ScalaFrameExtraVariablesProvider"/>
        <debugger.extraSteppingFilter implementation="org.jetbrains.plugins.scala.debugger.ScalaSyntheticSteppingFilter"/>
        <debugger.simplePropertyGetterProvider implementation="org.jetbrains.plugins.scala.debugger.ScalaSimpleGetterProvider"/>
        <debugger.sourcePositionProvider implementation="org.jetbrains.plugins.scala.debugger.ScalaSourcePositionProvider"/>
        <debugger.javaBreakpointHandlerFactory implementation="org.jetbrains.plugins.scala.debugger.breakpoints.ScalaBreakpointHandlerFactory"/>
        <debugger.sourcePositionHighlighter implementation="org.jetbrains.plugins.scala.debugger.ScalaSourcePositionHighlighter"/>
        <debugger.nodeNameAdjuster implementation="org.jetbrains.plugins.scala.debugger.ui.ScalaFieldNameAdjuster"/>
        <debugger.nodeNameAdjuster implementation="org.jetbrains.plugins.scala.debugger.ui.ScalaParameterNameAdjuster"/>
        <xdebugger.breakpointType implementation="org.jetbrains.plugins.scala.debugger.breakpoints.ScalaLineBreakpointType"/>
        <generation.topLevelFactory language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.psi.impl.ScalaFactoryProvider"/>
        <treeCopyHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.util.ScalaChangeUtilSupport"/>
        <iconProvider implementation="org.jetbrains.plugins.scala.projectView.ScalaIconProvider"/>
        <colorSettingsPage implementation="org.jetbrains.plugins.scala.highlighter.ScalaColorsAndFontsPage"/>
        <editorSmartKeysConfigurable instance="org.jetbrains.plugins.scala.settings.ScalaEditorSmartKeysConfigurable"/>
        <codeFoldingOptionsProvider instance="org.jetbrains.plugins.scala.editor.codeFolding.ScalaCodeFoldingOptionsProvider"/>
        <langCodeStyleSettingsProvider implementation="org.jetbrains.plugins.scala.lang.formatting.settings.ScalaLanguageCodeStyleSettingsProvider"/>
        <lang.lineWrapStrategy language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.formatting.ScalaLineWrapPositionStrategy"/>
        <projectConfigurable groupId="language"
                             bundle="messages.ScalaInspectionBundle"
                             key="displayname.scala"
                             instance="org.jetbrains.plugins.scala.settings.ScalaProjectSettingsConfigurable"/>
        <applicationConfigurable bundle="messages.ScalaInspectionBundle"
                                 key="displayname.scala.compile.server"
                                 parentId="Scala Compiler"
                                 instance="org.jetbrains.plugins.scala.compiler.ScalaCompileServerForm"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.findUsages.compilerReferences.settings.CompilerIndicesSettings"/>
        <projectConfigurable id="Bytecode Indices" parentId="Scala Compiler"
                             instance="org.jetbrains.plugins.scala.findUsages.compilerReferences.settings.CompilerIndicesConfigurable"/>
        <applicationService serviceImplementation="org.jetbrains.plugins.scala.findUsages.compilerReferences.settings.CompilerIndicesSbtSettings"/>

        <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
        <autoImportOptionsProvider instance="org.jetbrains.plugins.scala.editor.autoimport.ScalaAutoImportOptionsProvider"/>
        <fileType name="Scala" language="Scala" extensions="scala"
                  implementationClass="org.jetbrains.plugins.scala.ScalaFileType" fieldName="INSTANCE"/>
        <editorHighlighterProvider filetype="Scala"
                                   implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaEditorHighlighterProvider"/>

        <highlightingPassFactory implementation="org.jetbrains.plugins.scala.codeInspection.unusedInspections.ScalaLocalVarCouldBeValPassFactory"/>
        <highlightingPassFactory implementation="org.jetbrains.plugins.scala.codeInspection.unusedInspections.ScalaUnusedImportsPassFactory"/>
        <highlightingPassFactory implementation="org.jetbrains.plugins.scala.codeInspection.unusedInspections.ScalaUnusedLocalSymbolPassFactory"/>

        <lang.syntaxHighlighterFactory language="Scala"
                                       implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaSyntaxHighlighterFactory"/>
        <lang.syntaxHighlighter language="ScalaDoc"
                                implementationClass="org.jetbrains.plugins.scalaDoc.highlighter.ScalaDocSyntaxHighlighter"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/ScalaDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/ScalaDarcula.xml"/>
        <treeStructureProvider implementation="org.jetbrains.plugins.scala.projectView.ScalaTreeStructureProvider" order="last"/>
        <lang.braceMatcher language="Scala" implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaBraceMatcher"/>
        <lang.fileViewProviderFactory language="Scala"
                                      implementationClass="org.jetbrains.plugins.scala.lang.psi.ScFileViewProviderFactory"/>
        <lang.parserDefinition language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.parser.ScalaParserDefinition"/>
        <lang.parserDefinition language="Scala 3" implementationClass="org.jetbrains.plugins.scala.lang.parser.Scala3ParserDefinition"/>
        <lang.parserDefinition language="ScalaDoc" implementationClass="org.jetbrains.plugins.scalaDoc.lang.parser.ScalaDocParserDefinition"/>
        <lang.substitutor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.parser.ScalaLanguageSubstitutor"/>
        <lang.commenter language="Scala" implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaCommenter"/>
        <lang.foldingBuilder language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.folding.ScalaFoldingBuilder"/>
        <lang.foldingBuilder language="Scala" implementationClass="org.jetbrains.plugins.scala.worksheet.WorksheetFoldingBuilder"/>
        <lang.formatter language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.formatting.ScalaFormattingModelBuilder"/>
        <postFormatProcessor implementation="org.jetbrains.plugins.scala.lang.formatting.processors.ScalaBracePostFormatProcessor"/>
        <postFormatProcessor implementation="org.jetbrains.plugins.scala.lang.formatting.processors.ScalaTrailingCommaProcessor"/>
        <preFormatProcessor implementation="org.jetbrains.plugins.scala.lang.formatting.processors.ScalaDocNewlinedPreFormatProcessor"/>
        <preFormatProcessor implementation="org.jetbrains.plugins.scala.lang.formatting.processors.scalafmt.ScalaFmtPreFormatProcessor"/>
        <applicationService serviceImplementation="org.jetbrains.plugins.scala.lang.formatting.scalafmt.ScalafmtDynamicService"/>
        <lang.refactoringSupport language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.refactoring.ScalaRefactoringSupportProvider"/>
        <lang.surroundDescriptor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.surroundWith.descriptors.ScalaExpressionSurroundDescriptor"/>
        <lang.surroundDescriptor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.surroundWith.descriptors.ScalaDocCommentDataSurroundDescriptor"/>
        <lang.surroundDescriptor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.surroundWith.descriptors.ScalaIgnoreErrorHighlightingSurroundDescriptor"/>
        <lang.unwrapDescriptor language="Scala" implementationClass="org.jetbrains.plugins.scala.codeInsight.unwrap.ScalaUnwrapDescriptor"/>
        <lang.psiStructureViewFactory language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.structureView.ScalaStructureViewFactory"/>
        <typedHandler implementation="org.jetbrains.plugins.scala.editor.typedHandler.ScalaTypedHandler" order="first"/>
        <backspaceHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.backspaceHandler.ScalaBackspaceHandler"/>
        <joinLinesHandler implementation="org.jetbrains.plugins.scala.editor.joinLines.PackageJoinLinesHandler"/>
        <!-- TODO: now the order of lang.smartEnterProcessor matters because ScalaSmartEnterProcessor.process always returns true
        Ideally, if we want to use several ScalaSmartEnterProcessor.process should return false it does not handle some case.
        Another solution is to move PackageSplitSmartEnterProcessor logic into ScalaSmartEnterProcessor -->
        <lang.smartEnterProcessor language="Scala" implementationClass="org.jetbrains.plugins.scala.editor.smartEnter.PackageSplitSmartEnterProcessor"/>
        <lang.smartEnterProcessor language="Scala" implementationClass="org.jetbrains.plugins.scala.editor.smartEnter.ScalaSmartEnterProcessor"/>
        <lineIndentProvider implementation="org.jetbrains.plugins.scala.editor.ScalaLineIndentProvider"/>
        <lang.inspectionSuppressor language="Scala" implementationClass="org.jetbrains.plugins.scala.codeInspection.suppression.ScalaInspectionSuppressor"/>
        <problemHighlightFilter implementation="org.jetbrains.plugins.scala.annotator.ScalaProblemHighlightFilter"/>
        <problemFileHighlightFilter implementation="org.jetbrains.plugins.scala.annotator.ScalaProblemFileHighlightFilter"/>

        <toolWindow id="internal-profiler" anchor="bottom" canCloseContents="false"
                    factoryClass="org.jetbrains.plugins.scala.caches.stats.InternalProfilerToolWindowFactory"/>

        <framework.type implementation="org.jetbrains.plugins.scala.project.template.ScalaFrameworkType"/>
        <completion.contributor language="Scala" id="keywordCompletionContributor"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaKeywordCompletionContributor"/>
        <completion.contributor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaSmartCompletionContributor"/>
        <completion.contributor language="Scala"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaAfterNewCompletionContributor"/>
        <completion.contributor language="Scala" id="memberNameCompletionContributor"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaMemberNameCompletionContributor"/>
        <completion.contributor language="Scala" id="scaladocTagsCompletionContributor"
                                implementationClass="org.jetbrains.plugins.scala.lang.scaladoc.completion.ScalaDocCompletionContributor"/>
        <completion.contributor language="Scala" id="scalaIdentifierCompletionContributor"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.aot.ScalaAotCompletionContributor"
                                order="before scalaCompletionContrubutor"/>
        <completion.contributor language="Scala" id="scalaClassParamContributor"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.clauses.CaseClassParametersCompletionContributor"
                                order="before keywordCompletionContributor, before memberNameCompletionContributor"/>
        <completion.contributor language="Scala" id="caseClauseCompletionContributor"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.clauses.CaseClauseCompletionContributor"
                                order="before scalaIdentifierCompletionContributor"/>
        <completion.contributor language="Scala" id="exhaustiveMatchCompletionContributor"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.clauses.ExhaustiveMatchCompletionContributor"
                                order="before scalaIdentifierCompletionContributor"/>
        <completion.contributor language="Scala" id="scalaOverrideDefContributer"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaOverrideContributor"
                                order="before scalaIdentifierCompletionContributor, after keywordCompletionContributor"/>
        <completion.contributor language="Scala" id="scalaCompletionContrubutor"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaBasicCompletionContributor"/>
        <completion.contributor language="Scala" id="scalaUnresolvedNameCompletion"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaUnresolvedNameContributor"
                                order="before scalaIdentifierCompletionContributor"/>
        <completion.contributor language="Scala" id="sameSignatureCallParametersProvider"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.SameSignatureCallParametersProvider"/>
        <completion.contributor language="Scala" id="scalaClassNameCompletionContributor"
                                implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaClassNameCompletionContributor"
                                order="after scalaCompletionContrubutor"/> <!-- This is the last completion contributor! -->
        <completion.contributor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaGlobalMembersCompletionContributor"
                                order="before scalaClassNameCompletionContributor"/>
        <completion.contributor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaPrefixPackageCompletionContributor"
                                order="before scalaClassNameCompletionContributor"/>
        <completion.confidence language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaCompletionConfidence"/>
        <completion.confidence language="Scala" implementationClass="com.intellij.codeInsight.completion.SkipAutopopupInStrings"/>
        <completion.plainTextSymbol language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaPlainTextSymbolCompletionContributor"/>
        <statistician key="proximity" order="first"
                      implementationClass="org.jetbrains.plugins.scala.gotoclass.ScalaProximityStatistician"/>
        <statistician key="completion" order="first"
                      implementationClass="org.jetbrains.plugins.scala.lang.completion.statistician.ScalaCompletionStatistician"/>
        <lookup.actionProvider implementation="org.jetbrains.plugins.scala.lang.completion.ScalaImportStaticLookupActionProvider"/>
        <weigher key="completion" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaContainingClassWeigher"
                 id="scalaContainingClassWeigher" order="after prefix, before scalaKindWeigher"/>
        <weigher key="completion" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaMethodCompletionWeigher"
                 id="scalaMethodCompletionWeigher" order="after scalaContainingClassWeigher, before proximity"/>
        <weigher key="completion" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaByNameWeigher"
                 id="scalaByNameWeigher" order="before stats"/>
        <weigher key="completion" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaKindCompletionWeigher"
                 id="scalaKindWeigher" order="after prefix, before proximity"/>
        <weigher key="proximity" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaClassObjectWeigher"
                 id="scalaClassObjectWeigher" order="before samePsiMember"/>
        <weigher key="completion" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaScopeWeigher"
                 id="ScopeWeigher" order="after scalaKindWeigher, before proximity"/>
        <weigher key="proximity" implementationClass="org.jetbrains.plugins.scala.lang.completion.weighter.ScalaExplicitlyImportedWeigher"
                 id="scalaExplicitlyImportedWeigher" order="before explicitlyImported"/>
        <completion.ml.elementFeatures language="Scala"
                                       implementationClass="org.jetbrains.plugins.scala.lang.completion.ml.ScalaElementFeatureProvider"/>
        <psi.referenceContributor implementation="org.jetbrains.plugins.scala.lang.references.ScalaReferenceContributor"/>
        <codeInsight.overrideMethod language="Scala" implementationClass="org.jetbrains.plugins.scala.overrideImplement.ScalaOverrideMethodsHandler"/>
        <codeInsight.implementMethod language="Scala" implementationClass="org.jetbrains.plugins.scala.overrideImplement.ScalaImplementMethodsHandler"/>
        <!--<codeInsight.typeInfo language="Scala" implementationClass="org.jetbrains.plugins.scala.actions.ScalaExpressionTypeProvider"/>-->
        <methodImplementor implementation="org.jetbrains.plugins.scala.overrideImplement.ScalaMethodImplementor"/>
        <lookup.charFilter implementation="org.jetbrains.plugins.scala.lang.completion.ScalaCharFilter"/>
        <lang.findUsagesProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.findUsages.ScalaFindUsagesProvider"/>
        <usageTypeProvider implementation="org.jetbrains.plugins.scala.lang.findUsages.ScalaUsageTypeProvider"
                           id="scalaUsageTypeProvider" order="first"/>
        <importFilteringRule implementation="org.jetbrains.plugins.scala.lang.findUsages.ScalaImportFilteringRule"/>
        <internalFileTemplate name="Scala Class"/>
        <internalFileTemplate name="Scala CaseClass"/>
        <internalFileTemplate name="Scala CaseObject"/>
        <internalFileTemplate name="Scala Trait"/>
        <internalFileTemplate name="Scala Object"/>
        <internalFileTemplate name="Scala Script"/>
        <internalFileTemplate name="Package Object"/>
        <internalFileTemplate name="Scala Worksheet"/>
        <defaultTemplatePropertiesProvider implementation="org.jetbrains.plugins.scala.actions.ScalaDefaultTemplatePropertiesProvider"/>

        <indexPatternBuilder implementation="org.jetbrains.plugins.scala.editor.todo.ScalaIndexPatternBuilder"/>
        <todoIndexer filetype="Scala" implementationClass="org.jetbrains.plugins.scala.editor.todo.ScalaTodoIndexer"/>
        <todoIndexer filetype="Scala Worksheet" implementationClass="org.jetbrains.plugins.scala.editor.todo.ScalaTodoIndexer"/>
        <todoIndexer filetype="sbt" implementationClass="org.jetbrains.plugins.scala.editor.todo.ScalaTodoIndexer"/>

        <readWriteAccessDetector implementation="org.jetbrains.plugins.scala.highlighter.readWriteAccess.ScalaReadWriteAccessDetector"/>
        <directClassInheritorsSearch implementation="org.jetbrains.plugins.scala.lang.psi.impl.search.ScalaDirectClassInheritorsSearcher"/>
        <classInheritorsSearch implementation="org.jetbrains.plugins.scala.lang.psi.impl.search.ScalaLocalInheritorsSearcher"/>
        <codeInsight.lineMarkerProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.annotator.gutter.ScalaLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.worksheet.runconfiguration.WorksheetLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="Scala" implementationClass="scala.meta.intellij.editor.MetaExpansionLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.macros.expansion.ReflectExpansionLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.annotator.gutter.RecursiveCallLineMarkerProvider"/>
        <codeInsight.gotoSuper language="Scala" implementationClass="org.jetbrains.plugins.scala.annotator.gutter.ScalaGoToSuperActionHandler"/>
        <gotoDeclarationHandler implementation="org.jetbrains.plugins.scala.annotator.gutter.ScalaGoToDeclarationHandler"/>
        <gotoDeclarationHandler implementation="org.jetbrains.plugins.scala.worksheet.actions.repl.WorksheetResNGotoHandler" order="first"/>
        <gotoDeclarationHandler implementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteGotoHandler" order="first"/>
        <debuggerClassFilterProvider implementation="org.jetbrains.plugins.scala.debugger.filters.ScalaDebuggerClassFilterProvider"/>
        <xdebugger.settings implementation="org.jetbrains.plugins.scala.debugger.filters.ScalaDebuggerSettings"/>
        <debugger.jvmSmartStepIntoHandler implementation="org.jetbrains.plugins.scala.debugger.smartStepInto.ScalaSmartStepIntoHandler"/>
        <lang.documentationProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.editor.documentationProvider.ScalaDocumentationProvider"/>
        <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaMethodProcessor" order="first"/>
        <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.PrepareRenameScalaMethodProcessor" order="last"/>
        <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaPackageProcessor" order="first"/>
        <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaVariableProcessor" order="first"/>
        <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameLightProcessor" order="first, before KotlinAwareJavaGetter"/>
        <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaClassProcessor" order="first"/>
        <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaSyntheticParamProcessor" order="first"/>
        <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaTypeAliasProcessor" order="first"/>
        <renamePsiElementProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.RenameScalaBindingPatternProcessor" order="first"/>
        <renameHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.XmlRenameHandler"/>
        <renameHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.inplace.ScalaMemberInplaceRenameHandler" order="first"/>
        <renameHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.rename.inplace.ScalaLocalInplaceRenameHandler" order="first"/>
        <nameSuggestionProvider
                implementation="org.jetbrains.plugins.scala.lang.refactoring.namesSuggester.ScalaNameSuggestionProvider"
                id="scalaNameSuggestionProvider" order="last"/>
        <definitionsSearch implementation="org.jetbrains.plugins.scala.lang.psi.impl.search.MethodImplementationsSearch"/>
        <overridingMethodsSearch implementation="org.jetbrains.plugins.scala.lang.psi.impl.search.ScalaOverridingMemberSearcher" order="first"/>
        <overridingMethodsSearch implementation="org.jetbrains.plugins.scala.lang.psi.impl.search.JavaRawOverridingSearcher" order="last"/>
        <allOverridingMethodsSearch implementation="org.jetbrains.plugins.scala.lang.psi.impl.search.JavaRawAllOverridingSearcher" order="last"/>
        <refactoring.moveClassHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.move.MoveScalaClassHandler" order="first"/>
        <refactoring.moveDirectoryWithClassesHelper implementation="org.jetbrains.plugins.scala.lang.refactoring.move.ScalaMoveDirectoryWithClassesHelper"/>
        <refactoring.elementListenerProvider implementation="org.jetbrains.plugins.scala.runner.ScalaRunConfigurationRefactoringListenerProvider"/>
        <!--<moveFileHandler implementation="org.jetbrains.plugins.scala.lang.refactoring.move.MoveScalaFileHandler" order="first"/>-->
        <refactoring.inlineHandler language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.refactoring.inline.ScalaInlineHandler"/>
        <refactoring.safeDeleteProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.delete.ScalaSafeDeleteProcessorDelegate" order="first"/>
        <refactoring.changeSignatureUsageProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.changeSignature.ScalaChangeSignatureUsageProcessor" order="first" id="scalaProcessor"/>
        <refactoring.changeSignatureUsageProcessor implementation="org.jetbrains.plugins.scala.lang.refactoring.introduceParameter.ScalaIntroduceParameterUsageProcessor" order="first" id="scalaIntroduceParamterProcessor"/>
        <refactoring.helper implementation="org.jetbrains.plugins.scala.lang.refactoring.changeSignature.ScalaChangeSignatureRefactoringHelper"/>
        <refactoring.helper implementation="org.jetbrains.plugins.scala.lang.refactoring.move.ScalaMoveRefactoringHelper"/>
        <typeDeclarationProvider implementation="org.jetbrains.plugins.scala.annotator.gutter.ScalaGotoTypeDeclarationProvider"/>
        <commentCompleteHandler implementation="org.jetbrains.plugins.scala.lang.scaladoc.ScalaIsCommentComplete"/>
        <elementDescriptionProvider implementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.typedef.ScalaClassElementDescriptionProvider"/>
        <runLineMarkerContributor implementationClass="org.jetbrains.plugins.scala.runner.ScalaRunLineMarkerContributor" language="Scala"/>
        <runLineMarkerContributor implementationClass="org.jetbrains.plugins.scala.testingSupport.test.ScalaTestRunLineMarkerProvider" language="Scala"/>
        <runLineMarkerContributor implementationClass="org.jetbrains.plugins.scala.worksheet.ammonite.runconfiguration.AmmoniteRunMarkerContributor" language="Scala"/>

        <editorNotificationProvider implementation="org.jetbrains.plugins.scala.project.notification.SetupJdkNotificationProvider"/>
        <editorNotificationProvider implementation="org.jetbrains.plugins.scala.project.notification.SetupScalaSdkNotificationProvider"/>

        <!--Enter Handler for ScalaDoc -->
        <enterHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.enterHandler.ScalaDocParamEnterHandlerDelegate"/>
        <!--/Handler-->

        <!--Enter Handler for inserting "+" in interpolated strings-->
        <enterHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.enterHandler.InterpolatedStringEnterHandler"
                              order="first"/>
        <!--/Handler-->

        <!--Enter Handler for multiline strings-->
        <enterHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.enterHandler.MultilineStringEnterHandler" order="first"/>
        <!--/Handler-->

        <!--Enter Handler for braces in closure braced blocks-->
        <enterHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.enterHandler.EnterBetweenClosureBracesHandler"/>
        <!--/Handler-->

        <enterHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.enterHandler.ScalaEnterAfterUnmatchedBraceHandler" order="first"/>
        <enterHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.enterHandler.AddUnitTypeEnterHandler" order="first"/>
        <enterHandlerDelegate implementation="org.jetbrains.plugins.scala.editor.enterHandler.PackageSplitEnterHandler"/>

        <javaMainMethodProvider implementation="org.jetbrains.plugins.scala.runner.ScalaMainMethodProvider"/>

        <annotatedElementsSearch implementation="org.jetbrains.plugins.scala.lang.psi.impl.search.ScalaAnnotatedMembersSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.parameters.NamingParamsSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.typeDef.ObjectTraitReferenceSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.apply.ApplyMethodSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.apply.UnapplyMethodSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.vals.JavaValsUsagesSearcher" order="last"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.function.JavaFunctionUsagesSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.setter.SetterMethodSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.ScalaAliasedImportedElementSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.TypeAliasUsagesSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.ScalaPackageUsagesSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.vals.ApplyUnapplyForBindingSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.OperatorAndBacktickedSearcher"/>
        <referencesSearch implementation="org.jetbrains.plugins.scala.findUsages.typeDef.SelfInvocationSearcher"/>

        <methodReferencesSearch implementation="org.jetbrains.plugins.scala.findUsages.NonMemberMethodUsagesSearcher"/>
        <findUsagesHandlerFactory implementation="org.jetbrains.plugins.scala.findUsages.factory.ScalaFindUsagesHandlerFactory" order="first"/>
        <customUsageSearcher implementation="org.jetbrains.plugins.scala.findUsages.parameters.ConstructorParamsInConstructorPatternSearcher"/>
        <languageCompilerRefAdapter implementation="org.jetbrains.plugins.scala.findUsages.compilerReferences.indices.ScalaCompilerRefAdapter"/>
        <codeUsageScopeOptimizer implementation="org.jetbrains.plugins.scala.findUsages.compilerReferences.ScalaCompilerReferenceScopeOptimizer"/>
        <qualifiedNameProvider implementation="org.jetbrains.plugins.scala.actions.ScalaQualifiedNameProvider" order="first"/>
        <targetElementEvaluator language="Scala" implementationClass="org.jetbrains.plugins.scala.codeInsight.ScalaTargetElementEvaluator"/>
        <targetElementEvaluator language="JAVA" implementationClass="org.jetbrains.plugins.scala.codeInsight.ScalaTargetElementEvaluator"/>

        <codeInsight.parameterInfo language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.parameterInfo.ScalaFunctionParameterInfoHandler"/>
        <codeInsight.parameterInfo language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.parameterInfo.ScalaPatternParameterInfoHandler"/>
        <codeInsight.parameterInfo language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.parameterInfo.ScalaTypeParameterInfoHandler"/>

        <codeInsight.template.postfixTemplateProvider language="Scala"
                                                      implementationClass="org.jetbrains.plugins.scala.lang.completion.postfix.ScalaPostfixTemplateProvider"/>

        <testCreator language="Scala" implementationClass="org.jetbrains.plugins.scala.testingSupport.ScalaTestCreator"/>
        <testGenerator language="Scala" implementationClass="org.jetbrains.plugins.scala.testingSupport.ScalaTestGenerator"/>

        <testFramework implementation="org.jetbrains.plugins.scala.testingSupport.test.specs2.Specs2TestFramework" order="first"/>
        <testFramework implementation="org.jetbrains.plugins.scala.testingSupport.test.scalatest.ScalaTestTestFramework" order="first"/>
        <testFramework implementation="org.jetbrains.plugins.scala.testingSupport.test.utest.UTestTestFramework" order="first"/>

        <java.elementFinder implementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.synthetic.SyntheticClasses"/>
        <java.elementFinder implementation="org.jetbrains.plugins.scala.finder.ScalaClassFinder"/>
        <java.shortNamesCache implementation="org.jetbrains.plugins.scala.caches.ScalaShortNamesCache"/>
        <typeHierarchyProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.hierarchy.ScalaTypeHierarchyProvider"/>
        <methodHierarchyProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.hierarchy.ScalaMethodHierarchyProvider"/>
        <callHierarchyProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.hierarchy.ScalaCallHierarchyProvider"/>
        <highlightUsagesHandlerFactory implementation="org.jetbrains.plugins.scala.highlighter.usages.ScalaHighlightUsagesHandlerFactory"/>
        <highlightUsagesHandlerFactory implementation="org.jetbrains.plugins.scala.worksheet.actions.repl.WorksheetResNHighlightFactory"/>
        <constantExpressionEvaluator language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.psi.util.ScalaConstantExpressionEvaluator"/>
        <annotationSupport language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.psi.ScalaAnnotationSupport"/>
        <!--<classNameInsertHandler implementationClass="org.jetbrains.plugins.scala.lang.completion.ScalaClassNameInsertHandler" language="Scala"/>-->

        <gotoClassContributor implementation="org.jetbrains.plugins.scala.gotoclass.ScalaGoToClassContributor"
                              order="first"/>
        <gotoSymbolContributor implementation="org.jetbrains.plugins.scala.gotoclass.ScalaGoToSymbolContributor"
                               order="first"/>
        <lang.importOptimizer language="Scala" implementationClass="org.jetbrains.plugins.scala.editor.importOptimizer.ScalaImportOptimizer"/>
        <lang.namesValidator language="Scala"
                             implementationClass="org.jetbrains.plugins.scala.lang.refactoring.ScalaNamesValidator"/>
        <editorNotificationProvider implementation="org.jetbrains.plugins.scala.project.notification.source.ScalaAttachSourcesNotificationProvider"/>
        <editorFileSwapper implementation="org.jetbrains.plugins.scala.project.notification.source.ScalaEditorFileSwapper"/>
        <projectStructureDetector implementation="org.jetbrains.plugins.scala.project.notification.source.ScalaSourceRootFinder"/>

        <configurationType implementation="org.jetbrains.plugins.scala.worksheet.ammonite.runconfiguration.AmmoniteRunConfigurationType"/>
        <configurationType implementation="org.jetbrains.plugins.scala.console.configuration.ScalaConsoleConfigurationType"/>
        <actionPromoter implementation="org.jetbrains.plugins.scala.console.actions.ScalaConsoleActionsPromoter"/>
        <actionPromoter implementation="org.jetbrains.plugins.scala.worksheet.actions.repl.WorksheetReplRunActionPromoter"/>
        <actionPromoter implementation="org.jetbrains.plugins.scala.actions.implicitArguments.ShowImplicitArgumentsActionPromoter"/>
        <actionPromoter implementation="org.jetbrains.plugins.scala.worksheet.actions.topmenu.RunWorksheetActionPromoter"/>

        <configurationType implementation="org.jetbrains.plugins.scala.testingSupport.test.specs2.Specs2ConfigurationType"/>
        <configurationType implementation="org.jetbrains.plugins.scala.testingSupport.test.scalatest.ScalaTestConfigurationType"/>
        <configurationType implementation="org.jetbrains.plugins.scala.testingSupport.test.utest.UTestConfigurationType"/>

        <runConfigurationProducer implementation="org.jetbrains.plugins.scala.testingSupport.test.specs2.Specs2ConfigurationProducer"/>
        <runConfigurationProducer implementation="org.jetbrains.plugins.scala.testingSupport.test.scalatest.ScalaTestConfigurationProducer"/>
        <runConfigurationProducer implementation="org.jetbrains.plugins.scala.testingSupport.test.utest.UTestConfigurationProducer"/>

        <runConfigurationProducer implementation="org.jetbrains.plugins.scala.runner.ScalaApplicationConfigurationProducer" order="first"/>

        <orderEnumerationHandlerFactory implementation="org.jetbrains.sbt.execution.SbtOrderEnumeratorHandlerFactory"/>

        <stubElementTypeHolder class="org.jetbrains.plugins.scala.lang.parser.ScalaElementType$"/>
        <stubElementTypeHolder class="org.jetbrains.plugins.scala.lang.parser.ScalaParserDefinition$"/>
        <stubElementTypeHolder class="org.jetbrains.plugins.scala.lang.parser.Scala3ParserDefinition$"/>
        <!--Stub indices -->
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScAllClassNamesIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScShortClassNameIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScNotVisibleInJavaShortClassNameIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScFullClassNameIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScClassNameInPackageIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScJavaClassNameInPackageIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScImplicitObjectKey"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ImplicitConversionIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ImplicitInstanceIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScPackageObjectIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScShortNamePackageObjectIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScFullPackagingNameIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScFunctionNameIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScPropertyNameIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScClassParameterNameIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScTypeAliasNameIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScStableTypeAliasNameIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScStableTypeAliasFqnIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScDirectInheritorsIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScSelfTypeInheritorsIndex"/>
        <stubIndex implementation="org.jetbrains.plugins.scala.lang.psi.stubs.index.ScAnnotatedMemberIndex"/>

        <fileBasedIndex implementation="org.jetbrains.plugins.scala.lang.formatting.settings.inference.ScalaDocAsteriskAlignStyleIndexer"/>

        <compiler.task execute="BEFORE" implementation="org.jetbrains.plugins.scala.lang.formatting.ReformatOnCompileTask"/>
        <compiler.task execute="BEFORE" implementation="org.jetbrains.plugins.scala.compiler.ServerMediatorTask"/>

        <applicationService serviceInterface="org.jetbrains.plugins.scala.compiler.ScalaCompileServerSettings"
                            serviceImplementation="org.jetbrains.plugins.scala.compiler.ScalaCompileServerSettings"/>

        <applicationService serviceImplementation="org.jetbrains.plugins.scala.codeInsight.ScalaCodeInsightSettings"/>

        <projectService serviceImplementation="org.jetbrains.plugins.scala.annotator.usageTracker.ScalaRefCountHolderService"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.caches.ScalaShortNamesCacheManager"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.codeInspection.bundled.BundledInspectionsPersistentState"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.compiler.CompileServerManager"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.components.libextensions.LibraryExtensionsManager"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.debugger.evaluation.ScalaEvaluatorCache"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.debugger.evaluation.ScalaEvaluatorCompileHelper"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.findUsages.compilerReferences.ScalaCompilerReferenceService"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.lang.formatting.scalafmt.ScalaFmtSuggesterService"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.lang.formatting.scalafmt.ScalafmtDynamicConfigService"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.lang.formatting.settings.inference.CodeStyleSettingsInferService"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.lang.formatting.settings.migration.ProjectCodeStyleSettingsMigrationService"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.lang.macros.evaluator.ScalaMacroEvaluator"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.lang.macros.expansion.ReflectExpansionsCollector"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.lang.psi.impl.ScalaPsiManagerHolder"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.synthetic.SyntheticClasses"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.lang.psi.types.api.StdTypes"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.lang.scaladoc.generate.ScaladocSettings"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.project.settings.ScalaCompilerConfiguration"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.testDiscovery.ScalaAffectedTestsInChangeListPainter"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.util.BetterMonadicForSupport"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.util.KindProjectorUtil"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteScriptWrappersHolder"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.worksheet.interactive.WorksheetAutoRunner"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.worksheet.runconfiguration.WorksheetCache"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.worksheet.settings.WorksheetDefaultSettings"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.externalHighlighters.HighlightingStateManager$MutableState"/>
        <projectService serviceImplementation="scala.meta.intellij.MetaExpansionsManager"/>
        <projectService serviceInterface="org.jetbrains.plugins.scala.settings.ScalaProjectSettings"
                        serviceImplementation="org.jetbrains.plugins.scala.settings.ScalaProjectSettings"/>


        <applicationService serviceImplementation="org.jetbrains.plugins.scala.lang.psi.impl.expr.ExpectedTypesImpl"
                            serviceInterface="org.jetbrains.plugins.scala.lang.psi.api.expr.ExpectedTypes"/>
        <applicationService serviceImplementation="org.jetbrains.plugins.scala.settings.ScalaApplicationSettings"/>
        <applicationService serviceImplementation="org.jetbrains.plugins.scala.lang.formatting.settings.migration.ApplicationCodeStyleSettingsMigrationService"/>
        <applicationService serviceInterface="org.jetbrains.plugins.scala.settings.ScalaCodeFoldingSettings"
                            serviceImplementation="org.jetbrains.plugins.scala.settings.ScalaCodeFoldingSettingsImpl"/>
        <applicationService serviceImplementation="org.jetbrains.plugins.scala.findUsages.compilerReferences.compilation.SbtCompilationSupervisor"/>

        <projectConfigurable id="Scala Compiler" bundle="messages.ScalaInspectionBundle"
                             key="displayname.scala.compiler"
                             parentId="project.propCompiler" dynamic="true"
                             instance="org.jetbrains.plugins.scala.project.settings.ScalaCompilerConfigurable"/>

        <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaAttributeValueSelectioner"/>
        <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaWordSelectioner"/>
        <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaStringLiteralSelectioner"/>
        <basicWordSelectionFilter implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaWordSelectionerFilter"/>
        <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaSemicolonSelectioner"/>
        <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaStatementGroupSelectioner"/>
        <extendWordSelectionHandler implementation="org.jetbrains.plugins.scala.editor.selectioner.ScalaCodeBlockSelectioner"/>

        <psi.classFileDecompiler implementation="org.jetbrains.plugins.scala.lang.psi.compiled.ScClassFileDecompiler"/>

        <fileType name="SIG" extensions="sig"
                  implementationClass="org.jetbrains.plugins.scala.lang.psi.compiled.SigFileType$"
                  fieldName="MODULE$"/>
        <fileType.fileViewProviderFactory filetype="SIG"
                                          implementationClass="org.jetbrains.plugins.scala.lang.psi.compiled.SigFileViewProviderFactory"/>
        <filetype.stubBuilder filetype="SIG" implementationClass="org.jetbrains.plugins.scala.lang.psi.compiled.SigFileStubBuilder"/>
        <filetype.decompiler filetype="SIG" implementationClass="org.jetbrains.plugins.scala.lang.psi.compiled.SigFileDecompiler"/>

        <fileType name="TASTY" extensions="tasty" implementationClass="org.jetbrains.plugins.scala.tasty.TastyFileType$" fieldName="MODULE$"/>
        <filetype.decompiler filetype="TASTY" implementationClass="org.jetbrains.plugins.scala.tasty.TastyDecompiler"/>
        <syntaxHighlighter id="tasty.file" key="TASTY" factoryClass="org.jetbrains.plugins.scala.tasty.TastySyntaxHighlighterFactory"/>

        <registryKey key="scala.highlighting.compiler.errors.in.editor" defaultValue="false" restartRequired="false"
                     description="Show errors from scala compiler in the editor"/>
        <registryKey key="dotty.highlighting.compiler.errors.in.editor" defaultValue="true" restartRequired="false"
                     description="Show errors from dotty compiler in the editor"/>
        <registryKey key="scala.highlighting.compiler.selected.delay.millis" defaultValue="400" restartRequired="false"
                     description="Delay between runs of the selected file compiler for highlighting, millis"/>
        <registryKey key="scala.highlighting.compiler.jps.delay.millis" defaultValue="800" restartRequired="false"
                     description="Delay between runs of the jps compilation for highlighting, millis"/>

        <spellchecker.bundledDictionaryProvider implementation="org.jetbrains.plugins.scala.spellchecker.ScalaBundledDictionaryProvider"/>
        <spellchecker.support language="Scala" implementationClass="org.jetbrains.plugins.scala.spellchecker.ScalaSpellcheckingStrategy"/>
        <nameSuggestionProvider id="ScalaDictionarySuggestionProvider" implementation="org.jetbrains.plugins.scala.spellchecker.ScalaDictionarySuggestionProvider" order="first, before DictionarySuggestionProvider"/>

        <intentionAction>
            <category>Scala/Type</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.types.ConvertJavaToScalaCollectionIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Type</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.types.ConvertScalaToJavaCollectionIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Type</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.types.ToggleTypeAnnotation</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Type</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.types.AddUnitTypeAnnotationIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Type</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.types.RegenerateTypeAnnotation</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Type</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.types.MakeTypeMoreSpecificIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Type</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.types.ConvertToInfixIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Type</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.types.ConvertFromInfixIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Type</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.types.AdjustTypesIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/pattern matching</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.matcher.ConvertToTypedPatternIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/pattern matching</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.matcher.ExpandPatternIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.types.ConvertImplicitBoundsToImplicitParameter</className>
        </intentionAction>

        <intentionAction>
            <category>Scala</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.AddBracesIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.RemoveBracesIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.CreateCompanionObjectIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/for comprehension</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.comprehension.ConvertToCurlyBracesIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/for comprehension</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.comprehension.ConvertToParenthesesIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/for comprehension</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.comprehension.DesugarForIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Import</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.imports.ImportAdditionalIdentifiersIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Import</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.imports.ImportStableMemberIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Import</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.imports.ImportAllMembersIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Expressions</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.ConvertFromInfixExpressionIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Expressions</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.ConvertToInfixExpressionIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Expressions</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.RemoveApplyIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Expressions</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.ConvertUnderscoreToParameterIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Expressions</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.ConvertParameterToUnderscoreIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Expressions</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.RemoveUnnecessaryParenthesesIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Expressions</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.ReplaceTypeCheckWithMatchIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Expressions</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.OptionWithLiteralToSomeIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Expressions</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.expression.MakeImplicitConversionExplicit</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Collections</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.collections.ComparingLengthIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Collections</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.collections.SomeToOptionIntention</className>
        </intentionAction>

        <intentionAction>
            <category>Scala/Collections</category>
            <className>org.jetbrains.plugins.scala.codeInsight.intention.collections.FilterSetContainsIntention</className>
        </intentionAction>

        <lang.elementManipulator forClass="org.jetbrains.plugins.scala.lang.psi.api.base.ScLiteral"
                                 implementationClass="org.jetbrains.plugins.scala.injection.ScalaInjectedStringLiteralManipulator"/>

        <patterns.patternClass className="org.jetbrains.plugins.scala.patterns.ScalaPatterns" alias="scala"/>

        <!-- inspections -->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.infiniteCycle.LoopVariableNotUpdatedInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.loop.variable.not.updated.inside.loop"
                         groupPath="Scala" groupName="General" shortName="LoopVariableNotUpdated" id="LoopVariableNotUpdatedInspection" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.ScalaFileNameInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="fileName.does.not.match"
                         groupPath="Scala" groupName="General"
                         shortName="ScalaFileName"
                         language="Scala" level="WARNING"
                         enabledByDefault="true"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.packageNameInspection.ScalaPackageNameInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.package.name.inspection"
                         groupPath="Scala" groupName="General" id="ScalaPackageName"
                         shortName="ScalaPackageName" level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.deprecation.ScalaDeprecationInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.scala.deprecation"
                         groupPath="Scala" groupName="General" shortName="ScalaDeprecation"
                         id="ScalaDeprecation" level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.deprecation.ScalaDeprecatedIdentifierInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.deprecated.identifier"
                         groupPath="Scala" groupName="General" shortName="ScalaDeprecatedIdentifier"
                         id="ScalaDeprecatedIdentifier" level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.deprecation.DeprecatedKindProjectorSyntaxInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.deprecated.kind.projector.syntax"
                         groupPath="Scala" groupName="General" shortName="DeprecatedKindProjectorSyntax"
                         id="DeprecatedKindProjectorSyntax" level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.caseClassParamInspection.CaseClassParamInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.case.class.parameter"
                         groupPath="Scala" groupName="General" shortName="CaseClassParam"
                         id="CaseClassParam" level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.varCouldBeValInspection.VarCouldBeValInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.var.could.be.a.val"
                         groupPath="Scala" groupName="General" shortName="VarCouldBeVal"
                         level="WEAK WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.unusedInspections.ScalaUnusedSymbolInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.unused.symbol"
                         groupPath="Scala" groupName="General" shortName="ScalaUnusedSymbol"
                         level="WEAK WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.defaultFileTemplateInspection.ScalaDefaultFileTemplateUsageInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.default.file.template.inspection"
                         groupPath="Scala" groupName="General" shortName="ScalaDefaultFileTemplateUsage"
                         id="ScalaDefaultFileTemplateUsage" level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.typeLambdaSimplify.KindProjectorUseCorrectLambdaKeywordInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.in.kind.projector.use.correct.lambda.keyword"
                         groupPath="Scala" groupName="General"
                         shortName="KindProjectorUseCorrectLambdaKeyword" id="KindProjectorUseCorrectLambdaKeyword"
                         level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.typeLambdaSimplify.KindProjectorSimplifyTypeProjectionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.in.kind.projector.simplify.type"
                         groupPath="Scala" groupName="General"
                         shortName="KindProjectorSimplifyTypeProjection" id="KindProjectorSimplifyTypeProjection"
                         level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.postfix.PostfixMethodCallInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.use.of.postfix.method.call"
                         groupPath="Scala" groupName="General"
                         shortName="PostfixMethodCall" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.feature.LanguageFeatureInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.advanced.language.features"
                         groupPath="Scala" groupName="General"
                         shortName="LanguageFeature" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.prefixMutableCollections.ReferenceMustBePrefixedInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.reference.must.be.prefixed"
                         groupPath="Scala" groupName="General"
                         shortName="ReferenceMustBePrefixed" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.literal.FloatLiteralEndingWithDecimalPointInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.floating.point.literal.ending.with.dot"
                         groupPath="Scala" groupName="General"
                         shortName="FloatLiteralEndingWithDecimalPoint" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.packageNameInspection.ChainedPackageInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.chained.package.clause.inspection"
                         groupPath="Scala" groupName="General"
                         shortName="ChainedPackage" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.relativeImports.RelativeImportInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.relative.import"
                         groupPath="Scala" groupName="General"
                         shortName="RelativeImport" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.shadow.VariablePatternShadowInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.suspicious.shadowing.by.a.variable.pattern"
                         groupPath="Scala" groupName="General"
                         shortName="VariablePatternShadow" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.shadow.TypeParameterShadowInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.suspicious.shadowing.by.a.type.parameter"
                         groupPath="Scala" groupName="General"
                         shortName="TypeParameterShadow" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.valInTraitInspection.AbstractValueInTraitInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.abstract.value.in.trait"
                         groupPath="Scala" groupName="General"
                         shortName="AbstractValueInTrait" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.xml.ScalaXmlUnmatchedTagInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.unmatched.tag"
                         groupPath="Scala" groupName="General" shortName="ScalaXmlUnmatchedTag" level="ERROR"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.imports.SingleImportInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.unnecessary.braces.in.import.inspection"
                         groupPath="Scala" groupName="General" shortName="SingleImport"
                         level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.parameters.NameBooleanParametersInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.name.boolean.parameters"
                         groupPath="Scala" groupName="General" shortName="NameBooleanParameters"
                         level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.cast.ScalaRedundantCastInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.redundant.cast.inspection"
                         groupPath="Scala" groupName="General"
                         shortName="ScalaRedundantCast" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.cast.ScalaRedundantConversionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.redundant.conversion.inspection"
                         groupPath="Scala" groupName="General"
                         shortName="ScalaRedundantConversion" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.catchAll.DangerousCatchAllInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.missing.type.annotation"
                         groupPath="Scala" groupName="General" shortName="DangerousCatchAll"
                         level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.format.ScalaMalformedFormatStringInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.malformed.format.string"
                         groupPath="Scala" groupName="General"
                         shortName="ScalaMalformedFormatString" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.format.LegacyStringFormattingInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.legacy.string.formatting"
                         groupPath="Scala" groupName="General"
                         shortName="LegacyStringFormatting" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.notImplementedCode.NotImplementedCodeInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.not.implemented.code"
                         groupPath="Scala" groupName="General"
                         shortName="NotImplementedCode" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.redundantBlock.RedundantBlockInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.redundant.block"
                         groupPath="Scala" groupName="General"
                         shortName="RedundantBlock" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.forwardReferenceInspection.ForwardReferenceInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.suspicious.forward.reference"
                         groupPath="Scala" groupName="General"
                         shortName="ForwardReference" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.typeAnnotation.TypeAnnotationInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.type.annotation.required"
                         groupPath="Scala" groupName="General"
                         shortName="TypeAnnotation" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.booleans.DoubleNegationInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.double.negation"
                         groupPath="Scala" groupName="General"
                         shortName="DoubleNegationScala" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.booleans.SimplifyBooleanInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.simplify.boolean.expression"
                         groupPath="Scala" groupName="General"
                         shortName="SimplifyBoolean" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.booleans.SimplifyBooleanMatchInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.trivial.match.can.be.simplified"
                         groupPath="Scala" groupName="General"
                         shortName="SimplifyBooleanMatch" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.parentheses.ScalaUnnecessaryParenthesesInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.unnecessary.parentheses"
                         groupPath="Scala" groupName="General"
                         shortName="ScalaUnnecessaryParentheses" id="ScalaUnnecessaryParentheses" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.typeChecking.TypeCheckCanBeMatchInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.type.check.can.be.pattern.matching"
                         groupPath="Scala" groupName="General"
                         shortName="TypeCheckCanBeMatch" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.typeChecking.ComparingUnrelatedTypesInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.comparing.unrelated.types"
                         groupPath="Scala" groupName="General"
                         shortName="ComparingUnrelatedTypes" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <!--<localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.typeChecking.PatternMayNeverMatchInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.pattern.may.never.match"
                         groupPath="Scala" groupName="General"
                         shortName="PatternMayNeverMatch" level="WARNING"
                         enabledByDefault="true" language="Scala"/>-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.functionExpressions.MatchToPartialFunctionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.match.statement.convertible.to.pattern.matching.anonymous.function"
                         groupPath="Scala" groupName="General"
                         shortName="MatchToPartialFunction" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.controlFlow.ScalaUnreachableCodeInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="unreachable.code.name"
                         groupPath="Scala" groupName="General"
                         shortName="ScalaUnreachableCode"
                         language="Scala" level="WARNING"
                         enabledByDefault="true"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.controlFlow.ScalaUnusedExpressionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="unused.expression.name"
                         groupPath="Scala" groupName="General"
                         shortName="ScalaUnusedExpression"
                         language="Scala" level="WEAK WARNING"
                         enabledByDefault="true"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.implicits.DeprecatedViewBoundInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.view.bounds.are.deprecated"
                         groupPath="Scala" groupName="General"
                         shortName="DeprecatedViewBound" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <!--suppress PluginXmlCapitalization -->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.SAM.ConvertExpressionToSAMInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.convert.expression.to.single.abstract.method"
                         groupPath="Scala" groupName="General"
                         shortName="ConvertExpressionToSAM" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.monads.NestedStatefulMonadsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.nested.stateful.monads"
                         groupPath="Scala" groupName="General"
                         shortName="NestedStatefulMonads" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.delayedInit.FieldFromDelayedInitInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.field.from.delayedinit"
                         groupPath="Scala" groupName="General"
                         shortName="FieldFromDelayedInit" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.hashCodeUsesVar.HashCodeUsesVarInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.non.value.field.is.accessed.in.hashcode"
                         groupPath="Scala" groupName="General"
                         shortName="HashCodeUsesVar" level="WEAK WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.functionExpressions.UnnecessaryPartialFunctionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.unnecessary.partial.function"
                         groupPath="Scala" groupName="General" shortName="UnnecessaryPartialFunction"
                         id="UnnecessaryPartialFunction" level="WARNING" enabledByDefault="true" language="Scala"/>

        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.internal.AnnotatorBasedErrorInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.annotator.based.error.inspection"

                         language="Scala" groupPath="Scala" groupName="Internal"
                         isInternal="true" level="ERROR" enabledByDefault="false"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.internal.ScalaWrongPlatformMethodsUsageInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.wrong.platform.method.usage"

                         language="Scala" groupPath="Scala" groupName="Internal"
                         isInternal="true" level="WARNING" enabledByDefault="true"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.internal.ScalaShouldBeTextContainsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="internal.getText.contains.shouldBe.textContains"
                         language="Scala" groupPath="Scala" groupName="Internal"
                         isInternal="true" level="WARNING" enabledByDefault="true"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.internal.ScalaShouldBeTextMatchesInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="internal.getText.equals.shouldBe.textMatches"
                         language="Scala" groupPath="Scala" groupName="Internal"
                         isInternal="true" level="WARNING" enabledByDefault="true"/>

        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.bundled.BundledCompoundInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.scala.bundled.inspections.runner"
                         groupPath="Scala" groupName="General"
                         shortName="ScalaBundledInsRunner" enabledByDefault="false" language="Scala"/>

        <!--Syntactic simplification inspections (including syntactic sugaring), see SCL-10327-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.syntacticSimplification.FunctionTupleSyntacticSugarInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.syntactic.sugar"
                         groupPath="Scala" groupName="Syntactic simplification"
                         shortName="FunctionTupleSyntacticSugar" level="WARNING"
                         id="FunctionTupleSyntacticSugar" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.syntacticSimplification.ScalaUnnecessarySemicolonInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.scala.unnecessary.semicolon.inspection"
                         groupPath="Scala" groupName="Syntactic simplification"
                         shortName="ScalaUnnecessarySemicolon" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.syntacticSimplification.RemoveRedundantReturnInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.redundant.return"
                         groupPath="Scala" groupName="Syntactic simplification"
                         shortName="RemoveRedundantReturn" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.syntacticSimplification.ConvertibleToMethodValueInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.anonymous.function.convertible.to.a.method.value"
                         groupPath="Scala" groupName="Syntactic simplification"
                         shortName="ConvertibleToMethodValue" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.typeLambdaSimplify.AppliedTypeLambdaCanBeSimplifiedInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.applied.type.lambda.can.be.simplified"
                         groupPath="Scala" groupName="Syntactic simplification"
                         shortName="AppliedTypeLambdaCanBeSimplified" id="AppliedTypeLambdaCanBeSimplified"
                         level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.syntacticSimplification.RedundantNewCaseClassInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.redundant.new.on.case.class"
                         groupPath="Scala" groupName="Syntactic simplification"
                         shortName="RedundantNewCaseClass"
                         id="RedundantNewCaseClass" level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.parameters.RedundantDefaultArgumentInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.argument.duplicates.corresponding.parameter.default.value"
                         groupPath="Scala" groupName="Syntactic simplification"
                         shortName="RedundantDefaultArgument" level="WARNING"
                         enabledByDefault="true" language="Scala"/>

        <!--Syntactic clarification inspections (including syntactic desugaring), see SCL-10327-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.syntacticClarification.AutoTuplingInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.auto.tupling"
                         groupPath="Scala" groupName="Syntactic clarification"
                         shortName="AutoTupling" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.syntacticClarification.ConcealedApplyCall"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.concealed.quot.apply.quot.call"
                         groupPath="Scala" groupName="Syntactic clarification"
                         shortName="ConcealedApplyCall" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.syntacticClarification.VariableNullInitializerInspection"
                bundle="messages.ScalaInspectionBundle"
                key="displayname.null.initializer.can.be.replaced.by.underscore"
                groupPath="Scala" groupName="Syntactic clarification"
                shortName="ConvertNullInitializerToUnderscore" level="WARNING"
                enabledByDefault="true" language="Scala"/>

        <!--Method signature inspections-->
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.AccessorLikeMethodInspection$EmptyParentheses"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.accessor.empty.parenthesis"
                groupPath="Scala" groupName="Method signature"
                shortName="AccessorLikeMethodIsEmptyParen"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.AccessorLikeMethodInspection$UnitReturnType"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.accessor.unit.return.type"
                groupPath="Scala" groupName="Method signature"
                shortName="AccessorLikeMethodIsUnit"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.ParameterlessOverrideInspection$EmptyParenMethod"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.parameterless.override.empty.paren"
                groupPath="Scala" groupName="Method signature"
                shortName="EmptyParenMethodOverriddenAsParameterless"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.ParameterlessOverrideInspection$JavaMutator"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.parameterless.override.java.mutator"
                groupPath="Scala" groupName="Method signature"
                shortName="JavaMutatorMethodOverriddenAsParameterless"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.ParameterlessOverrideInspection$MutatorLikeMethod"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.parameterless.override.mutator.like"
                groupPath="Scala" groupName="Method signature"
                shortName="MutatorLikeMethodIsParameterless"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.OverrideAbstractMemberInspection"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.override.abstract.member"
                groupPath="Scala" groupName="Method signature"
                shortName="OverrideAbstractMember"
                language="Scala" level="INFORMATION"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.EmptyParenOverrideInspection$JavaAccessorMethodOverriddenAsEmptyParenInspection"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.empty.paren.override.java.accessor"
                groupPath="Scala" groupName="Method signature"
                shortName="JavaAccessorMethodOverriddenAsEmptyParen"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.EmptyParenOverrideInspection$ParameterlessMemberOverriddenAsEmptyParenInspection"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.empty.paren.override.parameterless"
                groupPath="Scala" groupName="Method signature"
                shortName="ParameterlessMemberOverriddenAsEmptyParen"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.ParameterlessAccessInspection$JavaMutator"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.parameterless.access.java.mutator"
                groupPath="Scala" groupName="Method signature"
                shortName="JavaMutatorMethodAccessedAsParameterless"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.ParameterlessAccessInspection$EmptyParenMethod"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.parameterless.access.empty.paren"
                groupPath="Scala" groupName="Method signature"
                shortName="EmptyParenMethodAccessedAsParameterless"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.UnitMethodInspection$ExplicitType"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.unit.explicit.type"
                groupPath="Scala" groupName="Method signature"
                shortName="UnitMethodDeclaredWithTypeAnnotation"
                language="Scala" level="WARNING"
                enabledByDefault="false"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.UnitMethodInspection$FunctionDefinition"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.unit.functional.definition"
                groupPath="Scala" groupName="Method signature"
                shortName="UnitMethodDefinedLikeFunction"
                language="Scala" level="WARNING"
                enabledByDefault="false"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.UnitMethodInspection$ExplicitAssignment"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.unit.explicit.assignment"
                groupPath="Scala" groupName="Method signature"
                shortName="UnitMethodDefinedWithEqualsSign"
                language="Scala" level="WARNING"
                enabledByDefault="false"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.UnitMethodInspection$Parameterless"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.unit.parameterless"
                groupPath="Scala" groupName="Method signature"
                shortName="UnitMethodIsParameterless"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.UnitMethodInspection$ProcedureDefinition"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.procedure.definition"
                groupPath="Scala" groupName="Method signature"
                shortName="ProcedureDefinition"
                level="WARNING"
                enabledByDefault="false" language="Scala"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.UnitMethodInspection$ProcedureDeclaration"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.procedure.declaration"
                groupPath="Scala" groupName="Method signature"
                shortName="ProcedureDeclaration"
                language="Scala" level="WARNING"
                enabledByDefault="false"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.JavaAccessorEmptyParenCallInspection"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.java.accessor.empty.paren"
                groupPath="Scala" groupName="Method signature"
                shortName="JavaAccessorEmptyParenCall"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.methodSignature.ApparentResultTypeRefinementInspection"
                bundle="messages.ScalaInspectionBundle"
                key="method.signature.result.type.refinement"
                groupPath="Scala" groupName="Method signature"
                shortName="ApparentResultTypeRefinement"
                language="Scala" level="WARNING"
                enabledByDefault="true"/>
        <localInspection
                implementationClass="org.jetbrains.plugins.scala.codeInspection.parameters.TypedParameterWithoutParenthesisInspection"
                bundle="messages.ScalaInspectionBundle"
                key="typed.parameter.without.parenthesis.in.function.literal"
                groupPath="Scala" groupName="Method signature"
                shortName="TypedParameterWithoutParen"
                language="Scala" level="INFORMATION"
                enabledByDefault="true"/>

        <!--Scalastyle inspection-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scalastyle.ScalastyleCodeInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.scala.style.inspection"
                         groupPath="Scala" groupName="Code style"
                         shortName="ScalaStyle"
                         enabledByDefault="true" language="Scala"/>

        <!--collection inspections-->
        <!--size-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.EmptyCheckInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.simplifiable.empty.check"
                         groupPath="Scala,Collections" groupName="Size"
                         shortName="EmptyCheck" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.SizeToLengthInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.size.to.length.on.arrays.and.strings"
                         groupPath="Scala,Collections" groupName="Size"
                         shortName="SizeToLength" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <!--comparing-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.EqualityToSameElementsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.equals.on.arrays.and.iterators"
                         groupPath="Scala,Collections" groupName="Comparing"
                         shortName="EqualityToSameElements" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.SameElementsToEqualsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.sameelements.oncollections.of.a.same.kind"
                         groupPath="Scala,Collections" groupName="Comparing"
                         shortName="SameElementsToEquals" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.CorrespondsUnsortedInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.corresponds.sameelements.on.unsorted.collection"
                         groupPath="Scala,Collections" groupName="Comparing"
                         shortName="CorrespondsUnsorted" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ComparingDiffCollectionKindsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.equals.oncollections.of.different.kinds"
                         groupPath="Scala,Collections" groupName="Comparing"
                         shortName="ComparingDiffCollectionKinds" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ComparingLengthInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.comparing.length.to.lengthcompare"
                         groupPath="Scala,Collections" groupName="Comparing"
                         shortName="ComparingLength" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <!--indices-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ZipWithIndexInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.manually.zipping.with.indices"
                         groupPath="Scala,Collections" groupName="Indices"
                         shortName="ZipWithIndex" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ZeroIndexToHeadInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.access.to.first.element.by.index"
                         groupPath="Scala,Collections" groupName="Indices"
                         shortName="ZeroIndexToHead" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.LastIndexToLastInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.access.to.last.element.by.index"
                         groupPath="Scala,Collections" groupName="Indices"
                         shortName="LastIndexToLast" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.RangeToIndicesInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.constructing.range.for.seq.indices"
                         groupPath="Scala,Collections" groupName="Indices"
                         shortName="RangeToIndices" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <!--simplifications: filter and exists-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.FilterHeadOptionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.filter.and.headoption.to.find"
                         groupPath="Scala,Collections" groupName="Simplifications: filter and exists"
                         shortName="FilterHeadOption" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.FindEmptyCheckInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.find.and.emptiness.check.to.exists"
                         groupPath="Scala,Collections" groupName="Simplifications: filter and exists"
                         shortName="FindEmptyCheck" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.FilterEmptyCheckInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.filter.and.emptiness.check.to.exists.forall"
                         groupPath="Scala,Collections" groupName="Simplifications: filter and exists"
                         shortName="FilterEmptyCheck" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.FilterSizeInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.filter.and.size.to.count"
                         groupPath="Scala,Collections" groupName="Simplifications: filter and exists"
                         shortName="FilterSize" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.FindAndMapToApplyInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.find.and.map.to.apply"
                         groupPath="Scala,Collections" groupName="Simplifications: find and map to apply"
                         shortName="FindAndMapToApply" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ExistsEqualsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.exists.simplifiable.to.contains"
                         groupPath="Scala,Collections" groupName="Simplifications: filter and exists"
                         shortName="ExistsEquals" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.MapToBooleanContainsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.map.and.contains.true.false.to.exists.or.forall"
                         groupPath="Scala,Collections" groupName="Simplifications: filter and exists"
                         shortName="MapToBooleanContains" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.FilterOtherContainsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.filter.and.contains.to.intersect.or.diff"
                         groupPath="Scala,Collections" groupName="Simplifications: filter and exists"
                         shortName="FilterOtherContains" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.FilterSetContainsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.redundant.contains.in.filter"
                         groupPath="Scala,Collections" groupName="Simplifications: filter and exists"
                         shortName="FilterSetContains" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ExistsForallReplaceInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.double.negation.in.forall.and.exists"
                         groupPath="Scala,Collections" groupName="Simplifications: forall and exists"
                         shortName="ExistsForallReplace" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <!--simplifications: other-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.SimplifiableFoldOrReduceInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.simplifiable.fold.or.reduce.method"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="SimplifiableFoldOrReduce" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.FoldTrueAndInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.fold.simplifiable.to.forall"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="FoldTrueAnd" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ReverseMapInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.reverse.and.map.to.reversemap"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="ReverseMap" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ReverseIteratorInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.reverse.and.iterator.to.reverseiterator"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="ReverseIterator" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ToSetAndBackInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.conversion.to.set.and.back.to.distinct"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="ToSetAndBack" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.DropTakeToSliceInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.drop.and.take.to.slice"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="DropTakeToSlice" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ReverseTakeReverseInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.reverse.take.and.reverse.to.takeright"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="ReverseTakeReverse" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.MapFlattenInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.map.and.flatten.to.flatmap"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="MapFlatten" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.HeadOrLastOptionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.emulated.headoption.or.lastoption"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="HeadOrLastOption" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.ReplaceToWithUntilInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.replace.to.with.until"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="ReplaceToWithUntil" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.EmulateFlattenInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.replace.with.flatten"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="ReplaceWithFlatten" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.SortedMaxMinInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.sorted.and.head.last.to.max.min"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="SortedHeadLast" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.CollectHeadOptionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.collect.and.headoption.to.collectfirst"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="CollectHeadOption" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.IndexBoundsCheckInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.index.bounds.check"
                         groupPath="Scala,Collections" groupName="Simplifications: other"
                         shortName="IndexBoundsCheck" level="WARNING"
                         enabledByDefault="true" language="Scala"/>

        <!--maps-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.GetGetOrElseInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.get.and.getorelse.to.getorelse"
                         groupPath="Scala,Collections" groupName="Maps"
                         shortName="GetGetOrElse" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.MapKeysInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.extracting.keys.manually"
                         groupPath="Scala,Collections" groupName="Maps"
                         shortName="MapKeys" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.MapValuesInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.extracting.values.manually"
                         groupPath="Scala,Collections" groupName="Maps"
                         shortName="MapValues" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.MapGetGetInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.redundant.get.when.getting.a.value.from.map"
                         groupPath="Scala,Collections" groupName="Maps"
                         shortName="MapGetGet" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.MapLiftInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.lift.to.get"
                         groupPath="Scala,Collections" groupName="Maps"
                         shortName="MapLift" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.MapGetEmptinessCheckInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.emptiness.check.on.get.to.contains"
                         groupPath="Scala,Collections" groupName="Maps"
                         shortName="MapGetEmptinessCheck" level="WARNING"
                         enabledByDefault="true" language="Scala"/>

        <!--options-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.RedundantHeadOrLastOptionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.redundant.headoption.or.lastoption"
                         groupPath="Scala,Collections" groupName="Options"
                         shortName="RedundantHeadOrLastOption" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.OptionEqualsSomeToContainsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.equals.some.x.to.contains.x"
                         groupPath="Scala,Collections" groupName="Options"
                         shortName="OptionEqualsSome" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.MapGetOrElseInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.map.and.getorelse.to.fold"
                         groupPath="Scala,Collections" groupName="Options"
                         shortName="MapGetOrElse" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.MapGetOrElseBooleanInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.map.and.getorelse.false.to.exists"
                         groupPath="Scala,Collections" groupName="Options"
                         shortName="MapGetOrElseBoolean" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.GetOrElseNullInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.getorelse.null.to.ornull"
                         groupPath="Scala,Collections" groupName="Options"
                         shortName="GetOrElseNull" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <!--suppress PluginXmlCapitalization -->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.IfElseToOptionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.emulated.option.x"
                         groupPath="Scala,Collections" groupName="Options"
                         shortName="IfElseToOption" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.IfElseToFilteredOptionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.change.to.filter"
                         groupPath="Scala,Collections" groupName="Options"
                         shortName="IfElseToFilterdOption" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.SomeToOptionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.some.to.option"
                         groupPath="Scala,Collections" groupName="Options"
                         shortName="SomeToOption" level="WARNING"
                         enabledByDefault="false" language="Scala"/>

        <!--other-->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.SortFilterInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.filter.after.sort"
                         groupPath="Scala,Collections" groupName="Other"
                         shortName="SortFilter" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.RedundantCollectionConversionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.redundant.collection.conversion"
                         groupPath="Scala,Collections" groupName="Other"
                         shortName="RedundantCollectionConversion" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.SideEffectsInMonadicTransformationInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.side.effects.in.a.monadic.transformation"
                         groupPath="Scala,Collections" groupName="Other"
                         shortName="SideEffectsInMonadicTransformation" level="WARNING"
                         enabledByDefault="false" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.UnitInMapInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.unit.return.type.in.the.argument.of.map"
                         groupPath="Scala,Collections" groupName="Other"
                         shortName="UnitInMap" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.annotations.MultipleArgLists"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.multiple.arg.lists.in.annotation.constructor"
                         groupPath="Scala" groupName="General"
                         shortName="MultipleArgListsInAnnotation" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.collections.UnzipSingleElementInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.unzip.for.extracting.a.single.element"
                         groupPath="Scala,Collections" groupName="Other"
                         shortName="UnzipSingleElement" level="WARNING"
                         enabledByDefault="true" language="Scala"/>

        <!-- scaladoc inspections -->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocUnclosedTagWithoutParserInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.tag.unclosed"
                         groupPath="Scala" groupName="Scaladoc" shortName="ScalaDocUnclosedTagWithoutParser" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocInlinedTagInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.inlined.tag"
                         groupPath="Scala" groupName="Scaladoc" shortName="ScalaDocInlinedTag" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocUnbalancedHeaderInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.header.tags.unbalanced"
                         groupPath="Scala" groupName="Scaladoc" shortName="ScalaDocUnbalancedHeader" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocUnknownTagInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.unknown.tag"
                         groupPath="Scala" groupName="Scaladoc" shortName="ScalaDocUnknownTag" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocUnknownParameterInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.unknown.parameter"
                         groupPath="Scala" groupName="Scaladoc" shortName="ScalaDocUnknownParameter" level="WARNING"
                         enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocMissingParameterDescriptionInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.missing.tag.parameter.description"
                         groupPath="Scala" groupName="Scaladoc" shortName="ScalaDocMissingParameterDescription"
                         level="WARNING" enabledByDefault="true" language="Scala"/>
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.scaladoc.ScalaDocParserErrorInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.wrong.scaladoc.element"
                         groupPath="Scala" groupName="Scaladoc" shortName="ScalaDocParserErrorInspection"
                         level="WARNING" enabledByDefault="true" language="Scala"/>

        <!-- end of scaladoc inspections -->

        <!-- resource leak inspections -->
        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.resourceLeaks.SourceNotClosedInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="source.not.closed"
                         groupPath="Scala"
                         groupName="Resource leaks"
                         shortName="SourceNotClosed"
                         language="Scala" level="WARNING"
                         enabledByDefault="true"/>
        <!-- end of resource leak inspections -->

        <!-- Util ammonite inspection -->
        <localInspection implementationClass="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteUnresolvedLibraryInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.ammonite.unresolved.import"
                         groupPath="Scala" shortName="AmmoniteUnresolvedLibrary"
                         level="WARNING" enabledByDefault="true" language="Scala" groupName="Other"/>
        <!---->

        <localInspection implementationClass="org.jetbrains.plugins.scala.codeInspection.specs2.BuiltinMatcherExistsInspection"
                         bundle="messages.ScalaInspectionBundle"
                         key="displayname.specs2.matchers"
                         shortName="Specs2Matchers" groupName="Specs2" groupPath="Scala,Specs2"
                         level="WARNING" enabledByDefault="true" language="Scala"/>
        <!-- end of inspections -->

        <library.type implementation="org.jetbrains.plugins.scala.project.ScalaLibraryType"/>
        <disabledIndentRangesProvider implementation="org.jetbrains.plugins.scala.lang.formatting.ScalaFmtDisabledIndentRangesProvider"/>

        <postStartupActivity implementation="org.jetbrains.plugins.scala.lang.psi.compiled.ScalaCompilerLoader"/>
        <postStartupActivity implementation="org.jetbrains.plugins.scala.findUsages.compilerReferences.ScalaCompilerReferenceService$Startup"/>
        <postStartupActivity implementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteScriptWrappersHolder$Startup"/>
        <postStartupActivity implementation="org.jetbrains.plugins.scala.annotator.usageTracker.ScalaRefCountHolderService$Startup"/>

        <applicationInitializedListener implementation="org.jetbrains.plugins.scala.components.ScalaPluginVersionVerifierListener"/>
        <applicationInitializedListener implementation="org.jetbrains.plugins.scala.util.UIFreezingGuard"/>
        <applicationInitializedListener implementation="org.jetbrains.plugins.scala.components.ImplicitHintsAdviser"/>
        <applicationInitializedListener implementation="org.jetbrains.plugins.scala.findUsages.compilerReferences.compilation.SbtCompilationSupervisor$Listener"/>
        <applicationInitializedListener implementation="org.jetbrains.plugins.scala.lang.formatting.settings.inference.LegacyCodeStyleSettingsComponent"/>

        <resolveScopeProvider implementation="org.jetbrains.plugins.scala.lang.psi.impl.ScalaOutOfSourcesResolveScopeProvider"/>
    </extensions>

    <applicationListeners>
        <listener topic="com.intellij.ide.AppLifecycleListener"
                  class="org.jetbrains.plugins.scala.findUsages.compilerReferences.compilation.SbtCompilationSupervisor$Listener"/>
        <listener topic="com.intellij.openapi.project.ProjectManagerListener"
                  class="org.jetbrains.plugins.scala.annotator.TypeMismatchTooltipsHandler"/>
        <listener topic="com.intellij.openapi.project.ProjectManagerListener"
                  class="org.jetbrains.plugins.scala.lang.psi.impl.toplevel.synthetic.SyntheticClassesListener"/>
        <listener topic="com.intellij.openapi.project.ProjectManagerListener"
                  class="org.jetbrains.plugins.scala.lang.psi.impl.ScalaPsiManagerListener"/>
        <listener topic="com.intellij.compiler.server.BuildManagerListener"
                  class="org.jetbrains.plugins.scala.compiler.CompileServerLauncher$Listener"/>
        <!-- Formatter listeners-->
        <listener topic="com.intellij.openapi.project.ProjectManagerListener"
                  class="org.jetbrains.plugins.scala.lang.formatting.scalafmt.ScalafmtProjectListener"/>
        <listener topic="com.intellij.openapi.project.ProjectManagerListener"
                  class="org.jetbrains.plugins.scala.lang.formatting.scalafmt.ScalafmtReformatOnFileSaveTask"/>
        <listener topic="com.intellij.openapi.project.ProjectManagerListener"
                  class="org.jetbrains.plugins.scala.lang.formatting.settings.ScalaCodeStyleProjectListener"/>
    </applicationListeners>

    <projectListeners>
        <listener topic="com.intellij.openapi.compiler.CompilationStatusListener"
                  class="scala.meta.intellij.ClearMetaExpansionManagerListener"/>
        <listener topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"
                  class="org.jetbrains.plugins.scala.worksheet.actions.WorksheetFileHook$WorksheetEditorListener"/>
        <listener topic="com.intellij.openapi.project.DumbService$DumbModeListener"
                  class="org.jetbrains.plugins.scala.worksheet.actions.WorksheetFileHook$WorksheetDumbModeListener"/>

        <listener topic="com.intellij.compiler.server.CustomBuilderMessageHandler"
                  class="org.jetbrains.plugins.scala.compiler.CompilerEventFromCustomBuilderMessageListener"/>

        <listener topic="org.jetbrains.plugins.scala.compiler.CompilerEventListener"
                  class="org.jetbrains.plugins.scala.externalHighlighters.HighlightingUpdatingCompilerEventListener"/>
        <listener topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"
                  class="org.jetbrains.plugins.scala.externalHighlighters.RegisterSelectedDocumentListener"/>
        <listener topic="com.intellij.openapi.project.ProjectManagerListener"
                  class="org.jetbrains.plugins.scala.externalHighlighters.RegisterOnProjectOpenedListener"/>
    </projectListeners>

    <actions>
        <action id="Scala.NewClass" class="org.jetbrains.plugins.scala.actions.NewScalaTypeDefinitionAction"
                text="Scala Class" description="Create new Scala class">
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewGroup1"/>
        </action>
        <action id="Scala.NewPackageObject" class="org.jetbrains.plugins.scala.actions.NewPackageObjectAction"
                text="Package Object" description="Create new Scala package object">
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="Scala.NewClass"/>
        </action>
        <action id="Scala.NewScalaWorksheet" class="org.jetbrains.plugins.scala.worksheet.actions.NewScalaWorksheetAction"
                text="Scala Worksheet" description="Create new Scala worksheet">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
        </action>
        <action id="Scala.RunConsole" class="org.jetbrains.plugins.scala.console.actions.RunConsoleAction"
                text="Scala REPL..." description="Run Scala REPL">
            <add-to-group group-id="RunContextPopupGroup" anchor="last"/>
            <add-to-group group-id="ToolsMenu" anchor="last"/>
            <keyboard-shortcut first-keystroke="control shift D" keymap="$default"/>
        </action>
        <!--suppress PluginXmlCapitalization -->
        <action id="Scala.CreateLightWorksheetAction" class="org.jetbrains.plugins.scala.worksheet.actions.CreateLightWorksheetAction"
                description="Create Light Scala worksheet" text="Create Light Scala worksheet">
            <keyboard-shortcut first-keystroke="control alt shift X" keymap="$default"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="ctrl shift M"/>
        </action>
        <action id="Scala.SendSelectionToConsole" class="org.jetbrains.plugins.scala.console.actions.SendSelectionToConsoleAction"
                text="Send Selection To Scala REPL" description="Send selection to Scala REPL">
            <add-to-group group-id="RunContextPopupGroup" anchor="last"/>
            <keyboard-shortcut first-keystroke="control shift X" keymap="$default"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="ctrl shift X"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta shift X" remove="true"/>
            <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="ctrl shift X"/>
            <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta shift X" remove="true"/>
        </action>
        <action id="Scala.EnableErrors" class="org.jetbrains.plugins.scala.actions.ToggleTypeAwareHighlightingAction">
            <keyboard-shortcut first-keystroke="alt control shift E" keymap="$default"/>
        </action>
        <action id="ScalaConsole.Execute" class="org.jetbrains.plugins.scala.console.actions.ScalaConsoleExecuteAction" text="Execute Scala REPL Statement">
            <keyboard-shortcut keymap="$default" first-keystroke="ENTER"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="ENTER"/>
            <keyboard-shortcut keymap="$default" first-keystroke="control ENTER"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta shift ENTER"/>
        </action>
        <action id="ScalaConsole.NewLine" class="org.jetbrains.plugins.scala.console.actions.ScalaConsoleNewLineAction">
            <keyboard-shortcut keymap="$default" first-keystroke="shift ENTER"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="shift ENTER"/>
        </action>
        <action id="ScalaConsole.Clean" class="org.jetbrains.plugins.scala.console.actions.ScalaConsoleCleanAction" text="Clean Scala REPL Content">
            <keyboard-shortcut keymap="$default" first-keystroke="control L"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta shift L"/>
        </action>
        <action id="Scala.ShowImplicitConversions" class="org.jetbrains.plugins.scala.actions.ShowImplicitConversionsAction"
                text="&amp;Implicit Conversions" description="Show implicit conversions">
            <keyboard-shortcut keymap="$default" first-keystroke="control shift Q"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="ctrl Q"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta shift Q" remove="true"/>
            <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="ctrl Q"/>
            <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta shift Q" remove="true"/>
        </action>
        <action id="Scala.MakeExplicit" class="org.jetbrains.plugins.scala.actions.MakeExplicitAction"
                text="&amp;Make Explicit" description="Make explicit">
            <keyboard-shortcut keymap="$default" first-keystroke="alt ENTER"/>
        </action>
        <action id="Scala.Desugar" class="org.jetbrains.plugins.scala.lang.transformation.DesugarCodeAction"
                text="Desugar Scala Code..." description="Desugar Scala code (selection / whole file)">
            <add-to-group group-id="CodeMenu" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <keyboard-shortcut first-keystroke="control alt D" keymap="$default"/>
        </action>
        <action id="Scala.TypeInfo" class="org.jetbrains.plugins.scala.actions.ShowTypeInfoAction">
            <keyboard-shortcut first-keystroke="alt EQUALS" keymap="$default"/>
            <keyboard-shortcut first-keystroke="control shift P" keymap="Mac OS X"/>
            <keyboard-shortcut first-keystroke="alt EQUALS" keymap="Mac OS X" remove="true"/>
            <keyboard-shortcut first-keystroke="control shift P" keymap="Mac OS X 10.5+"/>
            <keyboard-shortcut first-keystroke="alt EQUALS" keymap="Mac OS X 10.5+" remove="true"/>
            <add-to-group group-id="CodeEditorViewGroup" anchor="before" relative-to-action="Scala.ShowImplicits"/>
        </action>
        <action id="Scala.GenerateScaladoc" class="org.jetbrains.plugins.scala.lang.scaladoc.generate.ScaladocAction"
                text="Generate Scaladoc" description="Generate scaladoc">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </action>
        <action id="Scala.CreateScalaDocStub" class="org.jetbrains.plugins.scala.editor.documentationProvider.CreateScalaDocStubAction">
            <keyboard-shortcut first-keystroke="ctrl alt Q" keymap="$default"/>
            <keyboard-shortcut first-keystroke="ctrl alt L" keymap="Mac OS X"/>
        </action>
        <action id="Scala.ShowImplicitArguments" class="org.jetbrains.plugins.scala.actions.implicitArguments.ShowImplicitArgumentsAction"
                text="Implicit &amp;Arguments" description="Show implicit arguments">
            <keyboard-shortcut first-keystroke="control shift P" keymap="$default"/>
        </action>
        <action id="Scala.RunWorksheet" class="org.jetbrains.plugins.scala.worksheet.actions.topmenu.RunWorksheetAction"
                text="Run Scala Worksheet" description="Run Scala worksheet">
            <keyboard-shortcut first-keystroke="control alt W" keymap="$default"/>
            <add-to-group group-id="RunContextPopupGroup" anchor="last"/>
        </action>
        <action id="Scala.CleanWorksheet" class="org.jetbrains.plugins.scala.worksheet.actions.topmenu.CleanWorksheetAction"
                text="Clean Scala Worksheet" description="Clean Scala worksheet">
        </action>
        <action id="Scala.CopyWorksheet" class="org.jetbrains.plugins.scala.worksheet.actions.topmenu.CopyWorksheetAction"
                text="Copy Scala Worksheet" description="Copy Scala worksheet">
        </action>
        <action id="Scala.ExtractTrait"
                class="org.jetbrains.plugins.scala.lang.refactoring.extractTrait.ScalaExtractTraitAction" text="_Trait..."
                description="Extract trait from the selected class">
            <add-to-group group-id="IntroduceActionsGroup"/>
        </action>
        <action id="Scala.ShowDiscoveredTests"
                class="org.jetbrains.plugins.scala.testDiscovery.actions.ScalaShowAffectedTestsAction"
                text="Show Affected Tests (Scala)">
            <add-to-group group-id="RunMenu" anchor="before" relative-to-action="DebugMainMenu"/>
            <add-to-group group-id="ChangesViewPopupMenu" anchor="last"/>
        </action>
        <action id="Scala.CollectShortTroubleshootingInfo"
                internal="true"
                description="Collect Scala Plugin and IntelliJ IDEA versions to quickly paste them to YouTrack"
                class="org.jetbrains.plugins.scala.actions.internal.ScalaCollectShortTroubleshootingInfoAction">
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift P"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="ctrl alt shift P"/>
        </action>
    </actions>

</idea-plugin>
