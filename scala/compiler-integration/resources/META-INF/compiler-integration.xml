<idea-plugin>
    <extensionPoints>
        <extensionPoint qualifiedName="org.intellij.scala.worksheetHighlightingCompiler" interface="org.jetbrains.plugins.scala.compiler.highlighting.WorksheetHighlightingCompiler" dynamic="true"/>
        <extensionPoint qualifiedName="org.intellij.scala.compileServerClasspathProvider" beanClass="org.jetbrains.plugins.scala.compiler.CompileServerClasspathProvider" dynamic="true"/>
        <extensionPoint qualifiedName="org.intellij.scala.compileServerVmOptionsProvider" interface="org.jetbrains.plugins.scala.compiler.CompileServerVmOptionsProvider" dynamic="true"/>
    </extensionPoints>

    <extensions defaultExtensionNs="com.intellij">
        <compiler.task execute="BEFORE" implementation="org.jetbrains.plugins.scala.compiler.charts.CompilationChartsBuildManagerListener"/>

        <trafficLightRendererContributor implementation="org.jetbrains.plugins.scala.compiler.highlighting.CustomTrafficLightRendererContributor"/>
        <compiler.task execute="BEFORE" implementation="org.jetbrains.plugins.scala.compiler.highlighting.EraseCompilerProcessJdkOnce"/>

        <!--
        Define extra classpath for JPS
        NOTE: there is also Scala Compile Server, it's classpath is defined in
        org.jetbrains.plugins.scala.compiler.CompileServerLauncher.compileServerJars
        -->
        <compileServer.plugin classpath="scala-library.jar;compiler-shared.jar;scala-jps.jar;utils_rt.jar;jps/nailgun.jar;jps/compile-server.jar;jps/compiler-jps.jar;jps/compiler-interface.jar;jps/sbt-interface.jar;jps/incremental-compiler.jar;jps/scala-parallel-collections.jar;scala-parser-combinators_2.13-1.1.2.jar;spray-json_2.13-1.3.6.jar;scala-compiler-indices-protocol_2.13-1.0.14.jar"/>
        <buildProcess.parametersProvider implementation="org.jetbrains.plugins.scala.compiler.ScalaBuildProcessParametersProvider"/>

        <projectConfigurable bundle="messages.CompilerIntegrationBundle"
                             key="displayname.scala.compile.server"
                             parentId="scala.compiler"
                             instance="org.jetbrains.plugins.scala.compiler.ScalaCompileServerForm"/>

        <compiler.task execute="BEFORE" implementation="org.jetbrains.plugins.scala.compiler.EnsureModulesHaveDifferentProdAndTestOutputsTask"/>

        <compiler.isUpToDateCheckConsumer implementation="org.jetbrains.plugins.scala.compiler.highlighting.CompilerHighlightingUpToDateChecker"/>
        <compiler.isUpToDateCheckConsumer implementation="org.jetbrains.plugins.scala.compiler.references.compilation.IsUpToDateChecker"/>

        <projectService serviceInterface="org.jetbrains.plugins.scala.compiler.CompileServerClient"
                        serviceImplementation="org.jetbrains.plugins.scala.compiler.CompileServerClientImpl"/>

        <registryKey key="scala.erase.compiler.process.jdk.once" defaultValue="true" restartRequired="false"
                     description="Erase compiler.process.jdk value before compilation. A dirty hack needed because of removal of SetSameJdkToBuildProcessAsInCompileServer #SCL-17676"/>

        <buildProcess.parametersProvider implementation="org.jetbrains.plugins.scala.compiler.references.CompilerIndicesBuildProcessParametersProvider"/>

        <projectConfigurable id="Bytecode Indices"
                             parentId="scala.compiler"
                             bundle="messages.CompilerIntegrationBundle"
                             key="bytecode.indices"
                             instance="org.jetbrains.plugins.scala.compiler.references.settings.CompilerIndicesConfigurable"/>
        <codeUsageScopeOptimizer implementation="org.jetbrains.plugins.scala.compiler.references.ScalaCompilerReferenceScopeOptimizer"/>

        <editorFactoryListener implementation="org.jetbrains.plugins.scala.compiler.highlighting.CompilerHighlightingEditorFactoryListener"/>

        <applicationService serviceImplementation="org.jetbrains.plugins.scala.compiler.references.compilation.SbtCompilationSupervisor"/>

        <postStartupActivity implementation="org.jetbrains.plugins.scala.compiler.highlighting.CompilerHighlightingSetupActivity"/>
        <postStartupActivity implementation="org.jetbrains.plugins.scala.compiler.references.ScalaCompilerReferenceService$Startup"/>
        <postStartupActivity implementation="org.jetbrains.plugins.scala.compiler.references.compilation.SbtCompilationSupervisor$Activity"/>
        <postStartupActivity implementation="org.jetbrains.plugins.scala.compiler.charts.ui.CompilationChartsBuildToolWindowNodeFactory" />
    </extensions>

    <extensions defaultExtensionNs="org.intellij.scala">
        <findUsages.externalReferenceSearcher implementation="org.jetbrains.plugins.scala.compiler.references.search.CompilerIndicesReferencesSearch$"/>
        <findUsages.externalInheritorsSearcher implementation="org.jetbrains.plugins.scala.compiler.references.search.CompilerIndicesInheritorsSearch$"/>
        <findUsages.externalSearchScopeChecker implementation="org.jetbrains.plugins.scala.compiler.references.search.CompilerIndicesReferencesSearcher$"/>
    </extensions>

    <applicationListeners>
        <listener topic="com.intellij.compiler.server.BuildManagerListener"
                  class="org.jetbrains.plugins.scala.compiler.charts.CompilationChartsBuildManagerListener"/>
        <listener topic="com.intellij.compiler.server.BuildManagerListener"
                  class="org.jetbrains.plugins.scala.compiler.highlighting.CompilerHighlightingBuildManagerListener"/>

        <listener topic="com.intellij.compiler.server.BuildManagerListener"
                  class="org.jetbrains.plugins.scala.compiler.CompileServerLauncher$Listener"/>
    </applicationListeners>

    <projectListeners>
        <listener topic="org.jetbrains.plugins.scala.compiler.CompilerEventListener"
                  class="org.jetbrains.plugins.scala.compiler.charts.UpdateCompilationProgressListener"/>

        <listener topic="org.jetbrains.plugins.scala.compiler.CompilerEventListener"
                  class="org.jetbrains.plugins.scala.compiler.highlighting.UpdateCompilerGeneratedStateListener"/>

        <listener topic="com.intellij.compiler.server.CustomBuilderMessageHandler"
                  class="org.jetbrains.plugins.scala.compiler.CompilerEventFromCustomBuilderMessageListener"/>

        <listener topic="com.intellij.openapi.roots.ModuleRootListener"
                  class="org.jetbrains.plugins.scala.compiler.highlighting.CompilerHighlightingModuleRootListener"/>

        <listener topic="org.jetbrains.plugins.scala.settings.CompilerHighlightingListener"
                  class="org.jetbrains.plugins.scala.compiler.highlighting.ToggleHighlightingModeListener$OnCompilerHighlightingChange"
                  activeInTestMode="false"
                  />
        <listener topic="com.intellij.openapi.roots.ModuleRootListener"
                  class="org.jetbrains.plugins.scala.compiler.highlighting.ToggleHighlightingModeListener$OnModuleRootChange"
                  activeInTestMode="false"
                  />
    </projectListeners>

    <actions>
        <action id="Scala.CompilerHighlightingScala2"
                class="org.jetbrains.plugins.scala.compiler.highlighting.ToggleCompilerHighlightingScala2Action"/>
        <action id="Scala.CompilerHighlightingScala3"
                class="org.jetbrains.plugins.scala.compiler.highlighting.ToggleCompilerHighlightingScala3Action"/>

        <action id="Scala.CollectShortTroubleshootingInfo"
                internal="true"
                class="org.jetbrains.plugins.scala.compiler.actions.internal.ScalaCollectShortTroubleshootingInfoAction">
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift P"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="ctrl alt shift P"/>
        </action>
        <action id="Scala.ShowScalaCompilerTreeForFileAction"
                class="org.jetbrains.plugins.scala.compiler.actions.internal.compilertrees.ShowScalaCompilerTreeAction"
                internal="true"/>
    </actions>
</idea-plugin>
