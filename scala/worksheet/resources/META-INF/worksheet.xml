<?xml version="1.0" encoding="iso-8859-1"?>

<idea-plugin>

    <extensionPoints>
        <extensionPoint name="worksheetCompilerExtension" interface="org.jetbrains.plugins.scala.worksheet.WorksheetCompilerExtension" dynamic="true"/>
    </extensionPoints>

    <extensions defaultExtensionNs="com.intellij">

        <internalFileTemplate name="Scala Worksheet"/>

        <fileType name="Scala Worksheet"
                  language="Scala Worksheet"
                  extensions="sc"
                  implementationClass="org.jetbrains.plugins.scala.worksheet.WorksheetFileType$" fieldName="MODULE$"/>

        <todoIndexer filetype="Scala Worksheet" implementationClass="org.jetbrains.plugins.scala.editor.todo.ScalaTodoIndexer"/>

        <stubElementTypeHolder class="org.jetbrains.plugins.scala.worksheet.WorksheetParserDefinition$"/>

        <lang.parserDefinition language="Scala Worksheet" implementationClass="org.jetbrains.plugins.scala.worksheet.WorksheetParserDefinition"/>
        <lang.parserDefinition language="Scala 3 Worksheet" implementationClass="org.jetbrains.plugins.scala.worksheet.WorksheetParserDefinition3"/>

        <lang.fileViewProviderFactory language="Scala Worksheet" implementationClass="org.jetbrains.plugins.scala.worksheet.WorksheetFileViewProviderFactory"/>
        <lang.fileViewProviderFactory language="Scala 3 Worksheet" implementationClass="org.jetbrains.plugins.scala.worksheet.WorksheetFileViewProviderFactory"/>

        <lang.syntaxHighlighterFactory language="Scala Worksheet" implementationClass="org.jetbrains.plugins.scala.worksheet.highlighter.WorksheetSyntaxHighlighterFactory"/>
        <lang.syntaxHighlighterFactory language="Scala 3 Worksheet" implementationClass="org.jetbrains.plugins.scala.worksheet.highlighter.WorksheetSyntaxHighlighterFactory"/>

        <lang.substitutor language="Scala Worksheet" implementationClass="org.jetbrains.plugins.scala.worksheet.WorksheetLanguageSubstitutor"/>

        <scratch.creationHelper language="Scala" implementationClass="org.jetbrains.plugins.scala.worksheet.ScalaScratchFileCreationHelper"/>

        <localInspection implementationClass="org.jetbrains.plugins.scala.worksheet.inspections.WorksheetPackageDeclarationInspection"
                         bundle="messages.ScalaWorksheetBundle"
                         key="displayname.worksheet.package.declaration"
                         groupPath="Scala" groupKey="group.worksheet"
                         level="ERROR" enabledByDefault="true" language="Scala"/>

        <!-- Util ammonite inspection -->
        <localInspection implementationClass="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteUnresolvedLibraryInspection"
                         bundle="messages.ScalaWorksheetBundle"
                         key="displayname.ammonite.unresolved.import"
                         groupPath="Scala" shortName="AmmoniteUnresolvedLibrary"
                         level="WARNING" enabledByDefault="true" language="Scala" groupKey="group.worksheet"/>

        <gotoDeclarationHandler implementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteGotoHandler" order="first"/>
        <gotoDeclarationHandler implementation="org.jetbrains.plugins.scala.worksheet.actions.repl.WorksheetResNGotoHandler" order="first"/>

        <configurationType implementation="org.jetbrains.plugins.scala.worksheet.ammonite.runconfiguration.AmmoniteRunConfigurationType"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteScriptWrappersHolder"/>
        <postStartupActivity implementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteScriptWrappersHolder$Startup"/>

        <projectService serviceImplementation="org.jetbrains.plugins.scala.worksheet.interactive.WorksheetAutoRunner"/>

        <registryKey key="scala.worksheet.continue.repl.evaluation.on.first.expression.failure" defaultValue="false" restartRequired="false"
                     description="Allow to continue worksheet evaluation even if some expression failed in REPL mode"/>
        <registryKey key="scala.worksheet.show.repl.errors.in.editor" defaultValue="false" restartRequired="false"
                     description="Display REPL errors in worksheet viewer editor"/>

        <runLineMarkerContributor implementationClass="org.jetbrains.plugins.scala.worksheet.ammonite.runconfiguration.AmmoniteRunMarkerContributor" language="Scala"/>
        <codeInsight.lineMarkerProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.worksheet.runconfiguration.WorksheetLineMarkerProvider"/>

        <highlightUsagesHandlerFactory implementation="org.jetbrains.plugins.scala.worksheet.actions.repl.WorksheetResNHighlightFactory"
                                       order="before ScalaHighlightUsagesHandlerFactory"/>

        <actionPromoter implementation="org.jetbrains.plugins.scala.worksheet.actions.repl.WorksheetReplRunActionPromoter"/>
        <actionPromoter implementation="org.jetbrains.plugins.scala.worksheet.actions.topmenu.RunWorksheetActionPromoter"/>

        <projectService serviceImplementation="org.jetbrains.plugins.scala.worksheet.runconfiguration.WorksheetCache"/>
        <projectService serviceImplementation="org.jetbrains.plugins.scala.worksheet.settings.persistent.WorksheetProjectDefaultPersistentSettings"/>
    </extensions>

    <extensions defaultExtensionNs="org.intellij.scala">
        <importUsedProvider implementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteImportInfoProvider"/>
        <importOptimizerHelper implementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteImportOptimizerHelper"/>
        <referenceExtraResolver implementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteScStableCodeReferenceExtraResolver"/>
        <compilerSettingsProfileProvider implementation="org.jetbrains.plugins.scala.worksheet.WorksheetScalaCompilerSettingsProfileProvider"/>
        <worksheetCompiler implementation="org.jetbrains.plugins.scala.worksheet.processor.WorksheetCompilerImpl"/>

        <fileDeclarationsContributor implementation="org.jetbrains.plugins.scala.worksheet.ammonite.AmmoniteFileDeclarationsContributor"/>
        <fileDeclarationsContributor implementation="org.jetbrains.plugins.scala.worksheet.WorksheetFileDeclarationsContributor"/>
    </extensions>

    <projectListeners>
        <listener topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"
                  class="org.jetbrains.plugins.scala.worksheet.actions.WorksheetFileHook$WorksheetEditorListener"/>
        <listener topic="com.intellij.openapi.project.DumbService$DumbModeListener"
                  class="org.jetbrains.plugins.scala.worksheet.actions.WorksheetFileHook$WorksheetDumbModeListener"/>
    </projectListeners>

    <actions>
        <action id="Scala.NewScalaWorksheet" class="org.jetbrains.plugins.scala.worksheet.actions.NewScalaWorksheetAction">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
        </action>
        <action id="Scala.CreateLightWorksheetAction" class="org.jetbrains.plugins.scala.worksheet.actions.CreateLightWorksheetAction">
            <keyboard-shortcut first-keystroke="control alt shift X" keymap="$default"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="ctrl shift M"/>
        </action>
        <action id="Scala.RunWorksheet" class="org.jetbrains.plugins.scala.worksheet.actions.topmenu.RunWorksheetAction">
            <keyboard-shortcut first-keystroke="control alt W" keymap="$default"/>
            <add-to-group group-id="RunContextPopupGroup" anchor="last"/>
        </action>
        <action id="Scala.CleanWorksheet" class="org.jetbrains.plugins.scala.worksheet.actions.topmenu.CleanWorksheetAction" />
        <action id="Scala.CopyWorksheet" class="org.jetbrains.plugins.scala.worksheet.actions.topmenu.CopyWorksheetAction" />
    </actions>
</idea-plugin>
